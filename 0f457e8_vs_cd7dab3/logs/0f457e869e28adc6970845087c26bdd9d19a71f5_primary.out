cset: moving following pidspec: 15220
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.309347187 seconds)
loading group "string"... done (took 0.533775291 seconds)
loading group "linalg"... done (took 7.272790595 seconds)
loading group "parallel"... done (took 0.16761834 seconds)
loading group "find"... done (took 1.13601625 seconds)
loading group "tuple"... done (took 2.035309111 seconds)
loading group "dates"... done (took 1.28946346 seconds)
loading group "micro"... done (took 0.23676456 seconds)
loading group "io"... done (took 0.960790015 seconds)
loading group "scalar"... done (took 39.926208913 seconds)
loading group "sparse"... done (took 12.822903391 seconds)
loading group "broadcast"... done (took 1.004666802 seconds)
loading group "union"... done (took 13.960153476 seconds)
loading group "simd"... done (took 4.705600924 seconds)
loading group "random"... done (took 9.513318708 seconds)
loading group "problem"... done (took 1.993027346 seconds)
loading group "array"... done (took 22.282780483 seconds)
loading group "misc"... done (took 2.007357078 seconds)
loading group "sort"... done (took 3.405477992 seconds)
loading group "collection"... done (took 19.560855656 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.572637945 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.157526068 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149602851 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.148832296 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.199026078 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.143821836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158651295 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.097976429 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.948151971 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.171694016 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153810793 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.523547795 seconds)
done (took 5.150373017 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.216069437 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.095318293 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104897449 seconds)
  done (took 0.870815206 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078204373 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145489204 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.0949659 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.078764587 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095475569 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078058446 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094892136 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077148568 seconds)
  done (took 1.343055715 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.087760918 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097560073 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.081067327 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.095955236 seconds)
  done (took 1.041065171 seconds)
done (took 4.233141473 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.725773708 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.273377772 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.204160656 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4679503 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193755722 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.217114174 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.675392602 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.350288287 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.254119646 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099913097 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.135997109 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.393596259 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137169167 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687410918 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.089171363 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123782741 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.177888944 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.445764184 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082889956 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109192022 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116135463 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.140269059 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129553776 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091602582 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185901936 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.082238898 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.193501992 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107794618 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080618868 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275462149 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200406851 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.687564006 seconds)
  done (took 10.85094922 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110971565 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133944486 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097895518 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138026791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.134530119 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099536328 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084130727 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096833835 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.122870199 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.175686552 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.130621866 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.121239328 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095918672 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082340837 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116748483 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245477464 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122447226 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099590808 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100571132 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103476256 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121468265 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113229112 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109056454 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093691201 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166780242 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.224446858 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111134017 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126161913 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096554109 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112265341 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143231378 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142984343 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095193572 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080505117 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172078033 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.123898828 seconds)
  done (took 5.135953027 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.096448233 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190041901 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.120952129 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.169041051 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080387168 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143121573 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095252701 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113218051 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257456349 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.178457958 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.490218976 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.14156242 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.099595751 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.098848831 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082393588 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097909048 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.464173577 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.157784487 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134950326 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.094756736 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.105523277 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.139359057 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102606515 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.09715589 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.080409975 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098473716 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.108574698 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.320733421 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166735785 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097505873 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.189972761 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.122673031 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10036673 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.116312987 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.207825205 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.124880964 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.116724628 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09704922 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.078009165 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191286339 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087933229 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096595807 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.102750911 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13501949 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134779473 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.097496495 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080955857 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.211362073 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.078577325 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.095330411 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.09690138 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.956521415 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179437869 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.105927423 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.096614743 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.305321313 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098374774 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097160313 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.076583245 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276206114 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.198953629 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098521384 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.096441948 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080148831 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.097990525 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.382881342 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081146977 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.968682493 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.083073568 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.107998649 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.084772144 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096234253 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093895436 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.088386619 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10362174 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.098677497 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.09722017 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.080511912 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097808108 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078671366 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099090424 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.105941003 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.216032217 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080431625 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.097931115 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.076095723 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095416279 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114999384 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.109970063 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099243663 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094846615 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113587904 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098196469 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.098284435 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.116223645 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098792491 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.107203715 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083151837 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142911185 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.095985023 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.134549685 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.093924825 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.122527686 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.098654568 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113864223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111173997 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098675027 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.169480208 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.077819912 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095890372 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080111222 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.09624255 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.08138243 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.1000024 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.109498724 seconds)
  done (took 22.972328045 seconds)
done (took 40.731064566 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324180054 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.102504671 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.102032964 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101831047 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.100656933 seconds)
  done (took 1.48675004 seconds)
done (took 2.215370039 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284124126 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17234955 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.094443656 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.165130245 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.092627571 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.162355085 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.15809866 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093608333 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.216346694 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.093687754 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.159513463 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076041564 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09357581 seconds)
  done (took 2.618434439 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093458874 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114542158 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083322578 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111542182 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076650147 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.109709834 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09261482 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115370551 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.109562279 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085314331 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.092484181 seconds)
  done (took 1.810920591 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.093916281 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112199205 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082280747 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.109638043 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076453222 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110495101 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092802877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115661528 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110292214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086488706 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093285741 seconds)
  done (took 1.808750418 seconds)
done (took 6.957722828 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.089957287 seconds)
  done (took 0.80890937 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.921482752 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.52693251 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.113214245 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149428856 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.31544919 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.171726035 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.465300325 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124565108 seconds)
  done (took 10.714769179 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.11433054 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.114055896 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098840831 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.081639735 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.101535513 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.084324917 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097697533 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.100015408 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085798518 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.101647886 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.082565801 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.101386164 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.100501577 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.08333988 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.099771616 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.083137203 seconds)
  done (took 2.321958482 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118274952 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.11739971 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.104707763 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.10613961 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086231465 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.103965117 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.105347519 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088598474 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.100295182 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102584158 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.089373457 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.104904711 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.10332804 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.078581515 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.104228383 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.106789048 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.08536225 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.104844725 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.105423799 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090301623 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.105256751 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.094858041 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086746841 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.104403637 seconds)
  done (took 3.231478806 seconds)
done (took 17.79990568 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.158156418 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.107266517 seconds)
  done (took 0.993285791 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.094388898 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111156184 seconds)
  done (took 0.938030091 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.096755285 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.094712155 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.120599757 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.107734276 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080366008 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.095323473 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.11864427 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.079352728 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.095350004 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.095561706 seconds)
  done (took 1.718244048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.082381345 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.108316365 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.100942501 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.093537578 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.104702073 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.093666454 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.087231553 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.098280537 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.108446684 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.076290284 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.100747324 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.112642336 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.084783064 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.115794014 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105050575 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.098732915 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.085133192 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.098157526 seconds)
  done (took 2.490211795 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.079311448 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.09641896 seconds)
  done (took 0.91249736 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.081144998 seconds)
    (2/7) benchmarking "second"...
    done (took 0.093247858 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080087705 seconds)
    (4/7) benchmarking "year"...
    done (took 0.096582774 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093597727 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.076505784 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.093710692 seconds)
  done (took 1.351143231 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.434219406 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135339526 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.257210224 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.099828459 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.10225879 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.294174968 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.096449005 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083904048 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.101510703 seconds)
  done (took 2.397389255 seconds)
done (took 11.534062328 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.092499652 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.113867553 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.11168665 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.450941151 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106614735 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.096519202 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.145433775 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.245075979 seconds)
done (took 2.103169274 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.142809282 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.563233882 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.421781238 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.22886075 seconds)
  done (took 1.956769007 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.400292528 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.097920804 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.081514193 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.080079827 seconds)
  done (took 1.408116067 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.079335751 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099280447 seconds)
  done (took 0.925021545 seconds)
done (took 5.177747654 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080346609 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.099069611 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.077317655 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.131176196 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.080232031 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.095552573 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.078033605 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.095987157 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097920073 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.080301033 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096699419 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.079731418 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.096258542 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080279023 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.093333254 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077699701 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095527861 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.078055756 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.093572417 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077977638 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094572525 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080308528 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.09430299 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.077049872 seconds)
  done (took 2.912136478 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.099708758 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.097703705 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102562589 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.0857576 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102399089 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086707501 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.102355276 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.096880518 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.085492939 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099346362 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101575431 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.084481298 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.098902263 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084927923 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099075107 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100740424 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.085827135 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097159215 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082629091 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.101065082 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102714632 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08085938 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.100456507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102173346 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.083891995 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101436135 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082471733 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.097344267 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102078714 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.084651259 seconds)
  done (took 3.582682461 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.084830219 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09355772 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.077710841 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.100452456 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077406934 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.096772621 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.076640433 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.095227329 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.07921993 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095873269 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079750425 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.094697304 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077983214 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.095232197 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078541254 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.0982669 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.111836519 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.077662795 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.094211686 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.078455242 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098585671 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07798702 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.094606619 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.077062848 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.0943225 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.076681411 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.094494915 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077484423 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.095941691 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077352265 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.09789361 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.080729621 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.094172976 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084507948 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.098232645 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.093587551 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.081735826 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.094239987 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.078425864 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.093777807 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.077313875 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094384501 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.077722485 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101156849 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.077756655 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.097251801 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.077450236 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.096940148 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078388013 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.097900225 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.078163431 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.094696883 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.095512147 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.079077855 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.097970417 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.07750606 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095336427 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.077820721 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.095734103 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.077640226 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.093941313 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.077592551 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097200748 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.077851675 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.110110177 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.08386874 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.095129319 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079942299 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.095370506 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.09766855 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.079796738 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.108574127 seconds)
  done (took 7.122782892 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.129949131 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12438977 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079761054 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.097844654 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076775787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.096485805 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.082037417 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096614053 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097470953 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.08532497 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.095561715 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079280663 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096525069 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.093617623 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095688101 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.09689295 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085361127 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09355067 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.077968321 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.098556663 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078072446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.0992788 seconds)
  done (took 2.809643602 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.206278039 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.104419324 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.141836753 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.106299542 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082671535 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.105361354 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.101479512 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.086452185 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102103364 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083215251 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099635784 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102440754 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083679112 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100158971 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099950582 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085219676 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102461996 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084508801 seconds)
  done (took 2.632224806 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.092661931 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.098692509 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.098134201 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09747005 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098905749 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083312632 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103340232 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.216122669 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08357225 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098104148 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.089556747 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.099750888 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.100189882 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081188693 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101416807 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.080745301 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.100887672 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080718284 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106723782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104296129 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085655463 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106791023 seconds)
  done (took 2.966552733 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.095887856 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100352767 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.116907841 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.083611554 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095027677 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079603875 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.105277427 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080650545 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.105757812 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.099192461 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080517102 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.096794422 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087854316 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.098346166 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.103658527 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081547181 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.100601377 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081453419 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100885863 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.07787065 seconds)
  done (took 2.63140899 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103218431 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.100220148 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099740098 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.091592467 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100130389 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082922746 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10811188 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.100202087 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081801945 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124573911 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100210575 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082109907 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108470569 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.105175791 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099013095 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.091362805 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.108473176 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.108921839 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.081965464 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098810849 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124425852 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081653262 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.108119228 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099329986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082526422 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.099232319 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09969186 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.087581328 seconds)
  done (took 3.520875922 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081205202 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098306659 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.077936827 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.09550293 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.078508426 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095855346 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079525681 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.096087103 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.080719409 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.095649835 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08130262 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098384923 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.080636316 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098502485 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.08118582 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098476668 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080158997 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.09599179 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078691383 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096236535 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080640725 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098547578 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081493883 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.095584 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078582273 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.09839703 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.079141569 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094711033 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08147995 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.09660376 seconds)
  done (took 3.418101363 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.089794993 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107064316 seconds)
  done (took 0.96151228 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.078477964 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114242973 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078538784 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.102418522 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.102942702 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.081955814 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107665459 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085597958 seconds)
  done (took 1.515005524 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.096043074 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.109361293 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082673954 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112665774 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.109443807 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098331807 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.170395604 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.100995554 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.104856936 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.079624387 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113457971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.080546347 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.105950516 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081515054 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106078038 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087758934 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09797806 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.10502764 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085605399 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097222393 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082979454 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108789251 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103878506 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.078155519 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.100555161 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091048266 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111532118 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.100085626 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.084913355 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.106607738 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087024503 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093296063 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.082182546 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.099140581 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.079720025 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.107818163 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115845801 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084616044 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108662248 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100049281 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.09281995 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094646199 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086623196 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.106290509 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109063026 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.082118354 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.100682928 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.076288058 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.099908209 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084256672 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094748055 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.081469746 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094070594 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10610466 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.084567937 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110820216 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080595416 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10132402 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.08410319 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102288376 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.106114436 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.083135488 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.101893884 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081343359 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108953338 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086164106 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.110543785 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.094933967 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.075735436 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.09802839 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.091401932 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122523947 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105577189 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.083555931 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.100592487 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.079833794 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101983516 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.100798453 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.0873139 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.10605146 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.082525533 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107111967 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.106809864 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081367878 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.101044378 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.089770357 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098124332 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.101176678 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.078806061 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.116878628 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.080332156 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.097401736 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.079590048 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.109933075 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.10277206 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.082216455 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098069924 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088959393 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.093746932 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.082545438 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.1012172 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082244137 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109840285 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106482766 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105430004 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.090014765 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.106945846 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08187948 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.103411172 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.078080835 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.101541827 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084170596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.106228272 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.094055572 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.084792497 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.100083464 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.083040733 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.108745582 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080733195 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.099567277 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107037464 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.087961747 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.098333252 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.07940389 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.103286897 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.081814774 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103616824 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.108986963 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.081496273 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.095119672 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.078497146 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.103713332 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.081981468 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.103973288 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105565037 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.08568817 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.095426062 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.080097454 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105711138 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109358356 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.082441675 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.101053349 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.088459313 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.101754699 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.081060058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106650689 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.102078639 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.081486442 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.106386974 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.082463312 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096048588 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086016606 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.102420425 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.098430833 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.085681702 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.104221492 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.084949288 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.100799533 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.081116657 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.105546867 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.101131158 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.080680749 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09960369 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081041363 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.110850046 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.084192236 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094887339 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.097087933 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.090189021 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.097708949 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081735658 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098995255 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.084689151 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.101616548 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.079355508 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100069445 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101380749 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.093605796 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.104981411 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.10118174 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.087681175 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111928386 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082387104 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103103244 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.081764415 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.102284945 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101252726 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091509564 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105891331 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08843951 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.10237678 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07940063 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.105911413 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.108005439 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.08090742 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.097413217 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.080846621 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104287871 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.105595569 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.086490783 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101555227 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080270329 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101066686 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086054505 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.10311738 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100579097 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.081236089 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105831147 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082023421 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.107474433 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.101807596 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092592831 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.103850158 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.077776 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.10434274 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.080666909 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.106709412 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095577676 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080206268 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.099753174 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.083461711 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099221344 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.084909251 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.093914214 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089234136 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108617862 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.10016726 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081898682 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.100496356 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.088592035 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.101401302 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.087034569 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.103870971 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.106277279 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093341231 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.099543081 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.086322056 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11091449 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.100257827 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.077281461 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.105483724 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.081416306 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.099839187 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.081176869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.099049286 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085520098 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.108961113 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.107762044 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077068928 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.102881894 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.081471225 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100008749 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.078331408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.105393783 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.104547 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.083655852 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.107901681 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084708134 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102097678 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.086704806 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.100551897 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.101262698 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083721272 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103531488 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.08414664 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104114463 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.081447627 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103805774 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081345787 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.098589198 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.102414209 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.082662991 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100744561 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.088015871 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.100720168 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082724762 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103541718 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.101803422 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.083495747 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.101606212 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081579457 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103526065 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.083497666 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.100827069 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.084494286 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.0974 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107376245 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.082417387 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.109744109 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082612086 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.097267583 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.087708828 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103125383 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.105803218 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083793674 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102110773 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.08408443 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.100604552 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.08522937 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.106875473 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.098427723 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.093763263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109689119 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083179029 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.104199479 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.101163961 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.084153281 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100426748 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.083362133 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.101673346 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082744783 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.101129844 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.08722358 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104240353 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.100963942 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084015214 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.101969101 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.083034898 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.102643464 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077259619 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100304028 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082160604 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101114022 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112238717 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083503213 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.103569138 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.082362764 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102345326 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.081984079 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.097346668 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.10940422 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092243391 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.102081678 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109244829 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.082030761 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.10241789 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.093079082 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.095210817 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.080868287 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.099968115 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080431377 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108619245 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.101599101 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092097728 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.100751239 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081868398 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.098496815 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.084288681 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.100490599 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.084895967 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.099437452 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105609932 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.085502055 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099671715 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.083879914 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.104462009 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.083766237 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111777251 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.10074169 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084332794 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.101791814 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.080000633 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.100066205 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082011089 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.104313699 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.083616069 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.099736705 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.08085945 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.101739165 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102527608 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.084716776 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101236063 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.084744057 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111180373 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082762726 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.103970666 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105640033 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077678683 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104530315 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.08322689 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.10081658 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082630773 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.105441001 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086425026 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.102578792 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.110110177 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083518596 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102217907 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083100366 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.099373087 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083127271 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.101959482 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.101546512 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.082343715 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.102220973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090945503 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.099218487 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086464838 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100759415 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.083252006 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108602993 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.102930402 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086581965 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.109484253 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086023216 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.103895431 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110028559 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.08671018 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105011735 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084274931 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.103239695 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108348357 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081566955 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.10776861 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.08367264 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.103489657 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084409202 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.099479881 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082484607 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.101696708 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.100413975 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.089612148 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102065472 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082369883 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101156725 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.08148809 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.102594094 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.104838277 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090482982 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.104127947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.086868385 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097691225 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079795526 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102584577 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08115219 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.103501952 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105190463 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.089160036 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.103575245 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.083093407 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100774926 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.092864772 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107851296 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.104478471 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.080752947 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.10524552 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.085306574 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.103682384 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084242572 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.102703119 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.103965535 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.086863527 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103009806 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082945468 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109403269 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.086860397 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.103097764 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.102584626 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083732308 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102534986 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078928521 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.102614014 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085758659 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107481463 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.084599605 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103074062 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114042001 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.083190616 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.10314187 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087010972 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101715081 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.106242444 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.078980837 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.102602209 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084094107 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.103140344 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.078760565 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.101535863 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081308756 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.105094696 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082386482 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.097631053 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11316572 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092744015 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105274708 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082160164 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101855205 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078585788 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.097782535 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.101589764 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.085286575 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.103652211 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.093893402 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102155173 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.082574886 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097061906 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.08366738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106821598 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105053747 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081727733 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097482826 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.08222967 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105568153 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.088543371 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101138021 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.082985895 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106022392 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.10384175 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.080952912 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.10588051 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080744344 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.105964332 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115596536 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.085031454 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102687449 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.089842714 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109813374 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.103275054 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.078897972 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.103313609 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.086389811 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.103077936 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085331768 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10318524 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118708584 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087237226 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.101675507 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.082426457 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.105401022 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.082786529 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.110870222 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104596836 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.084511438 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.106771118 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.085670227 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.111335755 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104171351 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092194695 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.105602751 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.086972284 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101711561 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083428428 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101604449 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.100813567 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.085101147 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.103599809 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.08828432 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.110368593 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.101744987 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095243453 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111338455 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.088479491 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.099778667 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08214517 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.102436836 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.097394255 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.084321504 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.100608858 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.08286412 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.100660547 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.082767108 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.103029928 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089999779 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.103698591 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.084502407 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102138736 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.096244377 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.086094229 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.105035884 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.084265959 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.098589231 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.084115561 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.103197177 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.087032314 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106175908 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.102683938 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.085373453 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.10393933 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08505895 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097868152 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.090468368 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10183278 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.086166495 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.102365145 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103661698 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085315765 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.106061208 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.089815356 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103730243 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.104246012 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096252894 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104706445 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08128831 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.100428575 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.089402054 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.101193562 seconds)
  done (took 57.599783284 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.145513821 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079798006 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098657093 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079850548 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111713313 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098939101 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079120546 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.099293174 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080575978 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.101397032 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.078816681 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.097986064 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.108717249 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.124176242 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093010485 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103666559 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.098140158 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.080822741 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098271756 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080872373 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108886567 seconds)
  done (took 2.864071261 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.102934744 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12091568 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.114817449 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119118379 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090052042 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.115336929 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.113953242 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115196969 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.098254888 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110872807 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.117969816 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114674501 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091374385 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.110713381 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110360488 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09342225 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.118524222 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108184649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115492185 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095176329 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.11234817 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.114236999 seconds)
  done (took 3.219797788 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.083979853 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.102332655 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085072462 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.097915716 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083449663 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.097294204 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.087497907 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.100602063 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086416756 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103198525 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.082941205 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.101609438 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104402284 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.079185105 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.102046137 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081714291 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.15195022 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107144223 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083980368 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.104068657 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.09859031 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.085687871 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098172613 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079864718 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101866945 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088278146 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.103336986 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08115829 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.103469798 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.082669527 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103407075 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.099779151 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.084957934 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103743412 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083842675 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.102096412 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083177882 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.102823928 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07923867 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101119449 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.084572888 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.099407869 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.085262601 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.104316616 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081406857 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.101485659 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.105083421 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.083751228 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.098275538 seconds)
  done (took 5.455870996 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.104569533 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.160726964 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086807344 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.143063715 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.1209441 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.112384347 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088087642 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143578876 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10249666 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.084751119 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.122308849 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.119680933 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103660497 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088766577 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.107086417 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104017219 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.085743725 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10205556 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.088525915 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103630687 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.108089144 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.090703978 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120894299 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.117521772 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.10790773 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083207325 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103198545 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109644948 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.098301484 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.109037669 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.108895383 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091037091 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120273987 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.109308355 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.103355478 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.086614039 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.121837994 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.104247778 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087386594 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100647141 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086964235 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110110327 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.109116544 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.121786884 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.085149952 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109744623 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084982495 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.100772259 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117399864 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087184715 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.112637303 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119437209 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.107592298 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.084796151 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109812135 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.120385842 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.085294481 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102266464 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.08731563 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118013459 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.10178959 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088506496 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.118529146 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.106008993 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.1120325 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099616178 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.11022901 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.107560206 seconds)
  done (took 8.119127216 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.09337924 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.110130956 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120537353 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120920376 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091689002 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.111575426 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109942771 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091359181 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.111133066 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.116201459 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111297012 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.133319275 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086629171 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114673273 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.110042189 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091777369 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.110946703 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110903284 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.09043352 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111040972 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111128411 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.119556942 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091125218 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.119319991 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142729751 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105098546 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091083261 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.110919781 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.119342115 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.110673861 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123337937 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.091443227 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.111145807 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.120451541 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.122932322 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090323417 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103190154 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109087067 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092024669 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.111482705 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.106441732 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.1200687 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.090739493 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106929919 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111091519 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.090669334 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.120301568 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123460756 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.114139961 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115968078 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.091618797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120307257 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110168914 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091413994 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121621386 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147395703 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.119084232 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.119030285 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111029145 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.1199167 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10066701 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129043044 seconds)
  done (took 7.65176626 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.106768771 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11416654 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116875921 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100096743 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083147354 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.108890567 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083204527 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.10186787 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113453116 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094353971 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.116786599 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109053694 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092029626 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116652373 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.108832638 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111513277 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0893371 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.108742797 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.1135272 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108939259 seconds)
  done (took 2.927494735 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094047197 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.123482115 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085341434 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111874025 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.108028275 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091260375 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107464926 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107781566 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086051983 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108627261 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.09632784 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.11786526 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105567251 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.092307513 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.11622188 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111211433 seconds)
  done (took 2.492432619 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.096933305 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11700813 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.119809452 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.084519063 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.104423734 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081107754 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.105532001 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100942754 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081504225 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12009942 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.084466234 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.108333417 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.105955233 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.082806114 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101019338 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087518871 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.101315186 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.08255174 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.104946102 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.11835736 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097230954 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.104042382 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106089258 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086887101 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.10491864 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089877053 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.104868809 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102901451 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084666733 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.104987681 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085446195 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.113516175 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.101699892 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084278712 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.103130412 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082940186 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.10522835 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.084514979 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.108890031 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.103870236 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084008532 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.104642876 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.084741937 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.106861259 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.08073191 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.106021624 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101327307 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.091241492 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.102993345 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.0857292 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.104835434 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.107762958 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086188649 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.116275829 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.088596051 seconds)
  done (took 6.235194961 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099072419 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109282843 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080507961 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103498978 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087300903 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107449763 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108414856 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088581431 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.107028831 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083033379 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107221357 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089491051 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.1072212 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108899855 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087184324 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107878702 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.080653539 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106726611 seconds)
  done (took 2.60892493 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091626159 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105341176 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092412548 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.106141396 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084752243 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107586833 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.080353018 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.103967284 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103570452 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085692165 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104247788 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08719145 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103976032 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.086870006 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105022754 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085097096 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.107457496 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103378339 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085882727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100719837 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088291429 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10410093 seconds)
  done (took 2.961277316 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.117927003 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.124813778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09244622 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.230024418 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10416301 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.131895641 seconds)
  done (took 1.639978288 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109259881 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119511867 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.105720016 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107374538 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114530713 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107056277 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087967788 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107162701 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116950707 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10115284 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108114508 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116741113 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117095504 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097186927 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114096816 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113850455 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108654751 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087606906 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106512702 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128288804 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088814722 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11765164 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107817284 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087428714 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107696579 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116148386 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117775672 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121577764 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087385108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118331169 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114304026 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087061496 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118090913 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121813211 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109046861 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097400005 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107581747 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128239676 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113785195 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096231872 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10953182 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115263325 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117327284 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093083216 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11692387 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107244237 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092633871 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108463419 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107222505 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135761983 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114203273 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097018782 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114414858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118942348 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117266717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134115946 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101051145 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116885347 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.1145711 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121773707 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11822119 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09344843 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116784705 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121736473 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114987707 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119954995 seconds)
  done (took 8.12159512 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101498534 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126147034 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108228268 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121899926 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096848311 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107840406 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10726526 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087443691 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107175573 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107380877 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.151568527 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087430968 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11734688 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116690826 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107670832 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087823558 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107970213 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116801477 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086431632 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.133544861 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107311799 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116547625 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11650028 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097936334 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.122213813 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.113571908 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107865558 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087316501 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107651545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1065219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093852782 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108268581 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116894989 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086613162 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117515725 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10857279 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107704249 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093713646 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107718272 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115439191 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09746236 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128061409 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108217721 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108373976 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122310227 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088385974 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108711734 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086616291 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108821491 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10733143 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122610721 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.102621127 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122699939 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116435362 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108513052 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087749544 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1081953 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108166039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087856947 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11434907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117362258 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107902315 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134709462 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087960191 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10847055 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118364481 seconds)
  done (took 7.989392529 seconds)
done (took 154.703842509 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.212825967 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.197043397 seconds)
  done (took 1.253957964 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.087770291 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.135773558 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096531274 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.168017207 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.086232203 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.140569776 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.13848507 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097349627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106138185 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085425592 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.105964068 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087658377 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171228346 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.08554792 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.106006989 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108981069 seconds)
  done (took 2.65857738 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.113641801 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254685408 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.122117058 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105991024 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.089449314 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.10906624 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.084564131 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.111159031 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089547934 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.104575329 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.088980589 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.106127345 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.08427369 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.106718412 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110498269 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088944367 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.104692513 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.088302064 seconds)
  done (took 2.813594915 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112673495 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146132183 seconds)
  done (took 1.116037348 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.240810024 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.165185797 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.241257203 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.45792944 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.274706804 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.36496016 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.197694343 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.198185929 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.178800319 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.193461221 seconds)
  done (took 3.363170228 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.118475193 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181077708 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.315077423 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.155279181 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.105780049 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.126582274 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.156219411 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131430212 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.122446591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122069397 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.10195756 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.117350561 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.1372585 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.094149672 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.115211676 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117672125 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.120411799 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.114184536 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.114880021 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095043646 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.137231607 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.105626631 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.095066354 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.113207514 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.119173975 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.097888894 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.105993268 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.08467458 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115901856 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115215059 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.09237582 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124708846 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.118259494 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.154502124 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.122629369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.154758816 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.118491202 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.091252006 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.115171652 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111074908 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.097144799 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.117017211 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12492932 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.096294141 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.105921472 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.117206262 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.084265158 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.105105004 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.092974771 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118453588 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.113351438 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.091924794 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.153990034 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.118169651 seconds)
  done (took 7.346071352 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.785414908 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15552157 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090973192 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.874930124 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135768179 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103141298 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.771478364 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.110805041 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.259013754 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.75022827 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133272158 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120299734 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.207120398 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.261312832 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.975408848 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.295281922 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.636898302 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.124155202 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151031149 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.155256956 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117857391 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136291148 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109757346 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429109654 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116699237 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112127547 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096951616 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119300356 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.16022062 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124495898 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.114240741 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.178044625 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251883325 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204249751 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09379431 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111271881 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111443779 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.170587375 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26818141 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195366645 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178715463 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10876535 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088978516 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12239359 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132483415 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107769659 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.163751038 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174826708 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171082045 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.115543062 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.119869434 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097921684 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121149375 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.164351605 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121841427 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318354788 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318808378 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089939311 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12174478 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125678326 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266639042 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101204472 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226758201 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.140362323 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21476633 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090552519 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.821199744 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170280301 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.111413945 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095659049 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120816098 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.116821519 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120741167 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167038276 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.369674481 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124701017 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.114784283 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090198309 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.242826582 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125614289 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08963405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162389141 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117298081 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120422454 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124562612 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.100267511 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.190641898 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.233485289 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122525858 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097786592 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115484966 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.124827287 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09459397 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.215846192 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.220303367 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.18501248 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.212348405 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121803207 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.164206725 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168753168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119697391 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.172744501 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121067983 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123810241 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100119942 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.218011748 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147473484 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123712506 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.093500286 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118584392 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149965368 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.128749253 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119638158 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.172450323 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.45848897 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.191603696 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088299089 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.12812003 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120804927 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.162153219 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117541738 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.242231118 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123010777 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.170267985 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.121297065 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.0872842 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.121220402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.164226061 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123125257 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122035592 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123067098 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097458032 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.259660237 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.193964912 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121762784 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242786581 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.182671523 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096076169 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.194898784 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099519703 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189115623 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098172055 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123024857 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.116332504 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80884015 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123868912 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12103213 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.094097355 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190022403 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.112232287 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.123481584 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.103542098 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.109532856 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.826878269 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.105925025 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122751654 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.124550726 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.095162407 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121120745 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118328041 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.094327239 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.183675031 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228620405 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097389822 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.11966718 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123612583 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.162619532 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.115880212 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.102415152 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124474834 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12542062 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.100509691 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116295164 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125147518 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169830113 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162129241 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.22097765 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.589306932 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090351602 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.124430984 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227911077 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112212567 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.268222685 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120072182 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.226274755 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163267222 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120712946 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.314987145 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166034736 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188548546 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126205185 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.174900125 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.109488205 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.095980096 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.185538513 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090515122 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118089759 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162780427 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124423239 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.100733674 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.028180607 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112543263 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.230069787 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.108970177 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.171833432 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.116483027 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098626778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296736994 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11244397 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.106830542 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.186672084 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.0933948 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.125306567 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.716718101 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.102961021 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121797581 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.117906626 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.219846966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16397579 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120308346 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.0972766 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119993476 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.165376678 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.21301046 seconds)
  done (took 44.179829999 seconds)
done (took 63.582477637 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.278521031 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216052344 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.267836135 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.171503121 seconds)
  done (took 1.891961023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.171454086 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.14874327 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.12195998 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106892149 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150560186 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085109203 seconds)
  done (took 1.666099172 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.360841657 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.273769175 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.24286357 seconds)
  done (took 1.761833349 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.289637283 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.244496155 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.472259345 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324365953 seconds)
  done (took 2.333571243 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210129354 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.132300398 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110664494 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103465793 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.196060243 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245017794 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142504235 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.200286316 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099343748 seconds)
  done (took 2.36887823 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.196903172 seconds)
done (took 11.104660755 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.133847468 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115065083 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.294086447 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.252648427 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.121818403 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.231076128 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.215703269 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.091726532 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.148028489 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.169105104 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.168956122 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.121234098 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.148729703 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.095454531 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.14785686 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118706617 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.121777183 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.161216034 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.242366625 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.239513002 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.1936876 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.199758071 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.207688895 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.109206968 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.116523039 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 0.219281876 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.066592717 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.127105393 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.205539766 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.115379495 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.211090094 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.109853189 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.202967068 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.098898036 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116332151 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.175940942 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093125635 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.141230346 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.118762678 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.11406173 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.213424489 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.149465645 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.122811695 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.092903814 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.154792548 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.085508371 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.088635077 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.118542015 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115267942 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.17900865 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093509187 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.233678595 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.133229916 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.233589195 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.093218426 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.114851117 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.07316901 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.143193041 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.225822932 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.090673808 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.189637088 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.224106366 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.111499785 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.117818167 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.192099337 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.110420617 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.111133735 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.112755208 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.140295827 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.165667411 seconds)
    (71/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.124261968 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.119365836 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.182960131 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.093512313 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 0.172426907 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.091953099 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.114116837 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.092221379 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.090058689 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.076847923 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.114780018 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.116456511 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.212948616 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.147624656 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.085414659 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 0.170343397 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.189907377 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.08674218 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.176956231 seconds)
    (90/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.066878914 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.10913734 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.10844637 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134004826 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136968185 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.204353598 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.121143877 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.226765542 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192918874 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.095900908 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.111649326 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091467965 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.103504117 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.133053886 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 0.18790516 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.134099485 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.154050422 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.188820352 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.144276841 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.227434035 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.094499157 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.112552455 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087812623 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.101054602 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.106923573 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.151082387 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.195680345 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.193771007 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115644263 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.126005069 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.096125242 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.121188393 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.084924454 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.188370283 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.114879183 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.152595806 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.180631554 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.337680141 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.113469725 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.118225234 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.110248201 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.116381741 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.116873545 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.116378568 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147052368 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.19088184 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.085655036 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.121212506 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.176238866 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091260386 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.098915 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.092857592 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.136565232 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.076696363 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.118972069 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093724326 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.139643031 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.087219292 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.138772271 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.13481043 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.096045972 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.109777699 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066131178 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.206472506 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086275695 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.11678637 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.117533452 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157792606 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.09114933 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.108480237 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.118668658 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.090167826 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.138646061 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078222516 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.090484529 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.152458802 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.102322691 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.077124172 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.098687198 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.066304389 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.18036683 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.22344906 seconds)
    (172/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.082088118 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.125476102 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084765536 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172638007 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.205599511 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.217493316 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.085989647 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.06663714 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.109944441 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.1388662 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.06612162 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.121073908 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.119263113 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.109265935 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.06672549 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.115821358 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.198486527 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.159685249 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.146755016 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111578303 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068917224 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093021463 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119182688 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.177232231 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069680896 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.10983074 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.116507273 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.127504943 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.132348023 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.092846443 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.108071539 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.085463691 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109070758 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093688483 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.09973096 seconds)
    (207/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.104618336 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.089479595 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.154497949 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119556669 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066199914 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117899556 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068081073 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.066726865 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.16742593 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.090797101 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214596731 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.092649258 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.180451445 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092658529 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.091976146 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.091675457 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.135276123 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.093940021 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.09161736 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085398887 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.09907614 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.08978791 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.177280416 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.189430905 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.174136277 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.094033658 seconds)
    (233/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.151201105 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086216111 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110510737 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.100621703 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.138579037 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.086430152 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.119370225 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.120857003 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.067285713 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.094391105 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.131255128 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112308219 seconds)
    (245/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086962965 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.121716912 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.086951043 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.112653728 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066501109 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183713274 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.066861371 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.110815922 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087046473 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.140053421 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.093241318 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.090701418 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09019065 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.095662344 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093817653 seconds)
    (260/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119083075 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.067303235 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.112164462 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06800828 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067695934 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.090112718 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.094993796 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.090819867 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.089330146 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113978484 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066920622 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066585566 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.110079306 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.112867256 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.112067292 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.067507657 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.162507304 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.0664656 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.091664169 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.067349436 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.066925586 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.132508529 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.066561821 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.091065911 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.093799819 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180180518 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116988278 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067160312 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.085428598 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109272262 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.110292411 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095174393 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.066485842 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.110148644 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116079833 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092340181 seconds)
    (296/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.077078053 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108317933 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067565584 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.134273246 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08783112 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.091599236 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067989178 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.11170911 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.100836613 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11203641 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09181998 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.111386305 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091793901 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.091367094 seconds)
  done (took 39.804800883 seconds)
done (took 40.695598814 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100101681 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.147158267 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096163294 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135857177 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124977958 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091096741 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119040461 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097582106 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.123891348 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125391139 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098350472 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.093845785 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.09693753 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.12076608 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097057979 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139254276 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.124282232 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093277005 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.119274906 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086252482 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120266807 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086695479 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112291226 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.06966948 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122009377 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.0940189 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.11751534 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120157982 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.086970572 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111184489 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090269486 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118353879 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086254483 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126437231 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094166938 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118977295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.120997042 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.096326001 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.112440043 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086527276 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.119082507 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.086229268 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116729808 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.094674708 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117118424 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092297194 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.119565133 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098944192 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.138907219 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115389545 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.094725861 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.123840479 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095880274 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.119458856 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090845199 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.12100272 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.116062778 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.11550333 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.120241141 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091848209 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119244177 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095361903 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117441512 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.11923496 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.09523465 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121998241 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098586206 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.116570585 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096855778 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.116836633 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.085926694 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119494838 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.115353558 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.087477203 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.120889823 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.098136778 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.110082963 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.092611229 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.118171111 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.092330631 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110868705 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.089792133 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.111934064 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.093493109 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113038513 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070099683 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.114468655 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.093434829 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110303447 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.095953716 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117870736 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094112691 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112999208 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.122265935 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.086076329 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.117355188 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.08805127 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.110746498 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.088772912 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.115487316 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.086785081 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113582899 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.095892682 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.112671788 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.093148904 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124716652 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.086962383 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117573284 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086546979 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111013253 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.124551179 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.097053462 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.111312262 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092053264 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.110703138 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.095192644 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.110646943 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.086444658 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111593674 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.087350524 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.118399813 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.086892946 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114200825 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.093758584 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.1252294 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.086824869 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.115748987 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090022362 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110791867 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093628677 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.11085304 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087745406 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113135737 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.077917451 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114373932 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.086859653 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118631081 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089827066 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119187718 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113592111 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.095953816 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.116085576 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.092702955 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117434455 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.085874269 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.098339764 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092694223 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113188507 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089013818 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.111734165 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.088443779 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.110639772 seconds)
done (took 16.986755379 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087210191 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.184854554 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153187232 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143089513 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107687332 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112372814 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123007763 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120153503 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113807774 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143253631 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110280659 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132880814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148434158 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086513875 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113503664 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091707287 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114268184 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.103339544 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145186924 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.13403584 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165513541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.087103216 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.147422949 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136002854 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.121204678 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.114936558 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.11340234 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091562707 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.116162596 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103994696 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132773365 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.115516699 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088626384 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.135025125 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105378239 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.12079404 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.088559017 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.119851029 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.112079785 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.08770333 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142409418 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134572912 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.092123678 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118570196 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091903852 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115334442 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089524492 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122348762 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.123628956 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.092572052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.128168149 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157874889 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.090789118 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.122875533 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087707092 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122919675 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122594018 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090024778 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.116207495 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090236872 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112093875 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.090842041 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129305319 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.142963144 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091335082 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.122560115 seconds)
  done (took 8.656398699 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.104229237 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140474762 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.129752757 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.106051212 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.112932051 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088352714 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.11306944 seconds)
  done (took 1.754436114 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089088341 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.135514425 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.11111797 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.153746443 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.133040072 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108583972 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123934418 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088312891 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13154652 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114604553 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.109636547 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153242474 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.090556851 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.121044837 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138774384 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088051818 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138580086 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088182916 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118150129 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.137757948 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.091848492 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.136474414 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090074624 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.113774274 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.10324489 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114204219 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162882983 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093889609 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116211059 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.091910127 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113955594 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167451548 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.127837028 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.099930167 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114653614 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.10290201 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.129418869 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087035753 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130778259 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.120133819 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.10277432 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.114946366 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.089912947 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112022057 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.094533855 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.125969448 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090547447 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.116007993 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.091612891 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134495193 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.090526418 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128660655 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.115237018 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.093370402 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.115920475 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094725264 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125538552 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090467911 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134914797 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091099838 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.131545278 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.131550877 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.104833019 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131747387 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091888405 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.127658671 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.129176685 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.093036781 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.115922634 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.092921545 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131475673 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.086806642 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116387386 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.098799006 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116289907 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.137245151 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.11221558 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117179795 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.099875798 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114872527 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090472606 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.11510284 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.137442626 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093691511 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115022645 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.093159265 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117321626 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.086641541 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.113748698 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.092864567 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.114119813 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.09057537 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117750161 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.089149497 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118029081 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105758595 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115568413 seconds)
  done (took 11.884759376 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090960821 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.115048146 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.091852138 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115008895 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.091065343 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.116285224 seconds)
  done (took 1.591483007 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115018596 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.118739447 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.105648595 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121216534 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157399542 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.129934892 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.103468192 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.124818455 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107573849 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.127995069 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.129618146 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105645766 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136842245 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12157988 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103625664 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.122229536 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.129672059 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100630041 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128772048 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097233543 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138104415 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121438864 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097155056 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.133376407 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119247005 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095780846 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127003987 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.103040929 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129005915 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.124608765 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.095803171 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119597494 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.12174628 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.098143623 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130554405 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.096765936 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120806389 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.119733453 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.099891518 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119515506 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.129907698 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096693605 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.128166074 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094633792 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.124437418 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.122160034 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09391898 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.126264926 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.129035072 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.094191954 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.120585045 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095923624 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119118244 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119363663 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.095567411 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.1244342 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094223486 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129869227 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.121961203 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0965977 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119663601 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09372086 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124400547 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.11874292 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.105049346 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119435242 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.122918509 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.097297776 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123064115 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096592145 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120174916 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.119148276 seconds)
  done (took 9.286471235 seconds)
done (took 34.120875469 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.69126615 seconds)
  done (took 1.65852762 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.720057725 seconds)
  done (took 1.688290364 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.904061726 seconds)
  done (took 17.872150055 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.500198899 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.582596206 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.82069132 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.179832313 seconds)
  done (took 3.052448559 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.947767426 seconds)
  done (took 1.935464568 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296928869 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.258983357 seconds)
  done (took 1.529231459 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.787072727 seconds)
  done (took 1.769147743 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.350900806 seconds)
  done (took 2.324921635 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.333567307 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.184824954 seconds)
  done (took 1.498750588 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.550029539 seconds)
  done (took 1.531552492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.793540569 seconds)
  done (took 7.779487805 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.260687721 seconds)
  done (took 1.254822473 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.300964343 seconds)
  done (took 1.28564032 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.516953179 seconds)
  done (took 4.504183915 seconds)
done (took 50.657593898 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.098800124 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12751995 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.101489897 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125528749 seconds)
  done (took 1.43339363 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101589464 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121381932 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.101238195 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120505562 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126841226 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09597305 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.12435731 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101012579 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121361807 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096856314 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.121043117 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121194004 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.09786784 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.124040532 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093306523 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.124900719 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124745237 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096602051 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125373211 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097185663 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119903339 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098074925 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.125207165 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119441416 seconds)
  done (took 3.689094362 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100257869 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.119686162 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096973215 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119775038 seconds)
  done (took 1.424056755 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.100063131 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.143396125 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139585165 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.100455886 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143832478 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.137562651 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09257726 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118016889 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.093960251 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126126995 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090217258 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149384461 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13797658 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.100456561 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.127711521 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114835994 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091852561 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137984196 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.101060475 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.126048989 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.093250082 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125519493 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.091078524 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.13941358 seconds)
  done (took 3.812384553 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.15651239 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.150424276 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.14069879 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095257709 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.155502735 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142060369 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089912859 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141146161 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087599465 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.131055682 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.118804692 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.133284673 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128238371 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088996033 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.11498614 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087985625 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.127709361 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.128822666 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091024336 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.145935098 seconds)
  done (took 3.4510627 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098076946 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118320857 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088315923 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116656717 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099381912 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121850125 seconds)
  done (took 1.637916598 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.090882197 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.115007851 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090256571 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.115049252 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095382138 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115889977 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.088674452 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116131246 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.08958896 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115552177 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089492392 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11503416 seconds)
  done (took 2.231767583 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.458456436 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.092423494 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121010811 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.111548647 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096451281 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115018107 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.104004157 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.119191671 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141896524 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.089986584 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.116420466 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090761693 seconds)
  done (took 2.652713302 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236645636 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125690744 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.291709276 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190346025 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15887489 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172762578 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152660487 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16626657 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225427326 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.157783095 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208839343 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222060793 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124983998 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216250227 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.111474725 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.145245301 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224569828 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21881571 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154220581 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230628158 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201965249 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166251024 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179389537 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152063982 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139856304 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169708234 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.121129569 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103934733 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236009907 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178801135 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.21621172 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164031503 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14638844 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214063506 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250306528 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.224299481 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188295863 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135058477 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.144195714 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.165676733 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267597887 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139095354 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209106244 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158807345 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131574404 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193380973 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169703622 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.200881727 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.150638898 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113576442 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225394421 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213702797 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219788723 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137448197 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134350821 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18671578 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.16876737 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127087363 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252030763 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226961367 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181701088 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.12140634 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.119837899 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217310499 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183224831 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.16812567 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182044183 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146279854 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219984796 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187229844 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165956814 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19246342 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.21108732 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138993175 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169957351 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173923963 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171584811 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257747903 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179600398 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095643858 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168539105 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150240326 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132531626 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.194560265 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098280739 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241401062 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15133864 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.1083017 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163982352 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160529324 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161601181 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225485818 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193848744 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149051797 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.083664025 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156466224 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.156942128 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188150889 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139773858 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159438539 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161005662 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130647584 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177311326 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124476611 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17755703 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.092175074 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201882701 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184607403 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.099432771 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158266641 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152326088 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.152252848 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176836998 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226872101 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114408649 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134254485 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206547405 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203376697 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.149655326 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178707471 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.201119425 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.143873852 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150563078 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199836771 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246073737 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140326435 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204532417 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156018466 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134714455 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.106224873 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206362073 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128815086 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16113569 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134837543 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.182171193 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238366455 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125977881 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112003359 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215535976 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.107161696 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133102838 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162150774 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14929874 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138872101 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120102946 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.153156499 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209605197 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180026772 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153530791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167220824 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153589114 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252708563 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140700426 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123279785 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147674676 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120928515 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.194306239 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197201679 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13222439 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203556374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.19969255 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129994565 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198075802 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108185351 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177134589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130940281 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.093484208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221495873 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167148307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163449112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.196682092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155614805 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.182985004 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.207732304 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17464736 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176897149 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.16591844 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159540456 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139643743 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132451945 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191001397 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096995289 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143767049 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.134800056 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15780953 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142766188 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106921989 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227772395 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170001051 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149614026 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.158625402 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122354848 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180723257 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128044357 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176329609 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203833789 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119648547 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.224453627 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194530786 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187381157 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144173781 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236137476 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094117906 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126468176 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.143034815 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171767539 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134709166 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109035216 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1660937 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.180754112 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211044925 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177557658 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16503512 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178261674 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189760848 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122830772 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.141536112 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211920115 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177265294 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184082737 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115777921 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151619442 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176614544 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156774331 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257639588 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168331989 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176946989 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236582364 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150177873 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105154196 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151412125 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212835455 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155315668 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.176537678 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148005579 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115286153 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160901053 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.133987301 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160514553 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183921081 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163023955 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216761173 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15161226 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18615676 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1279163 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16494008 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159345166 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164791051 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.08234323 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174792753 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230358651 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148636602 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170888897 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192817063 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.130955173 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.179128799 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211496808 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222615563 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138103803 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158619947 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159078745 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136194015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199755176 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177005955 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15941838 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190018533 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157995505 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.110278762 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140885361 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150805168 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152082471 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.132689562 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.148765453 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.175442575 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.112171076 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216588684 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162304187 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157925085 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17122664 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.123531824 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.144182916 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151690962 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24253859 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174982324 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213162673 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150269432 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180162428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233921015 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099024857 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132953906 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133372413 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178212003 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137349111 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190509567 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.148195065 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129438533 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208237694 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193216562 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140174474 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.093103799 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157002562 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173826484 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165438431 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151924284 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160021092 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.23360602 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.115008673 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132585964 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.172506252 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157744159 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148450731 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196822976 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080318204 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149992208 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127381488 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106362527 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164576014 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234242504 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.135323113 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.158259784 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168190052 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196329679 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165010237 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122575059 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150174262 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166475808 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228912085 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184747313 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.131964985 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129974198 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203547483 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196015868 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16148535 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.140438272 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204698564 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193286974 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.226356502 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142301769 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169170228 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168539298 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157371503 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187432617 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.135886783 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207513207 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13455627 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22489838 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153980241 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115661926 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202502787 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.121738308 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14204445 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188426055 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201429723 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108416471 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134769757 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168681953 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176117159 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155691096 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.128197185 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18144763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.124712306 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192652337 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25950695 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134406812 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126064281 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148651523 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136311101 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157863909 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159699654 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139275091 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139458917 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230002117 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135080868 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190810841 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201658234 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195375886 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177055575 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145285528 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.693914259 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.103551539 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221317546 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15324537 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206941901 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151273368 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17380395 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161887168 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169903903 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19468454 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158548161 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232133401 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220047532 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17763173 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132533803 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159006426 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162642318 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.144298801 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.12428863 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194859415 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131391606 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.153845645 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205065677 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170776042 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.106311859 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140271132 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.197209645 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156058058 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213995557 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.178458601 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111698654 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170900565 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212986949 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134386391 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180610694 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234564043 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114605195 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151442088 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134673689 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.155994931 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258747188 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097883301 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226881346 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176234427 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158337408 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167842494 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148141615 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190932482 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157653611 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176413149 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146662151 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15999102 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15621374 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138801535 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.101610136 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154223684 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166048262 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.148800258 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159879242 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165179767 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19425651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124035098 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116904559 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156208229 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216274653 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216704431 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137730348 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107419308 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163020834 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151470773 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.174976151 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205071596 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.108005097 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136837297 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138185474 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.133663067 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.137006348 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154460503 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157405255 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166018869 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208026366 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135459249 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.279774735 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11267232 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153843242 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.115254555 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.10465214 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150401975 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14685555 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156215638 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150625066 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260918931 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.118610086 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132594249 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149301523 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.098077057 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136346977 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165345201 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164897414 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175448606 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145711402 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.107681777 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157041267 seconds)
  done (took 80.993015789 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162462618 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.130709831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.146174468 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.200648408 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176315935 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.26924409 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.209858327 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254079324 seconds)
  done (took 2.621757855 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09366822 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.144975886 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.153335172 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.13348448 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.090676696 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119921755 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.331440925 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.132970788 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.090588073 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.139692949 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.149208635 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.116756504 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.508203576 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.117714802 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.117399799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.083146037 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.115308624 seconds)
  done (took 3.708074713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.460956545 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.711105189 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.478087188 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.124466107 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.086534121 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.134113574 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.665734713 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.210118712 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.095692623 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.485268794 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.769264378 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.179680559 seconds)
  done (took 18.48004515 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099184613 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121472978 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.107989731 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136774745 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096232851 seconds)
  done (took 1.64114968 seconds)
done (took 128.75753111 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.104311385 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.402700653 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072499409 seconds)
  done (took 1.591938577 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.107413701 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137160491 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109068542 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.136255797 seconds)
  done (took 1.580708981 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.097937163 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127371706 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108711523 seconds)
  done (took 1.418342547 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.322809758 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.190863354 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.142762067 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106246386 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130116308 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103765163 seconds)
  done (took 1.425161455 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097342841 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127943894 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09858128 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130506357 seconds)
  done (took 1.541835217 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094674801 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070635268 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101617722 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074717577 seconds)
  done (took 1.42563583 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.1133135 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.131862519 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.105170487 seconds)
  done (took 1.439669722 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129860395 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138999028 seconds)
  done (took 1.35809427 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106848461 seconds)
  done (took 1.191500755 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.11765845 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170088407 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191211687 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.164911816 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.227882646 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165520928 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.14172313 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.115293153 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.131456255 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.145014274 seconds)
  done (took 2.661044076 seconds)
done (took 17.481686068 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103411861 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.513360881 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413812315 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.11609543 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721568911 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.38078912 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.04603737 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.146762008 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166191524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093307505 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140099042 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672398642 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.036366685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.467372969 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.994975327 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.370984215 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.704543917 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092406094 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119704718 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094257223 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.032428576 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.091901039 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122391841 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093328706 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704370711 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.426086769 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094374717 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.372158229 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092370802 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.126921516 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.38334478 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.121592627 seconds)
  done (took 17.134537397 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.094177574 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174046698 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09879541 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.137668319 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.1241958 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.093739957 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125043141 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094306732 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.179798429 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.12300811 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.11139986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.120789052 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126449419 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095379999 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142222738 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092275576 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126149981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092945563 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.121248648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123051809 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.111853405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120985784 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094372792 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121486434 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094513788 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135664837 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.123404668 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093560395 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121224097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098897168 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128475271 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095672301 seconds)
  done (took 4.831567946 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.140751827 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183714426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129085177 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127338768 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169072784 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124901499 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199798106 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147216456 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.155095332 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.122595008 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139953259 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093292722 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.15706498 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.123256228 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.114186259 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122055153 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097262367 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122167935 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093804417 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.12324169 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140910782 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093638868 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123183175 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093843461 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12382535 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.136959451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095856767 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121756757 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092994898 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128282171 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100195809 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124032827 seconds)
  done (took 5.158297391 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.096819974 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127187648 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109742567 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139252481 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095710647 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125894438 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097562866 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125181788 seconds)
  done (took 2.011883969 seconds)
done (took 30.223072244 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112155792 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.127585137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.106938738 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134951086 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10306041 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132418447 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.092267601 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.13324749 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.13393139 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10120278 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.139185724 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.091779021 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123650202 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092681809 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136714865 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099297286 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133222681 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.102540791 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134292412 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132600765 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094142332 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.13478785 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103614805 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.133969141 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104572261 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134340507 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138647179 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099287474 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124511186 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095149605 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.126121962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103753016 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.125058363 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10543941 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127346513 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.09724228 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.12407467 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.095784329 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.133275673 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.133594052 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.099964568 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134788624 seconds)
  done (took 6.021035939 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.107804139 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.141197898 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.104944417 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081671247 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117411916 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081500435 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138719044 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079461812 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.11095817 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.109114572 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.077802358 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.106768291 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078503917 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102924138 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077018922 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075522124 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109276247 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075416554 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076907474 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107142715 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080354914 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.073215076 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.108846919 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078624388 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104510265 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081890745 seconds)
  done (took 3.590979979 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.100714693 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.135283677 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112990534 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.184559993 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.169392827 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099876878 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.132424696 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.14113092 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.108768165 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.12168972 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096214934 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.15001634 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111558348 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128764819 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.121315541 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.107715621 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136703487 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093628939 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128240887 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113211867 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138944369 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.132103361 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113336478 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133090251 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.091298391 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.123933913 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.09629172 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.136180348 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097940397 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.131184688 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.125362185 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.09568 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124435896 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.104119976 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.127133006 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094592613 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.14254765 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132150817 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.10105665 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.122322835 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.095925727 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.123313532 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.114666921 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.166735251 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.121305631 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.098907351 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.129060329 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.103001815 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.122371712 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110354213 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13228356 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092022612 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125394695 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.09222629 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.122110375 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136602793 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.094305167 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.124717585 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.102416819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124871307 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.105149512 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.126141774 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108956088 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122355713 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.129904854 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.09213425 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122261301 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.092003556 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144344179 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.094610713 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.163292638 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.124230716 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.094998374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.131655071 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.100456571 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128393102 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.093091594 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137690855 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101983477 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125436991 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.131456818 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.095759101 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.124601856 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.110678668 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.124751252 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.095236183 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.123450434 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.09941673 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125237325 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094105052 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137043271 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.12197777 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.095711232 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.139809011 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.091700637 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.123790212 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.099783745 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127060449 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.091852246 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135086704 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.12829423 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.093592927 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.132026114 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.09356272 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.125322734 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.103297166 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128340042 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092074336 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127428202 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128533525 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.093656087 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.124608672 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.095740664 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.124256433 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.103467585 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.128560425 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.097312497 seconds)
  done (took 14.852833425 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228490486 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.215373282 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.250213131 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.267467059 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136479699 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.145540201 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.214455756 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125080261 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.122918509 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.160902612 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.163417734 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187716388 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.170974543 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180378583 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.11042245 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.120918865 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.14231704 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.135973271 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214898368 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291515151 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.143410942 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.101222233 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162415975 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16112991 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.137742086 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.103488353 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139644111 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134343975 seconds)
  done (took 5.787892524 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.107490417 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.156619051 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098989437 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.14514877 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.148967061 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.093977819 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128229254 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.095249201 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.135196416 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.137292497 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09358995 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129293223 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100539025 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.133488577 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124591 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103227676 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133967046 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094848986 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126678357 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097721786 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.129918452 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.131792489 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.097017329 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.123742394 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.101012154 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122650122 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086604399 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142786465 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123492527 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.115390261 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121032794 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.099842039 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13391571 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093190914 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123971941 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.095507797 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125186836 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.095765562 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.124391216 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.092142227 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.120748334 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077626665 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122564063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.136653358 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.098991898 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.109767195 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100127184 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.129045299 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.09847554 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121292643 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.095915039 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125133572 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.097396415 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130980125 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.098436005 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.128837693 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096492027 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116656738 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.099181944 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125247272 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.0845516 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.122883829 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.098124845 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.119160552 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.101507138 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129113928 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092970807 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.125651963 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098973727 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.129689662 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096177251 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.126414798 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.121573597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.0959248 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.129292102 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.097864639 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.126498058 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.092105195 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.12307844 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.094102424 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.105738619 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.093418392 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075453311 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.126130919 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092076366 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.121922993 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125277588 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.099019198 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.137998516 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095273402 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13019512 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094715802 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.121458054 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126598179 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.08379652 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.096241725 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137768187 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141202712 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.092468661 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.122348561 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.107091136 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.129023623 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.122802755 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.076271866 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.100856026 seconds)
  done (took 12.976377808 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128201657 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.152754722 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095419997 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.142204799 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156084816 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158085555 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.100782104 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.130678419 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.094456285 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142781082 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093830635 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.132287622 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097009773 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.137314231 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157837826 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.102485502 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.125395279 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107401452 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.132546046 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171791967 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.11218633 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.142278399 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.138280057 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.094714416 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130429495 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.110805016 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.161431839 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.138936225 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.10692598 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142814923 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108004481 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161690398 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.144253506 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.098733185 seconds)
  done (took 5.486690062 seconds)
done (took 49.81171372 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.22144475 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.413492713 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.191219605 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.079247693 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.22749723 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.228824024 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.201786559 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.193347044 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.746591361 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.193250219 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.430975423 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.822087396 seconds)
done (took 60.074551377 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.248979887 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.326326119 seconds)
    (2/2) benchmarking "String"...
    done (took 1.461475575 seconds)
  done (took 3.911282108 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569938401 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.136340876 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.45121839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.192829445 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.209020586 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.489447732 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.857242266 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.544598661 seconds)
  done (took 28.003275793 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.192246103 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.612295766 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.888042454 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.878254494 seconds)
  done (took 18.694861842 seconds)
done (took 60.550253645 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.184573627 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.253444149 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.209611655 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.180484844 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.305984433 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.226858285 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.501601742 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.222709229 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.210862758 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.189595321 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.214427869 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.193205573 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214847291 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.512523134 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.201573872 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.194141407 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.262674831 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.720237856 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.60135082 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202254446 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.247261949 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.266536958 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.20845978 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.196273019 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.252721695 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.195918094 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.195048476 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.222833012 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.759343943 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.19485323 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.201934443 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.719797873 seconds)
  done (took 190.589258824 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.194559047 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.330643827 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.418557196 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.253718791 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.845701083 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.390946094 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.33337729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.890434093 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.213728352 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.203869941 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.47597242 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.199852005 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.589346939 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.180463847 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.206740396 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.303356946 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.411300493 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.552222691 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.217772549 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.467128885 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.209917968 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.622037595 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.551873909 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.454293297 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.243069314 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.251064348 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.212668053 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.218429133 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.387075404 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.364465678 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.211410874 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.217234033 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.825885911 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.054647342 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.206411949 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.20227824 seconds)
  done (took 151.038420124 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.498119293 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.197482523 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.19640654 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.196504553 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.229131084 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.196748391 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.780644236 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.765265673 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.705126591 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.708900582 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.259556893 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.45741643 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.196701637 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.293597822 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.2096535 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.198793532 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.212376907 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.240290531 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199969281 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.198437185 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.76551197 seconds)
    (21/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.198598985 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.210053836 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.204371444 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.19873029 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.230515236 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.588223823 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.395267189 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.216179362 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231940466 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.523599598 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.248500651 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.199423412 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.562857597 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.220212056 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309375422 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.200973425 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.231607726 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.198777522 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.472293313 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.199260644 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.199916369 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.202865534 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.843196655 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.201183733 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.783685687 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201515444 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.136282054 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.199791934 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.199015197 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200380588 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.483663333 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.790478149 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.218714794 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.199455835 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.201941658 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.200383333 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.200028602 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.23306525 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.457245552 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.300960977 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.216498648 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.204154158 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233234825 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.201577029 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.255407395 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.201106541 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.331692711 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.273792816 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.425278162 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.770585105 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.201349724 seconds)
    (72/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.200998247 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.29577177 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.321144829 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.201706649 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.200176784 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201692837 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.201021578 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310024991 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.200851238 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62700058 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207842813 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.202913961 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.262480922 seconds)
    (85/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.20013729 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.297166675 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.201482864 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.55739746 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.203702538 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.20194513 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.928741764 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.297843821 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.202042708 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.20257017 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.201774753 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.62835492 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.77145353 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.429276329 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.203783924 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.507500284 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.20576526 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.643637981 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764918012 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.846341006 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.205834365 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.311495853 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206713112 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.204390689 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.202817202 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231989801 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.219408408 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.260322781 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.202784457 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60171311 seconds)
  done (took 345.528670276 seconds)
done (took 689.777244478 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.883666547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.83680534 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.971302581 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.846953417 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.83410732 seconds)
  done (took 10.506042604 seconds)
done (took 11.636145917 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39270777 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.391552282 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264140491 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.394301307 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.232500966 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.409925774 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.371743897 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.222673117 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.305678027 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.287141798 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.304924583 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.256924193 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.229687126 seconds)
  done (took 18.198080818 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.517579667 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.528056379 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.269894526 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.517475333 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.245245186 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.518908072 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.40060658 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.413837456 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.415574659 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237298723 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.218922605 seconds)
  done (took 16.419083606 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519200807 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51567337 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.271146125 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.520671796 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.246472555 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.51567406 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.403545454 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.420127835 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418816918 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.239325995 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.217224851 seconds)
  done (took 16.424313532 seconds)
done (took 52.173129888 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.213061223 seconds)
  done (took 2.348493399 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.250117069 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.412052185 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229669142 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.21709229 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.214086269 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.215099497 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.219224684 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.213789621 seconds)
  done (took 11.107195115 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.21106779 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.211117378 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.207684284 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.207496678 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.211710989 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.210647959 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.20820934 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.212759207 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.212144567 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.212200785 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.209049319 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.211757434 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.211182991 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.208729017 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.208948186 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.209145121 seconds)
  done (took 20.499698444 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.213020349 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.208450865 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.20907798 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.209346931 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.208259153 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.208893099 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.210229433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.209275431 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.210712865 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.208689592 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.208787646 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.208342817 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.209469594 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.209005907 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.208845834 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.210757126 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.209424217 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.208980506 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.212953749 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.208760639 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.20858915 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.208416307 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.210252507 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.209379724 seconds)
  done (took 30.163762958 seconds)
done (took 65.251937214 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.300359413 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.85029412 seconds)
  done (took 9.283801894 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.210249503 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.210272212 seconds)
  done (took 3.555677304 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.210363084 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.210472993 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.210408949 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.210028144 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.210192245 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.211294759 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.21001214 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.211019706 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.210281632 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.211166966 seconds)
  done (took 13.238186747 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.211038279 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.210930354 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.208472842 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.210884857 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.210607017 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.20907096 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.211950519 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.211334883 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.212194935 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.209631342 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.211254631 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.209062202 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.210666723 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.209395706 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.210435131 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.209007133 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.209192973 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.209701453 seconds)
  done (took 22.918877395 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.212872287 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.212006535 seconds)
  done (took 3.557909575 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.209037646 seconds)
    (2/7) benchmarking "second"...
    done (took 1.209778736 seconds)
    (3/7) benchmarking "month"...
    done (took 1.209060925 seconds)
    (4/7) benchmarking "year"...
    done (took 1.209112986 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.209493242 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.209721465 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.209058959 seconds)
  done (took 9.599372755 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.211885086 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.384395562 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.46264453 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.855373746 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.213880019 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.216761717 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.089520354 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.216717052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.218628959 seconds)
  done (took 14.00403889 seconds)
done (took 77.289513084 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.238675199 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.222147872 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.366755162 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.217055931 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.221629148 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.549376753 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.258960567 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.333646072 seconds)
done (took 37.541167678 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.217340608 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.958347043 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.975791208 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.206919747 seconds)
  done (took 11.277282705 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.194098246 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.134967885 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.202244501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.235515712 seconds)
  done (took 17.902759518 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.235844487 seconds)
    (2/2) benchmarking "read"...
    done (took 1.542486236 seconds)
  done (took 4.912818287 seconds)
done (took 41.442917821 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.213584913 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.213084157 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.212430104 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.214383497 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.213554694 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.211218359 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.211117005 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.211135369 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.213643787 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.214260335 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.214978329 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.214619329 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.213868429 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214654749 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.212547505 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.211328249 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214312934 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.2123256 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.212923821 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211652462 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.211759634 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.213691305 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.211154825 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.211478934 seconds)
  done (took 30.245779215 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.213889803 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.214452325 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.214720289 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.213412007 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.211495236 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.214824097 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.21558051 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.211326293 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.214274798 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.214542013 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.212845371 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.211509626 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.213719617 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.212225335 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.214430061 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.212442608 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.214027265 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.212521545 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.214665125 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.211655509 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.213924002 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.211771264 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.211749224 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.213728396 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.211669388 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.212002736 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.214092265 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.211857638 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.213644442 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.211683242 seconds)
  done (took 37.531508661 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.219227354 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.22125708 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.213815677 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.214173659 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.215876743 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.214819547 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.2140601 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.213341996 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.213873487 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.213161138 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.214593632 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.215506098 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.214214315 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.213745849 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.214187821 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.214503358 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.21430098 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.214039689 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.21462759 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.215411153 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.214403576 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.214359584 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.215598233 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.214338804 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.215257847 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.215453138 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.214834321 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.215615746 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.214879074 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.214516003 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.214526351 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.215217697 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.216273016 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.215567528 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.216183583 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.214993587 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.220813354 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.222202334 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.215040773 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.21663763 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.215564352 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.215781647 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.215815082 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.215401164 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.215802696 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.216168913 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.214884251 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.215768499 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.215644313 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.216399562 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.216510686 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.215813252 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.216785992 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.215194808 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.216496305 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.216714668 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.216798998 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.215582052 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.216801705 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.216191553 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.216267707 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.21683229 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.217277238 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.217415688 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.216976487 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.215289095 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.217762392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.217268301 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.216407754 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.218245035 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.218094691 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.218647492 seconds)
  done (took 88.67978645 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.218232506 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.216189856 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.215825632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215621448 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216296067 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.220075493 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.215850997 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217370045 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215396811 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.218803846 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.221935674 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.215923677 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.215789906 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.220251738 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.216884191 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.215143992 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.217177295 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.216067459 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.217887867 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.218370761 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.21869452 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.215427397 seconds)
  done (took 27.919106366 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218685723 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.22043759 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.215083593 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.218808996 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.216165791 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.21796189 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.219495702 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219797567 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.217548239 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.214983687 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.216505942 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217937186 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.215540123 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214896108 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.21451843 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.217478178 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.216862162 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.217038464 seconds)
  done (took 23.049658286 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.215872566 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.215259072 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.219684155 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.215474134 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.216146905 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.218296724 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.216132938 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.219071109 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.217555487 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.215327054 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.218531706 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.218733553 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.218874964 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.215401478 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.217435622 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.215820866 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.217167021 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.214263012 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.217868823 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.21586107 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.215997263 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.217693423 seconds)
  done (took 27.912302289 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.218278084 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.217388646 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.215253673 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.215442215 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.215221752 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.217766972 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.217933428 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.213928992 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.219170771 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.217821143 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.216629939 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.218633367 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.217917226 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.217341145 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.217142104 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.216488046 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.217875043 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.216207596 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.218614427 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.216210787 seconds)
  done (took 25.480324175 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219686511 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219150888 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.220397515 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.219117532 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219185475 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.219900059 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.21921787 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.219449772 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220302606 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.219831498 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.219389299 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.218945843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.220154967 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.219698591 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219937613 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.219814697 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.219835898 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.219097842 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.219881996 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.219956919 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.220198217 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.219769693 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.220517364 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.219434615 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.22009526 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.221010018 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.220601981 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.220589689 seconds)
  done (took 35.296744187 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.219357549 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.220422487 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.217772478 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.21818962 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.217725324 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.216995229 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.218314952 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.217055444 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.220017316 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.218414783 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.220864184 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.220877509 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.220956979 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.221465916 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.219776049 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.220779121 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.221392449 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.218651582 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.218992959 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.21857352 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.221567154 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.222193953 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.221468599 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.218071137 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.219657642 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.222285396 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.219122322 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.219816515 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.221745316 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.219049223 seconds)
  done (took 37.734022023 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.24051698 seconds)
    (2/2) benchmarking "in"...
    done (took 1.239951807 seconds)
  done (took 3.622937932 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.219718819 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.222664391 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.222243331 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.219350063 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.220767159 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.222705125 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.221802296 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.220290509 seconds)
  done (took 10.91219923 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.22123568 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.221929624 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.222075734 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.223179692 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.22310474 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.221929036 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.230700933 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.241104887 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.22323088 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.223530695 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.230679464 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.231026218 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.226140721 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.221984786 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.222558623 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.224294691 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.222830331 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.222214279 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.223243755 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.224337473 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.222932853 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.224634746 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.224654608 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.220520055 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.224419719 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.234104501 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.24545951 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.223576402 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.222208985 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.227225718 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.222036583 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.220013195 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.223255115 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.222543478 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.223743364 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.224099263 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.232701142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.240772907 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.229299885 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239604988 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.222676028 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.220167418 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.223739511 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.224519825 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.225028675 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.222596556 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.223591673 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.219112238 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.221920547 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.226476559 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.227873642 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.221924971 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.221473472 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.226394898 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.225583331 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.230748363 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.240793654 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.226228148 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.231858798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.234863512 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.254403419 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.244741092 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.225224447 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.223465296 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.23328141 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.245607335 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232073688 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.238295199 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.221451912 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.223469228 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.231202179 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.25332363 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.247517278 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.223981584 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.224198626 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.224961986 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.224568702 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.224430307 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.23197726 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.244093494 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.223243444 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223941875 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.234561857 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.245132922 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.224705977 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.225426727 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.2231671 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.22370143 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.226805112 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.235427138 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.242758687 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.224485083 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.224585255 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.226105942 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.226221608 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.225367722 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.223741721 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225876757 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.221809931 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.225138421 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.22403976 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.228195163 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.23202264 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.22446725 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22423657 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.230613891 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.2434269 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.224766035 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.232700835 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.226268508 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224935857 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.225483816 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.230273178 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.222773462 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.228248721 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.232521805 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.224798169 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.226833536 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.223229523 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.226096384 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233428889 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.247439325 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.225451867 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.224333467 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.229293657 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.234779646 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.223754955 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.227697514 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.225471759 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.222683154 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.222461484 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.226443044 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.224864703 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.227440898 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.224880974 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.225936811 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.222164316 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.224491976 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.225507107 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.226461605 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.226464781 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.226955611 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.226339107 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.227613194 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.225392709 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.226383014 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.231843511 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.242184497 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.227133696 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.226725319 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.225969033 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.224492127 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.226131342 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.225797499 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.224809455 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.226217922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.224911379 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.226092166 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.226902979 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.225388081 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.225608239 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.225988467 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.229223367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.225449614 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.228950769 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.22638281 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.225099705 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.225082944 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.22649868 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.224833772 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.226113331 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.224391829 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.228506258 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.23163491 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.225480852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.224709068 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.227997599 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.225618238 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.225681426 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226209104 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.227914144 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.231937791 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.225925211 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.233878698 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.242908185 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.225961617 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.225507831 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.227020764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.224705209 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.226051678 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.229488874 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.232603804 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.237507189 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.249022758 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.227075368 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.229083943 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.22825997 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.228835337 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.232328978 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.225826294 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.225702832 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.226209255 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.225826425 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227484905 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.22827849 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.226181052 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.226139201 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.228572337 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.226147603 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.227190977 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.227281705 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.228363571 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.228317963 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.225777329 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.227510638 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.227179481 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.226719547 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.224936034 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.226322708 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.228483986 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.228417197 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.227531018 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.235062838 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.227314466 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229560831 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.228058182 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.227542633 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.226675069 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.228769893 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.230552186 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.227688322 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.237808926 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.245620131 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.228905294 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.236921591 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.245848651 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.228189627 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.230573659 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.229206515 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.226712995 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.230488674 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.234999832 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.228812529 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.229410347 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.228235612 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.229021672 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.229211412 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.235611858 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.244438338 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.228258297 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.229848137 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.231951727 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.227898737 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.230545701 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.23140538 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.232565451 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.23187703 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.229921278 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.22964576 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.231211831 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.230928326 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.230702695 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.229299588 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.233002844 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.23655549 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.235936399 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.230315877 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.233724578 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.231120389 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.233418944 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.230691878 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.231166906 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.231152571 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.24246276 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.250978878 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.23824774 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.249549223 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.23252429 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.236431058 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.248995523 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.233420401 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23180577 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.231182365 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.230048195 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.231416115 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.229005898 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.231821794 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.231179484 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.232281017 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.232019384 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.234591248 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.232572062 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.231626265 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.232257912 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.230920454 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.233094608 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.231596088 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.233651361 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.233909943 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.234568763 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.231043562 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.23278461 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.240841057 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.249642598 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.233811767 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.232567179 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.232124638 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.232035733 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.232910619 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.232859728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.235854861 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.238324826 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.235414063 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.240262818 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.233724112 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.241743735 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.232931737 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.235372854 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.238462683 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.230422548 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.232148583 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.233544117 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.232967622 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2414821 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.250311648 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.23471002 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.236423486 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.233543991 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.234548548 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.234754869 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.233292461 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.235959674 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.23381517 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.243570849 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.252151345 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.236658869 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.23596494 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.231822972 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.234676505 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.235703332 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.233425523 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.2386719 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.234661762 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.236318869 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.234859418 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.234602329 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.235428316 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.235302291 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.237440302 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.233357202 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.235091819 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.243376149 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.254690209 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.238482601 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.236167395 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.24421006 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.252790756 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243975235 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.253314468 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.237671573 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.235782401 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.237035371 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.239292374 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.23650676 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.237515963 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.236081267 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.238703608 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.239819489 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.236667756 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.239851564 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.238039386 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.236426472 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.237626822 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.246428175 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.25644017 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.237792217 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241427884 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.23522706 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.238798561 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.241343465 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.237110632 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.236969986 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.239870797 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.245694384 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.245147694 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.239931478 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.237771732 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.239672752 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.237852516 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.23855947 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.239220784 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.239122976 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.238965433 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.239661923 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.239492524 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.241869293 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.238261295 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.239664461 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.238830113 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.240246313 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.248647011 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.255959314 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.239560155 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.238823294 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.240786332 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.239753324 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.240271748 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.239964927 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.239183525 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.239826418 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.240620861 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243282149 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.244545569 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.242173212 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.239380322 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.240366329 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.239979579 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.24088907 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240802212 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.240828715 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.241301011 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.242070691 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.240431919 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.240838213 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.238538016 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.241278702 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.241912566 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.241434287 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243442849 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.245912947 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.242510499 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.239626373 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.242241018 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.241176831 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.241359014 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.241099211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.250381992 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.260956628 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.247975354 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.248489193 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.244203163 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.241737328 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.243799264 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.247600024 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.241316132 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.242760868 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.242256362 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.242520318 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.242603921 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.244037931 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.242408191 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.248399735 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.258929113 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.242696438 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.250781502 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.260005224 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243337123 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.243087812 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.24569702 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.242529983 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.241105918 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.243366064 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.242125545 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250593862 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.262021914 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.243674196 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.244692547 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.243271981 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.244345222 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.245897842 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.243256698 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.245310037 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.24104587 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.24532046 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.243784214 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.244116565 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.24175469 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.242979188 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.243607299 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.246406151 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.24885464 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.242416267 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.246110479 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.244044283 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.245704733 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.245699619 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.245081404 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.242539342 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.242274268 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.245224504 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.245215945 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.245241043 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.247512866 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.245687674 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.245657537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.245908676 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.244775134 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.247769636 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.253160108 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.250987375 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.242940905 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.245643267 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.245511642 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.249065699 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.244660508 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.246502916 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.246193116 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.248069656 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.246814196 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.247168544 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.246681313 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.248953155 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261032906 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.26433043 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24727032 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.247006148 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.250923257 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.246421809 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.243949685 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.247615143 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.248910767 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.249001414 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.254659788 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.246527898 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.25418783 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.263168943 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.248016601 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.250652087 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.249226888 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.253304434 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.250291862 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247097009 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.2474424 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.251232069 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.261514885 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248365919 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.25591242 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274251673 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.265072937 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.249382929 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.248358522 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.246770065 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.248133734 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.249619317 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.249010611 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.248876124 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.248673318 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.249001937 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.248921963 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252832666 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.250131006 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.249564984 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.248981984 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.248371897 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.250822397 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.246362914 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.249326286 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.248736651 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.249528171 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.249772815 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.250328366 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.250505788 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261291693 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.271719022 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.24969517 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.250250869 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.246894779 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.254422682 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.252561434 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.258314189 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.255785657 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.250293527 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.250865416 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.252567661 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.249781403 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.250199059 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.251139223 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.250853272 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.250099508 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.248318734 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.261571424 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273591975 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.25545432 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.250293383 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.251698057 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.2524853 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.25075994 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.251598288 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.251226671 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.253119941 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.252489565 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.254538215 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.2510874 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.251055695 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.253094511 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.257530827 seconds)
  done (took 738.304006381 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.250037303 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248957907 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.249349556 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.249136719 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.248559659 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250317592 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249281135 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.248714157 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.25087914 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.250074973 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.250755648 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.248985304 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.249534071 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.250954812 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.249853667 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.250527445 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.24989016 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.250062168 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.249484369 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.250524339 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.250943118 seconds)
  done (took 27.416696523 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.252107525 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.251090215 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.251554796 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.252534013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.250474195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.253577969 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.251423804 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.25325431 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.253899228 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.25058638 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.253992108 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.25378407 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.251010997 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.251126249 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.251679879 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.253341377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.254749701 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.251839957 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.254048648 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.252754148 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.254558834 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.25184572 seconds)
  done (took 28.726812611 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.2559748 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.254080916 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.253827799 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.252760164 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.254688935 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.252493419 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.254454112 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.254618356 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.254618955 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.254958084 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.252985473 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.254895493 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.260950205 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.258604187 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.2571414 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.254978418 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.400030999 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.255576024 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.25593338 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.255343698 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.252697527 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.262216783 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.271510236 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.254002976 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.255356806 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.256222422 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.256067667 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.2558956 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.255863112 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.256888393 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.259076753 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.255789339 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.256453622 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.257078426 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.258020647 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.257028876 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.259362773 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.258053779 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.254537354 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.255850825 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.265515846 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.273722908 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.257261015 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.26303996 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.275313385 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.257693216 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.25867165 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.262735822 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.253584253 seconds)
  done (took 62.937819884 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.257151083 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.258523213 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.255194647 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258000935 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.25829795 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.257932117 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.257630652 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.25744192 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.255446625 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.254924854 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.257732057 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.256060556 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255385162 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.256791563 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.259004606 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.256429015 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.255788064 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.255996628 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.255330374 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.256847945 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.256870077 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.259912562 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.258907536 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.256147353 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258944564 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.257377067 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.255850326 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.25928815 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.256804102 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.256521396 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.259146386 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.258882791 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.259608921 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.258329347 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257083877 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.260353517 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.260046184 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.256589394 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.258813965 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.256348708 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.25957245 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.261796505 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.260442175 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.261039023 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.257877872 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.258170587 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.258418375 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.258179302 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.259165917 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.261340833 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.261047441 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.258991832 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.261453083 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.25920746 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.260848834 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.261432981 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.260246466 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.259045918 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.260649518 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.25921153 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.259143246 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.261248783 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.25899106 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.261795271 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.261266914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.259622374 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.259318853 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.262366569 seconds)
  done (took 86.757236214 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.261684217 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.262394582 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.260960623 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.261046866 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.261305989 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.26158451 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.261576075 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.261438485 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26208234 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.262507791 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.261565293 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261966648 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.262259082 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263591977 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.261959096 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.260665415 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.261501765 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.261190401 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.262139489 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.262857942 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.262661058 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.262213771 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.262352263 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.262198631 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.264033629 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.262807873 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.262395048 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.262548518 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.262158278 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.263209907 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.263705204 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.262777285 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.26321173 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.262801161 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.263587721 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.263033522 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.264221744 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.262576811 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.263794868 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.262543865 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.263339057 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.263224349 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.262794289 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.263772117 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.262315779 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.26416946 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.264235451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.264777309 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.263772129 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.263310536 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.264288113 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.263932491 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.264682248 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.263865122 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.264325745 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.265164046 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.264098482 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.262788491 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.264562559 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.26447232 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.263870626 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.264883421 seconds)
  done (took 79.483113678 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.265400698 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.266405651 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.263257108 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.262788099 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.265257293 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.26386455 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.265929767 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.265314062 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.266551672 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.266312094 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.266436966 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.263457647 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263544043 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.266551849 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.263318571 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265046101 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.263556397 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.264177592 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.266036143 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.263762065 seconds)
  done (took 26.479498886 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.264615432 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.266370689 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.265912309 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.263836484 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.26709249 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.265401742 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.266746555 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.267609559 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.263548445 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.267971581 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.267321638 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.267874787 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.264014135 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.264802151 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.268014541 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.264728735 seconds)
  done (took 21.439135125 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.265475468 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.267215543 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.267161084 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.266388513 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.265232336 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.265800974 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.267577277 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.265518643 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.265253621 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.267877817 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.268127973 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.268064474 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.267351855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.267792178 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.265665707 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.268658693 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.266164067 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.266057201 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.26993723 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.268119588 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.266221769 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.265692496 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.268671294 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.269238506 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.265860792 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.267367296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.265290413 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.266694651 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.266717785 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.269388121 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.266076733 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.267891883 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.267764305 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.267124474 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.269053328 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.266507038 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.269390304 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.270213274 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.270328619 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.269706829 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.270631681 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.267712974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.271402039 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.270603154 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.267225821 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.269740059 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.267926175 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.268732577 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.267023004 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.267613731 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.270700243 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.27079266 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.270588533 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.271659324 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.270174659 seconds)
  done (took 70.922653395 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.270635809 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.270843034 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.269110113 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.270387859 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.271200494 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.269283064 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.271546934 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.270038278 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.268093761 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.27103862 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.269454885 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.272464827 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.269461376 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.272449245 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.268560863 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.27112335 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.269341886 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.269314886 seconds)
  done (took 24.052323585 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.269492711 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.270090845 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.271591087 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.269598243 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.26992196 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.272947393 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.26954628 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.272213233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.271569255 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.270477173 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.269702629 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.273275337 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.273045579 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.272960834 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.270615511 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.269915894 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.273629754 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.272604272 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.270283954 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.271054458 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.272812492 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.274044337 seconds)
  done (took 29.159921859 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.272028328 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.270890305 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.272330867 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.288200019 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.288042487 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.293841959 seconds)
  done (took 8.875115613 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280234524 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.273357777 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.271867995 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274356105 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.272992241 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.272396113 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271345348 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272554506 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274464236 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27210469 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272227086 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27485041 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274299939 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.271306329 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274659455 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.273619064 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27083494 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.271464141 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273374698 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274750636 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272612012 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274981133 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271487902 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.272278505 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27252365 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.271956214 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.274325493 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.273323412 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273275606 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275111712 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275840222 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.273931389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275450746 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.272909749 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276817355 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27575806 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274395073 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276119413 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276201754 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.272952536 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276224418 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276264296 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275218852 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.273879779 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277276498 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.273303632 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275139591 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27499822 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275319684 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276415431 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276783088 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274375095 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277277365 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276035564 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276760516 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276824032 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275478289 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.274228331 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276155913 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274838181 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.274291604 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276689805 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274062076 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27429457 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.27743732 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.274648444 seconds)
  done (took 85.325661597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.275105703 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.274785686 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.274812605 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276561888 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.275294171 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275985058 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275364306 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27483155 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.276177116 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.275828905 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.277228292 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276468279 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.27584452 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.275976398 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.274687026 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.275459089 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.275123475 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.275961989 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277219911 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279445922 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27581314 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277748186 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.276421443 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277303028 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.276474015 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279477696 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276055722 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276985536 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.276555819 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.276393952 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277290195 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.277180367 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.276386944 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.276883519 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.277771063 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277008788 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277241042 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277606393 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277446425 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280136823 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277977335 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280466747 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278675767 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.277473709 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.278716724 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277319978 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.276701154 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278967631 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.27782558 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278127488 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278724241 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278647508 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278710379 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277628944 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278011884 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277666782 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279129162 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278295201 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278753947 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281231236 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.277794663 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.278320169 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281863871 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278198667 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278256259 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278059238 seconds)
  done (took 85.500037169 seconds)
done (took 1724.897953399 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.306849634 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.343647306 seconds)
  done (took 13.847783606 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.442026767 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.394548398 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.278769582 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.301609295 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.280057671 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.297929747 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.296935194 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.280308522 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.279526146 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.280711554 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.279791319 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.46769329 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.33518487 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.281100152 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.280578932 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.372002546 seconds)
  done (took 42.348982651 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.307088983 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.288080674 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.388947662 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.305685203 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.306631004 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.459762912 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.338901815 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.284728229 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.443383344 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.327325107 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.734358505 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.308147259 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.284911996 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.332017826 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.307807753 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.458215023 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.520717887 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.764963685 seconds)
  done (took 29.360150086 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.695639053 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.281525206 seconds)
  done (took 9.175840413 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.300234138 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.301275287 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.311753201 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.287145205 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.292445411 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.303223103 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.316181109 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.303498864 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.316367597 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.293427647 seconds)
  done (took 64.226340565 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.303249967 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.285640871 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286208246 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.283492482 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.285941538 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.281692779 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.285265002 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278505568 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.629949234 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.40369553 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307852137 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293457919 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.302104832 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286499495 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282717747 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.320506839 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.432119188 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.302809041 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.282554946 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.291503207 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.285322547 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.376379479 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.323438959 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.284319006 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.405743144 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.636090908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.293958094 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.293469623 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.412680481 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.303395978 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.286579624 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.285268622 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.289463138 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.837711884 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.76506553 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.301556203 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.310211058 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.296260319 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.285356756 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.406561936 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305791831 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.293844121 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.279885222 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.74727596 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.439995352 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.392733054 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.431189373 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.294282196 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.28998644 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.346055896 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.289565696 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.288396005 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.315543946 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.0209785 seconds)
  done (took 108.042095756 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.336536798 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.772981109 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.44933401 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.298568086 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.138247986 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.039934716 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.300037348 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.545136102 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345527754 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.282092507 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.625334985 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.77237641 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.306804439 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.343165111 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.791104878 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.354711522 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283064191 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.211409388 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.301981632 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.282806495 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.692407963 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298836581 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.287231327 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.447496748 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.320266334 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725710605 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.657385969 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.834643234 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.30633636 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.28271007 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.734163222 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310623594 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.330842778 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.286383142 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.545110291 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.622402541 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61411005 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.309712829 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.333304575 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.282917415 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.309742998 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.723625153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.628715413 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.304035404 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.307307851 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.727500531 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.302852577 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.284528579 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.291727972 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.49046454 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.109092651 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.284106319 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.651954331 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.287391425 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.543916775 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.309873806 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.351331073 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.752183111 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300362515 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.473912566 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.316112638 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.284834718 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.292000678 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.283429847 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.289871756 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.608014667 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.333307581 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.288572074 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.611212091 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.746078856 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.308722976 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.800227117 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.196648774 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.310783795 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.322645725 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.285241511 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.02575933 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.776615247 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.331929139 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.28503155 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.600977111 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.309222826 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.594469679 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.301314191 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285981699 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.724567179 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.308745645 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.336222156 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.285534797 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.305047255 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.102645766 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.30207126 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.542160213 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.305125167 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.286653655 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.286190953 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.307450267 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.287395041 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.288797331 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.290671154 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.799313394 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.30904342 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.578703683 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.307787274 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.287660719 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.289485848 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.290315603 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.286711627 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.509758937 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.787392214 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.292524752 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.286487908 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.28642606 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.304632281 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.414151354 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.290645171 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.57124965 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.304781538 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.288801885 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.295371256 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.122336693 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.313057767 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.2882213 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.306909808 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.128248929 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.513967521 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.3054012 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.304404591 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.28901322 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.303762565 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.582836563 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.292034247 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.355470654 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.290913748 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.972282911 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.306819502 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.319997281 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.777526715 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.298269912 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.267699585 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.316348483 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.291432196 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596998862 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.559081686 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.919594236 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.291818359 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.305061293 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.997302761 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.342343271 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.429825463 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.308600329 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.28967709 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.486319259 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.866553595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.288640836 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.844068353 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.293292148 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.505641508 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.290032752 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.610898968 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.768731238 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.311014627 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293631724 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.981877536 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.97999525 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.103079384 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.285721134 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.606163071 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.254663052 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.728865758 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.271785314 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.266897189 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.873121307 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.262471099 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.259046528 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.25692586 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.25321589 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.314669708 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.429039776 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.091315878 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.255870416 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.690773996 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.334379034 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.257066638 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.256047926 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.254730141 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.600773522 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.31481174 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.249482845 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.2753277 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.248210742 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.24927004 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.692959148 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.1733792 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.2489504 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.395348078 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.858937988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.265058335 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.246398558 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.918626782 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.595148222 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.770277894 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.299632528 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.527768972 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.265884244 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.275713548 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.015358505 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.311252841 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.732329323 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.257211732 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.236492828 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.846889616 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.252828147 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.321477218 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.237052434 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.236773669 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.763521775 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.255666496 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.242850367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.533222371 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.239856451 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.487711161 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.237694346 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.249041758 seconds)
  done (took 1100.925023407 seconds)
done (took 1369.120193068 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.237492059 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.237844486 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.22522804 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.242893721 seconds)
  done (took 26.106257931 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.248661565 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.245951582 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.24670955 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.244520297 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.247509637 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.246234072 seconds)
  done (took 8.642214157 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.289681824 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.23814887 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.241885093 seconds)
  done (took 18.935221933 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.451185342 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.478361288 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.594197337 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.341526931 seconds)
  done (took 10.028763767 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.247740688 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.247396591 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.247437005 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.249593997 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.250915968 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.251996817 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.249071268 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.249897649 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.251151774 seconds)
  done (took 12.4086875 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.950249271 seconds)
done (took 82.232450962 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.32809022 seconds)
    (2/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.307491785 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.829608026 seconds)
    (4/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.596556786 seconds)
    (5/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.346524975 seconds)
    (6/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.227490138 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.12941364 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.478674815 seconds)
    (9/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.658081975 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.610610932 seconds)
    (11/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.277312408 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.285402709 seconds)
    (13/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.856296794 seconds)
    (14/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.272468172 seconds)
    (15/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.594959006 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.269126515 seconds)
    (17/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.5746358 seconds)
    (18/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.242599552 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.904669248 seconds)
    (20/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.232810719 seconds)
    (21/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.085851372 seconds)
    (22/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.772590775 seconds)
    (23/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.52134862 seconds)
    (24/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.852877129 seconds)
    (25/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.314362839 seconds)
    (26/309) benchmarking ("sort", BigInt, false)...
    done (took 6.232503636 seconds)
    (27/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.262860501 seconds)
    (28/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.251366006 seconds)
    (29/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.228816081 seconds)
    (30/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.108832976 seconds)
    (31/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.9458977 seconds)
    (32/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.544271016 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.278452182 seconds)
    (34/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.260164894 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.250994296 seconds)
    (36/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.414795469 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.362423741 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.27713808 seconds)
    (39/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.231825984 seconds)
    (40/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.338065667 seconds)
    (41/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.383283433 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.212549838 seconds)
    (43/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.345181448 seconds)
    (44/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.358779407 seconds)
    (45/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.29949918 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.059646109 seconds)
    (47/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.44930692 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.231917381 seconds)
    (49/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.336955091 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.45131488 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.344522552 seconds)
    (52/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.771488447 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.590318819 seconds)
    (54/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.246839786 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.517862596 seconds)
    (56/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.017500017 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.213549685 seconds)
    (58/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.22280717 seconds)
    (59/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.238180703 seconds)
    (60/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.243984723 seconds)
    (61/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.237612994 seconds)
    (62/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.426251608 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.309028458 seconds)
    (64/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.259273722 seconds)
    (65/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.233605634 seconds)
    (66/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.233806397 seconds)
    (67/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.319269536 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.576113063 seconds)
    (69/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.248839818 seconds)
    (70/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.340750229 seconds)
    (71/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.820291422 seconds)
    (72/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.237871505 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.597784593 seconds)
    (74/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.278855621 seconds)
    (75/309) benchmarking ("sort", Float32, false)...
    done (took 5.218529854 seconds)
    (76/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.376451072 seconds)
    (77/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.956013962 seconds)
    (78/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.030069624 seconds)
    (79/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.808603682 seconds)
    (80/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.218449031 seconds)
    (81/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.437043856 seconds)
    (82/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.828357257 seconds)
    (83/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.238722161 seconds)
    (84/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.585389051 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.122199826 seconds)
    (86/309) benchmarking ("sort", Float64, false)...
    done (took 5.489057904 seconds)
    (87/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.608399048 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.416395747 seconds)
    (89/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.47340004 seconds)
    (90/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.417075009 seconds)
    (91/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.976870085 seconds)
    (92/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.793945918 seconds)
    (93/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.541719846 seconds)
    (94/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.262225551 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.454079139 seconds)
    (96/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.25921255 seconds)
    (97/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.240273532 seconds)
    (98/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.517164059 seconds)
    (99/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.603444405 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.293021738 seconds)
    (101/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.559105176 seconds)
    (102/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.523900852 seconds)
    (103/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.276271691 seconds)
    (104/309) benchmarking ("sort", Int8, false)...
    done (took 4.282823616 seconds)
    (105/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.24631403 seconds)
    (106/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.315345185 seconds)
    (107/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.252707704 seconds)
    (108/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.217664187 seconds)
    (109/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.142456316 seconds)
    (110/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.451609464 seconds)
    (111/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.549250948 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.285396507 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.964779806 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.596057015 seconds)
    (115/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.606678108 seconds)
    (116/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.25731679 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.235869745 seconds)
    (118/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.502407477 seconds)
    (119/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.372380887 seconds)
    (120/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.346129592 seconds)
    (121/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.246466894 seconds)
    (122/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.747625339 seconds)
    (123/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.54978891 seconds)
    (124/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.665863826 seconds)
    (125/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.648076622 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 1.766057131 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.276523502 seconds)
    (128/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.415627548 seconds)
    (129/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.280079841 seconds)
    (130/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.337642729 seconds)
    (131/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.836082397 seconds)
    (132/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.511473741 seconds)
    (133/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.763835734 seconds)
    (134/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.439374935 seconds)
    (135/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.224181693 seconds)
    (136/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.645375389 seconds)
    (137/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.337289029 seconds)
    (138/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.644637414 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.979173285 seconds)
    (140/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.578439542 seconds)
    (141/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.522680975 seconds)
    (142/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.2814175 seconds)
    (143/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.452930051 seconds)
    (144/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.23887311 seconds)
    (145/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.392922784 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.499056342 seconds)
    (147/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.24268099 seconds)
    (148/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.252979796 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.704564459 seconds)
    (150/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.30315064 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.634983768 seconds)
    (152/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.564113806 seconds)
    (153/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.862572898 seconds)
    (154/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.965711128 seconds)
    (155/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.264777628 seconds)
    (156/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.2664859 seconds)
    (157/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.354430892 seconds)
    (158/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.776978301 seconds)
    (159/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.587236588 seconds)
    (160/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.26796596 seconds)
    (161/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.303194449 seconds)
    (162/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.019499984 seconds)
    (163/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.220221667 seconds)
    (164/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.601093547 seconds)
    (165/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.221522425 seconds)
    (166/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.956841477 seconds)
    (167/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.503829836 seconds)
    (168/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.604279643 seconds)
    (169/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.067535849 seconds)
    (170/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.779996971 seconds)
    (171/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.242562707 seconds)
    (172/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.220856316 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.380787332 seconds)
    (174/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.964121097 seconds)
    (175/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.349486964 seconds)
    (176/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.055815575 seconds)
    (177/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.240694238 seconds)
    (178/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.507410258 seconds)
    (179/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.707344621 seconds)
    (180/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.255606794 seconds)
    (181/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.448163698 seconds)
    (182/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.524672613 seconds)
    (183/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.263807435 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 5.150889249 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.839788783 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.064634482 seconds)
    (187/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.266968383 seconds)
    (188/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.751745308 seconds)
    (189/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.252377372 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.312371173 seconds)
    (191/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.240603438 seconds)
    (192/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.229382983 seconds)
    (193/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.274955893 seconds)
    (194/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.284918198 seconds)
    (195/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.601662729 seconds)
    (196/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.22302883 seconds)
    (197/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.738943064 seconds)
    (198/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.075747439 seconds)
    (199/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.578821396 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.144755295 seconds)
    (201/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.273669229 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.299079528 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.002095076 seconds)
    (204/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.130722107 seconds)
    (205/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.268401106 seconds)
    (206/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.963641179 seconds)
    (207/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.043587995 seconds)
    (208/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.630547439 seconds)
    (209/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.979607251 seconds)
    (210/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.886084338 seconds)
    (211/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.709201753 seconds)
    (212/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.476150375 seconds)
    (213/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.222908453 seconds)
    (214/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.86987651 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.362264558 seconds)
    (216/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.935244572 seconds)
    (217/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.340435687 seconds)
    (218/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.284741901 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.245313612 seconds)
    (220/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.270828844 seconds)
    (221/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.931352171 seconds)
    (222/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.595232089 seconds)
    (223/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.249646505 seconds)
    (224/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.34867047 seconds)
    (225/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.444003709 seconds)
    (226/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.284281586 seconds)
    (227/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.610509298 seconds)
    (228/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.306693339 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.339078807 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.243566738 seconds)
    (231/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.229098322 seconds)
    (232/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.27156725 seconds)
    (233/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.965840885 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.589532123 seconds)
    (235/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.881584059 seconds)
    (236/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.940662002 seconds)
    (237/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.239802983 seconds)
    (238/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.012314262 seconds)
    (239/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.294151029 seconds)
    (240/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.254310077 seconds)
    (241/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.057320258 seconds)
    (242/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.252858086 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.637749606 seconds)
    (244/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.381694008 seconds)
    (245/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.257054306 seconds)
    (246/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.307654915 seconds)
    (247/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.58598494 seconds)
    (248/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.348633683 seconds)
    (249/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.782749957 seconds)
    (250/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.263773273 seconds)
    (251/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.544944402 seconds)
    (252/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.244672573 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.466875451 seconds)
    (254/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.096268328 seconds)
    (255/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.289813294 seconds)
    (256/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.525007471 seconds)
    (257/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.262922025 seconds)
    (258/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.323970089 seconds)
    (259/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.30407451 seconds)
    (260/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.255538716 seconds)
    (261/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.33050248 seconds)
    (262/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.349557895 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.772823935 seconds)
    (264/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.47564665 seconds)
    (265/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.564968748 seconds)
    (266/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.629307751 seconds)
    (267/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.257706322 seconds)
    (268/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.396049487 seconds)
    (269/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.308855077 seconds)
    (270/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.439481942 seconds)
    (271/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.110805356 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.075136458 seconds)
    (273/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.690999295 seconds)
    (274/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.352614226 seconds)
    (275/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.425935206 seconds)
    (276/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.268587602 seconds)
    (277/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.660873522 seconds)
    (278/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.235487864 seconds)
    (279/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.826445416 seconds)
    (280/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.231648706 seconds)
    (281/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.26602038 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.796867829 seconds)
    (283/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.606244949 seconds)
    (284/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.346500358 seconds)
    (285/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.247679715 seconds)
    (286/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.354965099 seconds)
    (287/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.6562374 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.330664078 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.36520354 seconds)
    (290/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.261774278 seconds)
    (291/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.077439251 seconds)
    (292/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.37641675 seconds)
    (293/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.674542299 seconds)
    (294/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.277607959 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.290356095 seconds)
    (296/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.52018202 seconds)
    (297/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.351071526 seconds)
    (298/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.083434579 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.145587022 seconds)
    (300/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.25639481 seconds)
    (301/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.764003466 seconds)
    (302/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.8364252 seconds)
    (303/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.277168443 seconds)
    (304/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.401340983 seconds)
    (305/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.306829412 seconds)
    (306/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.272484119 seconds)
    (307/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.330136947 seconds)
    (308/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.332925471 seconds)
    (309/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.721113824 seconds)
  done (took 887.702729329 seconds)
done (took 888.867869714 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.281879863 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277554391 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.258833132 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.280172976 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.371379208 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.282038206 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.269804271 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.261593022 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.307332948 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.309650057 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.259765693 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.282616422 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.260474042 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.26000714 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.259632116 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.276904653 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.250286456 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.260891571 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.276357303 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.27024904 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.276523816 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.259720179 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.309186943 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.283820117 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.263523751 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.26381557 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.263468715 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.280167035 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.37213448 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.263362066 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.264571907 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.271611706 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.249589596 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.259539987 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.256104595 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.281455035 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.27274022 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.270589831 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.265203076 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.292892298 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.634290577 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.276329922 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.262792982 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.261923251 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.262170473 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.266508075 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.262125119 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.267954019 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.276338746 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.277327298 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.62111609 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.292246164 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.26539897 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.262835222 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.273726083 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.263129905 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.265955051 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.280585181 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.281481523 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.280306966 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238187322 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.268412595 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.265767844 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.278930714 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.270407003 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.659434048 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.274710977 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.267918225 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.6367577 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.28492382 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.682682661 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.289601943 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.264877827 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.27753604 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.296181986 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.261820561 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.261372503 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.263219944 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.271774249 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.263880074 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.274164815 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.277681584 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.270039144 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.265427538 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.279586283 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.288129348 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.274154424 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.264574147 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.273616675 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.284787027 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.272459681 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.276285169 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.267348547 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.260208718 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.274288048 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.269239799 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.268527847 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.26807864 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.26965572 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.276698202 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.649120582 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.303477268 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.260785767 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.262881627 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.265263959 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.279945268 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.650212607 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.284925719 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.288498886 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.312810075 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.266970144 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.249723113 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.273195588 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.284406223 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.275128343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.269845339 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.262302532 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.243303537 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.65114348 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.299352439 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.268325623 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.265388416 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.283859254 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.268265256 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.263449631 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.25844101 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.268902889 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.281571044 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.387708244 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.27712372 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.298687516 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.266004807 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.270654817 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.291014092 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.284748354 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.298276221 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.269097669 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.28560368 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.282934 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.264507998 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.279526104 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.278139841 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.268955573 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.274422278 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.262654549 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.291218727 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.282210841 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.281703528 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.289161256 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.388957914 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.266096576 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.24423954 seconds)
done (took 214.096852587 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.331140467 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.264640425 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.356876498 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.265896999 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.368597084 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.36812439 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.262812639 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.264632001 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.262859148 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.639667236 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.264501986 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.264179774 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.259313863 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.264293672 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.350779999 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.266553937 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.26204001 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.631981323 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.267188518 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.336144312 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.262595615 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.262699444 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.265787424 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.646397366 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.261986634 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.262740376 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.337378998 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.266076202 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.61055907 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.260076304 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.264020467 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.611132838 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.356557263 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.283749623 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.27705177 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.273491385 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.370184012 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.284747974 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.35062005 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.351159753 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.359015028 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.305936737 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.265355646 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.265639768 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.268647026 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.268115003 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.265449389 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.295499956 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.263856663 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.265338087 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.630933432 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.277505343 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.266208579 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.265426848 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.268640308 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.297915227 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.266991 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.269387811 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.35770537 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.268997999 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.330517448 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.646922812 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.645563813 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.26880195 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.266092792 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.2663213 seconds)
  done (took 144.011005515 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.336363876 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.342343458 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.375895621 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.284628229 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.318899921 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.381773833 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.284820697 seconds)
  done (took 10.507497035 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.275799342 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.270340523 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.318098701 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.318193067 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.269130471 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.415407947 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.270888365 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.27987527 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.267741222 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.322640749 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.27085077 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.270506134 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.278482411 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.269134005 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.31710084 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.281267165 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.384118019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.270356033 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.26974088 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.420478764 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.268517542 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.277727571 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.322029692 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.280913117 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.271518144 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.276532361 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.837573325 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.270367176 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.268437988 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.271040546 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.269052146 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.309015485 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.271668716 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.264532358 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269042997 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.388586705 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.272293451 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.269002259 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.272596363 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.271719015 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.27204746 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.271496451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.273659778 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.270165281 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.271836767 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.294007083 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.273860887 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.27298568 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.27239912 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.272779356 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.323115231 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.271965179 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.26984764 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.269745388 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.328066472 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.279954327 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.273701524 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.270350842 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.274328301 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.270213245 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.422424168 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.319513884 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.27260701 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.321201953 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.274152525 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.273370568 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.273816535 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.274133563 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.327716728 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.273593359 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.321432595 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.270950305 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.429244801 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.296407799 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.275142678 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.275767782 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.275423666 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.273430272 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.272021844 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.27957233 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.271018279 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.275265236 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.279898565 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.271849826 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.272796011 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376839068 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.382646706 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.271610306 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.286957799 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.280343991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.271700248 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.327393046 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.274690812 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.271610652 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.325758909 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.388692118 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.328587742 seconds)
  done (took 147.165657579 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.280098255 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.283362024 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.27647186 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.291483566 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.275794564 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.274984344 seconds)
  done (took 8.871733706 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.277656503 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.275859128 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.276760748 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.276700195 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.27592294 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.276560916 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.276233033 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.277113431 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.279083454 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.27651224 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.276844518 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.278027404 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.278016284 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.276897758 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.277425154 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.276415887 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.276474275 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.275051369 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.277214856 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.277561073 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.372951325 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.280748098 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.276547877 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.277381991 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.281056588 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.277241841 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.284847978 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.278132622 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.27760711 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.282489802 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.295919545 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.279055743 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.278572607 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.28247101 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.281048987 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.278175125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.2806871 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.279873565 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.275744305 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.280034562 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.280808912 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.279131636 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.278573924 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.280464666 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.280058196 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.281502056 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.283571484 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.286734302 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.278338322 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.279796039 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.280311265 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.278585103 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.279640336 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.280337242 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.280506483 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.298976291 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.284655081 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.279998334 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.279439404 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.280390813 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.279791654 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.280033268 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.280472156 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.284148107 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.286831255 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.280281475 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.28015407 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.284417187 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.280100281 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.28048945 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.281855749 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.278468832 seconds)
  done (took 94.439988713 seconds)
done (took 406.17300586 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.571792601 seconds)
  done (took 7.767476838 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.427508431 seconds)
  done (took 7.623751124 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.180267278 seconds)
  done (took 21.380929605 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.340787307 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.381257986 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.276201261 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.27497335 seconds)
  done (took 26.467868631 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.633456009 seconds)
  done (took 7.828742431 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.273861586 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.279292249 seconds)
  done (took 13.750183901 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.638198432 seconds)
  done (took 7.833791357 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.420354106 seconds)
  done (took 7.621809102 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.279163443 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.299487919 seconds)
  done (took 14.02685537 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.256844702 seconds)
  done (took 7.454797624 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.007689741 seconds)
  done (took 8.206147212 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.287509039 seconds)
  done (took 7.486473929 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.331268771 seconds)
  done (took 7.528885384 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.078943756 seconds)
  done (took 9.275355447 seconds)
done (took 155.445794231 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.277136869 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.277241934 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.276814919 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.277110343 seconds)
  done (took 26.306494574 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.318620777 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.318203077 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.317709223 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.327565622 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.320901789 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.316284725 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.310259014 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.310685708 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.328338113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.731679784 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.320221554 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.320231093 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.317876316 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.310524572 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.319970064 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.319174781 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.329392402 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.318726174 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.310799849 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.322022123 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.286640086 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.328863762 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.321611625 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.286225677 seconds)
  done (took 33.210977891 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.807379229 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.355207872 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.438347583 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.337674628 seconds)
  done (took 7.13809422 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.337776311 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.338443382 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.349986981 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.390336448 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.41805373 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.349144902 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.312761738 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.307563226 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.292841381 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.33973469 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.415567997 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.356107679 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.42427137 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.286856231 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.479009951 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.287084497 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.287276911 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.338980164 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.390053495 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.403002448 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.287499586 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.338294899 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.342417265 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.356836223 seconds)
  done (took 33.629445187 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.299453545 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.293864585 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.286725838 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.284913343 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.307933117 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.287219359 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.286642216 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.288000939 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.287288963 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.292604189 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.286782461 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.300169497 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.285277244 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.286783717 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.294152654 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.288140664 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.293227824 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.286757746 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.286472671 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.289816641 seconds)
  done (took 27.013670179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.281083307 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.133919789 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.63303842 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.537396797 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.28068575 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.280639555 seconds)
  done (took 27.349022885 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.355063525 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.503842526 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.289176242 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.631617698 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.73091006 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.311496609 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.28802427 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.523838954 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.828390511 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.81822144 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.347132945 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.3537311 seconds)
  done (took 19.18446376 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.288180426 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.285174889 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.290255469 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.30207858 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.340597728 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.307029803 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.294996795 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.282715923 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.344726019 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.361349925 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.307935184 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.342127651 seconds)
  done (took 36.951218778 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.371096197 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327313963 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.216986549 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.013081145 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.004258257 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.496532628 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.03878504 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.704932986 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.28893202 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559040742 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285811733 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.379139872 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540258075 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.297397046 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.288855969 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.228002769 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.533401914 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765271607 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.291393699 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.130094375 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.314257636 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2864982 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.228118898 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.319262973 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.498145292 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.263272005 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.586330892 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.070448569 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.563573276 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.300613609 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296919291 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287019076 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.559140174 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.936002865 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400722203 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296687578 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.985203642 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.834312991 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.279314202 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.231718491 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.039292027 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.292571882 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.297815945 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.288201924 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.220678047 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.287400752 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.720835868 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.294147546 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.998537246 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.288628446 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.298529059 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.385114883 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.291425003 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.278004794 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300304727 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.293066588 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.284605541 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294125956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854959467 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.612450532 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295922142 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.227062813 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.660665368 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.22367227 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918781689 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.412033323 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.292394693 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.292762817 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.223375747 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.145327788 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.308746345 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437021339 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.314120396 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.939421976 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.977795076 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321868035 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.222878065 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840304686 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.301809011 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.227791376 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.517100182 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.066263202 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.224418983 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.232552667 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.224391656 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.998724511 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.302053645 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.643654832 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.301249593 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.709073138 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.300577619 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306214992 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312900529 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.514364243 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.168367082 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289297871 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.115785737 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438802875 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.312334018 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.712336403 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.226415168 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.293915942 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.546373886 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.502949318 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.295405278 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.246257905 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.504878434 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.306520034 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.311969131 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.298716655 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.304625602 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.849664399 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.322964946 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.616581916 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311399127 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.069319062 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024136661 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295789609 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.396019855 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.301490335 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534680024 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.04298753 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.454831016 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.359182539 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.296424984 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.292219272 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.247578783 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.146157182 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.186458802 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.288573412 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305454307 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.304685139 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.292125734 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.240080915 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.291670703 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.305244924 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.076346794 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.515916736 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.293094821 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588172214 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.227292224 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441202544 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.303023412 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.516080964 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.475150181 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.311092434 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.551372891 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292757257 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.324011005 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.307906023 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.311236659 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.390705065 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.315651832 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.299844629 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.552737371 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.296893489 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.296502201 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.271837866 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.075283485 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.300709222 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.298758517 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.124906461 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.858946713 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.292669853 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.298987937 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.183732073 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.308560134 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.362851128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.299474179 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.305451859 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.055530605 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.13649014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.298607532 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.30339652 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.520884835 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.305968046 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.263688404 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.379939573 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.484263056 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.86344909 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.328385084 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.228544579 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.006140477 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.988145304 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295739767 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.484478654 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.295967819 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303947563 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307081026 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.839840476 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.856266492 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317200668 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.184874403 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.305518886 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.307156387 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.301687847 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.295633181 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.040836956 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.663102979 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.301502266 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.325677066 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439774657 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.309245412 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.231011384 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.813349048 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.303583734 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.297152819 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.07155183 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.331464261 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.168139522 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.767834183 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.556827186 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.978278161 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.309909065 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.358214477 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.333342432 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.297475161 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.149671699 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334251387 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.307315948 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.325816423 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.308689902 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.280635337 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.740288389 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.86650425 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993572859 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.84651377 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.230712001 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.308519161 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.194965926 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724240118 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.234593721 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.954438953 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.481987226 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.740217129 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.245661571 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490965553 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.48795426 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.064499027 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.31182498 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.526538708 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.209494204 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.169314293 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.332114261 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.510023533 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332950592 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.308637038 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.229816218 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.579078764 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.529496223 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.1091095 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.381886419 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.727060509 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.159794794 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.098001995 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.298547217 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.637423173 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485497179 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.931387829 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.687323926 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.306972485 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.303692444 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789141103 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.304890412 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.826721711 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913436563 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.333770295 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.496205563 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.24075569 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.311403206 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.311987114 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.297401698 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.555480383 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.323206578 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.558505958 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.310616069 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.235333218 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.313331842 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.817354601 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.176771213 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.306474961 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.301067671 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059848297 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.313926159 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.582493182 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.309453294 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.030300428 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.324465486 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.236733826 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236941301 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.994732086 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.311680976 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.277989039 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801785458 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.660000364 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.30866106 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333422846 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148437326 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.558254805 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.316857165 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.870814857 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.547602685 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.0917754 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.327519774 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.403253297 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.187500206 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.306511888 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.183713042 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.537867357 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.161335708 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.52712117 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.267898406 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.207559112 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.302627321 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.517361635 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.185504228 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.30435098 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.560923645 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.036435219 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.320168394 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.996259477 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.348374768 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.304129896 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.336581404 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.687358491 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.31402427 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.373990559 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.314461286 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.31622182 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.314755926 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470140831 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316573375 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.310966403 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.319271288 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.400665607 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.664579422 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.043324802 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.097161639 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.878238609 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041744949 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.895726035 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.337907573 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.306046499 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.308568105 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.239765857 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.454713495 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.831027458 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.579657876 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.435465073 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.738202195 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330667729 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.201646809 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.34021967 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.521445079 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.582206179 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.177554257 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.320646989 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.969220687 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.202299557 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318580631 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.519837639 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.808453206 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.881718261 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43259623 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.31440414 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.733229189 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.581995731 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39857961 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.305990428 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900013 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.308008514 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.652935459 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.335245502 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316692211 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.459703552 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.317339112 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95430575 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.336583919 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.467589713 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.080676435 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.308793876 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.568454612 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.758944432 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.324441352 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.882375038 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.014780832 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.575877506 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.378266701 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.319171716 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.417969298 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455138068 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.305449754 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.210936687 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.308587868 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.151738824 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.023475497 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.318018659 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.880531925 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.592231855 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.307315043 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.307926365 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.335696702 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.318828439 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.533459468 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.012551807 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.537976625 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.318746091 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.318270172 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.879545858 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.881848122 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342848749 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.242682172 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.313693113 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.545136262 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.5660608 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.33499371 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.821154988 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.022231663 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864344087 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.287775289 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.332775388 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.323588079 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.998130607 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.885199598 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.070990284 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816720515 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.973794183 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.320408646 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.588096838 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.317998127 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.32076844 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.591007996 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.314528601 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.324063299 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.326205665 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.885075904 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.086796501 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.333808082 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.250343096 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.251353955 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.537111512 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.94148908 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.251157624 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.313023377 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.482086912 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.315901167 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.441488373 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.323121345 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.323202189 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.317110264 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.086367147 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594856626 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.31879804 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.293357293 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.258349716 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.319446434 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.323060224 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.543135773 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318736604 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.988205578 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.662539543 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.569485506 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.321313451 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.297129496 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.317155251 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.313813141 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.030039963 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.283903703 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.847109004 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.895029686 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.330714983 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.328518776 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.318640241 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.531420644 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.525975951 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.314559428 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.330775089 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32814396 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.331983678 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.215144411 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.081459156 seconds)
  done (took 1565.423996524 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.331436351 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.329462082 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.325513661 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.321393431 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.341677461 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.356640998 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.340888842 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.331489732 seconds)
  done (took 51.910729993 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.317225273 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.46846022 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.344847748 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.317798966 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.326864425 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.318092478 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.768559394 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.341516002 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.326857289 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.325586666 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.324245762 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.315134438 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.965324165 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.325083333 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.320503577 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.302555086 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.324111524 seconds)
  done (took 64.966201599 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.327875489 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.883445764 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.403567234 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.316694712 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.300861 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.348250131 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.043691809 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.359581661 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.329234786 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.608418841 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.988890673 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.316661683 seconds)
  done (took 84.461275625 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.323830699 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.323943975 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.325076811 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.32449275 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.324090917 seconds)
  done (took 7.856125297 seconds)
done (took 1986.597421934 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.632547628 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.989666258 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.932037707 seconds)
  done (took 5.156693022 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.46639324 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.514690747 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.635632524 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.657240378 seconds)
  done (took 7.509097191 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.597895697 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.696206444 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.507082187 seconds)
  done (took 6.0370787 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.685636452 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.325695609 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.458796961 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.318684819 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.321136421 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.32079462 seconds)
  done (took 20.198542285 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.323232237 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.325881929 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.322876277 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.325961238 seconds)
  done (took 6.534472366 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.299315888 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.007169845 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.301965872 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.318617761 seconds)
  done (took 18.164385295 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.070494259 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.081962105 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.069623737 seconds)
  done (took 7.459536622 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.319299567 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.169194848 seconds)
  done (took 9.726182287 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.611399168 seconds)
  done (took 2.849258181 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.4545268 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.648360316 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.345731824 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.298702299 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.365897216 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.031797909 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.90173654 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.503621807 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.262418271 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.440741286 seconds)
  done (took 27.492435964 seconds)
done (took 124.462097041 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.068243209 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.692079793 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.52592401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.037190703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.542684212 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.52625802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.538269631 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.008028368 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.594669774 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.544345395 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.085514978 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.542318904 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.483439772 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.699490462 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.482841485 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.56843806 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.543978641 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.197291949 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.775180276 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.92003552 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.536721956 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.678297824 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.913947983 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.743009301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.551970255 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.479175913 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.25239489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.322347072 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.896782725 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.271765439 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.478724792 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.095199428 seconds)
  done (took 189.835553491 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.320816644 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.33787407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.320512941 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.338278305 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.340328048 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.326559055 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.343575508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.343347636 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.32173074 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.332089277 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.323244202 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.3303616 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.325032322 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.340680097 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.324546595 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.322597585 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.34421929 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.335197018 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.327857107 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323981288 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.323650065 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.339165626 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.323638747 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.335382704 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.336527842 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.323497797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.323636092 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.330026606 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.324337944 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.339316838 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.328346266 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.327031411 seconds)
  done (took 203.819524023 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.323045489 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.323815222 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.341082208 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.344740799 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.323669258 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.329072905 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.339885333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.327789435 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.340118484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.332852017 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.324466727 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.339521148 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.325615222 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.324281446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.340106707 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.332233072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.333469397 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.338972182 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.323976243 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.323598008 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.327266334 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.325276238 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.325390958 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.349504696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.336562279 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.325244234 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.330589456 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.326260615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.3414456 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.341930012 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.344118425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.325474449 seconds)
  done (took 203.873636182 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.520971038 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.333084957 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.334613308 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.271178683 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.334233996 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.332915146 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.331148439 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.530574646 seconds)
  done (took 14.233285508 seconds)
done (took 612.997276321 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.581341893 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.291758454 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.534368268 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.35456003 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.095377629 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.371828885 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.354522428 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.519948452 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.233545721 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.526795371 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.586651153 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.367768985 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.73051257 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.352853118 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.601885707 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.451404554 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.213792 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.353841787 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.670754458 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.861507244 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.613870294 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.812345308 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.540043691 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.235108653 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.734876804 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.805335781 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.020793521 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.215291281 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.372195961 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.67098002 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.954124153 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.268056315 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.413983916 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.413238479 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.470043699 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.449230684 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.244367444 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.411216302 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.554967257 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.582922934 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.870452631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.055396317 seconds)
  done (took 91.009728132 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.318902506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.318821744 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.318394348 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.318562202 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.320280161 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.319452752 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.31823 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.318926232 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.318544301 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.317827536 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.319697372 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.321210987 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.319804154 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.320852991 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.319005613 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.318838692 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.320467806 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.321349871 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.320783639 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.319699983 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.320388791 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.319333819 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.320840823 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.319677508 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.320467598 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.320959139 seconds)
  done (took 35.560643494 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.338941082 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.590120245 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.745247107 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.347516653 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.343060525 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.343295812 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.415933798 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.340730164 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.340772839 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.34215327 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.506957747 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.342421264 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.376342954 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.767931196 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.342187715 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.340574612 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.340565533 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.340739433 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.598349884 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.35103033 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.438121093 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.34064649 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.416800768 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.351483105 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.363773793 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.340581984 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.34573987 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.858251592 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.360103725 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.509848961 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.112228881 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.419549619 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.812571117 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.769270243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.116552372 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.346875771 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.34103206 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.515568783 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.344079548 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.340511041 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.417302303 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.342169967 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.753414601 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.962049731 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.3594332 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.342089833 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.877716873 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.532173282 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.577866508 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.353032263 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.777116631 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.347054426 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.343946709 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.343502851 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.578913494 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.35246524 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.341927031 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.870202189 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.365535532 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.416883877 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.349020803 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.342388293 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.607386857 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.347215255 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.596725524 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.348302461 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.352996732 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.361042996 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.756665629 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.349409518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.977488897 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.362450066 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.342593775 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.512048172 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.599235828 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.91765235 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.3674739 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.611055759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.829737692 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.437685682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.352019881 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.848329127 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.442111698 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.352119241 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.347182454 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.346528678 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.345754478 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.391073022 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.417377442 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.911682601 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.992290817 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.892988528 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.443141812 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.360229392 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.345483027 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.874040867 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.365924663 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.34438726 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.752045419 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.98358235 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.362499705 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.354290557 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.987043153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.369157363 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.421382405 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.354520055 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.763431198 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.34954688 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.391362945 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.345110759 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.352303208 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.367732001 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.421417282 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.353231142 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.346221513 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.95343328 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.542894917 seconds)
  done (took 176.91853253 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.339468691 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.340921712 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.338662383 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.355991024 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.339866725 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.347953181 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.339583684 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.339884993 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.344988519 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.340369203 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.339247212 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.341342451 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.341983738 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.342641879 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.351499653 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.346662278 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.953571233 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.340930631 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.353570208 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.340659681 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.132853786 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.344741579 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.353276287 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.34004746 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.342535428 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.34187466 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.344888976 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.343719187 seconds)
  done (took 152.281464701 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.348955833 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.9001369 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.369303814 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.47564791 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.371354935 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.346109239 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.475073953 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.407005656 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.366130808 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.346442168 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.347339389 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.644353991 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.353826815 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.851589164 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.540055021 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.49389259 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.85251632 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.368662588 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.347330233 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.347600631 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.478441267 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.355079175 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.645032178 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.907353148 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.371595592 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.902681753 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.337086783 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.350238656 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.34887346 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.902543511 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.36786592 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.64835165 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.426838894 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.409986965 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.920182233 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.871718888 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.868914795 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.494487798 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.349489544 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.349194183 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.348192496 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.333547247 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.905873631 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.372526689 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.350668083 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.89495423 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.372978438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.352030523 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.35970101 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.349591981 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.407964753 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.424668033 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.665837271 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.909098573 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.442422167 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.374718293 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.478043423 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.736241212 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.353876264 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.851446184 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.333860175 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.906592112 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.370402205 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.337739878 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.351983014 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.3558829 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.497400279 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.483961831 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.853742679 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.368022903 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.850912056 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.513092003 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.354752892 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.349358442 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.35392585 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.907145629 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.870747606 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.513724063 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.48783523 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.543491358 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.340551419 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.351258058 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.337803666 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.426698669 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.356809717 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.908463239 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.87107473 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.369888313 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.353917046 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.354450579 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.354613172 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.523615411 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.929078652 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.445221738 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.84605096 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.667015943 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.65145199 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.354516136 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.411295359 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.368699576 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.65382072 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.3552023 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.409996582 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.800385847 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.654232207 seconds)
  done (took 161.106657566 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.590099109 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.572133176 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.44279349 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.480990596 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.946176753 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.907307681 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.544056147 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.495401017 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.460721717 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.606167016 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.492092892 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.447120553 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.538496349 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.431049584 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.058883047 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.442008057 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.462220062 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.497359078 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.463367884 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.371212702 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.987282002 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.635916134 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.521947026 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.231258094 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.448147447 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.128431418 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.909646223 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.897487707 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.534386513 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.685544572 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.872676099 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.475371819 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.280483007 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.01556221 seconds)
  done (took 65.138593453 seconds)
done (took 683.256800469 seconds)
SAVING RESULT...
DONE!
