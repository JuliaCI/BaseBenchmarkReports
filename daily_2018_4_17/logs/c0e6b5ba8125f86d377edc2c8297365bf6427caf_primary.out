cset: moving following pidspec: 22415
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.391805975 seconds)
loading group "string"... done (took 0.491800849 seconds)
loading group "linalg"... done (took 8.298094534 seconds)
loading group "parallel"... done (took 0.170068018 seconds)
loading group "find"... done (took 2.965378055 seconds)
loading group "tuple"... done (took 1.900710547 seconds)
loading group "dates"... done (took 1.44735887 seconds)
loading group "micro"... done (took 0.196792154 seconds)
loading group "io"... done (took 0.516504287 seconds)
loading group "scalar"... done (took 48.807661771 seconds)
loading group "sparse"... done (took 13.314515357 seconds)
loading group "broadcast"... done (took 1.153338881 seconds)
loading group "union"... done (took 9.088477381 seconds)
loading group "simd"... done (took 2.95093856 seconds)
loading group "random"... done (took 11.074919444 seconds)
loading group "problem"... done (took 2.172932756 seconds)
loading group "array"... done (took 24.46476363 seconds)
loading group "misc"... done (took 1.086869536 seconds)
loading group "sort"... done (took 3.657436223 seconds)
loading group "collection"... done (took 18.822199825 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.61046513 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.132016087 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.206943512 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.281665593 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233896902 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.170922156 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.145406884 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.257319771 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.546113967 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.203600842 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.144428187 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.439553243 seconds)
done (took 6.096261283 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25455836 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.244204118 seconds)
    (2/2) benchmarking "String"...
    done (took 0.167780465 seconds)
  done (took 1.080548369 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.082152077 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.160951574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.112855294 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.099755488 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.098274878 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.114626998 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.099302359 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.114617077 seconds)
  done (took 1.47429006 seconds)
done (took 3.561529743 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.49343196 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.876221486 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.516128196 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.148124322 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.314539949 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.293465968 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.272787544 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.203344224 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.09620403 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.092943044 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.176346495 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.416339473 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.383149877 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.96337412 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.094248452 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.099545882 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.134654177 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.764443713 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.086374831 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.127934675 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.494180834 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.192834998 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.120193535 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.111058314 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.191559977 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139254436 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.166908641 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.108707262 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.674968708 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.139368205 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.182563276 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.104625201 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.166310709 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.189401407 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214771544 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10023902 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.695937532 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.207550928 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.103980935 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.106195726 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.681214307 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.125489079 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.189570517 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.109491899 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.093966121 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.185502022 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.103409433 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.099546844 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.101250634 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.09204625 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.168837081 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.473209984 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11159272 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.178959139 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.10056007 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.692651306 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103594833 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.27653009 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.132969915 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.112401497 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.083583287 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.094848812 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.162462287 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.099701875 seconds)
  done (took 20.244021973 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.15194826 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.1694065 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.084667665 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.161506663 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.127177243 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.103256861 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.090790014 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084543906 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.131708062 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.183332094 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.14377704 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.155740744 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.098581995 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.095671376 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.149717855 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.235169396 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.13032312 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.110765125 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.094698878 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.112112968 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.128662221 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101141383 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.114512323 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.097172036 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.177016539 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.210594585 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.116392761 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.128777769 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096399491 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.099879902 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.147741083 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.148852097 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.097985116 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.094651437 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.193473645 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.116580081 seconds)
  done (took 5.374801356 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.223977283 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.110946582 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.229251923 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.202104019 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.137989766 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.188464505 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.171599691 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257025754 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.187312347 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.184377028 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.123927311 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.135055176 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104509593 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085881029 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.104850209 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.086883739 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.441912627 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.197916468 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.152748307 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.166455476 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.117633676 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.091114725 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.394759501 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.090961588 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.108003198 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099975726 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.068719165 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201409846 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116642442 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.127102372 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.092318973 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.10345955 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.14181253 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201465675 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.14490951 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.129487087 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.116679854 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.089833999 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.091441971 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.232214182 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158420935 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.104559724 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.105962738 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.08536194 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.120615277 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.140677246 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136407646 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098131159 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.128229204 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.225393511 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.092890374 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.13255022 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.020330447 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.203529395 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.146306664 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.091197913 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.296851454 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.132650539 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.106245606 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.113736123 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.779171621 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135027951 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.088318675 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.087676096 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.117082239 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.086200903 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.435294063 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.127662421 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.104309339 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.092722438 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.165471089 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100963323 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.123026121 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091889802 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.109607237 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115711369 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.090572949 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.103481995 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.092887956 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.086411679 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.113960243 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.119151155 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108461079 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.088273726 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.154537692 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.118882149 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.113924914 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.131173911 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.096252372 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.090560238 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135982431 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088735125 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.110352944 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.150363061 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.12166115 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.120113175 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119689293 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.149123173 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.094122279 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.224772922 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.105370861 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130457485 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.106923976 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132906076 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.106719716 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086929424 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108477805 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.086981712 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.087696163 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.169343048 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.093877638 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.087935754 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.111509685 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.100493582 seconds)
  done (took 28.819536031 seconds)
done (took 55.108909702 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.438875947 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.086723725 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.086378977 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.1056279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086970662 seconds)
  done (took 1.555586152 seconds)
done (took 2.285681554 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.323474356 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194971575 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.10942996 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.1919185 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.096400497 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.198816187 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.184426996 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.102328198 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.208805582 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.09197621 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.189231038 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091168997 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.110881618 seconds)
  done (took 2.844427106 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.109040421 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115220733 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.124161201 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10802556 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.090684499 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.107148481 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.123800529 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116129288 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.105029219 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.118033928 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090891179 seconds)
  done (took 1.933399692 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.105558808 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.111479802 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.104629664 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.122673882 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09129316 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10329379 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.119997016 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.115956194 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.103379709 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.117748567 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.090698912 seconds)
  done (took 1.917421908 seconds)
done (took 7.421614248 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.074170672 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 10.173874303 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.172463247 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.215486522 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.353839562 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.239044901 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.562228013 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.159156406 seconds)
  done (took 13.825576 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.17249463 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.119020107 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.10104878 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.098045209 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.119211132 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.099760409 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.10231382 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.098507849 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.117945093 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.101285319 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.097289269 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.116957584 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.100566676 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10294325 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.119423525 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100723216 seconds)
  done (took 2.562361261 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.150895693 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.147850566 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.10539256 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.106336553 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.119685823 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107494881 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108622691 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.122247219 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.1014108 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.102269985 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.127066311 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.105812566 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105698693 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.117426432 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107539475 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.124520003 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.118406643 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107386784 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.139534879 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.107571719 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.106100822 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.120519172 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.107704013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.105946373 seconds)
  done (took 3.5914854 seconds)
done (took 20.711898988 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153417847 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109555452 seconds)
  done (took 1.001093982 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.1471738 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.163192451 seconds)
  done (took 1.053323505 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.117946483 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.098083308 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.142821569 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.109828063 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.114937403 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.099484234 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.122090275 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.115820685 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.099875095 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098729876 seconds)
  done (took 1.866314535 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.103548586 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.10411874 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.129152991 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.142436626 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.123228712 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.102002873 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.103303222 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.118124422 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.105684376 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.09926077 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.11953248 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.117201527 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.103615244 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.133322897 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.104491462 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.120397137 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.108200635 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.102531268 seconds)
  done (took 2.788838766 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.099358185 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.100635529 seconds)
  done (took 0.950964116 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.101660304 seconds)
    (2/7) benchmarking "second"...
    done (took 0.099119461 seconds)
    (3/7) benchmarking "month"...
    done (took 0.116024732 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101107951 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099539468 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.115289962 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099287749 seconds)
  done (took 1.482819878 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.607344346 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.267935931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.359549793 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.117144697 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.152404271 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.354443589 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.153810346 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.112471614 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.128810286 seconds)
  done (took 3.041306068 seconds)
done (took 12.932308826 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.100353575 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.228643605 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.609827746 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.121298541 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.098962889 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.169101065 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.290821325 seconds)
done (took 2.371776113 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.344495289 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.149571601 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.089593952 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.09922344 seconds)
  done (took 1.430900508 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.090810681 seconds)
    (2/2) benchmarking "read"...
    done (took 0.107129628 seconds)
  done (took 0.954482928 seconds)
done (took 3.141193356 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.098120341 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098057725 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.096492786 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.113603816 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.098394301 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099478539 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.145201289 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097198793 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.097187579 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.116607182 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099280079 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097742938 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.115871174 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097618774 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09837854 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09645012 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.115447196 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096973571 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.097057909 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.113803168 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.097551459 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097367255 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.112861126 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097274601 seconds)
  done (took 3.281617775 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.115745412 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100342342 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.117514914 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.102202194 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102844336 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.117564765 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.101969664 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099378108 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.118147169 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100550216 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101456877 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.118122613 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100199506 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.10203845 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115945017 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103173638 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.102978598 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.116875006 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100522823 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102584098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.118470422 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100900083 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102202394 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119254047 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104236832 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102120927 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.11662087 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.100932983 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10063343 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.119161671 seconds)
  done (took 3.984954805 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.10743845 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09625836 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.097262763 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.122965336 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.095688235 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097781784 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.112648095 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097257255 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.099019643 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.115110063 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.101030004 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098320706 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.095184061 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.1163894 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.099962745 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099825143 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.1248691 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.097944435 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095409313 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.117166829 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.102642833 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.096591098 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.115949457 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.100289448 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.098024491 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.095454381 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.115427116 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.098119086 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.101883657 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.115457604 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.102350593 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101564263 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.115346676 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.109851795 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100133299 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.115406314 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.105427471 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096299792 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.116598583 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.097928339 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096586869 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.097532264 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.113962139 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.105094301 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.099724385 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.116576622 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.096226815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.099556872 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.11641335 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.102600408 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095508073 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.112488931 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.10194254 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.101096729 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100985035 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.113168711 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.099942173 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.09603462 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.115944071 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.098922992 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096654615 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.112422953 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.103759875 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.100543543 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.129398348 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.106683313 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096354458 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.116863446 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100811618 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.104558532 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.117382841 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.110228547 seconds)
  done (took 8.327658695 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.111760551 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108309621 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11714695 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.10105066 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101144443 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.099760971 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.123943877 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100126088 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09996889 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.123959941 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100961585 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.100014759 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117395175 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102150754 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.099461172 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.118309442 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.10653596 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101038069 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.11658172 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.102198917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.101183241 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.121367235 seconds)
  done (took 3.146905359 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.240977048 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106079332 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.145552462 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.130223934 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.119717992 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.128964421 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.105172724 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.105800292 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121631706 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10909854 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124347766 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104824046 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.116306657 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124950426 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108924668 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.126425995 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105095152 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.109633749 seconds)
  done (took 3.005882127 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.114068938 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.10184748 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.137422632 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.102549487 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101596428 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.122008169 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108222314 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120993845 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.119982802 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.102426909 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.1077603 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119262697 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102867127 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101651279 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119582189 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103386539 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102662147 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118659536 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.110917278 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.106405275 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.125340072 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110490051 seconds)
  done (took 3.237875608 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116745338 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101670297 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.136253059 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.105342426 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.100713462 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119149122 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107851603 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.101948814 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.125071638 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104963175 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101987431 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.119256338 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.116173956 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.101882655 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.125304804 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.104388612 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101903993 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.119824426 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10285743 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.100643669 seconds)
  done (took 2.992241036 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.178195456 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.133611206 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118212726 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.124607398 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135403198 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.117467503 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.143393721 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118391339 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.11717117 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145784808 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119728567 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.134717546 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127682191 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.123234627 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.134416139 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126392283 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.142857023 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.125867502 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.117100926 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134995052 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129973586 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.13480753 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.125827044 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.116903738 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.135360133 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.119196306 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.134240019 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.12365714 seconds)
  done (took 4.420383225 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.101924744 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.101452485 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.100976826 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.118264392 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.100854586 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.100311997 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.117918044 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10174152 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100940786 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099903768 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.119356436 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.101966325 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099976383 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.117880407 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102221606 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100892404 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118565476 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.101948281 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100886561 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100256213 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.119058568 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102142438 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101132959 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.118547141 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102019959 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101557236 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.118210625 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101554553 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10254223 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100509154 seconds)
  done (took 3.95948425 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.114838166 seconds)
    (2/2) benchmarking "in"...
    done (took 0.111232309 seconds)
  done (took 1.012694014 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.108980662 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116940414 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.119429725 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.103636125 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.108397217 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.102361129 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.128734187 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.108166516 seconds)
  done (took 1.683771575 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.150955404 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.172703202 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.10741058 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112407297 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.171674012 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.161948557 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.143849305 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.106500948 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.119735255 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.09631726 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.165221484 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.095553976 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.103134489 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119030137 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.104173948 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108793694 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.122070026 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.111727222 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.107962607 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.122330775 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108372331 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.106578368 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.124089078 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.112821233 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.096543225 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.125788869 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.106727748 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.132001988 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.100959874 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.103299026 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.11874793 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.10466207 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.106425029 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.125212866 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.105275745 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.153277588 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.129278205 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09996558 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.122561999 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108489829 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.134977584 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.12177398 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.105223509 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.101974099 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.124323211 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.108168168 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.107285631 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.120749774 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.097716638 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.099126747 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.121554955 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.099264601 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.103513853 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.121557427 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104424582 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109338944 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.122727789 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.101398906 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.098558405 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.117229896 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.104208881 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.098900049 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.125263566 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.1074672 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.104251351 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.122551505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.102657828 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.103483449 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.123613834 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.105233194 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.103011161 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.136298 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.105828624 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.107064406 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.127857238 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.104980432 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101095838 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.127187056 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104019495 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.103294807 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.12783698 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.134071316 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.10421073 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.119691283 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.100140104 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110313832 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.124320736 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.107597741 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.096642259 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.130457111 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.105784146 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.105855483 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.115714346 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.102568719 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.098567279 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.12510247 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.098166187 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103184248 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.121887423 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.109873534 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108057959 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.12134595 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.106193423 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107548906 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.12835017 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.104896118 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.165741392 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.1019064 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.099026312 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.125289973 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108985253 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.097761228 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.121388791 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.103264175 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.101907977 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.119113892 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.10872888 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.104104362 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.123565918 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.108135179 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106650681 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.12402253 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.106275737 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.103685576 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.098883838 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.128203262 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.112551112 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.124185879 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.107664467 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105718483 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.103696536 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.123969602 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.108312542 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.100494771 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.128640734 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.102758579 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.102944226 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.125461845 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.109972046 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.104283652 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.120265936 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.104792043 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.13327148 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.10567219 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.108193464 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.123772604 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.100808547 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.097197464 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.123279717 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.101038128 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.106380876 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.129776812 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.101771446 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.106487432 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.101874187 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.133238066 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.102693338 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.129565313 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107883112 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.111488234 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.109550578 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.117423779 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103220064 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.108760904 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.126680982 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.103123011 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.106111081 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.124436626 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.112610687 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.098065449 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.127737538 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.098432948 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.101568999 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.129156607 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.107249917 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.107258703 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.120102371 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.143242168 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.11789869 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.128265532 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.105850917 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.104281289 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.128178532 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104501592 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.107667183 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.130332289 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.119969286 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.101650166 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.123779709 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111714625 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.099869901 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.127973515 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.104192348 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106136417 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.117282651 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.106656292 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.097875702 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.129172799 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108140388 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.109809562 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.129320675 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108232704 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104304011 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.13225123 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.102455806 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109122798 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.117388715 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.110903447 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.11592763 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.131897497 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112660675 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.10678932 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.122991472 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.107383834 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114438428 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.126959641 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107907849 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.106482602 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.11789266 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.100739504 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.111807568 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.127738614 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.103923379 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.107667632 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.126921737 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.10935633 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.104156558 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.118318015 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.111843973 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.109520777 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.120389929 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108650141 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.10275128 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.122540169 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115819811 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.098828934 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.121779674 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.109663701 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110586306 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.126527094 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108283144 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.109028736 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.130659145 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.111213431 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.108021039 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.123104737 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.115718445 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104018334 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.125170495 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105140199 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.109361779 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.099424575 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.128301231 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108634859 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.102321958 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.123245908 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109841339 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110970793 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.132705344 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.104886572 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.110005004 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.132953902 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.112667691 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.103798758 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.132357539 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.102815075 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.099268438 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.123112722 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.100404199 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.107466627 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.122487875 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.111366876 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104401977 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.125001121 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.111178942 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107881786 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.123495167 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.11126287 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.135268618 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.102542621 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.100196182 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.123253997 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.108008482 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.10445596 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.123281244 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.109236156 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.10887926 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.129784817 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111199872 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103519524 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.12622264 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.11354354 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103415767 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.11279991 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.132947588 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.112441411 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.101953984 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.131153332 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.104567489 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.129996429 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.102502657 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.106162736 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.124748256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.10950928 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103649202 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.12457876 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104361201 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.100103106 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.123489941 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.113556927 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.105585198 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.109971744 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.126947648 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106187154 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.1240635 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.104300351 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.112861382 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.124708598 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.113933588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.108378366 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.100431619 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.122084799 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.113135944 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106762244 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.133106964 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.105445913 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.109714144 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135173161 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.111590625 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.107981767 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.137559647 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117934404 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.112072088 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.133117673 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.102066163 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105191437 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.130712086 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.107562992 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.109540204 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.1305022 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.102461728 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.109436388 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.132704021 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.10952557 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.105064521 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.121476068 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.109227403 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.113058804 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.129079795 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.112953078 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.109269901 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.127878009 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.104295756 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.110478433 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.132425891 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.109397368 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.1130393 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.127838737 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111998626 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.104457779 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.132375633 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.110201541 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102692119 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100996284 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.125504513 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.113441926 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101667991 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.133110961 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.11241107 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.103788088 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.12757592 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112721488 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.103720503 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.130421573 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112538723 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.104676501 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.138205043 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.109428039 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.104855115 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.133813578 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114370692 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.101328243 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.127766355 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107465812 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114197838 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.127810048 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.113010676 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108256109 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.133667434 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.111026923 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.111694459 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.133475893 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.114507254 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.10231197 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.134672146 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.112660632 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.11036389 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.125685742 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10911428 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.103242057 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.12711783 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.115607384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.104711064 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.137725358 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.114830913 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107089668 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.126007069 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114445609 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10664473 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.134530094 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106519722 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11009964 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.122639978 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111728682 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.106660682 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.134296711 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.105919079 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.103158902 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.133601205 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.114802015 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111676952 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.130987176 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.116636669 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.102113879 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101877613 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.133279309 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106954192 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.116590065 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.133881969 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.107298259 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.127959535 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.112271466 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.109508124 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114366096 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.124427154 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105688007 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.108497938 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.133262586 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.107824847 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.103841936 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.134217899 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.107808988 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110480956 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.128823424 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.104145208 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107743784 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.138373673 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107770221 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104284025 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.12745376 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115613318 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.10787662 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.126540945 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103564569 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113623901 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.133965957 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.11602312 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.105873646 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.132050503 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.107318601 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.110631791 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.139043896 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.107339025 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109490483 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.129217966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.113786033 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.135107322 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.103969849 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.106990337 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.13949664 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.115145237 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.10975909 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.111445414 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.130525696 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116172311 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116594523 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.133449439 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.103343136 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.103383293 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.129159188 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.10393106 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111557685 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.136692912 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.109081817 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106815777 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.135934496 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113476968 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.111297718 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.132407643 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104836939 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116221896 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.128205618 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113920807 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102535088 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.124481537 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.112794274 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.113716993 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.129383562 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.110835354 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.111407831 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.132674564 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10574704 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.107317002 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.134143819 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.115239621 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.11474501 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.129829369 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.108894477 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.111604397 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.141063137 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.112691956 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.109219755 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.138167155 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116612014 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.110192951 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.130408648 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114624108 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.116268181 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.13316526 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.117326723 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107535107 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.130164879 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.117295483 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.116408923 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.140630891 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11119076 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.103658388 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.13615667 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.109770118 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103892419 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.135129517 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.117437557 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.115582586 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.131493924 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108311583 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.119213502 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.1372426 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111023385 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.107385237 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.129873377 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.114926948 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.107750888 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.135827532 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109030408 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.117145965 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.138069019 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.11778981 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.118671788 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.126235438 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117148164 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.111964643 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.140155304 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.112572875 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104705595 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.126191494 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.11455369 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.116427439 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.116487831 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.138396641 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.113584147 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114524432 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.133561765 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111256051 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.107447426 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.139199448 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115841018 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.111362808 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.134064418 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.110673619 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.111557652 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.134945626 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.116384768 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.116830757 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.134010099 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121097849 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.116533576 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.131134247 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108436781 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112057726 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.134726898 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.112538911 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115356759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.130335289 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.106712571 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115958368 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.139285245 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111832907 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.118530113 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.139115541 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.110817665 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113161351 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.140733583 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.117790907 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.112144296 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.132984397 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.116430597 seconds)
  done (took 69.679664121 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.160140107 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119181522 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.135620412 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.113396331 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.130216276 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137608493 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114647625 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113803628 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.13712519 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.12212984 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.113210523 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.134317285 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128357158 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.155955314 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.129857311 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.144161402 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116157606 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.114328344 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.112299138 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.137510956 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127897227 seconds)
  done (took 3.563064347 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.131112819 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12653679 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.147077717 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128330611 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142081464 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125704749 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.125417687 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.147858079 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.126114475 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.141243796 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.126229747 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122373988 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.142849589 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.12168407 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.143781757 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.12367084 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.127146653 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.142113314 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124579257 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.145759787 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12211349 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.124419529 seconds)
  done (took 3.772196962 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.143874824 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.117972664 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.111879178 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.135472608 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.116075938 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.113307927 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.138995517 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.114132018 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.121316352 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.131011714 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.105422191 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.10910451 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.133828267 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.114268534 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.1084116 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.11288664 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.144839586 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.116534293 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.117759264 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.13771499 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.105631892 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.11358566 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.137101249 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.10557597 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.118463488 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.140360091 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.116940691 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.117618647 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.126470604 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.117660631 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.113923658 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107939119 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.128726182 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.105832863 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.104520206 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.139101733 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.118296547 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113817413 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.136412005 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.106745746 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.115558897 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.139351252 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106921271 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.115787398 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.113691344 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.13112517 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.117812286 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.113842529 seconds)
  done (took 6.640444147 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.143576455 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.181556302 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.11900608 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.151689952 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.151436027 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.122965167 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.142282795 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.151937489 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.11611267 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.142961032 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12946398 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.390961079 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.120243192 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.12116027 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.141327929 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.119740916 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118434751 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.139500087 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.124029134 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.118228328 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.146152265 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119869484 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.148915855 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.126656628 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119610328 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.139405213 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11853408 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.119209952 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.149043947 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.122689644 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.14441367 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.122981603 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.126623405 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.139466539 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.116967524 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.118267535 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.150175496 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.11904095 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.139264025 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.117856969 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.118578529 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142268227 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120989164 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.129203316 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.140266121 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.120162426 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117812816 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.138594141 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.127232106 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.118077695 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.145689413 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.127214086 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.141614998 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.119747978 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120552664 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.149838193 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.122626147 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117014801 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.141477719 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.127207269 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.137487071 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121430108 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.127096506 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.141583834 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.124250385 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.126456007 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.142024766 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120269771 seconds)
  done (took 10.164930165 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.14768272 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.120862206 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.151210296 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.130287306 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.142587429 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.123144588 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.12206886 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.145039036 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.122737568 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126513424 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.144279526 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.233968733 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11921255 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.125383808 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.145296209 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12288685 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.122154414 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.145497147 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.122951547 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121331391 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.145148875 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130779241 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.14277864 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131970954 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.130931691 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.142277301 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.122306948 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.142945726 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13197939 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121451925 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.156744652 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.122409062 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.144658624 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132340908 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.132384497 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.14427926 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.117256467 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.121899997 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.14430593 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123051044 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.139642727 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131756549 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.121691094 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.141610762 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.123369026 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121699166 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.152828551 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.133794767 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.149301509 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129219573 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.121995547 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.152702784 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122741584 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.14421281 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.131117506 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.136298485 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.154215737 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129883546 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.146404392 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.131426135 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.152444319 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.138110372 seconds)
  done (took 9.308363049 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.118053442 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117461367 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.116245747 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.138290489 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117406513 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.116031671 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.137945671 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.118425919 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.117660561 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.115724527 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.140365627 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11649842 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115555226 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.140524691 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.117183695 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.116081935 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.137517194 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.117988197 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117789785 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.116045423 seconds)
  done (took 3.338826916 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.126508695 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133074556 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.141161754 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.124798327 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.119563452 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.147238789 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.120462921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118808702 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.142117568 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120742148 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.126561253 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.149382155 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.119800319 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.123408953 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.150636795 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.123999974 seconds)
  done (took 2.980311264 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.137674393 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.133912339 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.207969574 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.120796973 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.142258508 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.127528899 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.118723101 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.145400291 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.119453248 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124629829 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.146494978 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.124064712 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.119066379 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.143499828 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.120127086 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.121985789 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.140365766 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.12338672 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.119079839 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.205085705 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.122053155 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.144662456 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.121470429 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122148767 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.143652159 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.124483458 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.124808922 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.143521837 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123143925 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.120101778 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.144306926 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.127280349 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.118423093 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.146279043 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.122813498 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.120400422 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.14241411 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.120996193 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.122484731 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.142998882 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.122753769 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.12110502 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.141704233 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.12392722 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.118832809 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.14353461 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.11997125 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.12550779 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.143408921 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.122641298 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.120330927 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.148541891 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.125066735 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.128409734 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.147842224 seconds)
  done (took 8.189617735 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.131061331 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.120950346 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.152730869 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119466025 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.120935781 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.143605964 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.12380739 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.123188007 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.143479633 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.11945828 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.122639457 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.121159791 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.147403793 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.122866744 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.120851409 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.144893541 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.119617422 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.120178922 seconds)
  done (took 3.215560288 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.126137113 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.121930827 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.123627537 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.143820981 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.121362728 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.118795579 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.142125808 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.119575607 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118000723 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.143726209 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.121738717 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.119767241 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.143367467 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.120909394 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.12047357 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.141228324 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.121184748 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119997678 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.118886972 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.143892469 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.12101747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.118152068 seconds)
  done (took 3.693881138 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.131107378 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.201750504 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.126624631 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.211025589 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.117076725 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.114303746 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.14994658 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.117396036 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.131229902 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.14123979 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.116755475 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.138316306 seconds)
  done (took 2.602942539 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.148533245 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.15549551 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.144560071 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122544455 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128653811 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149374957 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125475565 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.147840542 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132995393 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134916441 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148010398 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132281672 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.154831314 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.132981509 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.127749715 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153770187 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125656504 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.14859183 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123458409 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138550322 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.14745397 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133494013 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124623475 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.150851799 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125548248 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.155857179 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134824418 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.157938382 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.127355175 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132435729 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.153083411 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126742283 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.13256861 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161150732 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12120137 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.156079102 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126564828 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.160704975 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132317873 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131635271 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.146422476 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131108599 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131448224 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.154141282 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134062816 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.149171085 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131895373 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124366524 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.148690566 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14505692 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153824078 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134134277 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.151188249 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134449247 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132120229 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.169647825 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136803925 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.157998651 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129885497 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.15906456 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.134758391 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152036716 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.136992858 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135269995 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.153179278 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133685806 seconds)
  done (took 10.176514039 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.162914422 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.121955155 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.150101767 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.137611372 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.155415027 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.127118687 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.126190992 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.150541885 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127401287 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121598848 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.191354663 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125674469 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157098529 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134399427 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.14844829 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128307205 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.126328487 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.155916463 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124582091 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.167577734 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129102599 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.134179264 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.157274798 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134274722 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.161030097 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131727758 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126961133 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150091553 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126956706 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125980898 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.156023949 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.127998839 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.156556056 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.125066111 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133606086 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.150885727 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128101926 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.154754277 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129080575 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130043261 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.158005176 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140576867 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.149038462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129463469 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136583134 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.151205816 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128602192 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123318396 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.152400718 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124372341 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.161584542 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.138349049 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.160691992 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136688269 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126117564 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.151570512 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128669536 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126779966 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.150087955 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130925932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.157620832 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12829945 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.168897561 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128567325 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126829382 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.157713507 seconds)
  done (took 10.201955692 seconds)
done (took 187.338982318 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.166030275 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.205472862 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.163024782 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.200053039 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.11433865 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.147123736 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.169817854 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.166297038 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.136771901 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.115042677 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.11331876 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.114112422 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.204836484 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.113324452 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.112864794 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.139912057 seconds)
  done (took 3.294970219 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.211665377 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.325275863 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126992347 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.141952761 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.121066109 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.117592641 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.1417973 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.120378668 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.117271921 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.148595527 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.118521929 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.113974859 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.149040294 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.115016856 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.117449423 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.141969066 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.125137841 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.117075816 seconds)
  done (took 3.492327709 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.138844152 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.166306973 seconds)
  done (took 1.232410685 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.14825331 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.231577054 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297050215 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.19002569 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.138887264 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.160657318 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.166831407 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.156498794 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.2046798 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.156864684 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.131181296 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.141122797 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.144819973 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.123194033 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.159166202 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.117264174 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.169066048 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134132798 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.131715613 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.143227426 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14313783 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.120908576 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.148083238 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.133209349 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.22030952 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132122908 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.121100744 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.146787979 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.121441527 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.155345418 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.127716261 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.134419982 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.154532938 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.197297597 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124817885 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.193344418 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.126073154 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.118439709 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.156093943 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.120225266 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.144335444 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123641313 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.131853984 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.140956481 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.123339026 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.124636285 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.147283592 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.122970087 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.125392171 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.151208724 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.126800294 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.149082232 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.16974437 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.151601906 seconds)
  done (took 8.998334446 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.898292124 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.161492987 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12021318 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.029590319 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.171381382 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13388069 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.873728127 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.168510279 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.274745088 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.895725348 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.135650593 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.157185052 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.257366379 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.299204402 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.286441947 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.37493473 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.751572174 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133274501 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173096238 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160993682 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.151850482 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.14601874 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.162618103 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.519588106 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.143309999 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.122165393 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.127089747 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.156935174 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.196501217 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.122416759 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.123409018 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.217052434 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.312605515 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.228479681 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120311163 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.142533016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.12210891 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.204735264 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.290588417 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.237284352 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.191464696 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.142121407 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.121020716 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.128475284 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.16390452 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117026447 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.200059177 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.211662012 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.210280315 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125478734 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.13415089 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.155626077 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129259148 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.197558859 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117899408 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.399917603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.383581137 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120580928 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.15122669 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.138836969 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.285822909 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.121465802 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.275082225 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149325435 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.231856352 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120855809 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.856839544 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.203935743 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.143202297 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.129386977 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.127042095 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.150845338 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128685212 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.209985836 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.500631927 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.158452191 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125244447 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.14369219 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228921105 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.146613596 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121526508 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.201850258 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.121637182 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.153162988 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.135275745 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.156339559 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18650971 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.290793805 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.156697823 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131490654 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126055046 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.159436911 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.123101787 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.254354615 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.246179125 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.195520379 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.251890806 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.132003563 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.201622079 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.204103425 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130046094 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.208609544 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.12817667 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.160888987 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12985497 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.240584084 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.178130994 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12674057 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125957742 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.157003233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.154700057 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.151159422 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.132028344 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.208554053 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.580153855 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.204407116 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.11952074 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126410882 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.154997972 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.175288605 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.154094281 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.282168734 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.130668533 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.205928774 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128119277 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.143787241 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.130005069 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.202514637 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.131701638 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.155110601 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130531743 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.153699932 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.276966836 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.239303649 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.16070077 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.269147167 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.220111408 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.131744825 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.212753333 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13127293 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.208479219 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132345454 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.154585274 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123560713 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.852623964 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159105109 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.131670123 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127817285 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.231316314 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121602995 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.148925399 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.12374889 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.119860476 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83258163 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.150064056 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.122100362 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12493759 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.153249074 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130965668 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.129123824 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.153623765 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.199372585 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.266913739 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.136216194 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.153571545 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123771299 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.199607388 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.125383998 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.122760709 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.147929862 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124696845 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.131105319 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.151593609 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126202559 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.213738597 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.19821167 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.249671419 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.656787008 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12264812 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.146875063 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260614887 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.123140986 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.341940712 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.155595655 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.255795891 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.206678471 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122012427 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.381441671 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.20724894 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.230728045 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128473676 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.210696204 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.121748622 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.131042625 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.201499677 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122024029 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.155415466 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.19647994 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.138973328 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.134464879 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.322200594 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.125298106 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.274362625 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121090311 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.212497685 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123700277 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.15458739 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.347691702 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12286037 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.164619949 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.177249036 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.151845646 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124384752 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.698696584 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.123370771 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.159694252 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.131401429 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.25101803 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.207566712 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.155270076 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133339893 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.136376354 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.201688534 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.254214997 seconds)
  done (took 52.687385907 seconds)
done (took 70.626627638 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.28686732 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.197685899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303907655 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.198704812 seconds)
  done (took 2.01408068 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.261934687 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.181725231 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.220405838 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.145448957 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.250151563 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.119691 seconds)
  done (took 2.141350937 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.194207865 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.190859868 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166562956 seconds)
  done (took 1.517135951 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.219969957 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.237506566 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.345136965 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.278502545 seconds)
  done (took 2.130174625 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283739188 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.137756625 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.146277847 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.229191526 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.243762397 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.222368029 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.144058731 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.194257206 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.150446773 seconds)
  done (took 2.753609614 seconds)
done (took 11.518170524 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.373108836 seconds)
    (2/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.311528357 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.220459144 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.301198684 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.390724096 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.217612128 seconds)
    (7/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.389163718 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.134742811 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.316188073 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.179794199 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.222908691 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.179851584 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.20294329 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.328647919 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.245896049 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.14507457 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.132756921 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.268481837 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.358647684 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.22471018 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.154699901 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.131554054 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.255519804 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.274721412 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.175699729 seconds)
    (26/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.175599466 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.221905834 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.142810733 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.122563608 seconds)
    (30/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.21561067 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.155954939 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.202518156 seconds)
    (33/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.19180171 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.105172941 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144925716 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.167871619 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.131288515 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.317014721 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.188167562 seconds)
    (40/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.184411165 seconds)
    (41/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.188934492 seconds)
    (42/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.290679041 seconds)
    (43/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.189768346 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.10473994 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.15998757 seconds)
    (46/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.204354949 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.168401104 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.124779762 seconds)
    (49/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.221990084 seconds)
    (50/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.135262469 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.150305856 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.218868903 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.09972585 seconds)
    (54/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.146651673 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.101285167 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.123987552 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.09973229 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.106199797 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.099139893 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.127364486 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.179109998 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148027047 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.238416455 seconds)
    (64/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.09907696 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.145106858 seconds)
    (66/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.131783565 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.150043405 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.166405969 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.236861166 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.18370177 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.15152073 seconds)
    (72/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.158564557 seconds)
    (73/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.22277103 seconds)
    (74/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.191619564 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.144135746 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.155055157 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.172350484 seconds)
    (78/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.102142145 seconds)
    (79/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.158413517 seconds)
    (80/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.128122335 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.100598449 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.104772677 seconds)
    (83/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.106300448 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.169070272 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.129556553 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.144491517 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.101750628 seconds)
    (88/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.131681496 seconds)
    (89/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.179079227 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.104360665 seconds)
    (91/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.194937408 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.100011775 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.140797982 seconds)
    (94/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.224722029 seconds)
    (95/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.106992893 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.102511616 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131375367 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.149463212 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.133852759 seconds)
    (100/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.100381893 seconds)
    (101/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.099653667 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.159662616 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.208082227 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.174169678 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.140315859 seconds)
    (106/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.161372743 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.152036544 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.104483598 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.101189819 seconds)
    (110/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.160766321 seconds)
    (111/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.177938353 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.13010854 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.106010634 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.102667952 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.133278099 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.132935826 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.134853147 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.153851052 seconds)
    (119/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.147961458 seconds)
    (120/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.100717225 seconds)
    (121/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.102075922 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.129266941 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.107874587 seconds)
    (124/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.10146464 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.235249308 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.134081584 seconds)
    (127/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.153235095 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.10322097 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.154033448 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.126513871 seconds)
    (131/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.099735523 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.153509491 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.148018676 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.149451789 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.162061359 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.134682644 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.100843282 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.100753765 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.132479835 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.141832453 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.107453296 seconds)
    (142/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.159943227 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.103849966 seconds)
    (144/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.12699275 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.131490892 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.153892866 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.127061201 seconds)
    (148/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.106017126 seconds)
    (149/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.100118845 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.126269594 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.102212066 seconds)
    (152/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.101390976 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.129150949 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.132352187 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.10468663 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.133586502 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.125697563 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.133704673 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.124298176 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.106817223 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.151687147 seconds)
    (162/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.101649768 seconds)
    (163/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.107281226 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.102967867 seconds)
    (165/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132603359 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.158592904 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.103862056 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.100986106 seconds)
    (169/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.132699203 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.150986694 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.14646466 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.12547785 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.153024527 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.151229235 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.105710674 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.153230542 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.124342872 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.125594962 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.149953114 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124458675 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.107418207 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.160099216 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.127310554 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.144573135 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.107249203 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1500099 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.108317517 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.103004772 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.131510971 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.131212048 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.108362364 seconds)
    (192/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.106887864 seconds)
  done (took 30.987375999 seconds)
done (took 31.957314672 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227292092 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.151851835 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.133051954 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.133890476 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.226163304 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.140529611 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.17540443 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.135459125 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.142854615 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.160992941 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.124460672 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.146430935 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.159786241 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.202128499 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.163975648 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.126927859 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.124828958 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.173181555 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.149630787 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.149529175 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.22791845 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127328121 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.171150176 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.126180067 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227668099 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128727351 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.133177448 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.162928449 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.148369376 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.13500406 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.162373174 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.126459318 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.148982281 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.177569842 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.12680494 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.135926078 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.153529754 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109293105 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.136396582 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.161722014 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.149665046 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.136115992 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.161320365 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.129180268 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.135795569 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.161398123 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.128428186 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.138808799 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.150758295 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.138391624 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128878222 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.176189989 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.135197746 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.125135986 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.151127773 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.127599688 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145047415 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.152390794 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.148636287 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.126036836 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.126411472 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.154527494 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.137221106 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125963005 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.161466061 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.127198777 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.137563764 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.165767328 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.134816681 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128460281 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.153846965 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.135529911 seconds)
done (took 11.720680711 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.131966298 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.170578987 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.226569803 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.23600854 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.173253736 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.167424962 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.140610842 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.149126022 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.166381245 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145633793 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.162713104 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.184917476 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.232829492 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.142652986 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.140598318 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.166059612 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.138803176 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.134316169 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.233843107 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.149203816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.179354256 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.143427336 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.17933614 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.144258178 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.129820758 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.188725706 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.134975106 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.138750091 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.157524379 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.13950436 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.177510151 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.132644818 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.133465652 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.174956875 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.149724832 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.140856251 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.168725419 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139079055 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.131416324 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.159119313 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.140723745 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.145800721 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.159231248 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.141161743 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.165498269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.146664569 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138434573 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.16890265 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.133597128 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137937532 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.158762686 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158236623 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.14331435 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.174176601 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.142968046 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143256962 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.171345013 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.144293872 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.159201055 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.145497459 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.131547421 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.158073477 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.133901067 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152411185 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.161663695 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.145407514 seconds)
  done (took 11.34335694 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.15135874 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.160195848 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.169248366 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.142446097 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.1622255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.127516669 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.125645844 seconds)
  done (took 2.065505374 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.127933836 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.20986365 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.235204371 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.236098757 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.232886911 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.238682408 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.177807571 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.127487524 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.16000856 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.164943422 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.208462017 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.26448939 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.164741195 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.143163662 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.240161833 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.127375064 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.240716435 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.128767706 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.140776226 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.239255407 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143307923 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.18787941 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.139913456 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.155141531 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.207381283 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.127732263 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.288400714 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.174332471 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.138827976 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.141036224 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.16926278 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.203088837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.237862572 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.142458151 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.166525287 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.208580785 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.23414676 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.14109505 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.250387098 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.159834591 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.206756753 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.169027637 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.143772401 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.14222798 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.17171116 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.197180641 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.175017201 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.142954441 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.141269256 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.243856887 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.137704686 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.237779885 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.138755725 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.169833829 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.139464071 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.143399875 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.178594904 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.142648879 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.244589603 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.144744301 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.237078876 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.236779501 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.210031415 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.239083115 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.152652137 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.238783674 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.23002583 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.142653705 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.135762244 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.170831564 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.21173372 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.169450326 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.140369028 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.22910792 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.145539893 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.241481115 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.21101647 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.169354632 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.14136322 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.131448264 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.168472992 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129197134 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.23087403 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.142698742 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.14029901 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.175043227 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.14085741 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.169517287 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135918444 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.150199005 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.170509149 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.141408353 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.146715577 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.170677586 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.14425838 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.24402232 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.139731568 seconds)
  done (took 18.394965535 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.132412369 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.131365001 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.133842147 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.133899621 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.131264426 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.130028606 seconds)
  done (took 1.866274868 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.166845102 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.143120223 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.179807 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.144265087 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.214122321 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.216327676 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.247355047 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.137422744 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.186770534 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.15239974 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.244009487 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.244711495 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.220160538 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.173032712 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.221524134 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.172415301 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.221871665 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.169509865 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.153223886 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.141353281 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.170819021 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.14689869 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140473412 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.236147699 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.172138639 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.147340297 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136473981 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.181347443 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.152743332 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137642952 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.175426335 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.144826987 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.137226864 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.166480887 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.24866846 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138616039 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140190027 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.173653051 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.147199504 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144697103 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.249792074 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.141233121 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.178299482 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.146874901 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.137151362 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.167658597 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.147981373 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.165382253 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.224606074 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.176122005 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.149351429 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.144045583 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.172951077 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.146513871 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.136177545 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.169375036 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.146156712 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.251191482 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.146244708 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.165765939 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.145725891 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.143678798 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.167249329 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.149109622 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144474053 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.173945342 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.137348095 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.172007244 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.144546002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.144051205 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.174546711 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.145807092 seconds)
  done (took 13.244457337 seconds)
done (took 47.931553906 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.57508141 seconds)
  done (took 2.616381946 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.919247286 seconds)
  done (took 1.963342978 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.037906577 seconds)
  done (took 20.111985869 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.461829358 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.505564745 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.159676513 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.173896591 seconds)
  done (took 3.344727758 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.85093923 seconds)
  done (took 1.91990354 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.305110469 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.286535618 seconds)
  done (took 1.639333765 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.769694542 seconds)
  done (took 1.832188268 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.534379229 seconds)
  done (took 2.585813685 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.31110081 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.269131466 seconds)
  done (took 1.650476068 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.630844359 seconds)
  done (took 1.701926758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.913990367 seconds)
  done (took 20.985012106 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.281988896 seconds)
  done (took 1.353755021 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.310520712 seconds)
  done (took 1.387104502 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.75700371 seconds)
  done (took 4.831546508 seconds)
done (took 68.982317919 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.142897733 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.143914429 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.169717575 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.142844219 seconds)
  done (took 1.659581521 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.149682996 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.145255223 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.174470117 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.14590913 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.150782763 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.17170306 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145350412 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.146515613 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.17110172 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.147716191 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.146184317 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.171690299 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.149216084 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.144510595 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.170138585 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.148997032 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.149130306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.172321035 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.14617497 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.144335827 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.172642517 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.146074105 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.146659976 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.175353694 seconds)
  done (took 4.809291584 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.141175657 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.135905916 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.135910276 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.162707408 seconds)
  done (took 1.649157062 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.152868942 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.156402142 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.182335048 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.152892869 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.155446455 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.183154587 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.144168122 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.141516998 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.173729205 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.153869962 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.188737572 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157744807 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.154622497 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.174705918 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.156259959 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.13970884 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.17647831 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.156951531 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.149501022 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.181237907 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.145442139 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.179850061 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.15061684 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.152637782 seconds)
  done (took 4.938842455 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.216398926 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.155698088 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.203460122 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.188123354 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.206188065 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.1437512 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.199711569 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.151577468 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.150432034 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.174490854 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148987464 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.187906427 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.179968906 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.146941365 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.171966708 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.151496088 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.156370796 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.180133414 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.190148957 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.177783951 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151484681 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.156146872 seconds)
  done (took 4.872531701 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.147894552 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.136316238 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.160318449 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.137651513 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.149318627 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.16605444 seconds)
  done (took 1.988639752 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.135965286 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.130720731 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.131388863 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.160490364 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.134747601 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.130776626 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.158388336 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.133373125 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.131582841 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.159338851 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.131891026 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.130704151 seconds)
  done (took 2.751445228 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.357793816 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.137933827 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.164527094 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.139262263 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.141121231 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.163214073 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.147103343 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.134648485 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.296211874 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.131523309 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.163487356 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.223075209 seconds)
  done (took 3.291796311 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225820543 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178646156 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.30730993 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.370707831 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213704033 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185251338 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.326437777 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.218389585 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201183432 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195418012 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238517094 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186983213 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.207013963 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211577618 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195474208 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.183706734 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217347188 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231202435 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198193688 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.264579506 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.18236983 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228763587 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212477009 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204110078 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16417153 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217446184 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.145286614 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.183904239 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191979399 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218192504 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223446321 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178105235 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165596657 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.2433587 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28010507 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227399115 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.29871398 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159873312 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.225784982 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.214928297 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.28367492 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19799481 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242039512 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180038776 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155924268 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238708934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207751452 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.210897479 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.189906987 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172688404 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234140853 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202868005 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.229383999 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165060795 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.341229829 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189398278 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168457754 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222581327 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212989719 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.254493533 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233665978 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.151103491 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.233537608 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246330059 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23653002 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.198640796 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.18870027 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.182269903 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190694499 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.260099124 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236411783 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185408803 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.256009569 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188157353 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196667455 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.224737343 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17964077 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257195207 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.225178667 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.148475171 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174638815 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189742989 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154276315 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.243533671 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.149310346 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.268736412 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157483631 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.367973259 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24006812 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182765581 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.217123264 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213724571 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189698032 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.202503342 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.13006302 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169642792 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.217180704 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182467226 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186850536 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182072683 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19782067 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.159333632 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207033706 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.151284925 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195152694 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.190341642 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188335864 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225199777 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.158521117 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.234686037 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174739597 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.219117747 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222703481 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219981638 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188059935 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16122177 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.272321716 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194124956 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.194344042 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.199164872 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.252389247 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.20479998 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162645273 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219653894 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219196412 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200780793 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.250962917 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165975447 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161964306 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.194181582 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19620381 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.215644435 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.180327154 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18585228 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.189796757 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.245969617 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.154080497 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196911826 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.236289222 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161216654 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151886613 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194836506 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164135255 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.198630263 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.177315553 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.16571003 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210393557 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190953841 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.223762737 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213281526 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.16199798 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226266484 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163148309 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.222786564 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176668291 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.146515372 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.22850967 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252198651 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15783263 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236177646 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.189791005 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243925899 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227295434 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157366923 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.23908581 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155905878 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.149334029 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215702841 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.226959684 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.188792076 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.2444549 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238480362 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.192642748 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.220344135 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175257184 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222778488 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.23833452 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183975994 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.202570326 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198639549 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225271167 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.149964757 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.151308562 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.187203268 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165885718 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187958597 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166412419 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232976052 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19019847 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.237448139 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.225254496 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166207927 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.248131423 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.153481869 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218154596 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.203757949 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197098273 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.214299488 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.24685923 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233388103 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16884332 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218157495 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.150536403 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154479308 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.192825679 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188673319 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.195427223 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.163737907 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1984918 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.216962781 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229593735 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17398681 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251777389 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221311983 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.257435578 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.150721672 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186674717 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226491005 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222101298 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.216037023 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163270045 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.21718544 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.217378975 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198892958 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248412509 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195765267 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23647316 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249761736 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.193571027 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158313551 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206054619 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188047749 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19692824 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.189330502 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.206418057 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158277159 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210953074 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.166634246 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.197902542 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208417556 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202831938 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203008273 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.215819246 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225925622 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.154733658 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167835645 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.232395918 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201286466 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.134857919 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195112237 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.251021716 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208116295 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18384942 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229074874 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159705257 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.375799888 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212286857 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.23293381 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.163416894 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198104233 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199468066 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.221649302 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188450808 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.243766679 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200652965 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232902318 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.228579664 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.171442672 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190297686 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.176965192 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.210478085 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.16589616 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.209534744 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.18997195 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.203354074 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209836137 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19612861 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198168333 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.235529676 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172421026 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.210709997 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167468587 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278373802 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224377601 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19959462 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.22252311 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.193492648 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242918811 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152831794 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185424259 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.162912705 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.241664823 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161232334 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203550548 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.230294013 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244779835 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230942146 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190988936 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.202597723 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.157439278 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.227113864 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1779079 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246937617 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165478906 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.198510246 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215627049 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.187084287 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161209813 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.219612603 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.305136825 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.20585756 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198694773 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.168817357 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.30210235 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187602432 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161752869 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.223105785 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197000129 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.192699852 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.214527828 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232372099 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170791963 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.221272362 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16547936 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.240390094 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215799965 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224040324 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232253349 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.174391019 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.22155612 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187614142 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23341161 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173853845 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.208747501 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187046221 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.25314494 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.238107798 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.163322487 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225676635 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19755387 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.228450258 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199932887 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.200451613 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211802371 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188157179 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191638934 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197996038 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155421984 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190551492 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.232715915 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189870185 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204025801 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230794432 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16086445 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188265606 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176059659 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223715078 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170902977 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.159303407 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.240523933 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.158822644 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.241116983 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264871957 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160022221 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.226878892 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.176077799 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.19031303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170091502 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172376769 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193912789 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.20643541 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240232914 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.162019412 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236817304 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191720504 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224467627 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185064676 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204364909 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 1.363814959 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.190273642 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219037805 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.211832318 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22294501 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.212122988 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234465511 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.199264091 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208991253 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192573204 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208243161 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.24936055 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222955883 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.195392223 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.197770756 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173516729 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166965783 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.195066227 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181510495 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230000511 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170441851 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.200769851 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.196200188 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.206331082 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.17621811 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.202964462 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226793715 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.213241605 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212251144 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.249321087 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167257962 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234804549 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.233754969 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159490538 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.224409979 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199641145 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.206634169 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179582972 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.196328543 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.168978905 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271093381 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.157818756 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219420001 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203629707 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.230130179 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201847438 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.196854184 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205771632 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201937696 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203579179 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.188899998 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.183037879 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.231041882 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165431662 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.157338929 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.232174923 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217236494 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.196711442 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170574979 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.241912031 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22499962 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.185703459 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164747087 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.337577911 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190243302 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253929944 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.165750551 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.199140606 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175517578 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220018395 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.193951854 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231574243 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.161583893 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191269116 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.176767452 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.216925283 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.173918592 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.229171025 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203315829 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222021843 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215182153 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.195334251 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.283926924 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.204750786 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.202308669 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.14702302 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.192407011 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17202222 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199221922 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173965097 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.245591727 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.273228169 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.194732249 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.209590476 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168080542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.159378843 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193950362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193967458 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212558992 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19867938 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210210532 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.135339508 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170152681 seconds)
  done (took 100.510825488 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198446356 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.189876647 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.202896227 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.256447821 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.232874638 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.323472282 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.262894906 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.279792237 seconds)
  done (took 3.13456516 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.152093627 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.19364226 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.173568602 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.178307187 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.142862557 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.479530472 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.19242897 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.153535775 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.192685568 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.186801129 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.171660794 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.561471156 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.148060953 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.177941127 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.15353011 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.170690158 seconds)
  done (took 4.603721331 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.775358144 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.595024726 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.654721104 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.332426312 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.297152505 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.234509035 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.809589045 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.23093996 seconds)
  done (took 13.114615706 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.191730031 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.18041086 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.45258193 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.313792479 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.205855694 seconds)
  done (took 2.537174432 seconds)
done (took 150.923929815 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.155230345 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.155623474 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.154716976 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.188312548 seconds)
  done (took 1.833162924 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.208210967 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.123683142 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.125384146 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.153930108 seconds)
  done (took 1.808433456 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.460280721 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.123236845 seconds)
  done (took 1.805254616 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.180797487 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.172804888 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.206817639 seconds)
  done (took 1.765733546 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.172136529 seconds)
  done (took 1.364454291 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.151701004 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.156516374 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.270943915 seconds)
  done (took 1.778027646 seconds)
done (took 11.556400263 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.153474443 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.957585379 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.467844806 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.165524321 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.7735846 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.432184975 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.454984066 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.211172666 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.207427848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.17371755 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.163971154 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.720874084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.465850902 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.905706869 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.453157161 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.904868882 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.726599455 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.175528934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.151268948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.144093877 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.464718101 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.14276648 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.144262896 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.175755234 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.723262992 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.452953556 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.174231497 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.918147468 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.142968931 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.178144301 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.434267255 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14315417 seconds)
  done (took 22.088867266 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.151389962 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.198784815 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.182393411 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145319144 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.147206819 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.176899624 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.155831034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.154924345 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.236259488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.143670107 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.197900574 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.144196273 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.148697919 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.176238089 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.168729281 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.173898072 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.148142902 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.147229934 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.182597552 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.147693093 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166267279 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.173878855 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.147851099 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.146935003 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.175407139 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.167036027 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.14429428 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.187792779 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.145052347 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.147184773 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.181121183 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.14572715 seconds)
  done (took 6.464200692 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.192012293 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.209140184 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.184709723 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.182749454 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.224837684 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.147369896 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.260045711 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.182403447 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.240868588 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.149071632 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.164582396 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.175557739 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.18386307 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.176019664 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.169947891 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.144047437 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.178861241 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.148976549 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.152933588 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.177662448 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.166201738 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.143560744 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.177774436 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.147922046 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.144633723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.200724314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.144800532 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.188336294 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.146100431 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.148831833 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.182003174 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.146612107 seconds)
  done (took 6.795078439 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.159348161 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.159358058 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.197429432 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.169829021 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.15481451 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.157533529 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.191610181 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.154500532 seconds)
  done (took 2.560185317 seconds)
done (took 39.107741785 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.167871014 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.163470019 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.162061352 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.189625241 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.222172691 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.183521029 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.160428474 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.149894399 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.18911404 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.163633967 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.144816734 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.183348378 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.163136412 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.15584232 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256536227 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.158346555 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.261904601 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.255904265 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.152912578 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.158172413 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.15190949 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.2610428 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.154660517 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.184043025 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.225501466 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.180631186 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.218003237 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.18737397 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.154545445 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14738707 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.259500246 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.156777662 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.151918127 seconds)
  done (took 7.275423124 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.242690908 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.155657209 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.18845127 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.154560734 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.155036097 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.186606389 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.245024024 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.186392971 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.153913728 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.152764683 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.185515093 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.227509722 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.192624869 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.150827545 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.156388505 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.14383134 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.276960417 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.156418616 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.179565058 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.128312526 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.150809618 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.153576679 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.28887745 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.149706548 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.187891762 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.154566416 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.156922628 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.191784155 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.157031126 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.155732236 seconds)
  done (took 6.589935521 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.161005275 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.169321175 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.205271971 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.220826957 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.21510601 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.16904397 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.173843787 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.202572215 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.176449842 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.148886694 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.196913183 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.183141036 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.164813511 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.19328423 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.153483594 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.16616502 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.202175669 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.150463797 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.156909891 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.199650768 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.171094269 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.166103693 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.204877845 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.157972904 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.147543977 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.190768684 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.159529235 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.163628939 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.191252726 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.164808069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.150959035 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.187058848 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.152314364 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.21430537 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.152459947 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.162537266 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.206129861 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.163750241 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.163012421 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.214969979 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.154522907 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.150393561 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.209128672 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.204068421 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.150525657 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.195957412 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.1618031 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.163066839 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.181062416 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.168502586 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.191032392 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.184522741 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.16961674 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.180990296 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.14983326 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.159292794 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.149783483 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.185357342 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.165584599 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.152762484 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.206740636 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.157119315 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15967994 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.184511358 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.161393196 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.149000757 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.182201167 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.15579028 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.17535204 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.190831369 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.186788909 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.150686933 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.194359683 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.163492145 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.160088723 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.195619076 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.150660347 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.161655462 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.193328611 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.156792209 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.162746095 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.185134925 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.153866035 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.166511002 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.20299109 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.164699301 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.162379029 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.196142644 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.156771101 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.157052422 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.200338503 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.152171473 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.154871326 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.197238354 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.151569151 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.153794432 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.196305734 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.161647467 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.148254647 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.207532976 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.156170293 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.150099949 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.207773359 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.155036257 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.156390415 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.192823673 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.193998442 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.150154013 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.195778898 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.164847104 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.151514977 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.190872229 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.155052249 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.150351084 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.201182811 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.16669715 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.158657457 seconds)
  done (took 21.518005085 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.355991003 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.341437286 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.219548421 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.284673584 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.163654855 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.280207421 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.340039044 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.342450815 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.151121704 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.223482968 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.202271629 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.312203455 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.185970357 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.17985205 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.344919547 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.396048103 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.215254798 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.188426812 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.222142319 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.165072988 seconds)
  done (took 6.356911048 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.172971958 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.185374528 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.20763003 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.179450378 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.161595066 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.201096577 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.152739056 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.204548707 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.163902545 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.162294116 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.186419339 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.168824015 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.163490255 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.199802393 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.168712372 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.182250149 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.190831504 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.157831716 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.172640977 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.189401618 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.139478921 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.176033917 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.194359135 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.173682557 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.170041487 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.198499816 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.152258851 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.156667083 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.191610836 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.16184707 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.156468509 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.202226424 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.162285683 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.141360644 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.198532094 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.169155574 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.158688482 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.187330803 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.157349763 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.155232345 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.199509864 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.167251767 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.160576396 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.134602716 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.205071502 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.146980908 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.166260849 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.197014459 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.144191945 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.170742338 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.196577843 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.167292531 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.158669675 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.2064719 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.159359118 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.167436702 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.196000912 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.167922656 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.156766716 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.183723783 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.151119521 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.155903123 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.19361989 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.16761381 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.164682373 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.203735427 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.168327521 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.152951587 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.189993878 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.157170058 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.156266611 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.199870877 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.172586319 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.162740007 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.192313322 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.165686773 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.161035113 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.164207592 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.163041411 seconds)
  done (took 14.921566638 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.178093129 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.161009281 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.202567392 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.188403513 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.165471135 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.191694004 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.162157927 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.172084297 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.196606107 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.171039344 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.16596534 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.198188618 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.175700201 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.162793524 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.192356827 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.170589188 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.165504909 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.22442953 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.172560311 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.178813752 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.202310054 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.157323466 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.164605849 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.198589338 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.182860962 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.19697998 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.181863164 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.165732439 seconds)
  done (took 6.299631842 seconds)
done (took 64.180511928 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.381173217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.569818011 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.345508219 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.342540687 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.370940134 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.362127455 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.366511921 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.344595706 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.781248176 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.316772753 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.346798803 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.343705036 seconds)
done (took 30.118365165 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.346876824 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913882645 seconds)
    (2/2) benchmarking "String"...
    done (took 1.629159467 seconds)
  done (took 4.782455302 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.335316351 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.335327186 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.584366735 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.333792715 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.352550325 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.334329872 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.335280503 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.357081468 seconds)
  done (took 16.86943634 seconds)
done (took 27.572954045 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.40122996 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.523004826 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.576791781 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.335660779 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.340798936 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.34408348 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.338010354 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.358575721 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.341518659 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.341353947 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.763744221 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.598750261 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.335563658 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.706707581 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.336909534 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.344063488 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.350153671 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.598629007 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.34053497 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.368821557 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.315254038 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.316897739 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.376002817 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.335996755 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.344424348 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.344791098 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.411945597 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.350326291 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.520352773 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.343074513 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.369261413 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.336931897 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.412542689 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.348695495 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.3479707 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.352343798 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.530330119 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.347647061 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.321454769 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.360283517 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.519642756 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.359297278 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.339567578 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.337499041 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.340048261 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.393128771 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.341596281 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.456540327 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.362431185 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.34988813 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.365581103 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.706103707 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.343734452 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.349183292 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.339357752 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.55228795 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.35560499 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.394682113 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.361360664 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.348707756 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.33819662 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.336720305 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.366659304 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.335184526 seconds)
  done (took 152.564228064 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.335039008 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.33533906 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.335236164 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.34157258 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.335741164 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.336207505 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.335194882 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.335723192 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.33772548 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.360362219 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.336607005 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.336431476 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.338758062 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.288957728 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.345720142 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.351957626 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.340242612 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.335894967 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.362394359 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.336151759 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.358490709 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.335899713 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.336792085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.333945407 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.381636381 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.41233169 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.37103459 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.371199715 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.349168897 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.335284673 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.375571283 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.386457653 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964346855 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.207941855 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.350599571 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.359309321 seconds)
  done (took 85.230970351 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.335301569 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.336565565 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.335095333 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.368071973 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.335817375 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.91739068 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.922157401 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.305357904 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.384417591 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.702440196 seconds)
    (11/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.339671985 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.566680591 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.339373455 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.426843037 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.349218368 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.337110197 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.351176108 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.363179426 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.33553107 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.335698817 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.917281856 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.35207721 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.353317776 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.514719327 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.353159414 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369612627 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.729158406 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.336008171 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369666959 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.668275716 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.388639588 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.337002247 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.686851961 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.369066843 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.449171024 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.339177069 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.368760757 seconds)
    (38/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.337424259 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.336295746 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.619586851 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.335938792 seconds)
    (42/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.336154297 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.337122917 seconds)
    (44/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.337094655 seconds)
    (45/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.340378367 seconds)
    (46/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.981730674 seconds)
    (47/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.341798821 seconds)
    (48/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.916493063 seconds)
    (49/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.339804988 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.282023571 seconds)
    (51/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.337481864 seconds)
    (52/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.335828965 seconds)
    (53/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.35999754 seconds)
    (54/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.026429281 seconds)
    (55/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.341108882 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.337661852 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.340425316 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.338014209 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.337788546 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.371552617 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.331890024 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.433230641 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.338884071 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.339781815 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.369719584 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.339108164 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.566210838 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.337129166 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.074377171 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.394109638 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.431519912 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.905149611 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.340011432 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.430587634 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.453110441 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.336032161 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.336098435 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.335518445 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.334649753 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.447148221 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.33682565 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 6.00851568 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.510871902 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.354157058 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.651856442 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.435787613 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.334653496 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.676164585 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.339398968 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.337190091 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.033676786 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429050181 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.335837351 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.336525298 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.334284665 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 6.006956696 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.900850236 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.569202832 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.339534931 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.964151583 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.338838887 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.179432357 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.88113494 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.958903794 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.338531034 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.444706144 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.507130097 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.351956011 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.334520274 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.623468636 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.336802311 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.393496458 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.337306728 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.733603542 seconds)
  done (took 388.668886637 seconds)
done (took 627.702919798 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.227956877 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.175467983 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.31654065 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.186556315 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.171793186 seconds)
  done (took 12.314095711 seconds)
done (took 13.551889077 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.522893544 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.522427992 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.394143809 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.52940871 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.36654944 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.541766134 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.503902693 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.351255683 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.444443778 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.418573839 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.450277807 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.389754384 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.368211927 seconds)
  done (took 20.039695811 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.610464847 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.34632538 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.39922055 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.59199485 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.380232794 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.610418398 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.644082479 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.344472555 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.50023521 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.355603476 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.356391892 seconds)
  done (took 19.377011093 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.620422693 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.343944759 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.401557593 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.602657739 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.381346611 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.622209346 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.645477292 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.345632152 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.498990265 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.386325519 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.354740624 seconds)
  done (took 19.439654018 seconds)
done (took 60.093890095 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.374232846 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.430724219 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.370995943 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.353565884 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.351237754 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.352285682 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.353459424 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.353058434 seconds)
  done (took 12.177257264 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.350423976 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.350291815 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.351026413 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.351144022 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.350993188 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.351453643 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.350576746 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.350394117 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.353481944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.351771971 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.350187932 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.353020033 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.351559631 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.353134404 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.350790023 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.350411707 seconds)
  done (took 22.857435515 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.35539346 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.351684385 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.351687966 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.350377727 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.350902246 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.35175196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.351059019 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.350667732 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.350798595 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.35053395 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.352038995 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.351545704 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.350109473 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.351121753 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.352472364 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.35270565 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.34995617 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.351654566 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.356027781 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.352236446 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.351573769 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.350547157 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.351156443 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.352167423 seconds)
  done (took 33.677848479 seconds)
done (took 69.947942476 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.337239329 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.336085289 seconds)
  done (took 5.909565369 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.409537213 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.408013526 seconds)
  done (took 4.054364553 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.352155143 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.351734036 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.352682403 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.3501082 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.350481522 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.351701119 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.35236779 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.350896743 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.35096045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.350381304 seconds)
  done (took 14.750361771 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.349136356 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.35234685 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.350419851 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.35130269 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.353241968 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.352423798 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.351590952 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.351670799 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.350982455 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.348658456 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.350739309 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.351628373 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.353653163 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.351189088 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.350107083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.351965679 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.351402599 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.351822176 seconds)
  done (took 25.561397763 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.365047169 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.368652949 seconds)
  done (took 3.971400486 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.479474883 seconds)
    (2/7) benchmarking "second"...
    done (took 1.394125989 seconds)
    (3/7) benchmarking "month"...
    done (took 1.454124264 seconds)
    (4/7) benchmarking "year"...
    done (took 1.447553798 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.394754132 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.371826352 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.392613504 seconds)
  done (took 11.17059249 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.352373592 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.559082377 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.681858406 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.934102718 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.351705904 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.355966276 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.239077444 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.358129425 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.358183926 seconds)
  done (took 15.426304055 seconds)
done (took 82.081571117 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.348621877 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.405817314 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.354712629 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.370571411 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.645871544 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.386914623 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.339676287 seconds)
done (took 17.090360504 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.325076263 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.319911344 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.332499402 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.351334854 seconds)
  done (took 10.565553251 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.348806507 seconds)
    (2/2) benchmarking "read"...
    done (took 1.661405239 seconds)
  done (took 5.247755667 seconds)
done (took 17.050441183 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351882377 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.352291182 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.351132397 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.351747848 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.351274663 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.352210701 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.352749728 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.35526337 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.351473338 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.351380535 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.354487238 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.350898953 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.351274341 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351713203 seconds)
    (15/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.352686108 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350881615 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.351712688 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.352963582 seconds)
    (19/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.355050905 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350600713 seconds)
    (21/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.351388066 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.351014941 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.353148462 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.350639015 seconds)
  done (took 33.687020211 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.35484981 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.353743294 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.352554596 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.353010205 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.352191449 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.350888614 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.352476777 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.351904608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.354078765 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.353030254 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.353638854 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.352233184 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.351547572 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.353262689 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354286653 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.355686154 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.353473118 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351057911 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.353302537 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.352579651 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.352057293 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351341723 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.352290876 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.353336095 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.35262641 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351443089 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.352772183 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.353291672 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.352407556 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.352547255 seconds)
  done (took 41.82166637 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.353683824 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.353724233 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.352686118 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.352868877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.3531603 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.352647657 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.353186377 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.351112804 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.353189023 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.35182975 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.353504435 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.352276062 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.353239997 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.354225695 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.354298871 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.353680583 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.35337908 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.354076794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.35445389 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.353845403 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.354158557 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.354007484 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.353205629 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.355754841 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.354618926 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.35272889 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.354604718 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.354634825 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.35315759 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.35463994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.354050463 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.35420713 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.355825438 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.353862144 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.354211229 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.354846889 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.356245564 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.354323532 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.355655348 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.35366077 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.354767623 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.355722004 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.355605348 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.355576658 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.355555582 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.354842838 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.356849163 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.353482533 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.355625543 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.356959758 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.354522872 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.35606643 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.355911321 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.355625276 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.354626061 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.355588151 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.354936993 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.355364991 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.356753035 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.354679321 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.356320894 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.356379502 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.357120367 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.353891365 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.356324812 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.355706267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.356271392 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.357141581 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.356080639 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.356657807 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.357056445 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.357230997 seconds)
  done (took 98.778978001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.35604953 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.356869625 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.356164531 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.35672814 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.355665019 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.355108686 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.357403273 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.355655724 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355308193 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.358544748 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356868303 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.357189202 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356188722 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.356291859 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357755438 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.358615823 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.359035205 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.356248629 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.357699358 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357667877 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.357351478 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.357143938 seconds)
  done (took 31.093163179 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.359194131 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.356971802 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.358410513 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.35875139 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.36295635 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.358586212 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.358153529 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.358849343 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.35756679 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356732615 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357692081 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358511636 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.361430234 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.357833711 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359562655 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.361056899 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.358134608 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.360580681 seconds)
  done (took 25.70424399 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.358170876 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.358836521 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.358343804 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.357367918 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.358816235 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.359201558 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.359499422 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.358424159 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.359669261 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.360479813 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.361475649 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.359810999 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.358142795 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.359371972 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.359102789 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.359687165 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.358658699 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.358315941 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.36056953 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.360791719 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.358215632 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358508568 seconds)
  done (took 31.145413591 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.360435107 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.359492343 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.358586157 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.360666141 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.360802036 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.359791744 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.360813128 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.359118335 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.361019207 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.359912744 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.359688373 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.361308007 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.362054063 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.361592179 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.360973339 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.359714329 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.36035516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.361277424 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.360795119 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.361843097 seconds)
  done (took 28.455490019 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.360946687 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.360804778 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.362253399 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.361610278 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.363156384 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.362375304 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.362173424 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.360965357 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.363306536 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.361092282 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.362353982 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.36260165 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.363663853 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.362424775 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361800359 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.362923575 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.361873398 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363357722 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.36330393 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36412918 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.361654173 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.361452791 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.361973987 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.36342459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.36241286 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.363273375 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363013143 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.363842741 seconds)
  done (took 39.393883186 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.362843774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.363873576 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.362703991 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.362745187 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.362916467 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.363535745 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.363953053 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.363332441 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.364397766 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.363350853 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.365363339 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.36266155 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.362857353 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.365352271 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.366005602 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.364036682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.363654595 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.364951904 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.363964381 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.363999859 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.36546777 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.365745424 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.364435962 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.363390074 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.364261685 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.364210667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36455844 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.363482617 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.363885679 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.363186655 seconds)
  done (took 42.167571378 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.382526546 seconds)
    (2/2) benchmarking "in"...
    done (took 1.38335307 seconds)
  done (took 4.014555959 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.364183382 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.363568243 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.365007978 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.364895854 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.365181886 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.365082044 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.366093202 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.364909164 seconds)
  done (took 12.168679117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.356700235 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.36786566 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.364559087 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.365628395 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.365745684 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.357357467 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.364809484 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.370729037 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.357546766 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.357748454 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.359507971 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.356949783 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.359601412 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.360877322 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.359961621 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.362609214 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.368907694 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.368495987 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.367472263 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.366507433 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.367085752 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.362124819 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364709543 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.370594369 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.35889338 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.366528256 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.366745989 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.370814746 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.361179399 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.366109054 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.36364861 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.370028806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.369250911 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.367704167 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.369115075 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.367448093 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.368785484 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366753325 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.369097109 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.374633058 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.370562938 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.366451568 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.361511782 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.364441417 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.366217706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.37324101 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.368278319 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.367572999 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.359829361 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.363986099 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.371297156 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.361058115 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.371651793 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.366718229 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.36700657 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.372989346 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.378242714 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.361561723 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.362895459 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.369508747 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.376680539 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.371293005 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.369507753 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.375161704 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.36677366 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.368483765 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.373028463 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.376856473 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.370559943 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.368844803 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.371894356 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.379155265 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.3738561 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.374746433 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.370403485 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.370886473 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.363648959 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.37498872 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.371227099 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.374502165 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.377573701 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.371531168 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.367578415 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.368772979 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.366225685 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.374579904 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.371538737 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.372333129 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.362486267 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.37170742 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.379883628 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.370057539 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.363216691 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.36677493 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.367750917 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.373785458 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.362653592 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.365722443 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.37378432 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.372227099 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.371977602 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.364858628 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.369946688 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.378528547 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.372564814 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.3720972 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.378783231 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.365023208 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.375425703 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.379846874 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.373810408 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.364451965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.36855755 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.374477374 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.365675678 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.369851334 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.378972577 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.369348538 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.378565887 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.372104457 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369694894 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.376135591 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.379685762 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.373852946 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.367658415 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.37691437 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.374322013 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.369698674 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.380871365 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.372935298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.373668858 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.371525449 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.381586601 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.367587764 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.377240517 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.367119829 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.376175248 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.374604186 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.373730172 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.371049218 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.372654822 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.36924727 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.374352088 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.377226861 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.380671211 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.371720155 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.380730865 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.372443955 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.372179816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.37437629 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.37863851 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.375630134 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.36804856 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.378152939 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.366458225 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.376980111 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.367763297 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.379314705 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.374485803 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.374804219 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.37601099 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.366498656 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.370675357 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.378995837 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.374392159 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.375378446 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.379884686 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.375862838 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.374625894 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.367679612 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.380159474 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.366561078 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.369384219 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.379220675 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.375848157 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.376326299 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.372280753 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.382941045 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.376756492 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.378268117 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.359600306 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.365000271 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.37330074 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.370131093 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.374870409 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.368344912 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.368929447 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.359151895 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.354155087 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.362435746 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.353535668 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.363267166 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.365405547 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.365857406 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.354286402 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.354138231 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.3431978 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.355227434 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.351329854 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.361114388 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.353186859 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.355189889 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.339969636 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35067256 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.341915963 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.349620653 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.338380622 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.348821329 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.347635194 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.345293284 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.342040051 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.334839561 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33976791 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.345078572 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.342321802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.340230421 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.33597691 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.338993499 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.327493242 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.331595506 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.340376653 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.337233721 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.337927546 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.344989653 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.333927397 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.336967895 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.335594754 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.329616102 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.335380757 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33064131 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.332771437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341745566 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.333713854 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.327223452 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.3353416 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.334452626 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.326451406 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.331339649 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.340745492 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.332170659 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.326176411 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.335065921 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.334436921 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.332462167 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.333441057 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.326696947 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.336959793 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.331135256 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.339569115 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.323283175 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.334332577 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.325332398 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.334298924 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.327948709 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.332720338 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.324855747 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.328387621 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332859988 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.327052791 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319955671 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.330753919 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.327777208 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.324047452 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.315696764 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.326832475 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.324198972 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.323988349 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.322471787 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.319969259 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.325531781 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.316144923 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.325411149 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.318877084 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.333196057 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.338507977 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.327746162 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.32756266 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.326959058 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327558156 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.3284369 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.317782173 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319165518 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.321094177 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.318701032 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.319527809 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.328319395 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.318968249 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.328335607 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.32181899 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.326370463 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.328781584 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.325983049 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.31508328 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.327485123 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.322013756 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.322298002 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.317183849 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.325423663 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.315108754 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.327103807 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.319085136 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.313536031 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.324373549 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.324319164 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.316798774 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.316589886 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.31498126 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.313357008 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.31383463 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.321728612 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.312399131 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.321564476 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.3109871 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.314684879 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.315405479 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.318389955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.324318251 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.308249946 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.319167265 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.315102628 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.306753745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.308006414 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.315387711 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.318432618 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.325586395 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.306195576 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.316383078 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.315387092 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.315022589 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.314737753 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.313823174 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.314722811 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.315015426 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320166989 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.319752994 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.310900432 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.317980372 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.325744819 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.31555576 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.314662619 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.307580879 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.316220876 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.325262991 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.311243556 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.314315727 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.31104198 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.317882972 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.315990175 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.316745424 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.318508838 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.316609153 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.31885144 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.321620229 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319681606 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.317773038 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.319659357 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.326579056 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32126201 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.328391389 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.310980539 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.323528097 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.315972255 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.311693568 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.312392679 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.313916861 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.319659487 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.311038672 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.321039522 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.3166129 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.312845434 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.316807145 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.323421878 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.310072261 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.316078815 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.325679678 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.310182538 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319874823 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.317335156 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.309165776 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.320527359 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.318729073 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.308087376 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.313169117 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.313903867 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.32096004 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.311617764 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.320598078 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.311724299 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.320581194 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.317934625 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.317602284 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.319714032 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.31825582 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.310915588 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.320778566 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.319201037 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.328354288 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.313672751 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319078353 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.314992563 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.32297575 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.329396486 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.313758511 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.324962434 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.320004785 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.312236773 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.316153567 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.323912094 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.31293291 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.323213324 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312118011 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.314535582 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.315050337 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.321362118 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.322288447 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.324583632 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.313537354 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.313826445 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.322868748 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.320625012 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.320833662 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.316112663 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.327135503 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.313939118 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.314779656 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.322338272 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.314267847 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.325801419 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.312911558 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.316210345 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.317216373 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.323607712 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.320250251 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.319952972 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.312150277 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.316005136 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.325357039 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.325718479 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.315845313 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.315604831 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.323915695 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.314903939 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317317097 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.318403486 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.316240486 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.316816625 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.324592305 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.315111373 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.316718169 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.315844037 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.325065509 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.324673955 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.321757446 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.312391945 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.326209129 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.328164581 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.327032711 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.312389475 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318018299 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.308766209 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.314072614 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.313117159 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.306913229 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320327037 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.324536887 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.315656522 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316322892 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.311033295 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.305011876 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.31559822 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.312744156 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.310291284 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.321621184 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.308602953 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316783871 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.311827308 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.307630904 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.30245717 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.304428885 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.305257389 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.304390241 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.310290626 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.305614617 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.313526233 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.308416567 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.313335128 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.307244962 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.312110359 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.310102425 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.301603563 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.311669209 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.300300619 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.312145969 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.313564477 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.307809772 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.316116001 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311171169 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.301035498 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.307925409 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.311675209 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.308574286 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.302630413 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.305947338 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.312403698 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.32404484 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.308751294 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.302931836 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.311586617 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.315917209 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.308410599 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.312663381 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.302853298 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.32122221 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.322246215 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.306001733 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.305384102 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.314887055 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.317802442 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.315043415 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.310621207 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.304392862 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.309859752 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.314268085 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.311295325 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.316465183 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.319355204 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.302441504 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.315925838 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.303263373 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.305354276 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.312413366 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.319324771 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.308335013 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.302531859 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.316464704 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.317742552 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.309898915 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.322727471 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.314373865 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.310602549 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.314920574 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.303869984 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.310823403 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.308153943 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.316210163 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.308631326 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.310556991 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.311410754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.302031806 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.309904838 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.320474992 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.318055288 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.307639084 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.302480204 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.305141947 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.311248179 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.311365708 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.311995812 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.310555888 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.309768351 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.312008118 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.303731206 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.326541541 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.324894762 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.314624018 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.312319248 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.309761812 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.31218961 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.315909583 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30585287 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.314965411 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.314171757 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.311289632 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.308463402 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.320840654 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.313596479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.308133734 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.310793576 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307764792 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.315870581 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.321595971 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.328911292 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.318063342 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.319442816 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.3135215 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.315209332 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30774875 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.317349032 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.315313114 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.306666779 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.310821993 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.319975034 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.312152837 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.312471112 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.305650115 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.317602775 seconds)
  done (took 797.516351875 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312848481 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.315171895 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.313452459 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.318871941 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.311190295 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.316713739 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.317401991 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313616343 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.312420911 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.318471301 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.313577014 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.314985712 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.316297111 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.315992234 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.315162426 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.317097963 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313167643 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314549051 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.317254616 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.314992143 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.315923162 seconds)
  done (took 28.820453572 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.312946888 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.316386954 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.317306836 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.317643677 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.317378403 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.314665875 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.316386181 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.316455368 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.317318861 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.314452598 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.317962862 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.318651564 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.316144827 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.317086114 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.317728483 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314772688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.318589144 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.318419513 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.318715568 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.322101596 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.315483974 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.3163049 seconds)
  done (took 30.173982616 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.315905319 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.317789304 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.309681368 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.319479924 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.320947401 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.317702065 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.315563975 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.317852452 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.317544267 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.309611219 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.314039021 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.314707854 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.315659039 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.320975071 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.312297283 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.323478743 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.318895726 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.314232819 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.319441957 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.318397393 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.324879646 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.331003661 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.318360914 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.30915057 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.323144302 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.319637231 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.318392053 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.318295931 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.310892769 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.320632782 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.319307661 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.313301722 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.319397121 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.31927471 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.312588396 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.322711254 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.321752353 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.319175547 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.319782917 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.320741161 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.327294786 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.322360493 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.322399162 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.333476314 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.320110147 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.314667257 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.32765227 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.318772837 seconds)
  done (took 64.50275976 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.320335641 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.322098063 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.319026538 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.320827861 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.324484729 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.322175398 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.323374049 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.321491849 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.319715346 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.31805089 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.324162395 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.321356463 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.321238973 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.324226067 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.321766038 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.323997396 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324667757 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.320228367 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.323361573 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.324246991 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.324905919 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.323885624 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.32317324 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.321539978 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.321124822 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.322313 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.323249009 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.323593393 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.323817129 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.323751348 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.320552226 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.323640391 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.323480594 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.321690575 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.325949336 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.321040223 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.3211129 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.323884432 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.32463803 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.324878495 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.321013294 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.324557189 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.325174067 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.327294043 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.324998305 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.324252193 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.323700372 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.322198654 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.323154023 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.324114847 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.327459023 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.323406546 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.322231513 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.320471288 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.323764518 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.320016847 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.325772178 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.323501198 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.322905181 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.324372695 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.322787796 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.323596421 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.324266887 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.322958006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.324946356 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.326120629 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.324818334 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.326411231 seconds)
  done (took 91.180531271 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.3260137 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.32358249 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.323905793 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321431354 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.321662797 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.323787299 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.323807588 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.326261186 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.326269719 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.323854435 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.329651881 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.324525448 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.323564918 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.323792486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.323043295 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322987649 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.321930304 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.322152726 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322487633 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322090655 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.323931739 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32359993 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.328204793 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325371558 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.324151844 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.325417598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.327229982 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.32419685 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32488047 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.325435822 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.323279773 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.32534371 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.326954112 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.324944362 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.33088649 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.326153571 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.324572669 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.326224286 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.326608087 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.326357577 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.327002398 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.326159664 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.323579646 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.32656423 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.327200812 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.32779863 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.327858644 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.327737662 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.326794146 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.326969185 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.326515789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.326270433 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.329304454 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.327878634 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.328876963 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.328766424 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.327255872 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.32694404 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.32966931 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.327200237 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.327613476 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.328875909 seconds)
  done (took 83.403312424 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.328918169 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.328949042 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.32903928 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.330240669 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.328134415 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.329143193 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.328068582 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.327855671 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.32852531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.329834176 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.330314406 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.327154462 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332684366 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.331050041 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.329385349 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.329606273 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.32917922 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.329662472 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329145232 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.328245801 seconds)
  done (took 27.79358493 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.329064298 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.329033179 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.327826817 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.328538091 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.328916211 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.332804594 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.329615561 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.33000221 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.329612002 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.330606806 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.330407149 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.329051316 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.330614473 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.329025643 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.330715108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.331096057 seconds)
  done (took 22.486622296 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.330505431 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.33151544 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.330511287 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.330586672 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.331185042 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.330109307 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.331510953 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.330955827 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.331236434 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.33515348 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.328732164 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.331319397 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.332242333 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.331074278 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.33045398 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.330027786 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.330297246 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.33082874 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.331967382 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.333122832 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.331964851 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.331321073 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.332330035 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.3320077 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.332404752 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.333170027 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.330057555 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.332673846 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.330652273 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.332203749 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.330842083 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.331368643 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.331785147 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.331495676 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.333654832 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.331377891 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.332175032 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.332124113 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.332757228 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.331942886 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.331823078 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.333523161 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.332947732 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.33288125 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.333962446 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.334924137 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.332698094 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.333306303 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.333309846 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.333918227 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.332607359 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.334538827 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.333250005 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.333169926 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.334422621 seconds)
  done (took 74.474172703 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335620529 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.334019324 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.332645991 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.334939631 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.333937 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.334369288 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.332174043 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.335324237 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334413432 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.333102654 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.333549908 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33364511 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.334132236 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.336541114 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.33310961 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.333621115 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.333919604 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.334246867 seconds)
  done (took 25.226255571 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.33402733 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334591937 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.334353809 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.33397871 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.335435132 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336033687 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336413796 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.335777743 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.335243061 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337002133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334192603 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.334627687 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335048495 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.338508348 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.335152072 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336081992 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.335336864 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.336234975 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.336248727 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.33741346 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.337592365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337016622 seconds)
  done (took 30.600151506 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.326043948 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.326428972 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.326107132 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.339605679 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.335677589 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.325994899 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.328012685 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.331765153 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.342315662 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.347375703 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.343575978 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.332702139 seconds)
  done (took 17.221845691 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.336463639 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.335961849 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.338000652 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337484203 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341203764 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337439483 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339059774 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339042085 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.336722043 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338177876 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.337855364 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.33818182 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337040118 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.337634185 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338351522 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.33764795 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33746289 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.338948101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.337481754 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338407982 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.338724375 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.337616518 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.338072145 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339721974 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339516335 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339455344 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339286471 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34232678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.33785565 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340290668 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342055086 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342150389 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337701177 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340191885 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.338546182 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339273217 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340544986 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340069596 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.338776449 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.339794429 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.340614048 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.337829539 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339781319 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341687868 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.339098757 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.338595607 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.341677319 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340729049 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341229466 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.340089427 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340391512 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340544049 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34231866 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.339392948 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342000555 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.340899448 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341049552 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340079395 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.339545836 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342128433 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.339856475 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342176997 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340764882 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340245338 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339813696 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340256458 seconds)
  done (took 89.620760157 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.340442787 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.340290746 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.339605856 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34008818 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.339892757 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340333309 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341864894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.340751979 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.345084537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342718238 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.341036638 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.340821763 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342466058 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341960925 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.340143975 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.341789116 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.342199077 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.341701953 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.341360476 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347558042 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343443248 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343544396 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34128442 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.342645794 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.342069843 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343038427 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342891606 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343416793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.342995144 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342404219 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345033446 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342894992 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345343893 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.344460933 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.342714532 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343213927 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345959298 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.344399639 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343236005 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.342972093 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344623244 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34620062 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343607188 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343116135 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343192277 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343846998 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.342637192 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34444939 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.343342717 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344520986 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.344307128 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345920685 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34400611 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343977202 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.343936575 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343632158 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345738842 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345583452 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344608871 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344537574 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.343882483 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345192481 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.344433203 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.343960234 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346043884 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344590857 seconds)
  done (took 89.876268177 seconds)
done (took 1862.566820347 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.501864887 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.456128021 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.334217303 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.348341913 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.33133264 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.335771058 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.344425277 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.332608432 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.334640733 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.335492714 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.336248233 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.526860895 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.369702342 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.335034887 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.334837442 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.431990654 seconds)
  done (took 27.210762244 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.359951426 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.355217214 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.458140156 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.351267947 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.378260058 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.53569339 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.41257456 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.353822944 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.521891058 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.366781307 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.351871094 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.372937961 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.352620968 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.350336913 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.369475118 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.532918887 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600135808 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.344044014 seconds)
  done (took 29.59225244 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.78338088 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.354397734 seconds)
  done (took 5.37769822 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.372608215 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.35171374 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.351399311 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.350053884 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.346430749 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.346084349 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.349123914 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.3432391 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.372110883 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.475219424 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.355003688 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.364975864 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.349408945 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.355714138 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.360029663 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.397879902 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.496018112 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.363159092 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.35918947 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.36334775 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.351371243 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.444538048 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.393367624 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.363061675 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.471664352 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.346769704 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.355784716 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.358532664 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.472943961 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363819578 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.354754078 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.353071011 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.356039581 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.288049123 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.882539341 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.346979622 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.377931222 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.366865924 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.359806127 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.489618165 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.355514622 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.360295654 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.346328067 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.876583884 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.468182323 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.469472591 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.348292381 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.357518185 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.355553136 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418640734 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.356291471 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.355244787 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.410856509 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.161159615 seconds)
  done (took 86.398605708 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.398716266 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.34517796 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.533262362 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.376640456 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.352026091 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.351667676 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.350895072 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.624498347 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.366131766 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346232071 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.668850355 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.971323733 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.347710787 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.409964535 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.389435562 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.408398725 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.365737722 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.353595599 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.351121883 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.350305513 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.914144144 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.351751181 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.350557767 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.442978505 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.386164484 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.890136287 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.3604024 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.353942201 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.353458385 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.345658935 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.936360927 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.36083773 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.424246973 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.351095068 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.63645292 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.742825164 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700481305 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.358066243 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.382848703 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.347836008 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.374656213 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.882008406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.731896341 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.35073375 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.349863215 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.879296256 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.351565529 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.352057047 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.357789643 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.616633061 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.351422851 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.350474563 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.360483605 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.351049056 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.348843398 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.403130907 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.404669682 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.892036844 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.349519593 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.351074099 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.357470298 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.35138748 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.355380255 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.352134683 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.35188491 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.726067859 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.61180013 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.351442353 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.722862265 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.930208098 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.352645694 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.018218419 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.365217906 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.377731439 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.397157422 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.35031695 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.352901013 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.889226123 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.389532789 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.348531419 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.700763009 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.358024505 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.662639383 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.369755392 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.354721655 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936408032 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.361742761 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.391829892 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.352433894 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.354061885 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.353288873 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.356610764 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.641184338 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.397591953 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.353018028 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.353396702 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.368176515 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349844692 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.366415046 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.361623187 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.998991363 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.364043586 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.354233505 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.375112879 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350753137 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.356948872 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.356585069 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.355499105 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.634022503 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.353881855 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.368481569 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.355135648 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.351225255 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.35663642 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.453548323 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.358410925 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.666392158 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.35984648 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.354954489 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.360145488 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.359091962 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.368839293 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.352122434 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.376517986 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.355301146 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.654520698 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.373730908 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.368026333 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.355525407 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.351421821 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354886658 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.368178159 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.405581775 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.354280134 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.151711749 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.362034859 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.365631742 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.351180535 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.364556827 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.354303319 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.361365502 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.353421341 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.650494971 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.646690854 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.605344734 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.354250606 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.35687972 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.173276585 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.383976939 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.537233903 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.377644936 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.352094276 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.63762545 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.582582679 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.353164352 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.353105213 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.356446861 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.633801776 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.357170994 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.688555985 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.963396179 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.35894001 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.354783843 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.153696756 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.169872569 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.359010556 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.362204314 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.655736666 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.375289015 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.354623403 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.355858392 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.355315254 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.357589832 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.363913416 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.360895503 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.354740797 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.35576439 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.645417608 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.551114513 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.375692344 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.356080564 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.895465626 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.380267618 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.35567724 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.36209338 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.357871189 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.35517072 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.412229948 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.359456389 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.370391238 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.356659629 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.357273298 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.920153977 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.359113398 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.377673656 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.550420851 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.103047245 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.359312284 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.356613078 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.360997223 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.414171259 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92713449 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.399709115 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.670401552 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.3604312 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.396964548 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.360548369 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.373240184 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.927684795 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.367001406 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.361870332 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102026789 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.361649418 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.836891797 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.355445399 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.357560383 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.029882767 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.361717625 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.358543748 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.35737373 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.373211339 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.679405474 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.361059528 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.395783463 seconds)
  done (took 503.930378572 seconds)
done (took 653.732446954 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.359621814 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.361974734 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.36207399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.362294703 seconds)
  done (took 10.693579108 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.378257641 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.366465005 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.376674382 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.366730087 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.380618676 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.366153143 seconds)
  done (took 9.48535009 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.358579484 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.360149748 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.362318023 seconds)
  done (took 8.330418922 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.567047464 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.375070443 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.715834032 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.374673395 seconds)
  done (took 9.284521085 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.376782769 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.377687911 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.377181442 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.381171831 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.379564794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.379443552 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.381250512 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.382408307 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.378640671 seconds)
  done (took 13.664928924 seconds)
done (took 52.708659142 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.341135263 seconds)
    (2/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.344563287 seconds)
    (3/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.454070668 seconds)
    (4/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.544582816 seconds)
    (5/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.342891158 seconds)
    (6/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.434531605 seconds)
    (7/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.794632367 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.40170593 seconds)
    (9/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.339066904 seconds)
    (10/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.688593119 seconds)
    (11/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.588261755 seconds)
    (12/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.4661379 seconds)
    (13/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.520805876 seconds)
    (14/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.466741045 seconds)
    (15/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.576535287 seconds)
    (16/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.612295581 seconds)
    (17/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.481441567 seconds)
    (18/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.391560315 seconds)
    (19/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.600360797 seconds)
    (20/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.591578551 seconds)
    (21/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.471961164 seconds)
    (22/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.398507066 seconds)
    (23/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.348522381 seconds)
    (24/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.525399681 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.451176641 seconds)
    (26/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.580296923 seconds)
    (27/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.349130219 seconds)
    (28/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.371137186 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.521411895 seconds)
    (30/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.449174372 seconds)
    (31/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.390634646 seconds)
    (32/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.354501132 seconds)
    (33/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.45009477 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.669594115 seconds)
    (35/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.452090346 seconds)
    (36/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.476272822 seconds)
    (37/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.40136324 seconds)
    (38/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.460706799 seconds)
    (39/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.347397595 seconds)
    (40/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.47723035 seconds)
    (41/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.624495076 seconds)
    (42/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.534431812 seconds)
    (43/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.347996424 seconds)
    (44/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.78736223 seconds)
    (45/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.441809238 seconds)
    (46/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.442334164 seconds)
    (47/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.48489382 seconds)
    (48/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.487581288 seconds)
    (49/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.43471743 seconds)
    (50/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.437066397 seconds)
    (51/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.345913383 seconds)
    (52/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.569644215 seconds)
    (53/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.34755731 seconds)
    (54/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.47723775 seconds)
    (55/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.718717083 seconds)
    (56/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.346511961 seconds)
    (57/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.346102942 seconds)
    (58/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.393277243 seconds)
    (59/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.361653715 seconds)
    (60/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.491078169 seconds)
    (61/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.46836368 seconds)
    (62/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.531595904 seconds)
    (63/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.35178359 seconds)
    (64/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.352160507 seconds)
    (65/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.502750584 seconds)
    (66/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.400796015 seconds)
    (67/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.456583518 seconds)
    (68/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.465720292 seconds)
    (69/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.525513454 seconds)
    (70/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.4939796 seconds)
    (71/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.617907386 seconds)
    (72/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.449235356 seconds)
    (73/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.348450952 seconds)
    (74/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.348830679 seconds)
    (75/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.372313517 seconds)
    (76/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.525285394 seconds)
    (77/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.45852614 seconds)
    (78/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.430721989 seconds)
    (79/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.43038226 seconds)
    (80/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.52870563 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.3486067 seconds)
    (82/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.5914977 seconds)
    (83/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.347602866 seconds)
    (84/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.467213416 seconds)
    (85/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.477304688 seconds)
    (86/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.458758694 seconds)
    (87/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 1.649921092 seconds)
    (88/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.618242885 seconds)
    (89/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.348937688 seconds)
    (90/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.538508835 seconds)
    (91/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.486001018 seconds)
    (92/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.349755097 seconds)
    (93/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.52377707 seconds)
    (94/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.358872572 seconds)
    (95/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.380686627 seconds)
    (96/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.605970069 seconds)
    (97/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.410066615 seconds)
    (98/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.487944165 seconds)
    (99/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.407318816 seconds)
    (100/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.383750907 seconds)
    (101/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.400909681 seconds)
    (102/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.40647826 seconds)
    (103/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.673678586 seconds)
    (104/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.445408537 seconds)
    (105/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.384772282 seconds)
    (106/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.488592699 seconds)
    (107/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.478589997 seconds)
    (108/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.525691619 seconds)
    (109/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.40546091 seconds)
    (110/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.579613093 seconds)
    (111/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.443156978 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.552428683 seconds)
    (113/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.605478078 seconds)
    (114/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.45325748 seconds)
    (115/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.354478441 seconds)
    (116/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.414420283 seconds)
    (117/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.450754041 seconds)
    (118/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.376653513 seconds)
    (119/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.536667907 seconds)
    (120/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.454675271 seconds)
    (121/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.619263842 seconds)
    (122/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.537306015 seconds)
    (123/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.353657591 seconds)
    (124/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.451218259 seconds)
    (125/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.588500914 seconds)
    (126/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.40942644 seconds)
    (127/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.531422432 seconds)
    (128/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.373242805 seconds)
    (129/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.373144185 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.624057138 seconds)
    (131/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.35334962 seconds)
    (132/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.497866466 seconds)
    (133/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.469924944 seconds)
    (134/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.500612392 seconds)
    (135/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.519286177 seconds)
    (136/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.439079181 seconds)
    (137/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.350149452 seconds)
    (138/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.367621283 seconds)
    (139/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.517527547 seconds)
    (140/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.38651082 seconds)
    (141/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.59200074 seconds)
    (142/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.412797285 seconds)
    (143/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.436666118 seconds)
    (144/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.380242436 seconds)
    (145/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.410088728 seconds)
    (146/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.378815371 seconds)
    (147/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.526567247 seconds)
    (148/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.488917206 seconds)
    (149/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.353303342 seconds)
    (150/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.361202031 seconds)
    (151/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.509428378 seconds)
    (152/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.356176609 seconds)
    (153/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.436485555 seconds)
    (154/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.488067607 seconds)
    (155/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.35407268 seconds)
    (156/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.426656156 seconds)
    (157/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.386016114 seconds)
    (158/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.553365712 seconds)
    (159/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.433671011 seconds)
    (160/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.731974992 seconds)
    (161/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.469591898 seconds)
    (162/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.355155987 seconds)
    (163/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.541797678 seconds)
    (164/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.615534046 seconds)
    (165/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.414899781 seconds)
    (166/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.41032363 seconds)
    (167/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.500883507 seconds)
    (168/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.352241189 seconds)
    (169/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.424625364 seconds)
    (170/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.442392893 seconds)
    (171/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.48699353 seconds)
    (172/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.377618122 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.509199453 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.45648624 seconds)
    (175/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.585873961 seconds)
    (176/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.522165755 seconds)
    (177/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.494362403 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.486086975 seconds)
    (179/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.488255928 seconds)
    (180/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.563497849 seconds)
    (181/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.554026107 seconds)
    (182/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.446602847 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.530212323 seconds)
    (184/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.576013693 seconds)
    (185/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.676052972 seconds)
    (186/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.490164456 seconds)
    (187/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.62397067 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.616296212 seconds)
    (189/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.40576728 seconds)
    (190/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.614290238 seconds)
    (191/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.53348979 seconds)
    (192/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.682726657 seconds)
  done (took 331.867875115 seconds)
done (took 333.118201497 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.403451795 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.480893217 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.38239407 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.381041612 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.383234622 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.384251694 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.406759064 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.382357941 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.396043576 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.396693855 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.382900053 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.392394872 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.398859124 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.393220044 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.415463191 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.385557647 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.381630182 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.391753639 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.39720134 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.399615227 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384751518 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.387108323 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.409611581 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.384294776 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.392168694 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.390861763 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.389891236 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.390187727 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.392711888 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.39886694 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.382021734 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.39162383 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.402411599 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.396216118 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.385927388 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.394357584 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38502009 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.482421159 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.404908012 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.395293962 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.391568509 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.401509754 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.390462704 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.392114489 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.398815274 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.412533539 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.393799184 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.40051659 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.38326508 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.383171375 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.407166411 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.396452678 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.39366903 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.381811017 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.379534036 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.398750395 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.395796008 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.406643779 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.393702884 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.387001611 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.418283303 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.406236486 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.398444761 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.392942695 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.392639861 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.400885755 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.397838714 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.400098959 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.394525135 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.388069344 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.388858788 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.395345584 seconds)
done (took 109.804283686 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.508213423 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.38038364 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.539312838 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.394544224 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.554345151 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.514288584 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.393151993 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.393588821 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.394394165 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.185630365 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.39742648 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.394003581 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.383051808 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.394545892 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.512289213 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.397164347 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.395244836 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.080763775 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.396053586 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.520741134 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.382417498 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.395948079 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.394220333 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.187880569 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.381440215 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.380371261 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.520779606 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.395440474 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.087771153 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.379048538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.382017359 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.084760093 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.523601575 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.413850877 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.406572803 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.401869421 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.557801218 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.400739551 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.512945574 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.515439009 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.542450103 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.435656533 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.380672268 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.386351849 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.398494881 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.39474484 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.394294295 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.426204045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.38612341 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.398251998 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.083736146 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.407054267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.40623375 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.396322965 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.396551034 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.415406129 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.398630012 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.398522505 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.523972342 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.398126315 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.513094508 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.189608293 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.185488607 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.398427173 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.38476028 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.397483779 seconds)
  done (took 112.136368167 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.45654778 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.463817172 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.502588243 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.390617984 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.440697255 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.503181529 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.391703222 seconds)
  done (took 11.417667371 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.395009436 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.397070141 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.436832 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.437714641 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.400365869 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.562847165 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.398702452 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.401192737 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.399642268 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.439216968 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399814846 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.400183417 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.409362136 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.389613321 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.437074426 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.402202836 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.50898349 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.391970038 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.400120642 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.545973814 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.400400687 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.41063543 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.441536079 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.402012681 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.402942482 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.398236017 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.175029587 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.400918781 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.401210208 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.399929735 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.400760214 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.456488226 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.398723394 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.389973902 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.400524368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.505770657 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.400286734 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.40072726 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.401525963 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.39279184 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.40089889 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.402082039 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.403748152 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.403957607 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.402684151 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.415609766 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.402525579 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.403747244 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.401711415 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.401968223 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.439857232 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.401043895 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.40131643 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.400892767 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.445236607 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.409562197 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.402054226 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.403174297 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.402734232 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.399574985 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.546416945 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.439561312 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.401556425 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.439170475 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.401729761 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.402460293 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.403831532 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.402816665 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.485353551 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.401207405 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.439375787 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.401766273 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.575192395 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.418620323 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.404910551 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.398265623 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.397562999 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.402934665 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.388299207 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.402955258 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.403974315 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.396817629 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.400529415 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.402902472 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.403623259 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.553042603 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.500712025 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.403606085 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.410556199 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.402127037 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.405155559 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.447955952 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.404048135 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.40487401 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.444453826 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.514272694 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.448789581 seconds)
  done (took 143.852099343 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.406984942 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.408067053 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.399854878 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.425209198 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.396685379 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.39837282 seconds)
  done (took 9.711150847 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.396679366 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.40769423 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.405118698 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.405626283 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.404561951 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.405571507 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.40452017 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.396827468 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.410289445 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.40717601 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.409598435 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.407861399 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.408134104 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.408562407 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.405967509 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.405050695 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.407920122 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.405731872 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.40673288 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.407510452 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.396156472 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.407557508 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407370575 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.401949353 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.411749609 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.406274631 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.422186021 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.405992928 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.407730637 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.402035978 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.41430931 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.408170572 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.398531354 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.402055828 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.410682431 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.399048069 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408706731 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.407547589 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.405923695 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.406442724 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.407609192 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.407826194 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.406224765 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.408200707 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.39792399 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.402384171 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.410590207 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.422449069 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.40924233 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.409329077 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.409339621 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.406122737 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.407330248 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.409000673 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.401542027 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.404451181 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.413509352 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.405732483 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.41007042 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.404129768 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.41219958 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.409806174 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.401041947 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.413519203 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.407943084 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.408495929 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.400643102 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.412447697 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.408029842 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.408323241 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.409172132 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.407353432 seconds)
  done (took 103.578387654 seconds)
done (took 381.962315314 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.722114631 seconds)
  done (took 3.998957073 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.410571255 seconds)
  done (took 3.691860424 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 22.172254581 seconds)
  done (took 23.458668358 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.474300421 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.473732285 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.402625565 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.402445436 seconds)
  done (took 11.033531265 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.684816983 seconds)
  done (took 3.96507273 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.404514565 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.417266572 seconds)
  done (took 6.10506844 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.624116669 seconds)
  done (took 3.906235861 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.633518591 seconds)
  done (took 3.916742081 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.415981968 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.413613538 seconds)
  done (took 6.124587293 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.382437228 seconds)
  done (took 3.665381628 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.931599231 seconds)
  done (took 22.214811124 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.418910261 seconds)
  done (took 3.70755719 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.43029543 seconds)
  done (took 3.711713954 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.055410677 seconds)
  done (took 6.338796422 seconds)
done (took 107.118900672 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.395684315 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.395266986 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.395371781 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.394416584 seconds)
  done (took 10.860026625 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.474955604 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.47770501 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.485456985 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.470158233 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.467644598 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.478946036 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.439781578 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.439797127 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.468531469 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.464983262 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.484861476 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.47164589 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.478263903 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.439427265 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.464594959 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.481304763 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.469634968 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.486509538 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.439008306 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.475796301 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.413983678 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.471293401 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.466556523 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.414224899 seconds)
  done (took 36.408704831 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.92245642 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.474836705 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.55915945 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.452563857 seconds)
  done (took 7.690990819 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.518366342 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.519285154 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.534800395 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.573063518 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.619893936 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.531165882 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.443550645 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.436603346 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.422632171 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.519175651 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.598309112 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.516476696 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.732869288 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.415917089 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.733016019 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.415390708 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.413615162 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.518863269 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.568270068 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.597215623 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.415143725 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.519352219 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.523799729 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.518265996 seconds)
  done (took 37.889223233 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.4235558 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.434064545 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.416548497 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.430354571 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.418983682 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.415988759 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.419001393 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.423905314 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.419649554 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.417158566 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.417441041 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.433298203 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.417234846 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.4169557 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.424496026 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.418923271 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.419402339 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.423529916 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.426813935 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.419212044 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.419061977 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.424432022 seconds)
  done (took 32.565482609 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.400431331 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.401892644 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.751991975 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.656988389 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.403157657 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.399072554 seconds)
  done (took 14.29887642 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.47623247 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.620605138 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.409656623 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.767486905 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.857476124 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.410850415 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.408466048 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.655744576 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.968924952 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.966897215 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.458583655 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.482110081 seconds)
  done (took 20.770947441 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.416795495 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.405052528 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.418085952 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.419446661 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.463757698 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.416387474 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.41547996 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.401316618 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.468142562 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.468885964 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.416078614 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.462851165 seconds)
  done (took 22.461132315 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492945559 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.412875209 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.425907124 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.420229979 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.415201964 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.410715229 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.415114098 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.144614628 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.424522825 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687700557 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412459524 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511999405 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.65794161 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413650374 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416487774 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.385446011 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642266498 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.909571723 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422549477 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424101787 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450411733 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.426259258 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434189344 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.625643943 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.420097299 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.412778329 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.680250242 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.413530326 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.707045181 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.682197678 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.688504642 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.420687439 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.69340424 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069509002 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.521902582 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62141046 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413828893 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.43073747 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.385033925 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.432536682 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.418568754 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.420065491 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.68087245 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421899409 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415837889 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416907252 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.157251138 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.427070604 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.415536618 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.417633232 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.681549179 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502296727 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.418519126 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413971057 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.485464337 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418562118 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.421517325 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.534874019 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055484064 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415553154 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424962959 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.420587921 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.408769618 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42472651 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.074334411 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.427784438 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.422175562 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.42139315 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419748851 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.415846129 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.441880206 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417853661 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.438259835 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415705946 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.197043135 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.424099516 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424973567 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.967706955 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424456798 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.424237905 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641171054 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.417667063 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.42044992 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.418715717 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421559641 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.168827732 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426966207 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.386535294 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.478566375 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.152823899 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.636140354 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444717395 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453113443 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.638922523 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.386060051 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41885685 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.418167402 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426053995 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.439973959 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155833066 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426709071 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.423701025 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.667166155 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.633126624 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430252887 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.395318571 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.906482151 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422085762 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.445503943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.422428547 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.6338587 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.057318408 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.699191189 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.429979187 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.459479043 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.421827623 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.229842727 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424486053 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.431832058 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.421034746 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708843402 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.259423125 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425390812 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.493685591 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426392408 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.423861086 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423973574 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.4269568 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.425385576 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.60779303 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.426078706 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.694910424 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.427521241 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423771558 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.424129309 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426895608 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.429178598 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.644510935 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423510348 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.707153125 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.422705707 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424211509 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42361195 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.637885583 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.421432133 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.432187822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.761248737 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.421901138 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.425259733 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.697940086 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.460839532 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534008901 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455628668 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.425010891 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.686417622 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.429229654 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.428017741 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421832449 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445701985 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426668666 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.429745802 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443643367 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.059062531 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405701895 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428597668 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.424532941 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.437669177 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.498600294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.436033532 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.634783382 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.439060697 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420327552 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.435466198 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.425059211 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.652575187 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.695962779 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.433231876 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.603469648 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.907179757 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.058477056 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.444200869 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.424119959 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.426381367 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.425846212 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.425044828 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.427726475 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.42906271 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.638146088 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704852513 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.441539732 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.075336286 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.434068501 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.424541618 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.436781671 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.696100063 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.438199547 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426705562 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.425609759 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443810296 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.438216967 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.703119119 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.653090916 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.440739912 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.429629022 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.98779835 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.432668139 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.428534024 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.427488586 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.452023998 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.425190942 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.337353606 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.770433749 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.421826179 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.702320958 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.436267456 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.448631439 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.426453209 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.426834403 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45214882 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.436159543 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438748681 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.638309613 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.435632525 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433330588 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06721173 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221901226 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.005882189 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.449979941 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.43739878 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.431456896 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.171395307 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431667128 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.427072781 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.67922357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.171479243 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431611011 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.913647841 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.432395138 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.214615458 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.702896952 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.661568425 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.445962033 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.442287296 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.708222968 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.646528749 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453679806 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.437646237 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.433452017 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.39817739 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000395011 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.436718082 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.613694034 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1690093 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.43654967 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.434464542 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.427948777 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.431718662 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836080876 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.434283989 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.429103717 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.4453132 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.433121959 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.341525252 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.439502492 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.432037303 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093211789 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.452044794 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.922414766 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.434023585 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.642041043 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.706564536 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.681148532 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.444610495 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.448729178 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.677995203 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.703746925 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438000674 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.429794232 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.032274833 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.292681565 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.439801436 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.431484399 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242581416 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.431497327 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.732696452 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.444485266 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.451108102 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440914311 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.431784644 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.430980245 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.431497688 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.437449475 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407286311 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929513842 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.438795748 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.445552771 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444722819 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436267905 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.679412937 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.447568725 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.067788645 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668898985 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.424401185 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.485768764 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.436691453 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437669276 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.407493039 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.435791917 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.435400044 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.470559562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.659454526 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.432244753 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.405974919 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.448154482 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.64759074 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433720565 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.440505969 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.662702225 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.438427109 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.443729939 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.237733572 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.468151764 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.438912989 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439650662 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.438159537 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47402271 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.505173211 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.647031993 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.710812338 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.712475861 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846027749 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439294601 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439390403 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.448777312 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514581788 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435515061 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.439238633 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.438159501 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069767077 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23832321 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.088273666 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.712951208 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440232833 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.446996444 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.436968445 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675248918 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.434935723 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.710902364 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.436217195 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.446134573 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.461767615 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.437422626 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.45396498 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.649490888 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.708101283 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.435896545 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.439192064 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.440159319 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.439033633 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.71312037 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.651958125 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941044114 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.99316014 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.435268067 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.444161172 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.187579314 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.71759473 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438932611 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.437917101 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.438246584 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.45538579 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.442731485 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.449389401 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444825848 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665450653 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.706860526 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107343071 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.712891836 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.658212025 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.35519785 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.43906021 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.688282908 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.268955475 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.650879024 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.086734708 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.18710018 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.695521235 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.514017142 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.650463111 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.442530526 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.675824631 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.442490536 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.443312974 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.439855655 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.440806364 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.43888446 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.709870833 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.089993075 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.697189764 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.444386505 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.443210419 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.473010928 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.65481517 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.663874282 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192927412 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657537318 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.715921592 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.450668252 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.440731845 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.097146384 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71993741 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446728266 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.446777055 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666743524 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.445683246 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.478807703 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.33965471 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.443825017 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002308947 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.651349068 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.46157589 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452795876 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.199439809 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094078562 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.447289007 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950350809 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.447516797 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.452390143 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.721390089 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.451230793 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.44596387 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.725708037 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.449034564 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.442310764 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660576128 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.083724547 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.236047296 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.469832032 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.447900228 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.449079009 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.443678017 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459081352 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.446419591 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.444022688 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.850170737 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.445604024 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444466634 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455589434 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.454639771 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.454301068 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.445357578 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.44131321 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.449816097 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.431223384 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.42560253 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.453271166 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566885654 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.022935127 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456397416 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.059281159 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.77955842 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.689576709 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.449723462 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.416629041 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.450853229 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.447779644 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444446452 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.44630198 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.433465418 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004430898 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.44934548 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.721157023 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.456488367 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.653416266 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.653669329 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.451837807 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.663780828 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.45574573 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.469582945 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.414030866 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.445019863 seconds)
  done (took 1010.206790802 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.442321665 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.459642339 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.462127687 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.451205232 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.446605596 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.468839158 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.477942888 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.524619324 seconds)
  done (took 21.053864223 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.434061548 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.448498671 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.438398582 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.451168762 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.437841934 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.999865766 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.439181039 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.448427602 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.457173056 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.450540134 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.439617144 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.131845856 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.448955105 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.434899647 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.456498677 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.450296453 seconds)
  done (took 33.688248462 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.30251357 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.517511253 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.27682097 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.468912365 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.480775904 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.444328166 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.65762052 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.438836702 seconds)
  done (took 26.910108149 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.451425985 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.448611218 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.454176214 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.450477336 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.449793287 seconds)
  done (took 8.575189456 seconds)
done (took 1284.66463627 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.455855395 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.456232224 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.457277011 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.454227967 seconds)
  done (took 7.143482659 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.419526016 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.420979758 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.424558171 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.439100261 seconds)
  done (took 10.023655495 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.160596304 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.996464293 seconds)
  done (took 5.479594856 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.003230702 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.000055532 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.001240701 seconds)
  done (took 7.327520493 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.735840917 seconds)
  done (took 3.059320463 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.432951594 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.443720368 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.18534796 seconds)
  done (took 8.387846506 seconds)
done (took 42.743073121 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.457353169 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.208895191 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.593460473 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.453567103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.597908919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.599539764 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.690019457 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.440220021 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.439281843 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.44343429 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.453313245 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.600289368 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.679614325 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.203057563 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.676281477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.205155841 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.628026173 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.438544422 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.468945289 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.441304782 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.69055041 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.444063342 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.450478518 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.452920081 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.609483706 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.586575292 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.444298106 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.205608121 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.442905378 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.456561475 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.590640208 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.441319946 seconds)
  done (took 84.853292738 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.445126466 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.456492364 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.459204443 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.445200367 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.444887277 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.462033517 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.441440328 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.450098407 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.452182908 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.450793599 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.444510141 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.442430699 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.447911574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.440345477 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.442141686 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.444231384 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.444394872 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.44999566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.449830294 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.444529404 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.447075722 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.448517097 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.444439344 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.447743473 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.475565141 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.44886104 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.470469327 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.454806814 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.446852685 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.446012504 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.472748192 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.472994512 seconds)
  done (took 79.764333764 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.449679393 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.452501207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.452681136 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.449722103 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.44459742 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.458041619 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.452365435 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.45109677 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.457476049 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.465274103 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.452508377 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.456991073 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.45214456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.450632889 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.449224077 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.448036888 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.461492609 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.460654342 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.464253947 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.4485916 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.451928497 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.463679934 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.457380811 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.459259883 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.454787964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.467815112 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.463233614 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.454419705 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.452006397 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.450708929 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.467114095 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.469241383 seconds)
  done (took 79.923826459 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.690109112 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.462239146 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.465665729 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.459970096 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.463409255 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.461619649 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.459794067 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.696444096 seconds)
  done (took 15.494189257 seconds)
done (took 261.359363251 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.459716134 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.97100703 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.493977719 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.460759167 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.47851585 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.487939178 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.681265346 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.488270608 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.689966426 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.48331026 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.479585026 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.458116134 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.292449683 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.611753829 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.294679189 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.403544659 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.371058823 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.458249732 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.040984556 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.755513523 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.490022469 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.453528712 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.29029738 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.387239225 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.438993951 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.546044505 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.55922769 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.696342148 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.628000825 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.541956381 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.9854143 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.464429076 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.464770226 seconds)
  done (took 67.138997161 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.458178001 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.465396575 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.464009197 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.469394046 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.468111078 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.470268873 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.455600261 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.468069784 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.464708756 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.466564305 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.470447176 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.469106771 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.467852852 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.466000525 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.467379684 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.439281474 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.454350386 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.466447399 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.457193456 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.438165577 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.466978585 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.467694696 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.470077123 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.469821724 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.465203166 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.467132377 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.468183452 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.467031976 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.470587201 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.471976149 seconds)
  done (took 45.264435651 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.471142552 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.034084869 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.222120503 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.46633124 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.45921498 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.461030205 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.761439188 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.474208764 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.463690712 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.459127241 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.957918675 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.475643319 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.492121023 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.228262393 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.460347189 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.471734863 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.468345994 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.459901385 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.042735821 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.471939992 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.758460667 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.475036741 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.763344149 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.477579156 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.462948984 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.463240714 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.465962856 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.283908007 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.483975883 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.954109213 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.286089246 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.759340443 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.242400857 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.271751087 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.288726505 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.475224837 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.469882635 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.955481226 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.469708666 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.464771297 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.762728895 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.463159471 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.23013496 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.160041877 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.484093595 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.471861173 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.315863634 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.966133689 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.721492974 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.474523686 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.270911295 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.465601214 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.47144372 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.464225218 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.714639795 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.47013407 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.4628522 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.331149753 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467244709 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.763371355 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.475137064 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.463269344 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.048561852 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.467955657 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.043196878 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.465406472 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.469190366 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.46633534 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.233566766 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.465240007 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.178867846 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.482554921 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.475722252 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.958850303 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.042573734 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.351766733 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.4684754 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.053334485 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.273818505 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.785708406 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.470837184 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.279158656 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.786076793 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.472580896 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.476311719 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.473388869 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.475848186 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.538056658 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.761500676 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.089844211 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.175591405 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.338954378 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.768174328 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.476644787 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.469026913 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.337917433 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.472652028 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.472157675 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.234115566 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174757944 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.487825426 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.472039147 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.157370371 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.483750479 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.771119847 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.474058346 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.273693092 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.469049659 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.542129368 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.475666936 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.475689033 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.472704939 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.765876873 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.474150128 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.479736422 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.156278437 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.001571295 seconds)
  done (took 204.190097632 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.462234915 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.479355646 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.464321163 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.47920945 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.461556041 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.466847466 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.459618897 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.463964292 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.467139112 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.462417052 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.458982636 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.473658375 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.467464761 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.461743191 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.459738053 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.464954529 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.464513188 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.472114458 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.463980812 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.465266049 seconds)
  done (took 46.666216238 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.47593439 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.050718568 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.019447538 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.484406552 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.478589719 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.472011492 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.527711435 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.484533387 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.478445579 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.783796298 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.653094654 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.480890251 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.482093894 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.481802875 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.021841996 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.459599352 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.780385413 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.061610848 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.487809402 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.059664677 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.455731081 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.479163414 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.470431633 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.063537706 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.800552908 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.77380381 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.536416694 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.069301005 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.486859051 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.480986844 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.055164929 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.48411893 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.471745076 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046631106 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.488626523 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.496525797 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.48152428 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.534001987 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.535905471 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.788645467 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.070819247 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.78578694 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.498946252 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.639126638 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.488473519 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.452857229 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.072196975 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.485615414 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.457013822 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.483582452 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.48670418 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.037204918 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.47544724 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.034788801 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.489937459 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.482672456 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.067224713 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.040607171 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.031193781 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.656068946 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.479069196 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.773016537 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.488418901 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.074686548 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.488960288 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.48191395 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.483949512 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.656462051 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.07127315 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.775936491 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.796776156 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.796796152 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.491482021 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.549738593 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.489274042 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.791129124 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.546205865 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.884377713 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.796361208 seconds)
  done (took 133.724100451 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.759320467 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.597028724 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.872927398 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.075254214 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.003548199 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.620365903 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.599237867 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.731702296 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.501078407 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.590757372 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.146707602 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.571391689 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.239467754 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.551171266 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.594505715 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.607521424 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.88794665 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.458900965 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.125532004 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.122893095 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.479620352 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.579611562 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.000042683 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.679881019 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.48059321 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.054669255 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.431423928 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.996352332 seconds)
  done (took 55.707414532 seconds)
done (took 554.027503398 seconds)
SAVING RESULT...
DONE!
