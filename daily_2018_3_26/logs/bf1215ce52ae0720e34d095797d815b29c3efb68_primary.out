cset: moving following pidspec: 15999
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.54374165 seconds)
loading group "string"... done (took 0.5208474 seconds)
loading group "linalg"... done (took 8.571136496 seconds)
loading group "parallel"... done (took 0.172399469 seconds)
loading group "find"... done (took 4.262085879 seconds)
loading group "tuple"... done (took 1.841608958 seconds)
loading group "dates"... done (took 1.332064432 seconds)
loading group "micro"... done (took 0.18669939 seconds)
loading group "io"... done (took 0.490098464 seconds)
loading group "scalar"... done (took 49.608487885 seconds)
loading group "sparse"... done (took 13.776054309 seconds)
loading group "broadcast"... done (took 1.676000639 seconds)
loading group "union"... done (took 9.301332692 seconds)
loading group "simd"... done (took 3.086113076 seconds)
loading group "random"... done (took 11.491141539 seconds)
loading group "problem"... done (took 2.214892803 seconds)
loading group "array"... done (took 24.150551074 seconds)
loading group "misc"... done (took 1.114304507 seconds)
loading group "sort"... done (took 3.794120845 seconds)
loading group "collection"... done (took 19.407585847 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.688385779 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.146214957 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.19338667 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.204165563 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.275381177 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.165709013 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.156968943 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.168472183 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.736370301 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.205979602 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.135932611 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.414888345 seconds)
done (took 6.360874426 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.263749489 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.241350806 seconds)
    (2/2) benchmarking "String"...
    done (took 0.186102551 seconds)
  done (took 1.182986498 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.076435982 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.156893214 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.108626744 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.094240471 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.092704626 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.11018115 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.094007584 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.109273691 seconds)
  done (took 1.526020599 seconds)
done (took 3.807937777 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.513738256 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.884158071 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.513900652 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.17909351 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313375081 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.30266701 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.26247982 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.217571492 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.090362371 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.085426003 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.177797711 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.426938745 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.384146445 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.959621919 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.067270079 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.093235938 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.151118459 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773362128 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.078599139 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.108348754 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.526261337 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.210746121 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.113704703 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.105555763 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.184003736 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.13286343 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.140708039 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.101786179 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.670542036 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.130643453 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.214707009 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.082333726 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.13793616 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.163510097 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.214449594 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.10959882 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.670573128 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.199169586 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.096554572 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.099809524 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679846591 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.116692581 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.203311031 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.105252722 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.068083157 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.160167975 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.099752727 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.093199243 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093142519 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.085764617 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.162762783 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.453898491 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.106158432 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.189401075 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.0924249 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.686819224 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.096482372 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.273915219 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.126000851 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.094179894 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.091204875 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.086929767 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.155729261 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092589278 seconds)
  done (took 20.097084245 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.165234477 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.183727129 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.076364427 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.156255162 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119757571 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.097778199 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083740449 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.077273817 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125550795 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17994654 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.138583721 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.188942846 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.075752709 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.089134971 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.167745889 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.229413696 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.127635645 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104261352 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087541155 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107354259 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.121505828 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.095483879 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.107154209 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.090438111 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.170158849 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.203864966 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.111266301 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.123461474 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.090020034 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.09581295 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142540739 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142104598 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091314798 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.088409555 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.169408459 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.121952792 seconds)
  done (took 5.323224331 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.240852345 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.101886039 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.246867667 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.197987016 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153417532 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.182230547 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.173936738 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.294803551 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.232610436 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.161456587 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128603585 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.095437252 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079074437 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.078292367 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.095690921 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.315356863 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.19477701 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.16966435 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181815671 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096258505 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098349519 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.362750502 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10069819 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085453247 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108922965 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.06518829 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.222121415 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.094869507 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.05826472 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.082420265 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.119437323 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11333502 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.20830865 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.12371193 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.118196822 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115056796 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.11262712 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.104159295 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.221704936 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.101907777 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.07718579 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.13332368 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115258 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.128164273 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.107499923 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.109032532 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.219253245 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.085980046 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.128860795 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 4.02703602 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.194331841 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.157077691 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.083401128 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.286551726 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.127613875 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.10000932 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.109283084 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 2.802077055 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131712795 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.082493761 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078384865 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.113463556 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.077821377 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.449770168 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.124597403 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.081123261 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.078880839 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.157141313 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.419325908 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096994089 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.119327875 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084861876 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083572931 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.125876973 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.084981333 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.096694402 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.087113266 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.078711653 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.104793264 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.112672502 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082852378 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.096107866 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.146945158 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097722992 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.124302339 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.10836582 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.106011084 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.084469696 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125816395 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08156739 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.088031236 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.18394001 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.095944774 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.177036394 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.128077454 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.09770728 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.145182702 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.088585028 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 2.292501793 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.083626365 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123924345 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100813814 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127128366 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.099848453 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.078727026 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100031931 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078953084 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079452693 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.1587767 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.087083328 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079488695 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.104179719 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.084693153 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.089564145 seconds)
  done (took 28.621244113 seconds)
done (took 54.797746287 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.418612037 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.08290957 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.080067985 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.101129278 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.084328002 seconds)
  done (took 1.60287647 seconds)
done (took 2.414014252 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.309230207 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.19752828 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086194589 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.187604394 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.085430703 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194165906 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.181238818 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.101290002 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.207708619 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.08451846 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.191929005 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083637186 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.106439198 seconds)
  done (took 2.853352006 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.102731226 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.104980246 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.101043914 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.120116664 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084901287 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100717365 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.117975397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107124797 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.100184554 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.113244668 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08575186 seconds)
  done (took 1.948519392 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09940973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103297346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.090049889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116501068 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.084390894 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.097486993 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115695018 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10605455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097157612 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.111675679 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.08522323 seconds)
  done (took 1.918880089 seconds)
done (took 7.529404742 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.200983331 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.911417196 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.190060567 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.241311948 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.351005015 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.293885114 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.607476557 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.198630769 seconds)
  done (took 15.936613752 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.199044538 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.115288815 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.095989783 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.089781547 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.115148684 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.094463244 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.089170484 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.114828466 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.091299028 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.090334647 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.094303025 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.113276674 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.090599189 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.088339521 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.111636644 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091377087 seconds)
  done (took 2.556231163 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.142179407 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121332497 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.116798138 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.097404724 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.091936015 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.117560599 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.101400805 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.09456737 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.113021307 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.093457062 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.100746638 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.114582326 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.096739937 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.091531469 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.115833579 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.120266601 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.092954354 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.114891998 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.115716088 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.096398609 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.115576707 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.09533749 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.113255607 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.098607442 seconds)
  done (took 3.469163267 seconds)
done (took 22.775962749 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.145206877 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.101842366 seconds)
  done (took 1.063753238 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.164046518 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.182309656 seconds)
  done (took 1.167430951 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.112318555 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.088727068 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136707311 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101469562 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.09003558 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.108562586 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.115663205 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.107552958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.091522832 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.091478555 seconds)
  done (took 1.871597391 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.094785322 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.095430073 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.120997013 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.166380247 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.116602515 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.092147989 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.093596527 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.111581964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.095973563 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.090234648 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.113053656 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10862381 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.093234827 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.127312093 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.094247911 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.095362877 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.115494549 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.094090476 seconds)
  done (took 2.745554348 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.090387649 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.092091351 seconds)
  done (took 1.010581564 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.093156102 seconds)
    (2/7) benchmarking "second"...
    done (took 0.089657725 seconds)
    (3/7) benchmarking "month"...
    done (took 0.091329235 seconds)
    (4/7) benchmarking "year"...
    done (took 0.110599641 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.089515421 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.089614614 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.108142523 seconds)
  done (took 1.499283849 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.522926131 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.234759408 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.370541545 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07354598 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.124374231 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.446033881 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.104624709 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.072107087 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091266998 seconds)
  done (took 2.902701552 seconds)
done (took 13.084232295 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.091332347 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.23990147 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.63284603 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.112501982 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.091037384 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.162460157 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.316903891 seconds)
done (took 2.478913733 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.348618533 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.164301376 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083906654 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.091889478 seconds)
  done (took 1.51974374 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.082214579 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099302717 seconds)
  done (took 1.019340947 seconds)
done (took 3.378840263 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.121212647 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.088237513 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.108270841 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.08872071 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.088878986 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.088522855 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.107688887 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.089372462 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.087510273 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.087411012 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.108961491 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.087981104 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087299644 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.105602327 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088561439 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087701828 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088394108 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.105451723 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088685791 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086797609 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105258325 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.089561981 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.088384934 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.087392261 seconds)
  done (took 3.132212101 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110181644 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.090688769 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.111453974 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.093472101 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.092075544 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.110061075 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.093256477 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.091474315 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.109288405 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.090809756 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092422871 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.093475469 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.108141407 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.093284779 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.089496611 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.111186427 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.093915962 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090245537 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108208701 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.094078147 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.092767718 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109669101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.093591695 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092165836 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.110358877 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.093479025 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.08963992 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.108548562 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.094444713 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.093173016 seconds)
  done (took 3.784055034 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.097444911 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.086420487 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.08927943 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.115805681 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.086850357 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.089653726 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.102971727 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.090078992 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.091105407 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.08917901 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.109265298 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.089233352 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.087791573 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.107225865 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.092139575 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.091926479 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096633884 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.107710095 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.088786644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.089685014 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.109572667 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.089107927 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.088422026 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.088509821 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.108104469 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.086264368 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.089163021 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.107046603 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.090304699 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.089662985 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.092128015 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.110706363 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.089470546 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.099624741 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.110039698 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.09088483 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.094904765 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.104534855 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.091570623 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.086384123 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.086192954 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.107174641 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.089368364 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094834589 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.107537342 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.090182529 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.089029947 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.090628709 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.107300461 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.091995328 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.086233357 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.106676437 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.091877071 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.090669866 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.108403554 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.087868285 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.090158653 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.085466237 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.109129764 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.089519571 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.087984502 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.085346557 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.112679556 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.091490187 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.101872597 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.114068088 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.090929095 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.08963609 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.108153047 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.094707382 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.091710343 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.116986211 seconds)
  done (took 7.743623296 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.11315134 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098096168 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108599945 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.090598692 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090291916 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.088236949 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.112864167 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.088989893 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091212629 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.114943327 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090910279 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.089776772 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.1081353 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.090745244 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089255902 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.091132555 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.113556343 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089712126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.088766292 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.109017819 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.089871547 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.094317842 seconds)
  done (took 2.984372202 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.237659053 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.096259745 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.138057689 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.121503536 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.107888848 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.120983557 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.094107191 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095853698 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.111561955 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.099660998 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099908882 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111514536 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.107366051 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097597802 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.116915944 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.101227798 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111326488 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.101367511 seconds)
  done (took 2.917171849 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.104173839 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.090723311 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.153803257 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.09161387 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.090861707 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.110018961 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098020373 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.111123963 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.110983693 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.091812638 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.097915475 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.11100569 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.09280905 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091489479 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091059752 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.110561871 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.091218952 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.090962342 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116890486 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.097537802 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.095629057 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.117224238 seconds)
  done (took 3.10485763 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.105672144 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.091951551 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.127370211 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096087404 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.090820728 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.090405119 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.115330156 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.091539445 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.099197252 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.111159409 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091403498 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.091100349 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.125524855 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091592193 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.096617033 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111119671 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.0917525 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091472203 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110296475 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.09220539 seconds)
  done (took 2.859827204 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.192333011 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126797015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.108838439 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114955075 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128265326 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.107207751 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.132921488 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10787368 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.106776157 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135791004 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.109816392 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107919327 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133329176 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11245382 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.12553176 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11594739 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.115652685 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.133093767 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107070396 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.126331954 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.119331788 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.107131153 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.134494567 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.108028897 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.106438773 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12606957 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107460088 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.129738863 seconds)
  done (took 4.239061285 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.091221535 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090177693 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.088904122 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.110299505 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.091421566 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.089019428 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.088563562 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.10871033 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090210893 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.089984082 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.108686826 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.091589486 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.09081127 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.089672911 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.109349886 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.091262824 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090124723 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.108155057 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090827189 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091695325 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.088849057 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108157148 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.091493338 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090039436 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.089007252 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.109250549 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090458571 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090169974 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.108493456 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.091843747 seconds)
  done (took 3.709138095 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.104382029 seconds)
    (2/2) benchmarking "in"...
    done (took 0.101692646 seconds)
  done (took 1.061000303 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.098533971 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104325058 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.088854349 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.109834524 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.097884482 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.090969716 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.117774212 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098288939 seconds)
  done (took 1.662591723 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.1644747 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.187819124 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095462831 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.12242966 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.168419433 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.179896723 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.127397363 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.115116075 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.091371052 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.085370786 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.181901612 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083428617 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.110871528 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088833501 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.091162299 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.119261883 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.092691867 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.099997539 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.11860813 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.092879837 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095630715 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114268614 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.093635352 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101621705 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.104976567 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.095514274 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.093761301 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.121057846 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089311305 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.092116363 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.108727089 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.093165369 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.095204827 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.095729911 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.111215158 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.168771092 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119232486 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08912401 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.091165766 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.116401447 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.124675932 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.091134437 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.113615723 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091253476 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093473654 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.115305896 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.097557789 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.091263569 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.104553964 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087896295 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.091318237 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105242247 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.092605679 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.092163934 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.109316716 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.100439942 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.093965526 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.087720633 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.106864387 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.088052319 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.08978054 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.107568024 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.094708563 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.094222539 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.111570118 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.093600844 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.08989315 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.111750855 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.094003517 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.093591258 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109272519 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107753001 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092413387 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.115115199 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.098371855 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.092790725 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107373532 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098583783 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091132229 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110724705 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.096476026 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.119803749 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111060214 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088756044 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08753983 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.097644678 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.112833723 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.094463284 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.083738141 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118656639 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.093980314 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.092279821 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.104379573 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.090723972 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087536806 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.113522127 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.086764187 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093527796 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.090440464 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.116459363 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.09805871 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.090353452 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113176886 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09756919 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.097183821 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110219226 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.157121015 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109397567 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088792913 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.093264547 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116664445 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086847639 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.091580041 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.089885025 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108989467 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.087782343 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.095978828 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.111154906 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.095190259 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.096197452 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.113174311 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09418173 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.09398003 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.11134029 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089445856 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.096032208 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.118763228 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.095170746 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.093761691 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.092840245 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.112242872 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.092486892 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.096901097 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.109251107 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.098959871 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088775133 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.111239063 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.09504224 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.098788404 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.111778179 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.089676247 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.091948059 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.111721923 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.092918821 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.095121896 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.111766537 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.089567876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.084354656 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.091957278 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.106895048 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.094313537 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100197543 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.108598535 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.095502992 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.087971888 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.118666002 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090941889 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.097129679 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.117203365 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.09859477 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097950024 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.085901495 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109696445 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.09496873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.09288806 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.108066422 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.094041259 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.091676929 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.118138751 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.086217465 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.095890488 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.104816282 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.091022453 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.098064753 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.092644395 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.115555151 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.08948016 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.129813182 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.124760235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.099161392 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090428349 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111518416 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.097183749 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.091320194 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.115488479 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.099199357 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.097500234 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.108206834 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.091731685 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.098994578 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.107185087 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.095991793 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091494846 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092126157 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.104730005 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.09398653 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08444291 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.115701574 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.095816543 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.096826601 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.117419057 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.095731777 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090761874 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.12019185 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.089837028 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.096714292 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083818508 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.117785552 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.103803593 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.098607726 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.118963729 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094888748 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.088805211 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.113631811 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.102741721 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.094212194 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.112604578 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.095218829 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.085858823 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.085426207 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.118153727 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.096504995 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087418127 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.112259408 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.097608172 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093909066 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.110275437 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087137338 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.096661911 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116903017 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.099075802 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09241686 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.108143532 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.091581909 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098702526 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.104989217 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.089999757 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095409554 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.115602121 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.093559966 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.092271931 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.095755882 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.118767737 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.096374934 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.095623944 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109874521 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100891798 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.090675978 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.11086787 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.090574005 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.095509734 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.085575482 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.115035309 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.093897595 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.089654005 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.109192331 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.097450951 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.098313459 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.118096495 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092102833 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.097456176 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.126835803 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.099240928 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090665835 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.116713054 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090998074 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.0859424 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088700318 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.106472187 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.095331647 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.088804102 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.117064836 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.092402551 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091545555 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.116057792 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096776918 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.09058664 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.119084981 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104136493 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.087542525 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.105938952 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.092984695 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.092869151 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.108466765 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091301851 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.09719434 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093953714 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.118829407 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.095836356 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.090072257 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.114339959 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.100126736 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.090289761 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.120275938 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.099513614 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.098869731 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.109174333 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.098958012 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.089999234 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.116226618 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.089064686 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.092908621 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091651343 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114688249 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.091128037 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.092105473 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.110091729 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088888904 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.091268948 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.119206015 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.092977341 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.0977128 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.112292726 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.09212417 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.090402174 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.108572188 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.100210613 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.092916985 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.118528579 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.095885019 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.087700435 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087096889 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.119560063 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09485072 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.099679145 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109318609 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.100007866 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.0990859 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.115922038 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.096610624 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.101581802 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.100999764 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.119961625 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.098747345 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.087526499 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.112095172 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.099023817 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.09322008 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.116753065 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.097524792 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.087906121 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.11571625 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.099440332 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.095079338 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.111399621 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.089085191 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.095690354 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.10029656 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.117053487 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.098758037 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.095829042 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.114651733 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090680638 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.097916772 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.119095205 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.095431875 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100328263 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093133096 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.119256952 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.090123083 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.100749423 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.114651725 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.088885263 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.087768257 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.11121652 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.100762998 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.088691958 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.116989608 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.100065231 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.092202278 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.09160724 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.118680376 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.091564978 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095939491 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118974395 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.093139207 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103800942 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.114869262 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.092415112 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.098041666 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.11842679 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.088986355 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.093320607 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.092486278 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.121041524 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.093354973 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.098707446 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.114841701 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.100076401 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.096785441 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.118297992 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.100005691 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.099938193 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.107598741 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.101211516 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.098111992 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.096856334 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.11201454 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.093466026 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.088700358 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.113681129 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.101982871 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.091409057 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.121803574 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.100684055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.092391132 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.111463121 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.100104304 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.092715719 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.11903446 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.091385191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096377732 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087283186 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.115542988 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.093750818 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.100306815 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.112124601 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.09094789 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099141212 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.12069212 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.098963312 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.096651178 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.120949101 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.088907902 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087427729 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.096626472 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.111114212 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.105329589 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.096065223 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.11405817 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092937858 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.095905221 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.115393878 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101957705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.089802405 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.111013647 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.095606414 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095998537 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111747733 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.090517887 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.099566331 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.091768227 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.116509941 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.093354616 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.088630807 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.114603871 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.102613667 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.09282916 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.111218887 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.093253586 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102224083 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.113749549 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.092565554 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.089308818 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118796064 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.097671923 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.100815878 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.110593151 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.097670291 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.091966292 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.095897675 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.12155739 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.093834191 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094357274 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.114132063 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.100735502 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098842314 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.108631854 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.094069992 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.104132216 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.120755404 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097988567 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.097181805 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.112701771 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.101770377 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.101906147 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.096346437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110001419 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.089947878 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.091876695 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.109748583 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098139654 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.09970034 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.113656656 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.09433533 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.098342839 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.119253539 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.099100545 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.096908883 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.087693273 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.122004858 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.091962167 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.097202584 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.110030321 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.090107012 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.097211633 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.119597473 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.094475261 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094894135 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.095736589 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.11954709 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.090207118 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09291599 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.118568453 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099419987 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.100333681 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1145931 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.094576994 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.101735018 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.124460041 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.096608362 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.09371989 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.121747206 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.103297626 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095837 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.113744418 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.099731621 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.100609933 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.096795881 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.121374109 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.093475668 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.093017235 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.121265799 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.10112615 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.103258858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.115213858 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.088657291 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.098534615 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.113566913 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.090741279 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.098544131 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.121333189 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.102254889 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.094093215 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091213282 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.125727516 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.099939694 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.094030387 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.113001335 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.093166389 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.098853335 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.113599651 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100230267 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.09166415 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.123373385 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.102283262 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100875544 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.122693616 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.090838181 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.100340206 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.117012545 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.103712835 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.096901684 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.088611654 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.111501398 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.099286577 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.102744153 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.122327813 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.099144411 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.098195922 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09840455 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.116771965 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.094892869 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.091390599 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.123412682 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101243758 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.095972867 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.116885294 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.095344501 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.095049106 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11626836 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.102014794 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.101606669 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.115274055 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.107522541 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.101352165 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.093689104 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.113266654 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.096250987 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.097910619 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.116221053 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.100214995 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.092901023 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.111561471 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.102828633 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.101886164 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.113786284 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103252473 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103208092 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.09253472 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.119470715 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103867524 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.099216956 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.119129444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098248923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.097610538 seconds)
  done (took 61.669071531 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.143526333 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.102247075 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.118731185 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.097600258 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114350407 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120155058 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098587314 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098143117 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.119319692 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.1066893 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097189973 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.116510889 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113895168 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.116289899 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.135326768 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.107625963 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11627185 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.099941526 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098335259 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.097819336 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.132724436 seconds)
  done (took 3.262060098 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11676413 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.110472571 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.129199284 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.111584124 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103979885 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.130174721 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.109209782 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.12878662 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.112144806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104430044 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.131557726 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109335718 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.104060583 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.126698193 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106438199 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.125937435 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.111945647 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104579854 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.128766042 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.108859862 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.105104612 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.130514032 seconds)
  done (took 3.457647538 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.128544005 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10056292 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.095067361 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.119806893 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.101622264 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.0972988 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.121846246 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.098798283 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.106290284 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092273829 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110054096 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094309574 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.095851609 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.119035886 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.093683841 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.098548468 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.126779783 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.102167431 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.103347844 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.098383723 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.110728925 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.098783398 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.098615036 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.108897156 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.104651849 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10247982 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.097061829 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.122326566 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.089687721 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.099832046 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.118645975 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.093322031 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.08974489 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.08803243 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.111038577 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.102176778 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.100974941 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.118300832 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.099798826 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.088879265 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.099014237 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.123134626 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.090480523 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.098270096 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.118990414 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.092692316 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.101512957 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.118413435 seconds)
  done (took 5.90001224 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.128709062 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163084053 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.10211741 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.135366843 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.132602722 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.107361002 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.10032946 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.136850986 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.098664507 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.123766274 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.11408926 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.111555124 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.125742157 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.105168401 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.102052535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.123671407 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103885482 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100861293 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125500689 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.103360197 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.104910558 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.123932476 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.112291253 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12879828 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105006232 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.101589454 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.119678183 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.105369105 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.109762188 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.127083152 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.105829964 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.105477518 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.131258459 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.102845755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.101279801 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.124161397 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.114051247 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.101068679 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.123398999 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.100723759 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.10209164 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.125020119 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.103345822 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.11266814 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.122868822 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.103547635 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.101116462 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.120524492 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.111111849 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.101129736 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.129423609 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.11162001 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.122979028 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.102419989 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.104795519 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131407765 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.101306849 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.099957009 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.124786118 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.110029623 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.099375223 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.124836033 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.113509384 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.101524469 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.129198281 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.112552653 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.122890842 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.105321572 seconds)
  done (took 9.026269856 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.133974406 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.105105006 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.134310673 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.114074669 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.105139043 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.12612601 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.107515632 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.104866628 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.128412107 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111538771 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.124996903 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.224227395 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.12583197 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.111646756 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.106357734 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.1284687 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.106816183 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104083273 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.128937623 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.106269158 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.125204572 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.115036903 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.106728759 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.133393971 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.117500128 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.102268796 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.127347784 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.107695106 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.133954086 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.108149827 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.116944528 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.126829879 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.107053149 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.112726302 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.140592051 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.106756972 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099906139 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.128370593 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.106532509 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.125741633 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10525892 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113759362 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.12643496 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.10388324 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.106048449 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.126295737 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.116768715 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.116407793 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.132254081 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.112240498 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.126397132 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114856266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.106347008 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.126853683 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.114490851 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.140051285 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.115478314 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.113921829 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.127821714 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.114633678 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113245045 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.142633054 seconds)
  done (took 8.325188524 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100015864 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09845964 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.098753464 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.121864128 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.100141072 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098637423 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.098584411 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.12089716 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.099282846 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.097989645 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.119622651 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.100875656 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099069752 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098569772 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.122052846 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100245894 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.099133727 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.118615539 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101381161 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.098365148 seconds)
  done (took 3.017529345 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108747328 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.115478772 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.120729016 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10844225 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.101319017 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.127038605 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.102315602 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101834853 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.100172384 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.122739269 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.10983657 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108830412 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.124585027 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107696801 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.129256878 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.108692973 seconds)
  done (took 2.724248341 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.119621627 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.116622281 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.208913677 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.103794282 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.123718802 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.109535228 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.102401526 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.125865109 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.102760074 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.106911738 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.126136969 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.106145264 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.102549454 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.10147421 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.123489946 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.105006412 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.099330029 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.126133875 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.103290203 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.215068905 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.106368257 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.103805669 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.125028987 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.106987218 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.102288148 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.129156666 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.108526928 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10061009 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.123995255 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.103385584 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.103016315 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.128890167 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.102009976 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.106192804 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102723697 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.124328083 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.103661711 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.101246289 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.126782503 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.102740444 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.104569498 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.124566001 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.102982614 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.104696258 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.121208874 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.104253697 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100601835 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.106092452 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.12410584 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.103574073 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.101314028 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.128890608 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106976047 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.108806799 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.130030647 seconds)
  done (took 7.242535287 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.11519946 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.103525443 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.13426761 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.101974807 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.104023889 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.102507428 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.125021943 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.105523291 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103905299 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.122767958 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104266726 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.102959226 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.123804959 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105057491 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.10328415 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102551737 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.123475117 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.104700411 seconds)
  done (took 2.917542475 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.107767153 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103275754 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.105774119 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.123278939 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.10234703 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102311283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.122228697 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.102740294 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10116442 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.101329115 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.124676779 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.103575385 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100702665 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.123200315 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.103483006 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102593837 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.122464042 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101792432 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.101398956 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100145131 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.124223369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102166113 seconds)
  done (took 3.315666499 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114154255 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.21120856 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.109165814 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.219976013 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.099377005 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.097826431 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.132259829 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.099349882 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.136763365 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.100098125 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.098164643 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.119081894 seconds)
  done (took 2.471806166 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.129560352 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139004026 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125831336 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10563565 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110938657 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129031518 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107094907 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107885332 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136299625 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117885813 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12826091 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116124043 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114606172 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136543305 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111921494 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133319397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108628701 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107319026 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123158049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122805802 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106487703 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136177488 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10695601 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106196348 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129832723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114642308 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136760044 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118130566 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106433769 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.136684319 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110944809 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.106809663 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136608099 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118394962 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125614738 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115899118 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105961605 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.14408363 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111405425 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136741183 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104732103 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111661208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137409452 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113492007 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.114966599 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12913387 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113511636 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12854341 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10915513 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125986944 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134113822 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116429728 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132449768 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117362864 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115078504 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.149922179 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117566002 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.137189635 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111537923 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.139076269 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116784646 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11145371 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.137772581 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119161011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133374811 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116851809 seconds)
  done (took 8.952376179 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.142187642 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.104626183 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128795313 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119009755 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115161034 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129829818 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107460972 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129051556 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109211026 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105334694 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.170892279 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10811983 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114848823 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.136945003 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107318927 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.129168567 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108714385 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116839489 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125947224 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129778954 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105972493 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136841487 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115143983 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137724925 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119697894 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1339196 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108871225 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108229422 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127869057 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108616475 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.112803744 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128839448 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115475293 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.103902061 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.137141499 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109847648 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107548074 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.134881901 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10861532 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.13236186 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117195058 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121891509 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12922783 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108643324 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.140192549 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109696129 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107938159 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.127459459 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109448439 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104455316 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139828744 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119242323 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.138073913 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117676342 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10799951 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128524408 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108491004 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108212344 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128651282 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.113378053 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11582858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.130232363 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129737266 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129371884 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108952181 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115899439 seconds)
  done (took 8.893487085 seconds)
done (took 169.210974811 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.174280749 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.213123364 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.196084567 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.156381992 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.094938957 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.151627882 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.127220376 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.1965167 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.095011262 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.094506703 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093217286 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.120675789 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.161807904 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.09420469 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.116851493 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.097035995 seconds)
  done (took 3.118824545 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.182188225 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.331554635 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10896981 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.121289696 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101043522 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098310579 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.120901443 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.102896479 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.099187372 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.130066635 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100030176 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095263569 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.126702326 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.095691611 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.099163063 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.119175338 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106509851 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.098252676 seconds)
  done (took 3.185911657 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.118638968 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.142738828 seconds)
  done (took 1.211617643 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.129625726 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.213266218 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.28208801 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.168653682 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.11960964 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.140044461 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.148551842 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133194495 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.188550268 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.133783845 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112709423 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.096641952 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.147742664 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.104897968 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.113244189 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.120331657 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.128072738 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.134349405 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11443719 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.10045623 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.143899693 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.10331559 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.105057698 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.135249039 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.181090818 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.132996704 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10419184 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102486982 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.123134173 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.115458667 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.10576561 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.139102993 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.111975194 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179804677 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10240601 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.174185591 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.105863567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.121487178 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114102492 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098305263 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.124537394 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.103181934 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.112068488 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118844834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.103013252 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.105929422 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.126077922 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102476343 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.127447247 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.108324371 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.108042233 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.127291554 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.151964888 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.129997287 seconds)
  done (took 7.927093057 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.865464875 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.139423582 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099274285 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.983394687 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.144114582 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.114480886 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.854309416 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.145313717 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.249951386 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.883416015 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.116068029 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106910099 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.254699425 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.256819842 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.263723724 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.376351598 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.698121471 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.133594179 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.127717241 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.160738968 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10744044 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.142932161 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120705187 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.517185176 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101616523 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.10049091 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.128793862 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.108898959 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.17475441 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.100539778 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.107704262 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.191446764 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.289906582 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.207901968 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.09899676 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.121032906 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.099833428 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.181553512 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268231947 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216639335 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.168885235 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118081334 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.099363715 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.107049321 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.141092714 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.097924397 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.177220053 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.186974077 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.163811146 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125781519 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.109826744 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109318487 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.129137716 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.172875056 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098840236 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.354327793 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.357548774 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.120991116 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109976816 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.11222115 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263331541 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.122734331 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233684484 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125983215 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212639049 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.120083147 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.844883544 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.160617748 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.120657022 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.106009835 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106830099 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128418997 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.106571606 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.188252187 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.478333552 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130855045 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104578734 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098867186 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.230671871 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099025081 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.121132617 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.177001811 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.102960674 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.106662862 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.133163778 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10920243 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.185327695 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.267285899 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.112034625 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.107855923 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.126527286 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.113287006 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.099606525 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.232330604 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224888434 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.172806292 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.226015208 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108002847 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.17802906 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.180692255 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.106237432 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.184051561 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107586835 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.110644258 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129045877 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.221108317 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131259885 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.12372905 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.105382806 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.107764287 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.156924173 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.102201812 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.131360363 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.163091695 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.554915546 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18203565 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.096553707 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126756997 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.109722366 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.177133254 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107174572 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261589111 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129517895 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.161513848 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.128282379 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.098768135 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108747679 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.175884377 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107611457 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.132185656 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10641714 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.129565909 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.25531868 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219248617 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.130990865 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.247418269 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.173731539 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.126865152 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.167396656 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.13164752 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162786687 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132621948 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106242155 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121732229 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.829897385 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.115320872 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107842267 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127890297 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.183779922 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.123199324 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103153806 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.100221 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.097114146 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.816854457 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128445035 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.097657162 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.101761458 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127662776 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.109638483 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106707453 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.128137621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.174085639 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.240180474 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10837702 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127877185 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.102241508 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.174422528 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.102048604 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.101159878 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.100569373 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.12407415 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.110835427 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.104575096 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125608468 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.184480047 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.15206314 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.225658642 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.632904305 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.122650375 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100581268 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.236154191 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.122564498 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.323898234 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.110279094 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.23228084 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.180386046 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.097625856 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.3569745 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.181714546 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.205607895 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.103843417 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.186722526 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.098322129 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.108564317 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.174830368 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099874182 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129175962 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.171899404 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.113476002 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.110201848 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.273938714 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.124586459 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24784158 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.099216274 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.183753151 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.102493297 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105424566 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.322646379 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122642391 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115453494 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.176923994 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.105174846 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.122997896 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.651830229 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124274872 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.113592359 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.104828318 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.249894813 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.157882967 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.132265812 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.109734167 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.129995759 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.155051517 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.230017581 seconds)
  done (took 47.328648001 seconds)
done (took 63.718874936 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.266509317 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.177110875 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.280647683 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.176848825 seconds)
  done (took 1.942115007 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.26899757 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.160314603 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.25383151 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097845839 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.260516494 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097636994 seconds)
  done (took 2.111803921 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.176601383 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.168113434 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.146440203 seconds)
  done (took 1.467149963 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.200666237 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.215842348 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.326818129 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.233186389 seconds)
  done (took 2.037328134 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.290804171 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.118075763 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124787316 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.234042841 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.252217306 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.211523294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.124322436 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.177508259 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.12983108 seconds)
  done (took 2.681643408 seconds)
done (took 11.210986582 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.222440427 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.384586048 seconds)
    (3/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.31953715 seconds)
    (4/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.341736941 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.175310249 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.392050282 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.138922205 seconds)
    (8/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.317245865 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.354929229 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.109882025 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.387177108 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.335667394 seconds)
    (13/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.280607064 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.251917275 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.200449247 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118028268 seconds)
    (17/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.138252044 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.417147613 seconds)
    (19/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.18035681 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.173837408 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.247678478 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.102191048 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.223716104 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.170874773 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.152872542 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.268055498 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.196729691 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.106168891 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.16003309 seconds)
    (30/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.078580409 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.086107661 seconds)
    (32/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.282772805 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.132092935 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086206535 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.110446442 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.171541623 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.154745678 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.101726966 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.1309994 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.192217264 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.134421522 seconds)
    (42/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.1521445 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.100462537 seconds)
    (44/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.170105612 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.121458119 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.108543757 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.085221639 seconds)
    (48/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.155264538 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.175887493 seconds)
    (50/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.168795483 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.103808556 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.112660436 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.085422765 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.123978287 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.134993635 seconds)
    (56/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.106804279 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.134660139 seconds)
    (58/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.082227597 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.082696982 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.099158839 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.261145183 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.118114131 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.23394246 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.103234867 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.122417108 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.106612272 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.155795774 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.131927825 seconds)
    (69/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.212011488 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14947168 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.146929437 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194965066 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.101957739 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.144984188 seconds)
    (75/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.192656458 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.078647982 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.13402893 seconds)
    (78/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.175971865 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078197014 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.147453433 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080759109 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.12263899 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.129448574 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.108896224 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.130643973 seconds)
    (86/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155966983 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.139281472 seconds)
    (88/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.109352752 seconds)
    (89/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.131605079 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.126709767 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.08047205 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.082013646 seconds)
    (93/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.086941486 seconds)
    (94/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.167654788 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.102046958 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.110251386 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.116308994 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.15178202 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.114236419 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.07880916 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.22459704 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.085115781 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.080519722 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.102007662 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.137622711 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.081181242 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.134462624 seconds)
    (108/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.153066779 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.133215887 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111054796 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.124480514 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.154050036 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.102949402 seconds)
    (114/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.160932167 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.110610699 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.081276438 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.108257107 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.102747367 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.079735232 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.230247492 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.094547173 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.198432672 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.108600168 seconds)
    (124/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.139958856 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.124054241 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.122451423 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.135189639 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.113286112 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.14075403 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.128164621 seconds)
    (131/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.085724858 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.109624189 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.110303831 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.110084205 seconds)
    (135/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.146188978 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.080853347 seconds)
    (137/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.079414766 seconds)
    (138/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.101924858 seconds)
    (139/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.086235184 seconds)
    (140/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086439526 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.081645208 seconds)
    (142/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.085835397 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.126127966 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.087379969 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.088724426 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.109518803 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.082556876 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.128640256 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.087307369 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.079647877 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127394449 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.08811795 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.086174167 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.101432441 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.127781206 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.104638994 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.082121399 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.086498944 seconds)
    (159/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.079672876 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.133850965 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.104618187 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.103953557 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.147879128 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.110878828 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.084071861 seconds)
    (166/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.132831568 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.088637965 seconds)
    (168/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.085931719 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.081531539 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.102895207 seconds)
    (171/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.109839007 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.087614699 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.111445972 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.110850944 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.106553139 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.110936056 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.103637018 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.147048356 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.114079092 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.0877484 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.101169848 seconds)
    (182/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.104544723 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.081196587 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.079991598 seconds)
    (185/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.080506429 seconds)
    (186/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.083103383 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.10660347 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.087456876 seconds)
    (189/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.080829481 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.103673009 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.086074138 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.106040203 seconds)
  done (took 27.363098185 seconds)
done (took 28.342468694 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.227062183 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129993061 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.111794899 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.110641681 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.231567587 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.118054573 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.152993832 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.113454653 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.120209454 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.135351566 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.101486506 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124275494 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.134398337 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.203898765 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.138801246 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.104063225 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102699105 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.146743469 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.128193251 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.1269106 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.232732676 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104186533 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.145450061 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.10320836 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.233301398 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10482528 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.110288192 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.13774183 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.125722826 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.110927691 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.136653699 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.104732178 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.126563927 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.149732361 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.104412802 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.111177149 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10193204 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.109951913 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.113427443 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112751171 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.146680038 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.113773007 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.112320111 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12675489 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.114039911 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.112208585 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101537841 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.13989975 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101514671 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.112207542 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.128941422 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.127599916 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111488556 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.124550417 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.102965598 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.103287034 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.145381322 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104228443 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.124937272 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.125536043 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.104561578 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102758823 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.112185972 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.12720205 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.111513896 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103142057 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.135603011 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.114186478 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110111065 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127339687 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.104268762 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.110811721 seconds)
done (took 10.095404104 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.108932152 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.146560967 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.232029304 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.235880953 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.131179757 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.143550212 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.117588374 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.125879601 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.140588863 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.121326517 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.13908421 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.159608641 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.238012778 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.119623157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.118383377 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.139905129 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114294776 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.111779313 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.235655261 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.12785275 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.152991441 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.119041597 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.15342156 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.120617626 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106235916 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.154043762 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.113066668 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.113744532 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.130844915 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.125934538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.126844477 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.131805706 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.11096687 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.125279358 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.148473105 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11834086 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.118197461 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.139111286 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.108948445 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.107147429 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139057193 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.12469735 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.107102053 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144142682 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115684129 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.120031438 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.138650829 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.11990089 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108651547 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.141039344 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.109542048 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.132086804 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.143363881 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123822097 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.118457188 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.143145133 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.120000262 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.118839257 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.134221096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.118817222 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.106019928 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.130752799 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.109983685 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.129062355 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.136496664 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.119326132 seconds)
  done (took 9.792754948 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.129609565 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.135351664 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.14095113 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.118050728 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111512412 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.125132525 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.10190053 seconds)
  done (took 1.885744951 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.105950614 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.240582428 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217581987 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.24243684 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.241950279 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.2525699 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125802269 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100875819 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.164870665 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.113371848 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.244709322 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.273128032 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.113044684 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.117071083 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.247202445 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.126436137 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.221476012 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.12801582 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11763758 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.247809829 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120823063 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.158345112 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.116835345 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.102626003 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.237638355 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.105006014 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.290299677 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.146444314 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114824781 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.116774404 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.117252131 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.209757918 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.241023175 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.116592214 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.135911889 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.217908155 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.240025992 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.116639605 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.256083475 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.133080224 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.215343125 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.143044398 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.12022298 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.117996315 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.144916022 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.206442256 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.14874099 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.120432347 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116263694 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.249908146 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.138919181 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.217610083 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.14073066 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11882531 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.113999701 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.145132066 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.125444148 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.118110473 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.250821784 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.120229955 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.243846054 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.244900942 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.243157444 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.245258672 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12866267 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.245282974 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205359855 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.143003456 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.113644534 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.118219227 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.247514255 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.116682596 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.142112474 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.235367624 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.121868122 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.248031625 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.221217602 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.142148258 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.117652796 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.106765768 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.143934384 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.105269113 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.238545406 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117485314 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.115497862 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.149052102 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.118039699 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.117593109 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.135832262 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.126759479 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.139702396 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11724092 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.122691454 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.141094929 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.12270108 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.25148455 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115110387 seconds)
  done (took 17.042807013 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.108965473 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.106245371 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108462089 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130605523 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.106758159 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.104707753 seconds)
  done (took 1.717448145 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.143605891 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117740422 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.151860534 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.120715229 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.16632849 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.250821576 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.257747241 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111245242 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.163545037 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.130510042 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.252713509 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.255106416 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.227769323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.149129613 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.256443195 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121980511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.261748504 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.117097975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.12656788 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.143120523 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11851446 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.121406135 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143253532 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.241755436 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120830979 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.119577325 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.137934684 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.12850109 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.125108028 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140224221 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.123456989 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117629449 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.136557082 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.113357502 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.278487716 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.110355559 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140529901 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121820005 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.121628567 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.144255622 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.232280196 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.143161261 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126364874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.120867741 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.13941909 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.112036932 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121156568 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.139390899 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.259292876 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.123157284 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.122379623 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.145832042 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.121364408 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.121354093 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.138074542 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113682375 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.120383397 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.258328655 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.122114222 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.138484817 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.119280976 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118662657 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.141047488 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.123344314 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.144145499 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.122400697 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.110211031 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.144489309 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.117584601 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.119720136 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.145009809 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.120350498 seconds)
  done (took 11.825801098 seconds)
done (took 43.281090438 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.740628466 seconds)
  done (took 2.784563125 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.947567281 seconds)
  done (took 1.993986185 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.962445178 seconds)
  done (took 19.041189446 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.440523669 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.490035221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.123574759 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.150706998 seconds)
  done (took 3.250619233 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.829685143 seconds)
  done (took 1.901501243 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.326038736 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.239983696 seconds)
  done (took 1.621947474 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.729645782 seconds)
  done (took 1.797285617 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.53059177 seconds)
  done (took 2.586380524 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.290881009 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.242662026 seconds)
  done (took 1.598061605 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.646559173 seconds)
  done (took 1.71132331 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.404720937 seconds)
  done (took 20.473654931 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259993096 seconds)
  done (took 1.332412873 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.282552273 seconds)
  done (took 1.357453694 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.555251885 seconds)
  done (took 4.629558971 seconds)
done (took 67.135919266 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.115703947 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.118727672 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.116169944 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.141492582 seconds)
  done (took 1.553705519 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.125923801 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.120299673 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.122645845 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.143916871 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12623799 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.117974958 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.145182347 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.122209107 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.117422339 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.146534153 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.119472945 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118468827 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.148192241 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.118325855 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.116954135 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.146764361 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.124367405 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.118665435 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.145683749 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.120910763 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119065738 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.145088373 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.123876037 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.122012644 seconds)
  done (took 4.149287265 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.116603621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.110277029 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.111409658 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134100768 seconds)
  done (took 1.549633934 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.127362249 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.130715179 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.153568839 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.126808609 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.131012512 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155004202 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117601158 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.11648035 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.143246341 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.127254487 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.134955618 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.157991875 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.131511094 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119304071 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.155876459 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114689273 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118472762 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.155536116 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125987975 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127164519 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.146120253 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.12620864 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.12287455 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.154325194 seconds)
  done (took 4.293046412 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.195325441 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.129069084 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.17532446 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.164426929 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.179723051 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.117850264 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.145983632 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.150918079 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.126631827 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.120640156 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.148010994 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.166510328 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.149196088 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.122242445 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.119369656 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.14938759 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.131754891 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.12382802 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.192172057 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.124435441 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.151003417 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.13168234 seconds)
  done (took 4.290476526 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.122669119 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.11054652 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.10511215 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.136888245 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.122047025 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.111401747 seconds)
  done (took 1.790666472 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108909648 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.103318445 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.103410167 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.128744396 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108819008 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.103289427 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.101406448 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.130753942 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.104167707 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.103406935 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.128923753 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.104127181 seconds)
  done (took 2.411150443 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205622869 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145855322 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25530333 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.430616843 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163801774 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.187337918 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283136985 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190690989 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.202615981 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138124231 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212374986 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16219011 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.180459207 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185882282 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165762656 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.1597925 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191437713 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207734733 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172026358 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.238922234 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157805003 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.205522874 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.188791081 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177466692 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139342847 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189362138 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.119285992 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127293476 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195028631 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192177741 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173916086 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178382557 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.140765696 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219693936 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258456561 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202210963 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.267670348 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134202775 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.194042954 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.189883736 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.259474222 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166793578 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191432564 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179189246 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128013313 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209976718 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152289198 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.209964514 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.133289515 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172790072 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209581439 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179142698 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.197899083 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135845001 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.323035315 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134456225 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.169279927 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178101446 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214510678 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228656345 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175656912 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.150572391 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.200455177 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191075026 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239819089 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.140255861 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.19221 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122978178 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191197832 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.231845223 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181176598 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186987409 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.237164104 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130898902 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198187651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.167949768 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183013443 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232472513 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169633338 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.14646155 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151577344 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156459151 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12757818 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.186891881 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.146915786 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214562495 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15829797 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.339313085 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178035092 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183001496 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160534976 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186526157 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187941443 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150205784 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.101378869 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169026546 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.160993958 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185454121 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128376028 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178549255 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140308053 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.125111916 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178959921 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.12182827 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195365147 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.135380776 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188591655 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169665367 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.156961531 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180116025 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.174850061 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.161361647 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195599182 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19062522 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156346124 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131455269 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245236084 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192602191 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.136746388 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.200162517 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.196464355 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.176738938 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133999972 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191653457 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191609254 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.170701195 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22328242 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13943353 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133188644 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.167131352 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169546175 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18564067 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.158091814 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153214938 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.163943209 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217518426 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.12419755 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166897104 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204963033 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133577476 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122775713 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162784491 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136979507 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.141396894 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.175936364 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137852822 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180468757 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16467303 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.19125971 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15654495 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160972384 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19734782 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132215447 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.16689288 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175624647 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.118631849 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.20071508 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194754978 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156404462 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17877156 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187760767 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206626606 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172592178 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156625226 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181694191 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153820064 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120202005 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186042012 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167484235 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.190172338 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.185739404 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207735036 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.193141183 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.161112328 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177281407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194882546 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.183849577 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182016073 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142762677 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197793148 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168596115 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.146538776 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.12391989 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.126030334 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162416375 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134568376 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.136271012 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207865711 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192351027 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.203905464 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16751712 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137068919 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.218226277 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.124676486 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187999309 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.198389996 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139436506 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.213258806 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189803855 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205511115 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139178329 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19008865 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120364317 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150600862 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.134619989 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159044725 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.163485966 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135832914 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169485139 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190322859 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198894288 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147102536 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.218089814 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192716071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.226767984 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.120493928 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.159881662 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197867535 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165829003 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.20950893 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13453694 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.187979259 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.191028454 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170108541 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217224712 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168414013 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205388148 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193795847 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.192234137 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13038177 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.175031354 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160671266 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165738501 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16305344 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171736456 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131544037 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150344901 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.165668345 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137267272 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214603748 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168964934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178740098 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.185881356 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172019721 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152150137 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141470912 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.201212523 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145860131 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.105939132 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197148264 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222801251 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148487177 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182804974 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173016368 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158093321 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312031287 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217965392 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202826512 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136981522 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136760196 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.198463312 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159924115 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190741171 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.210376157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142265617 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234383129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167758181 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.170055332 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129854041 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.174588695 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152061452 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.165008584 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.154476651 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.188796216 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.144709701 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.215478633 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13714033 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.196503945 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175395936 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.172130668 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.149261455 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138045799 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252901173 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195390753 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199215438 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.163005928 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.191464837 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183091966 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122204643 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154059515 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.131257144 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.212176675 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128056995 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203440033 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.166171155 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21072117 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202105832 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160119048 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169087458 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.126630477 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.193265698 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1496637 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211429232 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135433315 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.164581287 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188834568 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.157231938 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130217441 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.186931409 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.285686071 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176043357 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172214414 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.135102448 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281335918 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155478769 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132611958 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187904107 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170646586 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.160614021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.183328245 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174515028 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167556454 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160299851 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163430569 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203932171 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182821142 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195307758 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201371216 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.147198189 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185904742 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161489674 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20116559 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145253425 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.173695515 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160010209 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221604138 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.176722607 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.158471284 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169937529 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195898517 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170078446 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203618381 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137903791 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212001497 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127138369 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193078359 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13647773 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123393052 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187765873 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189611044 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130863013 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205072383 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169201523 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158573104 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128213432 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143809524 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192513538 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139360609 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.156249987 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213269466 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.130940177 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178327464 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236860295 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154974351 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.171133107 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.169576044 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13192234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137584397 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171321967 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130850571 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.172633469 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.210320901 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.130575532 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205032973 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191079552 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164462883 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185085417 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142307642 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.290127262 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.128024875 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215535076 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151415746 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225702676 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149315835 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202436259 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167019183 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178646341 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164761465 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175182882 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.219302436 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194213763 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.166104123 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157990894 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142486484 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165142281 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.134221438 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151270047 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195718049 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140248926 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.163761263 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.166504669 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172391836 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.147774471 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.167389779 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200964541 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178230587 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186856605 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.217624159 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137791778 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202355421 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203747942 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127751504 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.192798442 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173497174 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17181547 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152791379 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.160398787 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.138083218 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240996238 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12590385 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158539615 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202824582 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.194307447 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172523935 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.133833005 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204861926 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138766018 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202906127 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124565359 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.179994547 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166296302 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162078944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.126711762 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.19602424 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161098892 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.192650067 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141661503 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.175471797 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220792761 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.123013667 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161300097 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.308733685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163953328 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.2229185 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137755994 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135719261 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174004878 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158718995 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.192590798 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171299943 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.159056247 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128299162 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.171713 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.160009094 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.16936626 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.168614377 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207493371 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160878353 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.213840967 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.134226107 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.2808204 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.141586219 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198089815 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.118453861 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12773887 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16872549 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135772179 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141539016 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.208831194 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243502818 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.188409769 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.148690518 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13359488 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.154576836 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130176648 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.676703658 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151717546 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193267874 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148098936 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.104038445 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167901456 seconds)
  done (took 85.616189572 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162546477 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.152788236 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.168625176 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.223557266 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.196209454 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291577274 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.22958517 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.247635444 seconds)
  done (took 2.831282413 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.119524481 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158624929 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.141750687 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.143214627 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.109864186 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.483444063 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.159992541 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.121594964 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.160297611 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.151598657 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.137492945 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.5695364 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.117201136 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.144720325 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.123496291 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.137244151 seconds)
  done (took 4.132822957 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.719681606 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.534155579 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.991084455 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.277688768 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.262231796 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.20524427 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.773821933 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.202350659 seconds)
  done (took 12.122976736 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.168737615 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.162632994 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.447624676 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.307249504 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.183278587 seconds)
  done (took 2.43641011 seconds)
done (took 128.24188634 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.128062711 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.123612972 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.123026975 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.15433213 seconds)
  done (took 1.676537448 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.199943382 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.09240562 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.09434896 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.119639201 seconds)
  done (took 1.668629077 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.474021739 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.092386488 seconds)
  done (took 1.76106954 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.154722161 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13704795 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.16633533 seconds)
  done (took 1.638338105 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.138386455 seconds)
  done (took 1.306229441 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.133962485 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.125771905 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.270533207 seconds)
  done (took 1.706970116 seconds)
done (took 10.933138994 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12079137 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.933878196 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.43414615 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.134840389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.710656925 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.428390772 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.429326904 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.17526424 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.175456719 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.13747218 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.133801409 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.690475632 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.441671418 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.875945188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.398547865 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.907281655 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.696800423 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.112606803 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.144435676 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.114043182 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.41291727 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137013345 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113879822 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.113201476 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.718087402 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423326467 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.110402376 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.919712707 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.111250768 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.115628304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.427834184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.113039057 seconds)
  done (took 21.072728961 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114319157 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.168371195 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146955149 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.113179945 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114660567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.139483865 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125416469 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.123178852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204908604 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.111240968 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.161823874 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.112083854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.11610204 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.136896006 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.138539623 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11183188 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113427112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.144451063 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119280617 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.112824284 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162475472 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110976241 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.113028232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142550915 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.11221815 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.132705566 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.139630432 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.1238434 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109856294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.14400113 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.117084982 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112251421 seconds)
  done (took 5.331046002 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.160492144 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.178639594 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147880973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.150541949 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.188428541 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.114660167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.224892033 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.151049064 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.205052686 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.112728117 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.132749872 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138916706 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154065703 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.112254323 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.165512721 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.11306759 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.114525256 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.142918321 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120712746 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.11297562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.162017564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.112014066 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.112872956 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.142146483 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.114026264 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133979946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.140599459 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12507654 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.110503325 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.146488709 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.118575692 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.112013715 seconds)
  done (took 5.65781294 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.127650913 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.12773398 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132593712 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.163214914 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.120232934 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124003816 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.155283911 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.121008081 seconds)
  done (took 2.259772258 seconds)
done (took 35.496832276 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.136269297 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.130767285 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132491773 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.155788332 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.223964009 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14963759 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.129744122 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.118423218 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.155879971 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134434975 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.110595332 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.148389978 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13265597 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.121841288 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.256554329 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.126777305 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.261288281 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.257928055 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.12003432 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.128573004 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.150837165 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.233759712 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.153676689 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.120600347 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.248196726 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.117454862 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.248221127 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.12326626 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.121707391 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.112044044 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.258101965 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.122583877 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.15131235 seconds)
  done (took 6.468040734 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.241655159 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.149489173 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.121624126 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118967897 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.121239096 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.149143174 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.246757114 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.150150738 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.119401696 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.119756651 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.148934463 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.2272731 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.156371367 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.116446783 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.122928509 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.111081973 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.279194884 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.120799741 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.143645464 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096299629 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.116008232 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.118851054 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.290621247 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.145882506 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.121964206 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.120381883 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.122267551 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.156254946 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.123818116 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.122761917 seconds)
  done (took 5.694264434 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.128949722 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.134302917 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.137708204 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.216780904 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.150121063 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.162161016 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.139715324 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.134486354 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171064807 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.115302548 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.129195349 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.180797093 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.131265454 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.124330564 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.142594115 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.133435689 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136224444 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.144742753 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.124166728 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.13235247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.163767047 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.133079194 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.136822388 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.152945583 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.114217548 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122409591 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.152364113 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.12608255 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.122792576 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.128518257 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.145552375 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.118587369 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.115506246 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.178498361 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.116044599 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.155641699 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.141716759 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126929614 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.127860653 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.179841089 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.117626807 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115467728 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.171631523 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.16993724 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.143259843 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.129392858 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.125997996 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.12843988 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.143432344 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.134241983 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.154757751 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.144285723 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.13470405 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.112957354 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.143222508 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.123571887 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.11413129 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.146804194 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.130556638 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.116796698 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.166920463 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.123490657 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.12494018 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.144002513 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.127903603 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.113382487 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.113061109 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.148244889 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.142501524 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.120765763 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.180350886 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.115243078 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.1259964 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.157268379 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.126732432 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.126739714 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.141675594 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.128138475 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.125540302 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148361132 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.130063475 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.118361905 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.116407928 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.16069684 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.134716945 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.127875927 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.156279519 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.128410001 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.117641429 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.145867157 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132339017 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.115059815 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.14879511 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.12891062 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.114237013 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.147214934 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129958654 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.127931879 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.111779855 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.169331754 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.117857109 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.114440931 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.168173609 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.119035123 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.120025496 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.153310629 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.158122009 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.114797596 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.156002002 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.128633728 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.114872442 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.15132394 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119375401 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.113619221 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.160176139 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.132323153 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.122901828 seconds)
  done (took 17.161603518 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.359195446 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.343120843 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.1891138 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.427941798 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.128175438 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.274485743 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.342839563 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.345693266 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.114492644 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.178564102 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.176153979 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.311845902 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.1147147 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.1756651 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.346178999 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.401298491 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.176703673 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.153310265 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.181058367 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129146763 seconds)
  done (took 6.074159068 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.139449574 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.149748946 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.167594257 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.142615459 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.124821728 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.16126637 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.115324287 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136495443 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.157025811 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.126194265 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.118648815 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.160625586 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128697486 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.131903059 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.159946532 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.149039533 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.121903939 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.149791656 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.1379459 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.119616251 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.131455295 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.142530801 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123722733 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.16588973 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.135078539 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125421774 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.143159671 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.121991027 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.121943757 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.123652258 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.149828059 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.133451867 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.122679184 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.134393042 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.127932734 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.129828511 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.152528839 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.118833165 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.119832184 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.147221944 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130368867 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127762371 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.122031805 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.130396728 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.135376444 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.111832381 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.127262564 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.157349116 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.107951269 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134730936 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.156106357 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.131197157 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.12326922 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.164437962 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.123501906 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.131141518 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.154116873 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.131334461 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.119773014 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.141393267 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.115168276 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.1181454 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.122758252 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.158890728 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.1279121 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.134057719 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.160477033 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.114719963 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.118400975 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.148578227 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.119897971 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.129112712 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.164152043 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125428553 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.124785829 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.156157542 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.12441295 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097241142 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.123308036 seconds)
  done (took 11.831740142 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.143618413 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126127348 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.133588635 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180222304 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.130159452 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.120979942 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.154903496 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.135864721 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.129842058 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.163810232 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.13022993 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.127887958 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.167701489 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12697386 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.124925556 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.161487588 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128593887 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152069635 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.165476836 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143412288 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.129435967 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.151032052 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.127659623 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.12639554 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.174464024 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.126729426 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140887167 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.160280705 seconds)
  done (took 5.206568369 seconds)
done (took 53.622670164 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.337175079 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.539698303 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.317256789 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.315397456 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.371816716 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.331009601 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.3134981 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.320438828 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.787900897 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.284006403 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.31438064 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.313142963 seconds)
done (took 29.75319083 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.363139737 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 2.29088895 seconds)
    (2/2) benchmarking "String"...
    done (took 1.597788 seconds)
  done (took 5.087891214 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.323906066 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.3080431 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.554581108 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.306659086 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.306792391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.31013874 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.305615805 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.308873673 seconds)
  done (took 16.603894812 seconds)
done (took 27.576126373 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.327590428 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.493207553 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.543087759 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.287374324 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.306858237 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.30524932 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.307092332 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.320301627 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.313484022 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.287233364 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.70492603 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.564279169 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.310045785 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.668200772 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.284087001 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.329876654 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.305770522 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.543412326 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.307466548 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.344259078 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.282739875 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.289181431 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.340986817 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.302840926 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.312188457 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.317102155 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.312888582 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.307699659 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.48918642 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.318285454 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.337808215 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.305741662 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.305453385 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.30621916 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.320676074 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.313004548 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.49077239 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.312922561 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.284995329 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.326815582 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.503353892 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.312551452 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.310810095 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.310427116 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.290334446 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.33297349 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.312095402 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.418087484 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.329667875 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.310764612 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.381452828 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.670424152 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.325567646 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.316971165 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.31606296 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.525131802 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.320185132 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.362440158 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.33267846 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.322097688 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.309982936 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.317150732 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.336751925 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.322520154 seconds)
  done (took 150.225887708 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.307072309 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.313932168 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.310851561 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.373551391 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.313219661 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.31227013 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.311449919 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.308077391 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.313715012 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.312917408 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.312186096 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.308880866 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.312844996 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.267899646 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.320935714 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.326409145 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.314736143 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.310409649 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.33741701 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.308420831 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.308370188 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.313883257 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.322284314 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.306184545 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.346087047 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.384205744 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.330797063 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.341673676 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.320077039 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.304523564 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.344481657 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.358749692 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.899041391 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.179466964 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.313127778 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.325928631 seconds)
  done (took 84.199322979 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.309701384 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.309268042 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.31036804 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.339501559 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.309218757 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852902825 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.854091017 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.275231859 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.319452345 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.579363655 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.495785541 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.307390124 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.397383333 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.320730902 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.309368262 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.319913144 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.33115425 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.310817413 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308104075 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.843657607 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.324205225 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.346365055 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.480132936 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.317593877 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.338375606 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.695544605 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.30803595 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340559039 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.636190281 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.349818915 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.307891684 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.624064061 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.379652669 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.418433694 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.309425494 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.338725088 seconds)
    (37/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307297069 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.311730331 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.588883333 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.311061706 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.312076889 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.31442152 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.895909141 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.311549172 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.847846172 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.315837755 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.207173059 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.310505916 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311751682 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.307334524 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.948576874 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.318779086 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.311467048 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.31359799 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.313653016 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.310692248 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.3413725 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.305156585 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40441202 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.315510898 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.315084243 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.344417238 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.314459977 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.523370224 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.316400232 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.313472543 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.371018705 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.413426836 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.993431186 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.851094879 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.315358075 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.405123168 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.429492525 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.313830228 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.312542412 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.314458505 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.311705561 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.423102805 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.313179929 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 5.959522944 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.482539041 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.329715505 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.560651795 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.412081796 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.31500905 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.64637863 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.319083456 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.312477812 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.987093589 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.406678201 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.316134185 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.313626191 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.312787377 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.313654914 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 5.962750666 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.848404157 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.539230516 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.318820946 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.214884589 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.316680767 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 5.153950676 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.849151681 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.96911523 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.319260177 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.423144194 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.485344412 seconds)
    (107/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.332241163 seconds)
    (108/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.316831951 seconds)
    (109/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.567726266 seconds)
    (110/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.320082428 seconds)
    (111/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.372251628 seconds)
    (112/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.316455709 seconds)
    (113/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.314823977 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.71329897 seconds)
  done (took 385.201164921 seconds)
done (took 620.829572797 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.149138482 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.106155741 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.251424178 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.116004689 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.094628362 seconds)
  done (took 11.928553725 seconds)
done (took 13.1386654 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.501854277 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.500988322 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.375941328 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.503624514 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.349981573 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.519080082 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.486178119 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.335550993 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425245559 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.396315755 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.424540213 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.365967159 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.351827536 seconds)
  done (took 19.747392443 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626993734 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.326975656 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38107451 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.593304157 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.361720166 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.60952086 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.644006311 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.326766302 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.484177108 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360248866 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.339653664 seconds)
  done (took 19.268025141 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.618543295 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.329275325 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.385091969 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.585186517 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.362612816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.61486453 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.649141256 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.329500695 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.480814923 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.3431972 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.3384675 seconds)
  done (took 19.250372802 seconds)
done (took 59.47658221 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.356683517 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.415078933 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.352187063 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.335590292 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.333992098 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.334585436 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.337744675 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.335540379 seconds)
  done (took 12.015784144 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.335212794 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.33518869 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.334412234 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.333321464 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.335815735 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.334454359 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.334018192 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.334900115 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.33424289 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.335032791 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.33571398 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.333239484 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.335117209 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.336138712 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.335490166 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.335727336 seconds)
  done (took 22.572645691 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.338184833 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.334213063 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.332540069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.334998204 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.335937415 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.335615196 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.3380702 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.335432427 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.334696085 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.335750957 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.335845053 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.33689749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.33588868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.335192433 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.337855041 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.338407804 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.337046085 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.337546286 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.339777334 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.337110949 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.336908855 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.338606396 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.336766433 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.336198028 seconds)
  done (took 33.291732066 seconds)
done (took 69.093450158 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.324230351 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.320516993 seconds)
  done (took 5.862497084 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.395654824 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.394925154 seconds)
  done (took 4.009378039 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.338125802 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.33702692 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.338920639 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.337152369 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.337341249 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.337482377 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.338833818 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.337926852 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.337695031 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.33804513 seconds)
  done (took 14.596850207 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.338098533 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.337728866 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.337064675 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.337306203 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.338912555 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.338903221 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.339214602 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.338603067 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.340648995 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.338204512 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.338905094 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.338258994 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.339595074 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.338291891 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.337926196 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.340142391 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.338062083 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.337903277 seconds)
  done (took 25.311716784 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.3504217 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.358203046 seconds)
  done (took 3.927485044 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.46595611 seconds)
    (2/7) benchmarking "second"...
    done (took 1.380628328 seconds)
    (3/7) benchmarking "month"...
    done (took 1.443871114 seconds)
    (4/7) benchmarking "year"...
    done (took 1.435485746 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.382834608 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.361176041 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.380945194 seconds)
  done (took 11.06938716 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.327059502 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.603638017 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.778466018 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.480152992 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.316364875 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.337199832 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.318399455 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.337267628 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.33834482 seconds)
  done (took 15.05603179 seconds)
done (took 81.048887908 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.336415802 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.34794009 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.343163611 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.347422794 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.679301434 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.383994 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.330647817 seconds)
done (took 16.9871734 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.314917237 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.323396067 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.304488069 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.350817726 seconds)
  done (took 10.514349391 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.326069713 seconds)
    (2/2) benchmarking "read"...
    done (took 1.651236236 seconds)
  done (took 5.198265317 seconds)
done (took 16.931293999 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.340800325 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.340468486 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.341988049 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.339715311 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.343235221 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.340332452 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.340027904 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.341495387 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.342840471 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.343346269 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.342446642 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.342504733 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.339702321 seconds)
    (14/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.343432055 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.341224176 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.340663272 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343254396 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.342098542 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.340877761 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.34071863 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341504818 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.342295258 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.343057088 seconds)
    (24/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.341157697 seconds)
  done (took 33.420013924 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.342526021 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.342678101 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.342103714 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.342156045 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.342705351 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.34393822 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.342175998 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.343567245 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.343382171 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.342358617 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342903974 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.343132571 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.343915029 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.343357277 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342648631 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.342463237 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.344185535 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342698239 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.342424635 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.343225586 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.344143555 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.34305794 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.343713173 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.34404811 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.345222478 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.343927002 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.343717887 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.342729779 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.344027205 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.344600707 seconds)
  done (took 41.5206558 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.350514853 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.351303381 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.344454895 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.344293946 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.344969033 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.344209273 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.344711967 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.345344044 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.345195228 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.345667759 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.345878733 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.345056574 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.346165396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.344821055 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.344861007 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.346027918 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.345571923 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.345543535 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.345388595 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.344685353 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.346011312 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.34560484 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.345360515 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.346350732 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.345252542 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.346625899 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.346066532 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.346792279 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.347762913 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.346120449 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.347710285 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.345476216 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.346161832 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.34616065 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.348310615 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.346343363 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.350545086 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.353349467 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.345868899 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.346277776 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.346060101 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.348446061 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.346910134 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.348953498 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.347247494 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.346138272 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.34880064 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.347062728 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.347042379 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.347009898 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.347105891 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.348755266 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.347927544 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.347893388 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.347070927 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.34873323 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.347837604 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.348389224 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.348357998 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.348134051 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.347348561 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.348156534 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.348193936 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.349149827 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.347711032 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.349246233 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.348824858 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.34916379 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.347380313 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.349809407 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.348182708 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.348886303 seconds)
  done (took 98.215214615 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.349692178 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.34940109 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.34886008 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.348162818 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.347811553 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.349384497 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.349646448 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.348327487 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.351260226 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.363440026 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.348851475 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.349076474 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.348488679 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.348950258 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.347983351 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.349239899 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.349947402 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.348900832 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.349769449 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.351219404 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350631946 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.349402732 seconds)
  done (took 30.927420869 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.349709901 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.351720239 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.347848254 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.350060145 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.352400152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.350156567 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.34989156 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.351782359 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.349880756 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.349702883 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.350742758 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.350303011 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.351199654 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351180216 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.350208775 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.352009217 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.350998138 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.350882341 seconds)
  done (took 25.540163825 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.351828101 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.351102312 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.351457525 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.351221499 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.350567348 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.350854211 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.351225474 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.351718876 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.350657194 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.351382966 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.3509659 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.352579481 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.35068685 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.352366129 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.352329498 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.351891361 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.351120486 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.351396526 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.352250914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.351410991 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.351544549 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.350922014 seconds)
  done (took 30.961126358 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.351357137 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.352007194 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.350926801 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.351514042 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.352159641 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.351196276 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.352942484 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.35229537 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.356232196 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.351706111 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.352167626 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.352554912 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.354931419 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.353201868 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.35355862 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.353717238 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.352102426 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.352507866 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.354037936 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.353531902 seconds)
  done (took 28.284816694 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354505776 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353452595 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.353141211 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353887807 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.352758823 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.354991279 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354125918 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.353981168 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.353948632 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.355068744 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.355029266 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.355265253 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353670302 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.354810494 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354085575 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.355361424 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.354211174 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.354702296 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.35375535 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353935639 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.354937067 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.354515653 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.356434067 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.356039239 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.354772553 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.355081466 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.356320155 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356109774 seconds)
  done (took 39.162126469 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.355601355 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.353676744 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.35497248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.353417123 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.356160905 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.355565945 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.354810025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.356185548 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.355778249 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.356067484 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.356786536 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.355295456 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.354996961 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.354950983 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.354896227 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.358023846 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.356847501 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.356071206 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.356050838 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.355254207 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.356517305 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.356993958 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.358844738 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.355047659 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355721771 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.359120097 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.35743153 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.357504282 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.356056752 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.356535204 seconds)
  done (took 41.91399764 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.374688232 seconds)
    (2/2) benchmarking "in"...
    done (took 1.3759594 seconds)
  done (took 3.985618831 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.355443633 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.357966091 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.356748941 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.355765978 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.356094051 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.357177808 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.357940228 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.358031207 seconds)
  done (took 12.090493663 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.349367841 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.358279906 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.357904136 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.358374111 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.357921753 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.35113287 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.358603134 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.363137435 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.352847902 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.352756694 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.356951948 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.35699371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.354110825 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.354256853 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.351644885 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.354929803 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.363112236 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.360033474 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.359436444 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.361743215 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.360439948 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.355154148 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.357196359 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.363006677 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.353429903 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.363040198 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.360700968 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.36408181 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.353596051 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.358051979 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.354730866 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.364325715 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.359854697 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.361215496 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.360046501 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.361264288 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.363041989 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.35998705 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.361201776 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.365433944 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.361634262 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.361140952 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.356306058 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.358410802 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.358992293 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.365739877 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.36032009 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.360590171 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.353899037 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.359293876 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.368892701 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.352724296 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.363472841 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.357879534 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.359425002 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.365154996 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.368708891 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.355820562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.360358769 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.364491274 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.373078698 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.369771177 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.360754924 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.366916287 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.364829347 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.376718808 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367303977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.368305541 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.364914487 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.3627798 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.363440196 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.373781734 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.374778026 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.367446419 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.363698196 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.363157598 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.356097466 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.366022784 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.363923717 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.366566848 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.367598862 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.364893415 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.364358351 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.375560611 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.359782799 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.368610745 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.364793287 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.363865554 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.357310871 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.367685988 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.372874297 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.363780472 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.356835806 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.358668416 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.361488498 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.366851217 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.357466341 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.360677197 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.366361421 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.36462802 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.363475885 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.35961577 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.367912509 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.370060713 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.365486705 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.364887449 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.372518615 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.358879183 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.368723912 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.372492263 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.364561221 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.358843043 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.363100935 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.369180255 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.360451168 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.367746156 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.370170558 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.362238455 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.371817572 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.365483572 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.365963388 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.382254412 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.372570437 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.366382829 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.363465125 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.373844018 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.366718497 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.364763698 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.372946279 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.365813027 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.366932567 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.362897723 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.373461109 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.360792427 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.369352596 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.362512284 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.370293566 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.367502614 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.368640605 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.36405398 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.368243339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.364866638 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.366962051 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.369631711 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.374474555 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.363533818 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.374525147 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.368170173 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.366521958 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.368906876 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.372140845 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.369714213 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.363181901 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.371383723 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.362620208 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.371425964 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.362926527 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.373544818 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.368671148 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.368612064 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.369775971 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.361520879 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.366779513 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.372061947 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.36829731 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.370938834 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.372723623 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.369320493 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.370628906 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.362043287 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.370917229 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.360891527 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.364392425 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.374170623 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.369488016 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.369674592 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.368432555 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.376037695 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.371046235 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.370013251 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.366087411 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.371279539 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.374217953 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.372934833 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.378338602 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.370351451 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.370133233 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.36362764 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.365073012 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.373265681 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.367041509 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.376915825 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.376187738 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.382100366 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.366499223 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.373138325 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.365306296 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.37310198 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.370640149 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.378393553 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.373822437 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.371578855 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.364524073 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.373752505 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.366857072 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.375522675 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.364475241 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.372614197 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.372337998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.372323676 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.372107581 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.367136688 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.36996931 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.374858008 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.372117693 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.372726173 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.365519765 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.374687207 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.365205459 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.366807587 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.376460416 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.373471735 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.373789516 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.379398665 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.371518478 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.377609169 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.373138398 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.368848913 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.375333795 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.370294475 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.373862906 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.376284764 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.376216876 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.368192978 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.380329109 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.377753265 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.368006002 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.373968115 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.382435069 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.374932385 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.368822406 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.379297155 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.375492209 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.375756755 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.374072789 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.368257599 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.378296776 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.377599534 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.381738996 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.36732696 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.378176305 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.369924851 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.376665742 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.371540251 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.375128296 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.374869507 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.378674011 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.382935263 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.375802351 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.369767213 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.377743598 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.374424403 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.37571456 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.369902447 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.381509246 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.376776402 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.377295678 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.373335953 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.37502872 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.380285402 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.368602688 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.377497775 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.368996164 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.384575609 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.396896446 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.377314463 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.380145146 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.37961326 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.377897247 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.380287679 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.372764917 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.373182403 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.375573157 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.373440327 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.372823536 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.380486606 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.371143416 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.380976306 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.375971612 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.379606565 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.380101632 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.376790713 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.371662018 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.381918425 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.377427574 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.378092354 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.371706482 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.378113536 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.374950253 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.381016534 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.379016149 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.374305283 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.384312702 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.382751738 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.376409737 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.375463018 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.373835728 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.37296175 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.376284594 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.384390812 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.374245766 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.386922988 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.374396715 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.379420402 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.375495282 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.38421248 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.390965185 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.377540486 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.38741546 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.381375196 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.37176143 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.374148453 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.383137945 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.385124892 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.39300337 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.374856137 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.384420367 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.381839387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.382716367 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.380837492 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.380884305 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.380864473 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.380885363 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.386120158 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.387070826 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.378239739 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.382024878 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.391015824 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.381809742 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.380549499 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.373684872 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.383697801 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.390596686 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.376580774 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.380036735 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.377080583 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.383232628 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.383380729 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.382919429 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.381788175 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.381648868 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.386198753 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.385966281 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.3869664 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.382727508 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.387941338 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.392721386 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.387470062 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.393540259 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.377606754 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.388827762 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.383589533 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.378037294 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.378011806 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.378646114 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.385844455 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.375870065 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.387185183 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.384875588 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.38015501 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.384831548 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.39007684 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.376203896 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386998716 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40203456 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.37695818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.388553666 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.38409436 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.376643681 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.386146736 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.384402377 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.377333062 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.381396317 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.384015149 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.391070274 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.378934315 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.387423474 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.378467766 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.387751982 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.3846048 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.384387127 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.38477638 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.385826998 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.379538979 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.385839585 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.384710499 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.394537484 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.380148062 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.385287154 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.380664499 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.392394889 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.396212403 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.382053207 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.390528117 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.386338965 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.380022382 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.382993321 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.389928553 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.380657381 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.389148651 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.378756446 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382771496 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.385413828 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.38789377 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.389221836 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.388676788 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.379604991 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.381066615 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.388743324 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.386970468 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.386956967 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.384173654 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.39433319 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.3787272 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.380679981 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.389213903 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.38109558 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.3907856 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.382139097 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.387783369 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.385074175 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.390679602 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.388562098 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.387193617 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.378855513 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.381780696 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.394451936 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.394191707 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.388365685 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.385953677 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.391393707 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.381044126 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.386454906 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.389125186 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.383755136 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.385487024 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.390810288 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.383952318 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.383755446 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.384484434 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391468261 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.393562256 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.393725901 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.383395849 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.395003275 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.397976063 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.396156779 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.383108829 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.386985506 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.386121728 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.391804347 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.389966279 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.383672207 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.397889137 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.396301387 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.394992778 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.389166971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.391537514 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.383366441 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.394280166 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.391793468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.386991692 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.397374757 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.387336867 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.396848305 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.39116667 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.390382038 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.382864089 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.384524049 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.386303452 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.388437472 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.393496915 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.391079346 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.395171143 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.390717294 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.395841911 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.390649982 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.391553199 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.390442875 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.383977372 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.393187427 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.384774059 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.392609391 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.394707391 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.387268476 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.394720518 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.391846983 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.386210944 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.390852594 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.397709442 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.392520491 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.386444711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.391515734 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.397836295 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.402676215 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.393259678 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.387872257 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.390447654 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.397123383 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.392697772 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.392650433 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.387385735 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.404128051 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.406435761 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.388068538 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.39102489 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.396343811 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.402307473 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.395816579 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.394197113 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.389634611 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.394468995 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.399803295 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.392995796 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.397765876 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.400063896 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.389942958 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.397484886 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.389976281 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.393595583 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.396702057 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.405775302 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.395132547 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.391123901 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.406178441 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.405993966 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.396531162 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.41723665 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.403058899 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.394826475 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.400373432 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.386971997 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.395808683 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.390889676 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.400927043 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.395080668 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.395950859 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.395425306 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.388327493 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.396240869 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.402935343 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.405744322 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.39461908 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.388072161 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.391845845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.397317857 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.395356914 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.395432118 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.396482868 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.396919095 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.397312536 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.390627795 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.407307807 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.414617389 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.402414923 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.396387703 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.397386186 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.39719878 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.400484484 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.397926104 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.403744356 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.397189364 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.396597726 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.395531492 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.405509067 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.400156229 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.392411904 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.394088725 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.391978138 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.401265778 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.40729337 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.418621906 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.399978499 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.40100825 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.399232978 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.397058565 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.392404282 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.400226552 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.398320451 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.391839106 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.394032746 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.40195187 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.398607145 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.397561444 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.392770141 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.403863397 seconds)
  done (took 823.0185538 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.400163241 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.398337419 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.398697454 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.398381644 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.39807278 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.399249938 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.398116258 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.399039762 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.397679593 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.399163407 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.399199902 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398267532 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.399646723 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.400068342 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.399318592 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.39887832 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.398695212 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.399316136 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.400621264 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.400344908 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.398823787 seconds)
  done (took 30.648952508 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.399783155 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.399630696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.400565199 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.400823186 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.400196249 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.400358742 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.399824718 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.399229473 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.400682291 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.400129099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.39998148 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.400119445 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.400164966 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.400165281 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.401113714 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.401311195 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.400368328 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.400717343 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.40218838 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.400846638 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.401722423 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.401276101 seconds)
  done (took 32.081033107 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.402568849 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.400930705 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.394871271 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.405541281 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.400757755 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.400626589 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.400701584 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.400407459 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.402973766 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.394787958 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.395497641 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.39639584 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.399015863 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.407381576 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.397855688 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.406430332 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.402862221 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.402965643 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.402579515 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.402121812 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.405212931 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.415246009 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.402381641 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.396606447 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.405019144 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.402833095 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.402596864 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.404645836 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.395431509 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.405700924 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.403563938 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.397546776 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.406426277 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.406160177 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.400081269 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.405901772 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.404324235 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.402814953 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.402302477 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.404171516 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.421993118 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.404663169 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.408109374 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.41844684 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.405038016 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.398811353 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.408582487 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.404192418 seconds)
  done (took 68.628755957 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.403471148 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.404856846 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.403475203 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.404585776 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.406331103 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.40389705 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.404519854 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.404408416 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.403556775 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.404236192 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.405033513 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.406397167 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.405142275 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.406160358 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.404070392 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.403528366 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.405553669 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.405544404 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.405007101 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.404561422 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.405831711 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.405246065 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.40525727 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.408077195 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.406578589 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.40588522 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.405541854 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.406097286 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.406684324 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.406090279 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.404817899 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.407576081 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.406366617 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.406953949 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.40820779 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.407292607 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.406903368 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.406534508 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.407293571 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.405793834 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.40758607 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.406024182 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.407143308 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.406576123 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.406830592 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.408210411 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.407021652 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.407234557 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.407985546 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.406946692 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.40774019 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.408061796 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.408163545 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.407171437 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.407588911 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.409203621 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.40814513 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.406854892 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.409039405 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.407998212 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.407760128 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.407603602 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.408409409 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.409011598 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.408905324 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.408747606 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.406744206 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.408242604 seconds)
  done (took 96.916779865 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.40852418 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.409830699 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.410170014 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408115542 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.408100604 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.409602077 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.40925901 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.409643705 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.409168622 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.409048797 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.40929668 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.409678605 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.409927836 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.409937758 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.410314388 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.409289682 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.409668115 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.410011846 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.410689865 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.408871101 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.41073188 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.410633507 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.410462243 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.410319627 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.411131546 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.410349858 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.411241485 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.409886787 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.411244714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.411259945 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.411104588 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.412171663 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.410639944 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.410395809 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.411754452 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.411765826 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.409886117 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.411237712 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.412065261 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.412288868 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.411453889 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.412814856 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.412014391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.413291753 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.411062177 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.413168405 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.412659368 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.412647594 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.412651623 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.411723201 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.412657226 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.411324173 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.414615669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.412267586 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.412460714 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.413027574 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.413028779 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.413369368 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.412847218 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.413804994 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.414118324 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.413493073 seconds)
  done (took 88.769442397 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.413959155 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.413536847 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.413649455 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.412197491 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.41352499 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.41481016 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.413399925 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.413741706 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.416000795 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.414341954 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.413896238 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.412824797 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.414980301 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.414484574 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.412458566 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414202583 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414521778 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.41267438 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.413935509 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.414600349 seconds)
  done (took 29.558563254 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.413818586 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.414070311 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.413920819 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.414775865 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.41429499 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.413427322 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.41483156 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.414679758 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415973234 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.413482004 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.414535007 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.415937892 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.413527568 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.414878388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.414653633 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.413899015 seconds)
  done (took 23.911895367 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.413814107 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.414249166 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.415185756 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.414993886 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.414919126 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.414942546 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.414437026 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.415441905 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.41514386 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.415404625 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.41546663 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.415784459 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.41625573 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.415453389 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.417024217 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.41739568 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.417273009 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.415305587 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.415377411 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.415309564 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.417156608 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.416447943 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.41719028 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.416281412 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.416455514 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.416497759 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.416941524 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.416818053 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.415783139 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.41671774 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.417724927 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.4173256 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.417849067 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.416868138 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.417648784 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.417938901 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.416696599 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.417072134 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.417358128 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.417904019 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.417902619 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.417281388 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.418554354 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.418583751 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.418791751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.41976465 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.417560677 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.417912775 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.417991154 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.418733989 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.417789476 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.419365137 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.419915112 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.418800736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.418658113 seconds)
  done (took 79.209938008 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.419367265 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.41764676 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.420011942 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.417506446 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.417668579 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.418984532 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.420116239 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.421525269 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.419229304 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.418949571 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.41923114 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.420423751 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.418344116 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.418860612 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.421267452 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419760387 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.4195153 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.420457457 seconds)
  done (took 26.834366324 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.421543306 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.420347797 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.419877944 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.42114808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.419549165 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.420064005 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.420908581 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.419659293 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.420648051 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.420742614 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.419412409 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.420661587 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.42195172 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.421603459 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.42121855 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.419725768 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.421509547 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.420225571 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.420640694 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.421356502 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.421121663 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.422499646 seconds)
  done (took 32.542836657 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.412648434 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.410896104 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.412885744 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.428966483 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.430612389 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.413040976 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.412888495 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.411589362 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.436092137 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.456257018 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.449444619 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.427971782 seconds)
  done (took 18.391452181 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422343802 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423425854 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.422112952 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.422061545 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423757629 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.421532859 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422956269 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.42301319 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.421538247 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.422740034 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.421672965 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.423463588 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423541234 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42274038 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422417055 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.422611792 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.422659758 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423629222 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423419869 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424022061 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.422228774 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.424158663 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424357589 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.423225897 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423207913 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.423871457 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423406961 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42410829 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.423899905 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.423038675 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.422917429 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.424805047 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424987206 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.4249841 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.42283084 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.422998688 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424722833 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423808923 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.424866868 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.424351919 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.422847976 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424592538 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.423260136 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.424168676 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425936908 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.424326846 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426056703 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426483055 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42574156 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.427732101 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.425330381 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426120772 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425853837 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426706268 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.426308901 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425663462 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.42537656 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42576552 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.424638304 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.426758312 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425747061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.426033773 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425768458 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427120913 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427403525 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.425793595 seconds)
  done (took 95.290791724 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426771507 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.426279043 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.425442993 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.425669293 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.427094808 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426498535 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425156777 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.428869014 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426155072 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427199336 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427031725 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.425962922 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428084669 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428128635 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428481226 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.426697475 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.426988839 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427463704 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.428152978 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428319803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427805379 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428102894 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.427468251 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.427854657 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.426495329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429522921 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.427600215 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.427884513 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.426794397 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.42925035 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428026001 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.427494668 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.426725082 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.429868909 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.429482851 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428638871 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.42920903 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.429445344 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.428435234 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428141501 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429521735 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.428498707 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.428563113 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429117128 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.430935241 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.428909581 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.430430919 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.429573926 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.429270506 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.42991723 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431078924 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.431476256 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.441750758 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430370603 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431469538 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.430307524 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.432069334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.431040261 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.430843341 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429687189 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.429513516 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.429987381 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.431540472 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.430074713 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.431252844 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.431461594 seconds)
  done (took 95.598388806 seconds)
done (took 1928.643483709 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.587602373 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.541704571 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.421366927 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.436167764 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.422547883 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.42218459 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.433676199 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.420592767 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.422889136 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.422514641 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.421206067 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.613197331 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.453340833 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.422659727 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.422100916 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.517960403 seconds)
  done (took 28.679351481 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.450222799 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.431197149 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.542941229 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.429998771 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.450232192 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.618404079 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.48797175 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.430708328 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.602338516 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.449734304 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.423667284 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.447663068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.424727959 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.429847261 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.451149797 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.619537185 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.685179307 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.429997067 seconds)
  done (took 31.102273601 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.882886173 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.423723113 seconds)
  done (took 5.603316025 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.447445907 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.427810535 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.428466472 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.424377227 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.417425994 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.423847394 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.425609833 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.423920574 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.449012239 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.557232432 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.435164605 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.439137939 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.446066288 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.428018164 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.436240166 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.472431228 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.587162534 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.437422835 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.434250439 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.432616902 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.425261151 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.522137156 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.471286207 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.439389369 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.556638012 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.431657859 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.434608157 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.435230689 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.545025502 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.438802112 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.428663526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.427413577 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.432272963 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.427058047 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.977638636 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.422694753 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.469564893 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.437793994 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.437596974 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.560184182 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.428739568 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.435670351 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.421361859 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.991893071 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.540847093 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.555266769 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.439234363 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.43476873 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.429865551 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.49509925 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.429214743 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.430545544 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.49688288 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.264155482 seconds)
  done (took 90.793664515 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.482754181 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.423107127 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.606760776 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.447001525 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.437225117 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.426548963 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.427662334 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.718384272 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.451971602 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.424664919 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.74917485 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.067670113 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.431347931 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.48654859 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.46507558 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.477591793 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.426013784 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.44121555 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.428122906 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.42528981 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.001201857 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.425267072 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.428956994 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.514224575 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.466521676 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.977653052 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.429322949 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.42930964 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.445844606 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.423697252 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.03155772 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.440945503 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.476037904 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.42474451 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.718752902 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.829128543 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.795608541 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.436944231 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.467238077 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.42619255 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.463831503 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.969954622 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.818093915 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.430372742 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.425895577 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.969654031 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.429914105 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.425986316 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.435610953 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.69536793 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.425454515 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.427275677 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.429865585 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.429990536 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.425742001 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.484948192 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.481423819 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.983751752 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.43040472 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.425945451 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.439932923 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.424816903 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.434980983 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.43192809 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.429202982 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.819902272 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.698636575 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.431054104 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.815486358 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.028373499 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.431432554 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.111263917 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.431436106 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.461593183 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.474680244 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.427084342 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.427162959 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.984210917 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.45831251 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.425857743 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79574524 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.433432792 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.738476302 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.446214873 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428266456 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.024344474 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.43166241 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.475300117 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.433699796 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.427948034 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.428459687 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.430269799 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.724455142 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.483506256 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.429664964 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.429061512 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.478932362 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.428711717 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.430591646 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.429314339 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.097712968 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.435237609 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.429694665 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.449713036 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.434374668 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.43268369 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.429770226 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.428196599 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714769843 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.430562277 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.44865857 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.432694678 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.432679549 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.429040279 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.52298194 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.438329714 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.757930593 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.439160037 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.430239776 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.436401552 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.443100044 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.451882239 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.429263662 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.452206369 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.421834826 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.729333815 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.44740843 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.447593033 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.430139752 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.432714809 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.431739218 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.448700532 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.48273801 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.435288102 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.249610304 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.441434001 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.447501785 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.429888227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.44066036 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.432473693 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.433449646 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.43357142 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.740081601 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.724837489 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.685075657 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.433433156 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.431645084 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.265742482 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.452750992 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.616372964 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.449446873 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.431658696 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.714199152 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.667043922 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.435299012 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.431255545 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.436790309 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.714929755 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.433584233 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.778564736 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.057406526 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.438552879 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.443686856 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.25772918 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.264744963 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.435507638 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.438679288 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.738687015 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.450431843 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.432512308 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.432831734 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.434814189 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.433195046 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.439439115 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.445945859 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.434332847 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.434457963 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.746702727 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.632380463 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.453493526 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.435745945 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.980562785 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.455964858 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.448489253 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.446839934 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.434524331 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.433709255 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.488147545 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.437433007 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.437541677 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.434067433 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.442339284 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.005713147 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.435885405 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.455314577 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.630710713 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.195734055 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.441462312 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.436610277 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.439356862 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 2.48885232 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.011288026 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.484692157 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.757091839 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.439619013 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.478538044 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.436216023 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.454570185 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.012592768 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.447250097 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.434094132 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.198066742 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.441442152 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.917236453 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.436654042 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.437749988 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.131323428 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.442386107 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.437274528 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.435941557 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.444145782 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.74598367 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.439051045 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.472936039 seconds)
  done (took 521.941078078 seconds)
done (took 679.414110635 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.437216874 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.438051889 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.442693613 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.443759311 seconds)
  done (took 11.074950043 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.455751121 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.444615176 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.452904976 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.444337561 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.453690814 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.442915878 seconds)
  done (took 10.008585048 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.438195598 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.438648456 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.44329825 seconds)
  done (took 8.634520047 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.659388353 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.466763162 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.813464982 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.456389183 seconds)
  done (took 9.71144556 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.454647725 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.455313756 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.454784868 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.455343609 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.454741841 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.456068454 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.456032933 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.454680621 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.456485924 seconds)
  done (took 14.41088092 seconds)
done (took 55.15210307 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.520497234 seconds)
    (2/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.420459633 seconds)
    (3/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.553725788 seconds)
    (4/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.472541008 seconds)
    (5/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.572017285 seconds)
    (6/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 1.817932209 seconds)
    (7/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.516154593 seconds)
    (8/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.419213968 seconds)
    (9/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.425846362 seconds)
    (10/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.473988644 seconds)
    (11/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 1.752938113 seconds)
    (12/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.433915194 seconds)
    (13/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.59286623 seconds)
    (14/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 1.82019825 seconds)
    (15/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.535973095 seconds)
    (16/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.441770811 seconds)
    (17/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.515766429 seconds)
    (18/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 1.987271118 seconds)
    (19/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.422941948 seconds)
    (20/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.59598861 seconds)
    (21/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.43073487 seconds)
    (22/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.486149005 seconds)
    (23/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.541010881 seconds)
    (24/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.730863792 seconds)
    (25/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.525802225 seconds)
    (26/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.600001047 seconds)
    (27/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.539945477 seconds)
    (28/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.563085063 seconds)
    (29/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.601504038 seconds)
    (30/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.4234672 seconds)
    (31/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 1.818208037 seconds)
    (32/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.630263767 seconds)
    (33/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527938977 seconds)
    (34/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.662021354 seconds)
    (35/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.516070699 seconds)
    (36/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.542355649 seconds)
    (37/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.812998014 seconds)
    (38/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.616889745 seconds)
    (39/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.566678715 seconds)
    (40/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.598878792 seconds)
    (41/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.479032538 seconds)
    (42/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.660820933 seconds)
    (43/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.561902668 seconds)
    (44/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.516170893 seconds)
    (45/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.572584823 seconds)
    (46/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.483852427 seconds)
    (47/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.658448897 seconds)
    (48/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.530570965 seconds)
    (49/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.694832175 seconds)
    (50/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.558303348 seconds)
    (51/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.612631878 seconds)
    (52/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.568308593 seconds)
    (53/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.774454328 seconds)
    (54/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.569820845 seconds)
    (55/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.616864319 seconds)
    (56/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.635806688 seconds)
    (57/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.484165575 seconds)
    (58/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 1.77580262 seconds)
    (59/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.523932227 seconds)
    (60/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.636827627 seconds)
    (61/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.563907235 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.611653648 seconds)
    (63/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.425174313 seconds)
    (64/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.624239354 seconds)
    (65/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.541487453 seconds)
    (66/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 1.892638438 seconds)
    (67/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.702316369 seconds)
    (68/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.601994286 seconds)
    (69/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.474947558 seconds)
    (70/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.446607318 seconds)
    (71/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.445572835 seconds)
    (72/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.642154545 seconds)
    (73/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.605303158 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.701455849 seconds)
    (75/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.625062786 seconds)
    (76/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.441657619 seconds)
    (77/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.509739721 seconds)
    (78/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.423480109 seconds)
    (79/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.444249473 seconds)
    (80/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.492261941 seconds)
    (81/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.445616109 seconds)
    (82/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.537695654 seconds)
    (83/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.531073203 seconds)
    (84/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.563101665 seconds)
    (85/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.536573371 seconds)
    (86/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.601742791 seconds)
    (87/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.440300081 seconds)
    (88/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.492098511 seconds)
    (89/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.538263031 seconds)
    (90/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.676835111 seconds)
    (91/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.431316423 seconds)
    (92/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.63186711 seconds)
    (93/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.424804988 seconds)
    (94/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.668429552 seconds)
    (95/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.574211413 seconds)
    (96/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.48671305 seconds)
    (97/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.46403006 seconds)
    (98/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.523024647 seconds)
    (99/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.599402669 seconds)
    (100/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.421342042 seconds)
    (101/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.428764882 seconds)
    (102/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.743940897 seconds)
    (103/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.427813116 seconds)
    (104/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.569814409 seconds)
    (105/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.547570261 seconds)
    (106/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.424050855 seconds)
    (107/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.676576286 seconds)
    (108/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.526551984 seconds)
    (109/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.525433927 seconds)
    (110/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.55115443 seconds)
    (111/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.556587452 seconds)
    (112/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.683475395 seconds)
    (113/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.486581096 seconds)
    (114/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.424628361 seconds)
    (115/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.49625591 seconds)
    (116/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.602018218 seconds)
    (117/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.480364601 seconds)
    (118/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.423083286 seconds)
    (119/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.423100695 seconds)
    (120/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.532357248 seconds)
    (121/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.006410708 seconds)
    (122/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.461731259 seconds)
    (123/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.426525932 seconds)
    (124/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.526282703 seconds)
    (125/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.5826719 seconds)
    (126/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.541097276 seconds)
    (127/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.486494911 seconds)
    (128/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.517444028 seconds)
    (129/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.429156875 seconds)
    (130/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.48886756 seconds)
    (131/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.623383425 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.482660245 seconds)
    (133/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.511906305 seconds)
    (134/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 1.991164633 seconds)
    (135/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.625115992 seconds)
    (136/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.431369181 seconds)
    (137/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.529587622 seconds)
    (138/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.553734786 seconds)
    (139/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.572081298 seconds)
    (140/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.428398936 seconds)
    (141/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.768349128 seconds)
    (142/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.716275755 seconds)
    (143/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.714916688 seconds)
    (144/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.615451029 seconds)
    (145/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.427409645 seconds)
    (146/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.504454978 seconds)
    (147/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.566083861 seconds)
    (148/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.550204567 seconds)
    (149/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.763076918 seconds)
    (150/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.455491685 seconds)
    (151/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.451877397 seconds)
    (152/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.737991992 seconds)
    (153/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.669723689 seconds)
    (154/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.520880878 seconds)
    (155/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.700991975 seconds)
    (156/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.55771335 seconds)
    (157/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.548250485 seconds)
    (158/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 1.769323559 seconds)
    (159/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.542473025 seconds)
    (160/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.495811636 seconds)
    (161/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.449642225 seconds)
    (162/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.457169262 seconds)
    (163/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.574964041 seconds)
    (164/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.490035691 seconds)
    (165/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.635123702 seconds)
    (166/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.485956655 seconds)
    (167/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.428562705 seconds)
    (168/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.582552804 seconds)
    (169/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.440135216 seconds)
    (170/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.558797806 seconds)
    (171/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.427493845 seconds)
    (172/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.757609843 seconds)
    (173/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.482993467 seconds)
    (174/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.537497676 seconds)
    (175/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.429268224 seconds)
    (176/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.48240001 seconds)
    (177/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.578336197 seconds)
    (178/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.651455279 seconds)
    (179/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.532050357 seconds)
    (180/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.453283319 seconds)
    (181/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.524481176 seconds)
    (182/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.481510805 seconds)
    (183/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.657663871 seconds)
    (184/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.452163764 seconds)
    (185/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.520792867 seconds)
    (186/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.741805316 seconds)
    (187/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 1.749651289 seconds)
    (188/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.675590278 seconds)
    (189/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.433421816 seconds)
    (190/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.561819305 seconds)
    (191/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 1.82784189 seconds)
    (192/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.434003325 seconds)
  done (took 349.39176362 seconds)
done (took 350.704220494 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.495038621 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.557294697 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.463386751 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.463201526 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464839335 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.45650761 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.490151357 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.46363884 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.475378821 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.476220334 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.452490076 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.476501699 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.478472403 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.472952614 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.49597393 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.463541623 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.464143727 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.473113038 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.477272155 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.478765804 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.46612022 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.464097135 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.491359282 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.463601876 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.472054969 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.473855572 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.470626403 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.456685996 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.477653762 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.479430469 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.455967459 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.475946548 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.48132884 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.475606746 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468458606 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.474683732 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.464639973 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.559976014 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.485463515 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.474639101 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.473191132 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.481815017 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.47197452 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.469738747 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.476348701 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.492087312 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.474142558 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.480168753 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.458232392 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.461684256 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.502736829 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.477329025 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.473576438 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.456093197 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.463250034 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.486468823 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.4759541 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.487021222 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.473365113 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.468871623 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.50303748 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.488796303 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.479712049 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.474345645 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.473908842 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.481515831 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.476118179 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.483195617 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.47401769 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.470943067 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.469337686 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.475598197 seconds)
done (took 115.687961512 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.588603526 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.465094634 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.63058509 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.475571678 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.634902573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.593008208 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.473484931 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.475632332 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.474729805 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.263777008 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.474435824 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.473532631 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.464076644 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.47372169 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.589824028 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.472588134 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.473091181 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.164787958 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.475404803 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.601758164 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.465396785 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.475604412 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.474927399 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.277865518 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.464295543 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.460413295 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.602493525 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.473767604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.175003202 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.459127746 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.464262168 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.176339175 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.602610379 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.495454669 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.48458411 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.485298689 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.637441485 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.478623656 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.591861335 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.592191855 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.625961721 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.51387903 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.460589069 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.464954589 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.47862433 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.478020388 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.475202004 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.503624014 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.467267781 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.476963531 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.167748186 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.486885675 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.48645868 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.476169726 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.476684491 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.496128294 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.478896141 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.479052803 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.603992542 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.478081764 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.594716515 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.280237278 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.268820468 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.477704401 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.464528021 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.478067211 seconds)
  done (took 117.547510184 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.539399473 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.543623929 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.586678463 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.473861829 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.518031251 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.584358424 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.473930382 seconds)
  done (took 12.052633601 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.476487313 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.479736038 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.516963183 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.516521325 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.477843174 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.643254708 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.478662542 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.481140261 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.477772987 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.521398577 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.477334413 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.481038141 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.488672903 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.468487218 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.517561683 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.482363909 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.588490684 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.472470954 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.478773793 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.625622373 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.479294233 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.487355988 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.52104328 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.482167515 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.480010863 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.47777272 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.255534196 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.47924683 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.480669522 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.480219077 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.479020223 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.537394318 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48094938 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.471449639 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.481470368 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.618988064 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.480521944 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.47939703 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.481150207 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.472813441 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.479568964 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.480835676 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.481647365 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.480895771 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.479238 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.49581198 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.481919848 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.480242814 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.481540156 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.480903143 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.523473631 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.48066524 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.479958095 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.480190333 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.527820891 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.489138395 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.482512107 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.480471131 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.480894889 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.481437 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.62793202 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.520485129 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.481804092 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.5184289 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.479826033 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.481480445 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.480910547 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.482422455 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.564375594 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.482139389 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.520081378 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.480678681 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.658710455 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.497340005 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.482689874 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.476154526 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.478282061 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.482704461 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.471316551 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.4796802 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.483040422 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.475194463 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.47967918 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.482903815 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.483880365 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.691227148 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.614732631 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.483599272 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.489246209 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.482012046 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.482970217 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.527354597 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.483389434 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.483948369 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526208895 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.59428407 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.526088266 seconds)
  done (took 151.760891393 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.486804091 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.488396472 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.478636626 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.503885875 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.477905747 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.474519861 seconds)
  done (took 10.249668326 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.478202824 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.487905458 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.484963752 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.485009815 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.485574447 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.487422647 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.485222524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.478066405 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.489037023 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.485656943 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.486101471 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.487488408 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.485075597 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.486336594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.485806808 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.485720422 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.485349839 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.485113975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.485644846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.486472416 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.4749218 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.48744399 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.485321262 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.478538725 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.489769604 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.486805713 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.5012155 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.48493464 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.484759309 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.484647388 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.490242581 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.485794447 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.481053587 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.482889382 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.490217647 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.479103079 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490776344 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.487729579 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.485865397 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.486231963 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.488381968 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.487369753 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.486520124 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.488032513 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.479873109 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.48443483 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.490505339 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.502050365 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.487476729 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.489082285 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.488283644 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.487827041 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.488941355 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.489734048 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.48089629 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.48518346 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.491742521 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.489048764 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.488252695 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.4824451 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.489861258 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.488486919 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.48120987 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.491290628 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.487833075 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.490676105 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.483469937 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.492354477 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.490583591 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.49064001 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.491106223 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.488617212 seconds)
  done (took 109.389012076 seconds)
done (took 402.329309171 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.00336894 seconds)
  done (took 4.348370693 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.573538716 seconds)
  done (took 3.91876484 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.123248683 seconds)
  done (took 24.473491911 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.517800757 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.485650425 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.494649245 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.476435707 seconds)
  done (took 11.318963981 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.777895728 seconds)
  done (took 4.122494101 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.485944321 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.497956219 seconds)
  done (took 6.330427114 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.759048564 seconds)
  done (took 4.103043789 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.809257062 seconds)
  done (took 4.160475549 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.485794462 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.505457397 seconds)
  done (took 6.3439715 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.454470844 seconds)
  done (took 3.799551312 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.241757184 seconds)
  done (took 21.586462837 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.50493295 seconds)
  done (took 3.850766158 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.50913717 seconds)
  done (took 3.854505699 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.260598136 seconds)
  done (took 6.604847257 seconds)
done (took 110.158329246 seconds)
(17/20) benchmarking "array"...
  (1/12) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.474810414 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.476245364 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.476605666 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.475816406 seconds)
  done (took 11.248197312 seconds)
  (2/12) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.555332693 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.554773521 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.563806459 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.549421633 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.549093527 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.5580586 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.516215527 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.518488916 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.547487113 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.543263405 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.558359797 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.547761454 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.557147654 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.51900251 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.543128243 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.560005217 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.548002555 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.563988777 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.519333593 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.550719722 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.492137895 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.550968693 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.545036658 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.492019663 seconds)
  done (took 38.348571333 seconds)
  (3/12) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.002815606 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.554804272 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.638067665 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.534470414 seconds)
  done (took 8.077667901 seconds)
  (4/12) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.596943497 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.598281698 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.614892858 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.651461035 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.698784859 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.61206924 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.515625682 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.51509804 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.500742873 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.598633367 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.683731277 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.596238305 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.813284486 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.49426104 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.811947502 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.493887331 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.493265794 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.5980017 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.64722176 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.6754759 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.495884199 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.598208242 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.601116408 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.597011334 seconds)
  done (took 39.849126558 seconds)
  (5/12) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.502503815 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.511276723 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.495681947 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.508663945 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.49653237 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.497466424 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.49640447 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.500023043 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.495006706 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.496041373 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.495816863 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.508788066 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.494045344 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.49793152 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.502821401 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.497874865 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.497989185 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.527351219 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.505452191 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.496370483 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.495693636 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.502980627 seconds)
  done (took 34.36957506 seconds)
  (6/12) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.481253258 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.479768535 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.833533443 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.736686417 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.482035011 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.486197595 seconds)
  done (took 14.848448841 seconds)
  (7/12) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.562794827 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.71505276 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.493514268 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.868147948 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.956582186 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.495169939 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.489746874 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.748800607 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.078522185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.074990981 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.553370508 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.566239611 seconds)
  done (took 21.954303036 seconds)
  (8/12) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.573994499 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492506679 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.498423957 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509664905 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.490755562 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492506265 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.492020396 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222820001 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.499520589 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769645299 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.498544751 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577937327 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.739233254 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.492279539 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.501385624 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.46664402 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718646809 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03555734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496862473 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.492436287 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.543672728 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.493746736 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.515537981 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.721902327 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.498032178 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.492384254 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.756112555 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.494149775 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.798068255 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772639394 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773558854 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.495572058 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769245036 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.166788547 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600636679 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.721661883 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.502029855 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.495317533 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.464481721 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.494922236 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.507611137 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495302939 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773658821 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.496214867 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.495037487 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502482934 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229693374 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.503234263 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.495806074 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.497542464 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.777015801 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.577459211 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.500247443 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.495079296 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552326073 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49451079 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.501457119 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.62694713 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136814576 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495713377 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.504553334 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.500199136 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.492027321 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507811421 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.186569762 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.503419442 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.502838104 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.502029453 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496752128 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.502184286 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.517431021 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.495826433 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.516097379 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496556152 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.317860931 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.506673982 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49836181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094194474 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512981819 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.502335829 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.723980013 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.495630395 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496678286 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.496576432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.496496039 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.290770089 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.504207691 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.475944104 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538271613 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.224754586 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.724387171 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.522129724 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.526521783 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.719426404 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.465252464 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.497949419 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.507481145 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.498392522 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.51869664 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228677377 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49680131 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.503345217 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.746908667 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.711175383 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503258394 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.479615057 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.003333105 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51011758 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.527155015 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.503221556 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.729810524 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174353323 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789119547 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51174489 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532548 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.499727011 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.350782179 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.512756023 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.510093642 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.512117623 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793904294 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.391999435 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.500143855 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.572649046 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.509993498 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.500335801 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.498697721 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.501116862 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.500233039 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.707668124 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506162397 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.785318503 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.501005904 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.49935955 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.503471631 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.505400352 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.5008918 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.721703909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513363153 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.781509168 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500535592 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.50265766 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.50148256 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.724726475 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.50147313 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.508529804 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842730316 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506982792 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.509130365 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.789596174 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536211576 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.614339316 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.53327061 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.506199957 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.754727568 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.507967992 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.507936768 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.502289569 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.503379844 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503609357 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.511653451 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52058326 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176787195 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.486643242 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.510461982 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.505236511 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.518880877 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.57656593 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511856591 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.732422952 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.506534498 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.49662378 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.528869963 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.516851035 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.730080239 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.785322308 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.506803443 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.676894957 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.004790101 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.180820026 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.523200283 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.503111859 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.503793476 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.504489492 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.506230013 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.503450137 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.505386901 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.733748866 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.796410166 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.525892092 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184284317 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509282175 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.506855914 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.510150554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785186588 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.517176192 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.507088884 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.513008608 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525275576 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506362382 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.810441184 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.726018022 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.52062581 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505490665 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.024492945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.511423892 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.506676421 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.505693719 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.532498169 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.507708557 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.371137714 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.84721892 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512925087 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.789070169 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.506745007 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.523959128 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.505998805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.507953514 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.527796027 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.514113515 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.515584198 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.734815373 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.52255574 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.509118434 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.148226174 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.335996408 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122912919 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.511437333 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.507568223 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.513586224 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.239470499 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508202001 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508616171 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.767966166 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.244241691 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508377771 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.0131891 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.507500117 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.318827219 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.796954001 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.736150422 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.510345777 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.510684999 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.793019762 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.722261743 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.536851906 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.513441407 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513321919 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.477809148 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.088533346 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506854166 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.687455949 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.2429267 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523736045 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.511314362 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.511535282 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.523116011 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922040562 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.509346894 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.508610735 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523569389 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.514059381 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398645471 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516602016 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508822214 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207814613 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.524131448 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.02012165 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.509695616 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.740409663 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.798979129 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.768812228 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.511205348 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.52025012 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.76077828 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.794275911 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.512761712 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.523576797 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.141484347 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.374678289 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.519350701 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.511236479 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.363062068 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.527874804 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.826231161 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.516061649 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.516873344 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542575191 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.51352853 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.511496885 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.512336363 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520480132 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.48840796 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058169283 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.507839511 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.529860764 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.512680607 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516309908 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.759068284 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.527671723 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.19396533 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.745002925 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.508158146 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.546134802 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.516605441 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.510983968 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.481542535 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.512908631 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.512324153 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556308761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.732964302 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.523938812 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.480829281 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.593435933 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.724528062 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.512526758 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.513138429 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.774828727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.516857641 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.522774717 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.343922943 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.54274023 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.513531475 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514409963 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.510754075 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553425655 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.587819243 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.743732287 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.803550633 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.800839815 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931661566 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.51243115 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.517269878 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.530209547 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.596243203 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513547038 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.533317803 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.52041834 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.186488408 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.34559127 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.193600481 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.801108926 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.51738476 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.525849013 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515579133 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758883942 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.515886293 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.791932908 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.514618969 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.508173812 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.537876586 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.515753676 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.516616655 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.734053162 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.792453095 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.51605289 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.528401955 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520730678 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.516096996 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805568591 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.730472369 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068346315 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.125333891 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521258914 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.516142281 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.254796651 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.793923573 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.517907799 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518620952 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.518774832 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.533868031 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.535669755 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.526035742 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518197963 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.742096857 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.800344137 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188173352 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.800840808 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.547024097 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.517860604 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.518452856 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.766166869 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.361465768 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.748669824 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.201872392 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.319157296 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776708833 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.59384327 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.748037943 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.521421224 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.756860849 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.529739939 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.524019376 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.518704473 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520143815 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.519468876 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.801467477 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.197760614 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.773420451 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.525451901 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.529568382 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555323293 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.750095636 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.745923344 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.324828976 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.739458657 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.806425 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.528247104 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.520900152 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.204845033 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.806064546 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.521033612 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.527062976 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.763172975 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.526009381 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.555634183 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.395634195 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.52037691 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.129184432 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 1.736274733 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.542550063 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.53016196 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.321700838 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.20532345 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.521629139 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.077150354 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.526612752 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.520225625 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.802863843 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.528767602 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.526194271 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.805786057 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.527576762 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.527069577 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.757319028 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.201005049 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.343355227 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.54772126 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523536495 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.52535859 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.523947059 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.535836118 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523691904 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.531144902 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.9416731 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.523393323 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524438946 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.537438504 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.523172624 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551509902 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.526751095 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.523372299 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.529814014 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.5070331 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.494003621 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.533977406 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.655336685 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.105440465 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524362931 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.138899139 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.858582218 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.77201875 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.531644001 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.497418327 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.529757383 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524196041 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524170653 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524784521 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.543308465 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.131047567 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.537883931 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.8162382 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533488064 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.736395638 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.737390501 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.524112072 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.757537755 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.536033897 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.550389053 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.49241402 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525675862 seconds)
  done (took 1050.27282358 seconds)
  (9/12) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.56290941 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.565548688 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.562298064 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.566158626 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.576936553 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.542070219 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.590642046 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.540845993 seconds)
  done (took 21.887097496 seconds)
  (10/12) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.516673645 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.530628014 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.522231633 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.53032798 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.524437499 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.042161064 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.522710484 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.531328375 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.540668743 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.519985216 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.52318045 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.211219784 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.532966344 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.520175059 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.533248028 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.528235327 seconds)
  done (took 35.021960994 seconds)
  (11/12) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.395958799 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.635104974 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.442728683 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.566690368 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.552227719 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.537804091 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.789767582 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.520086576 seconds)
  done (took 27.820588159 seconds)
  (12/12) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.533807364 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.532228389 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.533137785 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.53239771 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.532935587 seconds)
  done (took 9.045231719 seconds)
done (took 1314.088847646 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.533069252 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.534426391 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.533980675 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.533110144 seconds)
  done (took 7.515859728 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.496046881 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.496099513 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.494851044 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.515825586 seconds)
  done (took 10.384870905 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.284296433 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.086812099 seconds)
  done (took 5.753062494 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.06313732 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.064210621 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.060076053 seconds)
  done (took 7.567334934 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.826742995 seconds)
  done (took 3.208825333 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.491519159 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.525200376 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.524565237 seconds)
  done (took 8.922852013 seconds)
done (took 44.734061003 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.518743474 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 3.285729956 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.696695139 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.518594323 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.702022907 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.715857342 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.724737405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.520253783 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.52820115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52962524 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.520169195 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.691562019 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.760837396 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 3.286137315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.759190016 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 3.286749219 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.695718806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.532568253 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.520526959 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.521059141 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.724980291 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.525828266 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.528152594 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.529879734 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.712370571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.746298434 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.523392343 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 3.287277905 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.521009851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.523185935 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.699272837 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.53485403 seconds)
  done (took 87.554236929 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.521470641 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.52163495 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.523112183 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.539694165 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.521211499 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.526331387 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.538742182 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.522899538 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.551330388 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.52777735 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.523673131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.528967196 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.522424613 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.522348802 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.52497094 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.523048878 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.522703134 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.526231325 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.52433287 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.528226662 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.52654378 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.524109843 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.522238312 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.525118666 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.522877449 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.526528845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.540440341 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.522611041 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.541658817 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.523642187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.525263503 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.557814884 seconds)
  done (took 82.284844959 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.538162643 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.527202426 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.525232508 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.541309062 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.523755053 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.524964893 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.542407542 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.523830124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.542513662 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.542017923 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.525238849 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.525445906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.52516409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.538143281 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.530007013 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.5347299 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.524928138 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.524758099 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.525162406 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.540763332 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.528341112 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.535235181 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.526505585 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.535015872 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.5259882 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.539889122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.530716685 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.524987973 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.525928395 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.532367033 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.541371438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.527864565 seconds)
  done (took 82.386907312 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.768949091 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.542948708 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.545805456 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.536731944 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.545854412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.543373234 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.53722314 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.773541929 seconds)
  done (took 16.181771867 seconds)
done (took 269.787943002 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.534832401 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.058992257 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.565138879 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.535476112 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.554171612 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.564737691 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.758353735 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.567611666 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.742615499 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.537871284 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.555817495 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.545922587 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.40128503 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.684559939 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.374867237 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.506997078 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.480339037 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.53966502 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.128961825 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.774293999 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.566103945 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.533419428 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.385862079 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.494497508 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.517583979 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.604225582 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.605659416 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.697561625 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.658994401 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.603298554 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 2.056988984 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.539157345 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.541292357 seconds)
  done (took 69.606439825 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.53601287 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.545917233 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.544520503 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.546100264 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.546752177 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.547320198 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.536651044 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.545157257 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.545800558 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.5449773 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.546575116 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.547072806 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.546156287 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.544841682 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.545545175 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.518826122 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.538343147 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.545290207 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.536995623 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.517867916 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.546341849 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.546238628 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.547395837 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.545686824 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.547336861 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.547799472 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.546669075 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.547356335 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.54592762 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.546998148 seconds)
  done (took 47.68501493 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.547920708 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.146943954 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.320350711 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.545696896 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.53907347 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.543601036 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.84240589 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.552953682 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.542045009 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.541997689 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.033368021 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.555294737 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.57608686 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.323259955 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.548748077 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.549771843 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.54877671 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.539889421 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.156043424 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.556682245 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.842174467 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.553184325 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.852925516 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.551608444 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.544732795 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.543619974 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.546576048 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.371435311 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.564385801 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.046620026 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.377734842 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.853637258 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.30635047 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.382707042 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.384161289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.555379564 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.550378148 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.054410399 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.544738418 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.542793314 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.851761264 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.544498436 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.336960209 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.2382236 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.565496638 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.550067473 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406970563 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.049285386 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.804862994 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.551686262 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.37029273 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.546093996 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.553871617 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.544561185 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.805035657 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.54502206 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.542058115 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.435629882 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.548685204 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.851928487 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.553074201 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.545013735 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.155007065 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.542765345 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.152168986 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.546093892 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.552889385 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.546021614 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.344141664 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.550938818 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.257115889 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.56272623 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.551347853 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.049773038 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.153570927 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.457289458 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.548491379 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.160884064 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.346739077 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.872486118 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.554965511 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.350930224 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.87649395 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.551834608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.555638978 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.556089054 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.55287967 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.617485716 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.853226239 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.172267997 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.258970815 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.454650183 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.858014088 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.555478723 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.546512022 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.442225084 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.55423596 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.555397659 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.33552539 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.263483946 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.564500276 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.554080537 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.243541405 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.568540075 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.857034492 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.551649651 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.383046372 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.551146878 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.621202161 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.555474415 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.554142385 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.551305663 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.858632416 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.552470139 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.554568474 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.243223381 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.081859382 seconds)
  done (took 214.280897734 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.539748122 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.547418474 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.543133511 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.563846135 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.540353865 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.552479079 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.542021133 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.542136268 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.547389934 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.541243265 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.541562473 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.550848295 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.548361758 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.540402508 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.541025832 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.547189693 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.540828595 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.544842146 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.547858085 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.544723188 seconds)
  done (took 48.306918612 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.557289942 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148060396 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.123213257 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.558460155 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.556493512 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.548180301 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.609903079 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.5646847 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.556427476 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.872016197 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.732851287 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.56480045 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.557932578 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.557153147 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.123521627 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.530354013 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.870547332 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.151518437 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.558887177 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149947748 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.529832316 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.557820177 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.547492069 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.150277248 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.88269782 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.861282648 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.617343157 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.155886638 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.55930896 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.557142486 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.152270626 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.560574728 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.55209748 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.137452839 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.559649692 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.572970506 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.55997676 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.613316827 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.620221895 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.877829874 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.157979866 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.870304508 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.572146957 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.738409493 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.562303645 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.530961195 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.164250432 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.561576891 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.531223109 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.561943132 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.565746283 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.141076279 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.557908786 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.140775122 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.565768089 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.561226136 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.154776482 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.142219257 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.133293907 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.734996412 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.555926905 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.863707701 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.566587341 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.166676253 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.563396875 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.561825294 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.561795364 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.740448614 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.160106224 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.863926565 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.875667235 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.876346867 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.563759675 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.625613765 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.56732361 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.876075222 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.62698009 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.963551628 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.879974471 seconds)
  done (took 140.328810962 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.839240517 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.673004319 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.962698664 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.142979237 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.077988584 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.698618207 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.672565686 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.810639081 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.565228865 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.663323349 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.243100096 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.651876969 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.330250088 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.623904581 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.66987051 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.689358572 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.971120593 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.544594571 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.218750268 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.219471066 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.559689512 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.668583168 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 2.094305174 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.770039593 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.549307474 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.177559108 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.542596805 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.096458859 seconds)
  done (took 58.132506987 seconds)
done (took 579.727098604 seconds)
SAVING RESULT...
DONE!
