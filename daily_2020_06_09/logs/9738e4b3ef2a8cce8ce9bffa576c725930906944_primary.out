cset: moving following pidspec: 1849
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.333273702 seconds)
loading group "string"... done (took 0.579459346 seconds)
loading group "linalg"... done (took 8.152902637 seconds)
loading group "parallel"... done (took 0.183580799 seconds)
loading group "find"... done (took 1.260162665 seconds)
loading group "tuple"... done (took 2.028669289 seconds)
loading group "dates"... done (took 1.308965134 seconds)
loading group "micro"... done (took 0.200898096 seconds)
loading group "io"... done (took 0.937481961 seconds)
loading group "scalar"... done (took 40.382676951 seconds)
loading group "sparse"... done (took 12.023556213 seconds)
loading group "broadcast"... done (took 1.020624769 seconds)
loading group "union"... done (took 14.62120368 seconds)
loading group "simd"... done (took 5.273346317 seconds)
loading group "random"... done (took 9.794724349 seconds)
loading group "problem"... done (took 1.592774649 seconds)
loading group "array"... done (took 22.802355581 seconds)
loading group "misc"... done (took 1.73333259 seconds)
loading group "sort"... done (took 3.538383501 seconds)
loading group "collection"... done (took 18.483309514 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.541028025 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.126117805 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.141161168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.123128894 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.15332795 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116883847 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124605974 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087210173 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.899226264 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.151876385 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.114592758 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.432553586 seconds)
done (took 5.400728463 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172378551 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.087633034 seconds)
    (2/2) benchmarking "String"...
    done (took 0.079305759 seconds)
  done (took 1.219672703 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066804346 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126311225 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067436575 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068584876 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068954732 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.068496066 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.068099318 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.068286146 seconds)
  done (took 1.591254743 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074498706 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068512308 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.066373191 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068635845 seconds)
  done (took 1.337544966 seconds)
done (took 5.45145794 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.793583277 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.21009632 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190345382 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4059996 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.137461284 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.181518666 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.643132314 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.315609052 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.202467392 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.095021145 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.112238636 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.359408919 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.126139444 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636685833 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.080210968 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.099089222 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.142449988 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453145497 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.075031277 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.08725977 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.095016969 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131639303 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.088039484 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076650256 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.151978828 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070352433 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.143455524 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083963441 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069507514 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.219958735 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.175229879 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664857599 seconds)
  done (took 10.410639031 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101669724 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099127427 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.06869555 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.125354888 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.098477318 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.07021276 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.076345114 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067861578 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089590051 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.128448648 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.091027847 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.108180175 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.06673966 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070047902 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.083178626 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.200200215 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080031979 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081990525 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.068677436 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.079375899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.107395068 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.082546743 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.080364852 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.079962476 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129012094 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.170229038 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.096921807 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098037528 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067800162 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.082237141 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115800177 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.127385578 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066791981 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066537931 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125527557 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.095045709 seconds)
  done (took 4.536192366 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.098609339 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.153405284 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091141952 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.139586864 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065653258 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.119399823 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.111227841 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.066360845 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083491677 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.236769514 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.445807076 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.635215842 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.122747665 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.119263344 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.106977203 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070888276 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069490431 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.068084694 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.263998863 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.098619198 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.113021086 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083663181 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070737786 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.069413664 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.065448676 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072120938 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.065583306 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070901208 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.089775407 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.077695102 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.334331662 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.12815609 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068966616 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.830948921 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.165213929 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067969955 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105990203 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.16618416 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096649136 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.143082718 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068732526 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065049216 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.29969402 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067081067 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07439354 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.066886853 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.071409574 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.087377425 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066017648 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.111860584 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.121167321 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.066142216 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066254277 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.166351323 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064805298 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.081885071 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.240098803 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.153384673 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066553781 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.293313298 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.094037249 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072363456 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.067004372 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.187995459 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.117343268 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.06515336 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069112298 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067858881 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071031856 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071039507 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369877737 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066034159 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.915696599 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.071587568 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.080169844 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073041738 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.074294014 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081880971 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081410999 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.094953046 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.072239012 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076388371 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069100315 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067920975 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068859973 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.096304299 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.392363936 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.067333466 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.072479985 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065177283 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.093728021 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098980353 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068006429 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067604238 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.104633949 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07091301 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.06745744 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.070107544 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.122574059 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.07264304 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115539997 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.172935421 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.072278718 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.097396599 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069833258 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101875768 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080678287 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.073347924 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.46972996 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.066009444 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.073201984 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.067787917 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069601397 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069107389 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.083795183 seconds)
  done (took 21.874153316 seconds)
done (took 38.977996811 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.248474964 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.085211068 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.085550759 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.086025457 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086012391 seconds)
  done (took 1.735624387 seconds)
done (took 2.865617822 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12890271 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.102207739 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.066445152 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.10034986 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066169784 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.10281678 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.103820067 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084071627 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099623387 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065881457 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.099992526 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066409313 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066646404 seconds)
  done (took 2.299405206 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084397097 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084210013 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070692352 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083286348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063787196 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.08331017 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0830463 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090480051 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082341613 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07270845 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06323312 seconds)
  done (took 1.988134332 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084141739 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085595501 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070735999 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083311111 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064191953 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086231823 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08310951 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087304716 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082068327 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074392162 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064532736 seconds)
  done (took 1.97947224 seconds)
done (took 7.383875243 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078461039 seconds)
  done (took 1.1873738 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.537202665 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.580093627 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.078662337 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.100559029 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.192778186 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.108822056 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.240638041 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085764596 seconds)
  done (took 8.208714041 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.09681692 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.08280243 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.07067192 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071212795 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.072465073 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.072525307 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.0713773 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.069353693 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070448555 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070860514 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.070670278 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070163508 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070575328 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.072229632 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071414059 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070961877 seconds)
  done (took 2.367884162 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.099611121 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.097478485 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075247289 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.077920682 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074276559 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.072460795 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074944941 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074631981 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.071386159 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.072782485 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.075548498 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073922734 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073552504 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064321741 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075319237 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077605727 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071749693 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075340554 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075326403 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075718179 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075270471 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.06441782 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073492129 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074318444 seconds)
  done (took 3.041474563 seconds)
done (took 15.929036394 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.118320096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.079882206 seconds)
  done (took 1.306983151 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081337071 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08171 seconds)
  done (took 1.286591286 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.079575482 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.064823248 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.086487918 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.075937194 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.06568043 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064770529 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.082853226 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.063558559 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.063562261 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06378841 seconds)
  done (took 1.834269215 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.067195592 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.072677631 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.068645417 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.078697745 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.070223931 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064625922 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.068808957 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.065694078 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.074001741 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063761222 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069129641 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083436022 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.068443671 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084804907 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.068602294 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069946094 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072395802 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068801295 seconds)
  done (took 2.406835891 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.064159517 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.063973568 seconds)
  done (took 1.257511158 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067376467 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063614827 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06591513 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066144349 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063529965 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063082238 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063514266 seconds)
  done (took 1.579168877 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.404312693 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.124786385 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.329045533 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072710249 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.082178755 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252928985 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064917025 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070326981 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071662019 seconds)
  done (took 2.643189379 seconds)
done (took 13.444535869 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.08381367 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.088009465 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.100217783 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.414441178 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.092742281 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068620885 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114578984 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.1789492 seconds)
done (took 2.282429042 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.21936092 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.853311722 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.472740543 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.207291934 seconds)
  done (took 2.662139778 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.354632653 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.082539816 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.078758713 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070062562 seconds)
  done (took 1.731788823 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.069992381 seconds)
    (2/2) benchmarking "read"...
    done (took 0.188776142 seconds)
  done (took 1.392656727 seconds)
done (took 7.145414232 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067362013 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.091619819 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065569406 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06616248 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066032301 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.066440306 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.06615952 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066252673 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06658531 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066065433 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.066128473 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.066484737 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066517581 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066394616 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066695622 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066573331 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06647204 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066595829 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066432198 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066395795 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066078661 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066669442 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.066136528 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066366194 seconds)
  done (took 2.783478749 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083562935 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.0689789 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070373505 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.070044775 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.07108264 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070263672 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070612641 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069065152 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.070438468 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.068323397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.0716423 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.07109062 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.068323654 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071395618 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068439573 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071235533 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070703681 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069133201 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06869541 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071336928 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070699247 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069015918 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071186001 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070422644 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.070758248 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069551316 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067070363 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067434331 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068678721 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069103815 seconds)
  done (took 3.251967465 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.067691555 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.061247806 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.061845949 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070080987 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.060958777 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.062259743 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.061611972 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.062964435 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063546785 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.061996377 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.063218171 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.061362587 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.061668856 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063115029 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.062873475 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067060253 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080889501 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.062439423 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.062270534 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.06326861 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066918241 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.062469713 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062525865 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063041838 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.06271163 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062288914 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.06308679 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.065796125 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063461333 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.062370333 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066243002 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066651339 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062420898 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.067720714 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067596598 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062404656 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067077085 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062295485 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063301446 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062346266 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062259184 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062594136 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.062438778 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.072002841 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.0627591 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064482146 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.062864679 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064019144 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.062974718 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.064669985 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.06229461 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062830436 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064714375 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064210134 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067199407 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.061126422 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.062450387 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.060975184 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.062103084 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.060963091 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062321584 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062249041 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065720725 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063345413 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.080293495 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071694002 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.062252069 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063998287 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063224904 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065970125 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.063948384 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.07839915 seconds)
  done (took 5.790614858 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.087733955 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089056468 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068612597 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068136497 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063424296 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063642534 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.071851833 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063485015 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068773129 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082849925 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063491391 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068108632 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067902239 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067665771 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.06352095 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068288103 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.071717673 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062861912 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.062012177 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066522204 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.062916523 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071171653 seconds)
  done (took 2.686974381 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152357749 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069761208 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108590765 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.074198055 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072822923 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.074980053 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069583021 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069755079 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070064782 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070515917 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070283079 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069952457 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072599888 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070143803 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070192235 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070012961 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069881556 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069992891 seconds)
  done (took 2.548569427 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080456208 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.069774931 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.088506435 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069247683 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069435761 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068467191 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073211102 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07393629 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068448655 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.06878009 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074001916 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068830374 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069257275 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069079316 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068462288 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.06985625 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06865221 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068757483 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074438342 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072847288 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073239969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073953614 seconds)
  done (took 2.734388621 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080443664 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077345978 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083777172 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.071437909 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063708621 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063317347 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069511811 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068333031 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069322789 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067744741 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068457689 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063578106 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070887558 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06840918 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070835259 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068249125 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068270248 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.068556326 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067716023 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063525382 seconds)
  done (took 2.550719285 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085447029 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066222314 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066404779 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072699961 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066279676 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066121877 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071774629 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.064711766 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.064975265 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08618669 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065092423 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065514221 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071850866 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.069308955 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.064685576 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071326584 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071401434 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071269312 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.0651643 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067426587 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.085555384 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.065556866 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071489939 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065078269 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.065158019 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.06530989 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065069329 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069266883 seconds)
  done (took 3.103141574 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06707517 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066454873 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.065779854 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064485498 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064552518 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064887465 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064812304 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06544314 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064633871 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065327913 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.064838751 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065086726 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064650279 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065842632 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066314648 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.066495237 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06670043 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066847967 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066553615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066218853 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065986631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06649209 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065867785 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066368274 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066689797 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065795105 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066537348 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066131196 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065835718 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066120829 seconds)
  done (took 3.13601196 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077298589 seconds)
    (2/2) benchmarking "in"...
    done (took 0.07529609 seconds)
  done (took 1.313959817 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.066489952 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08043899 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062375086 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074003779 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.07202871 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066775274 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072832547 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072219985 seconds)
  done (took 1.723913052 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.088156913 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076977734 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.065973851 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.077448439 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.07685221 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.086442938 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.12878938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06546211 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.076308338 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066422573 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.084269197 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067796175 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.076125994 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071030849 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07644021 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.079319505 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063780105 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.070481021 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.066756701 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063755318 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065973859 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078924018 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.075380365 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.063496985 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070474593 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.093293407 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082092544 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.064800283 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073361572 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078263197 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.076178848 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.06260322 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065808259 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065365098 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063914136 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.076788332 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084737402 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.072632762 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.078466287 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066250811 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.074101798 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063594227 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073780199 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076126204 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081821049 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065376396 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.065838782 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062892003 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066228724 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071554281 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.063094895 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070179447 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062567597 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077678244 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073205317 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080431268 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064239665 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071697544 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.072174291 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.072470447 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077373609 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.071867885 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074994137 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.064691536 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080842764 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.074703316 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077902977 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062875105 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06196562 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063141679 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07966699 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.094019142 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074543216 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.065380442 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.065811992 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063000686 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07224881 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.065810168 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074203851 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.076565647 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065442455 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069833163 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077641968 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069544975 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071767908 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.07146063 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.06338231 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069051576 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06576417 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085638415 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064008167 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063801271 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.066181734 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.080428043 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072441278 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.064858859 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066059927 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.079764073 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.062048232 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065740883 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.065952247 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.070636612 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.078711458 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069224696 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069840865 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079080334 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.0743245 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070487046 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.072250045 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062267499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.0655708 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.066645673 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.076580207 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.061562378 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071054203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.068421292 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064130668 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07624502 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06257998 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.063965825 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076530449 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.075504281 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.062482927 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.061352929 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.070960946 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.063765691 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066339024 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077705806 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.063257191 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06262803 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062087111 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071636849 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.063440488 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071660068 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067583784 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071085375 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.188421933 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064648316 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.071335242 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079533567 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069460112 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072137127 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076017379 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071968866 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.064775137 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077729536 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072471431 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.068226235 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.075253765 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069990945 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063238807 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067729379 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072701185 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.063839184 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072459076 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067664006 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072641694 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.065822654 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064231681 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.070958007 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065749521 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067658146 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070118197 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.06385818 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080748992 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072146109 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063006829 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06231164 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.072307024 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.066661205 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.064671598 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.067269937 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072512956 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.065439876 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063710179 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065439963 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071558816 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.073243727 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068246933 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066085661 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.075072832 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.082457235 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.064391635 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.072525021 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065079147 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066359013 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066230062 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.079856773 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076627935 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069925406 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072328914 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.06252241 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075165893 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078208807 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.067838734 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063628532 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068073274 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069339477 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07728616 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069120755 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.065845182 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063685084 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071188047 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067792581 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.072143495 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064305911 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065749002 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.068568912 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.062398537 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.070234904 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.064359876 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078375969 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071106311 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062600374 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066381161 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.061993924 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.074538123 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061890973 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065065776 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066375294 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.06444143 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.062764542 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.070392813 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060918345 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076447838 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075949668 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070100141 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.067813873 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064143443 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076610137 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070658546 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074095742 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072765761 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075386275 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.080520173 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067686541 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0723432 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.08086464 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.065481359 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.062324956 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074313009 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06346851 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064018087 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064119329 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067005726 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072522333 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.072792718 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075718428 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062419605 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.071944363 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.063868553 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.067511493 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062920911 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.073380983 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071538159 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068175079 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076389939 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06488533 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.064481703 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072282486 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.063778415 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.064467385 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.064739 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070727346 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.065021276 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070307172 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066603191 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.07052814 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06624639 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.062446507 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070267666 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.063914869 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069429724 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072927182 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.0634631 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.07004443 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.070984201 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.193474486 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072449593 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069682931 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068719297 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073538072 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071688615 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070754 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072938245 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063517957 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077055429 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.064941927 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078363714 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070694552 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.062737301 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.070715984 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071929851 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.06953109 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.065155587 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.065561828 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070901325 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.064302862 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071826179 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078297666 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.066534687 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.081455221 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07687796 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071054675 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.07229572 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070863989 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070656797 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067500583 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070036576 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06553275 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.070917862 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.065333395 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.073549355 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072444658 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070076266 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071286386 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.065469005 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.070400879 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.065922275 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062604608 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067221726 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067640157 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065265275 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078200325 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066239433 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06824647 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064169468 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066368987 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064661616 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062522037 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.07300518 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.072856236 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066031586 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075874462 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.06792773 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072294053 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081335667 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062948909 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064414061 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.063644596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.066468267 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078228933 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06555825 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079455773 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.070365164 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068371094 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.062976094 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.065823111 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064515598 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063548313 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063511176 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074451228 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.067252379 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.064810307 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065357335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071919196 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066008061 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.078315164 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064665453 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.070030799 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065753256 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062715184 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.067686991 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.067793049 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072378424 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.065679603 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066463844 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.062790344 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.065006826 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069945352 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.07152741 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065285887 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.071274899 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077477754 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065195537 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072646804 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068016685 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.063369075 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072586057 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.064855498 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.064914558 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067837889 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072902241 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072542236 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.065803592 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079450228 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065140083 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070768176 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06555602 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063366288 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067282871 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065148566 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.064798102 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.06741666 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.065872362 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078288232 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.063386037 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071456401 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070473131 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.068682182 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075417273 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.065655074 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07082261 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069818845 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066096233 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071057739 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.078505398 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.0688438 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072141994 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.065239123 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070153504 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073890901 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067308217 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075962378 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069974572 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.06559195 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070646349 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065615816 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06416368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.064195749 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.063581081 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075105869 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.200537149 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069974791 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.069343533 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065275497 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071031608 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068896152 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079754615 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.072991701 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073409177 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063642895 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063424529 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066084225 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066931403 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0715084 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.072191307 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075299416 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072466896 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069329277 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.064630706 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.079818921 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075446308 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.073539125 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066882561 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.072962255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066411322 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.073128336 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.070108555 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070494841 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066901706 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.073132004 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.071281453 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.068245459 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076005381 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.073474969 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065763526 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071018898 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.07142376 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.071517963 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.063138028 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.065700841 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071800089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074950943 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071956362 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.064878237 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081075173 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066456704 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.069778072 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066986954 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065045155 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072926041 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062227682 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070034782 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.065023914 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06590247 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.063726913 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068608808 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.067103868 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.072831481 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068103282 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063784896 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081731762 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.08069319 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071682645 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065007513 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064271148 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.06405821 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.063700059 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.068212324 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066786168 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071723821 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081515893 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068066689 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068270818 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063633763 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065533897 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073464576 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073415274 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063547529 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.064026189 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.068082315 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07199519 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.077250295 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064196428 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.065117633 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073101514 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.072266708 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.06357229 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068579084 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062889648 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.074017038 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083066174 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.065793973 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071338884 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075502642 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078598141 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.065698512 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063777614 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.066094639 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072350771 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071177063 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.066579883 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.066744312 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.085634498 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073169002 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067589688 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.064292045 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.072235201 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068078364 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.079526777 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066110693 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.065896953 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.074479738 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071990257 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.072910637 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.075330419 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078431241 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.071471111 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071624746 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.064323948 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070299277 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064241503 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067477626 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.065835869 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.065205156 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069033049 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.071584541 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067513749 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081836284 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.079519791 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067057227 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062688048 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066940685 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.066961328 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063183793 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06480527 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.062763208 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.063114248 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.062795958 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.063564548 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.070841272 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073627519 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068485756 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.064923213 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.064846588 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.196997287 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.076711263 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073787665 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072605351 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064040222 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066242296 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.066413186 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.074300722 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067854562 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067184227 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.072094826 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071749462 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071384245 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.063780754 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.07783763 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065283399 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071743246 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067533594 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065952779 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.06569304 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073174506 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06981012 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066814557 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072339388 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072466063 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067669922 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063354207 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063586451 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075098478 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.064011844 seconds)
  done (took 43.263334145 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102768252 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063559723 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062354282 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062479164 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072052531 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063282607 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062197592 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063297768 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063330332 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065720688 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062375447 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062293077 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.070217948 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077763339 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072737792 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066779594 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.0627382 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.06396768 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.078722418 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063463329 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.069775887 seconds)
  done (took 2.682228038 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.072171401 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078818127 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.074805802 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.079441924 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070998735 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.067529539 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074464349 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068217387 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.075171523 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072224157 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074876575 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068814735 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074104169 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074476587 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074653924 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069119938 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077300665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073499409 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.067355859 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.074925311 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067303179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074448475 seconds)
  done (took 2.85916983 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.066153234 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.064764538 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.07158257 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061591843 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.062214939 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061850299 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.065781141 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.061268964 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.064805509 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065339698 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.065841859 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.06729606 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.071288712 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063181232 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068167628 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.062794354 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109490153 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.067061018 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.064583475 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.065200314 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.062801368 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072060592 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.062901566 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063515317 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066705741 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.067808684 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06494909 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063068097 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.064897012 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066895501 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.064234125 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.062689821 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.070953206 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070436045 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066702844 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066849533 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.063975157 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.064869414 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.063216386 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.062918097 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.070479211 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063527112 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.065162491 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071460802 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065632645 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.062718091 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.0709943 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.064356997 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062603122 seconds)
  done (took 4.514229116 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.076780757 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.111933942 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.069504278 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092684082 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.077926225 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.070887898 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070186438 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093677864 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.064735256 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065623002 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.079464677 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.07947516 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066284475 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.067494016 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.069759732 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067293781 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.067854574 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065846702 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070202054 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066393695 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070339126 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071297753 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.078645827 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.078963327 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.067891947 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065947853 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066396425 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.068608927 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078769577 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.070555037 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.06912064 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069477149 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.079197228 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071864184 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066746879 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.066986004 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.079589535 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067045158 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06492764 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063408608 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.065068365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.066733879 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.069741618 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.077447105 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06524473 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.069898281 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065318397 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.06289975 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077106856 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.065047102 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.069543272 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079494712 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.067638443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066627417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.068221343 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.077425926 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065522512 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063742231 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.065838553 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076401096 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064334494 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.067545405 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079356602 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.064462236 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.068881959 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.07849128 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.070484762 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.066272339 seconds)
  done (took 6.251218567 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075087398 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.095474497 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079712208 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080043046 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073090898 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073376042 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072683957 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073249431 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.072985377 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076947993 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073210137 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116510977 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070727528 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07667487 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.075198446 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.074975359 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074598808 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075017844 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.075028413 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074705784 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.07461068 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081461041 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.075259724 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081222322 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077944494 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.070515219 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074818329 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.07512792 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.08146069 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.074716763 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078746025 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074784765 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074900456 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081323523 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.07819507 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.074095361 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064816389 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074780491 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.075230614 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.075190196 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.070497632 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081167889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.074844649 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070828243 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.074754416 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074632687 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080966484 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078587051 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07689381 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07860163 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074585043 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081247077 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074894321 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.075416821 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.081086852 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08429347 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081114726 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081661639 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075011661 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081179562 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081268355 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.083987455 seconds)
  done (took 6.078713025 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080189577 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.072216859 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083763228 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.063340718 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.062994693 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.073545712 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063312693 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06353472 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072249289 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.071623197 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072899205 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.072128358 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.076755682 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071841138 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072014719 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07417718 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072146298 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072090628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070712924 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.073377373 seconds)
  done (took 2.719688752 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078354496 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.082448753 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069205883 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073232137 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068668857 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073404111 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068448766 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069096833 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069622058 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069178571 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07517464 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.074749198 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06939165 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073919959 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.074731842 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073530052 seconds)
  done (took 2.434255144 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.08508098 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.071747014 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.076975918 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.063469187 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06714841 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062508158 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.063187495 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061527419 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062675156 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.075925316 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.062779461 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.074307931 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.063275371 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.062229509 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062864102 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069434076 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062312056 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.06330549 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.063035608 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.076491783 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.069988767 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064288999 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067413897 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.063109885 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068853593 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071085848 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06476594 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.06696065 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064148708 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.064097329 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07041517 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071658307 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064624216 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.064580435 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.062657293 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06330916 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.063082884 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.063433612 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069221283 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.063671409 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.07964762 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068610832 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.064377997 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.064926615 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062519412 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.063772828 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062335982 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069711462 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065232877 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070104236 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.064572276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.066906007 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065357196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072512898 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.067387742 seconds)
  done (took 4.948673949 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080689601 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.06777242 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062189002 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.061425738 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.066874532 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067859614 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.067354714 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067120563 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.0682742 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.06176925 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067932166 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.066834571 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067924001 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067191458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067852085 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067419448 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061638834 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06897534 seconds)
  done (took 2.490131552 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074666066 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067982393 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072902591 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068030795 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068143901 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067751075 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06360211 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.063479985 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063574703 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068548282 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068101249 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067868393 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061988648 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.066230554 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066536557 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066640897 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.066223586 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.062676995 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067629325 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063739407 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067968261 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063886514 seconds)
  done (took 2.742349287 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.097674079 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.084483859 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.139899095 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078956172 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086995391 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.072026349 seconds)
  done (took 1.83615745 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.094207274 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098434881 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066663921 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066588066 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072337694 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069969067 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070112833 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070531837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074953071 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074975296 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070348263 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074822521 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074661799 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076589974 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072466773 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072274821 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070969799 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070147478 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066828274 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081999676 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070581707 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07516913 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070166823 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070656045 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070537325 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079125493 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07695719 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077491777 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071934168 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076912449 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074716706 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072256234 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07709594 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07653124 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067348781 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076696793 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071888831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081877749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073581994 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07665798 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067020572 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073174317 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07483385 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074199885 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074983639 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070231733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074015693 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070726809 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071438311 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086274407 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074434357 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078280528 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07434652 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076881335 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076689696 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083449601 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076954666 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078298282 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07461708 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076623723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078517063 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07449334 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07836971 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076762123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073375075 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077374974 seconds)
  done (took 6.221649318 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106395424 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068944274 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071557798 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0749238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076551999 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070392224 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07075991 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070660472 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070414665 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067525391 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10522523 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071207757 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077018551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07721641 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070727661 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071195802 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070595252 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076987641 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067848683 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081921688 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070386436 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07679211 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076906383 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07691666 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07568407 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072611393 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070567798 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07048346 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070490425 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070742081 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074292258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070708728 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076551702 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067499899 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076957511 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070467178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070506461 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075111827 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070447407 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07276581 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076757988 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079675699 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070063529 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070224911 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075440592 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.070620953 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070113422 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067463894 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070141047 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067309713 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075431213 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075086741 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07505352 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076857744 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070861401 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072045781 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071937044 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072533817 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072089453 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074244759 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078669025 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073457253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083608659 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07227374 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072291213 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077218561 seconds)
  done (took 6.183937887 seconds)
done (took 127.982972015 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.21004403 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184338632 seconds)
  done (took 1.656394353 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.076151804 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.106496546 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083972768 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.133484586 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.070946762 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.105470515 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.103610782 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.083846441 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.07102625 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.070888231 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.070667442 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.073313973 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.137282814 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.071174137 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.071037026 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.074244064 seconds)
  done (took 2.68476277 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.107279896 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.216818388 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.107504876 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.068908118 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.104122211 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.077385978 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069225799 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.08190637 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075518336 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.071208445 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.077079272 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074823205 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070984706 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.074931692 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.0756925 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077023213 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.07331191 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.07704198 seconds)
  done (took 2.866732048 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.106404323 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.096950158 seconds)
  done (took 1.489646961 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.177101246 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.132809782 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200751049 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342801015 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.150866538 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.429095793 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.137888533 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.138215643 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.112471653 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.134776211 seconds)
  done (took 3.239053303 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.106441344 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.202278586 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.29691813 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.120364571 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075847873 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.111470543 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.121896356 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.082295139 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080897482 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080473574 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.080745764 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078028575 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.100115329 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.076414595 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075869643 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.077689655 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103470867 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.076438503 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.077366192 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07839881 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.106394868 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.070472395 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.076752507 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07446 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078456772 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078419686 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.071091105 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.06949571 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076085797 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075629502 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079017941 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.108874636 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078273558 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105360438 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073773231 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105805284 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078098819 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073961458 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075494218 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.074313435 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077607912 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.077066847 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.078460302 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077803602 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.070854509 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078092887 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070687101 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.069145032 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080021413 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.07145011 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.080178669 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079032437 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105069941 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.071091697 seconds)
  done (took 6.131476986 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.110458544 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.106333543 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071132881 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.112675917 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104125591 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071060153 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105049629 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099114942 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.107284858 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070941084 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069044596 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071072808 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079517018 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.081465941 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.115572147 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.107766009 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07248154 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070309521 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108031505 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.107403481 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069676363 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101915097 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097826266 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.106906441 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069034551 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.071149641 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069125714 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070966309 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07601636 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077957295 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.06946022 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078975803 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083224137 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.076953485 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068706016 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069180685 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06950966 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078286148 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.078779373 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.077842052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076246772 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068335611 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070528764 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071737787 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071620482 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070117032 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078360334 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.078004234 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.077068108 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069247714 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070370584 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069365145 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070004408 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078323039 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.075724113 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.078742784 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078268446 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069176287 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069550617 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072406325 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081424104 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078416565 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078102303 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069836659 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078517054 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069541747 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.079301848 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082381992 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06936037 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070273271 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068927572 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069621286 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06965615 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078486487 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07669057 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070624391 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069187428 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068717389 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078307577 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.076526212 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069403255 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.075483152 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067980365 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068638585 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070151491 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07011191 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076340744 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.078410801 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070268718 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068969192 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069633071 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068820668 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068247625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.075339805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077730351 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077714054 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.07687326 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070388834 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077740515 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076812531 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06951853 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.077188166 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068913296 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069850877 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069419693 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.076112092 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.074635799 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.077344512 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068451622 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067886793 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.075900716 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078235039 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067677028 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.07444569 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.076630657 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.074854449 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067137497 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077580028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067815968 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.076202189 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068201374 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.212472372 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071003587 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080361486 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.072098238 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.071216398 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071457086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080484324 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072690152 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071223378 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071708784 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071655108 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079242832 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082017366 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071403892 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078737728 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078793759 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07333227 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079374214 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071110337 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079875195 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071731042 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071850827 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069899238 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082654192 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071514619 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070944316 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071351745 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081399931 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069698035 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081106279 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078472367 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070266785 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085757691 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081023339 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.075986996 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.078637742 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07114965 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069303477 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069444464 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071314844 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078231651 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080065882 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072819794 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071469177 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.079112856 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082304589 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070633422 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079685824 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079496386 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079128742 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.06948262 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070178887 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080010749 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079166658 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.076798596 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.076854448 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.077439372 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069998548 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.076859105 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.077422783 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069647926 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083246412 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069466947 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083450549 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080385105 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078146135 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.07932555 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080060099 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.081782593 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080547558 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.081381402 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069087221 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069297197 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077429734 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06947383 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069688187 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076569265 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071212253 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071847015 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.084858112 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070289047 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079143027 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068852918 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078271914 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068329924 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070450255 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081498534 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069224988 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070779745 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077653791 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06947374 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.076554866 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07893824 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077130931 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069134635 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070744438 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079171326 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.07893371 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069364463 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071486376 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071362797 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.076663657 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.075956048 seconds)
  done (took 18.532898723 seconds)
done (took 37.902390904 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.214688647 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.162233688 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.195870258 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.116459705 seconds)
  done (took 2.078934063 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.111560172 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100785041 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.088063391 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066013591 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.094546841 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066718392 seconds)
  done (took 1.853752161 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.301915184 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.203748749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.182388716 seconds)
  done (took 2.006814825 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.212806648 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.200897007 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.464386219 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286626667 seconds)
  done (took 2.585235451 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.143801296 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.082288228 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.064835024 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083353618 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.123585691 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.149273351 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.093079539 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.117597351 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.076144964 seconds)
  done (took 2.309053744 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.149098461 seconds)
done (took 12.332611724 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.279106044 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.103600148 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100497002 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.221154474 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.129930128 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071535515 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.196060786 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088591617 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07578651 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.079622512 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.078668337 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.153531446 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.077083047 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.086146239 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096605455 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.242313902 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.117197901 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.076231149 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.180476079 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.301239821 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.075185045 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.067196225 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.088943988 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.173245559 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066431202 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.068749349 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089389235 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073431958 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.074809675 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.244685783 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.085322926 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077458696 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.175976132 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.074997023 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.078043535 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.181350232 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.065713674 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073596634 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194334867 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.100524632 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.136416541 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.173769651 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.168073973 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076635692 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080770121 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.100228772 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068995398 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 0.14974879 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.141831713 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175101612 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.162669932 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.173151173 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 0.06763336 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.139948566 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.07432462 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.147616059 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.141881999 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065976724 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.136496504 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.066595854 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.066109872 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074618575 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.074791342 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 0.240487431 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.072151673 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.111637668 seconds)
    (67/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071604989 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.090084374 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065220579 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.074414761 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.131614735 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.066098234 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.175663317 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070112146 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.172926891 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.191193832 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074685775 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.076088677 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.076780594 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.078191421 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074334648 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.087874316 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.06636672 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.067168881 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.118227825 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.072946896 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.199561357 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.077695073 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166472 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06643882 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.076590821 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137527976 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073079078 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.129908397 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.115263539 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.218374889 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.224070084 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.071984326 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.126671163 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.089593592 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.184736069 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.201893735 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.199016155 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067679952 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103766764 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.184879635 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072134106 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087814336 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.078822138 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.066931193 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073425882 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.066562353 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.213812606 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.219900356 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090712266 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.073856288 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121534941 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075228151 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.1958752 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.177558851 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.073976896 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138799867 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.072518162 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.167570849 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084474122 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.0755867 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.194868011 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070799929 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.081462185 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.214865999 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.066218286 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.093730953 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.076063224 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066772326 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.12414759 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.199028104 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.081989827 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069168948 seconds)
    (139/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.069230179 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.13163693 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.128664949 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.175527899 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.066639793 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.076438077 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067844861 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.122499753 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.074887107 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.091261121 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.068742428 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.085803871 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072997078 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.06830482 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.09502271 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074483399 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.166036053 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065875253 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076438223 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.069294106 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.070256541 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067971779 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.130759042 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076160718 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.08275866 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.091275992 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.074716472 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.067112789 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094527019 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.067527294 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.081161471 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078862807 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.09370107 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.069538959 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089992026 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.079917191 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143648379 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.076237942 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.095138053 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071694535 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066312767 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077218271 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.07921764 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.143276962 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.176163178 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.066786018 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.136481664 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089565117 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.065810247 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.066214026 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.074112259 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.069231892 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066023535 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086039278 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.070790981 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.069186309 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.075076135 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.066450602 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.066394171 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066598914 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.06879302 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.064589827 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.065998037 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067740876 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.131609234 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.177053754 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.116770237 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.065761489 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073815443 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074612303 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176176182 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.072537624 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.06558711 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.076997116 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.257260078 seconds)
    (214/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.140181862 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091066488 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.075121761 seconds)
    (217/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.06892379 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.068701594 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.141026028 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.077873472 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.076202989 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.068931816 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067057269 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.196321689 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.13751391 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.070236485 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.067110202 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066567955 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066466129 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.07533533 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.132564057 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.075840706 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.066638701 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.06695877 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.194840379 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.066911725 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.066149149 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184006795 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.06722962 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06605227 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.12720074 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079569751 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.0879009 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.166485849 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.067345201 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.065449076 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.114089904 seconds)
    (248/309) benchmarking ("sort", Float32, false)...
    done (took 0.13595347 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066532423 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.079509539 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120907376 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.066954785 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067630141 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.066540865 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.218618905 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067876812 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070189112 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066729662 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.067085457 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.074068549 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.067354435 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067562995 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076220491 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.067030712 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 0.133486985 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067830274 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.067518428 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.068684953 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.067220321 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073995245 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.078060334 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066957353 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.066734251 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.065893538 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.070475097 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090278385 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06692676 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.068050989 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.066408101 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127971376 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.094766339 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.068785154 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.068219195 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.093835791 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.174853485 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06833817 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.076776983 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.06906276 seconds)
    (289/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.068609563 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075676043 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067226211 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069377629 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.066900661 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 0.170269995 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.072988806 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067196574 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.094608087 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.065913584 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073460902 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.067242834 seconds)
    (301/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.080737823 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083454619 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145909693 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.087440802 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180212214 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.066288379 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.065794163 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067411095 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.069067959 seconds)
  done (took 33.180202729 seconds)
done (took 34.511419364 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087214477 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.102166506 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076018409 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095494192 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082311298 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.095250292 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073955582 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078971204 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.08127307 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.080565156 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.079330441 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.073411176 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075683058 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075588441 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.073445143 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.097402904 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08013897 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074642287 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074555096 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066062915 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.074992474 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067589529 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.067584952 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.074132546 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.078553076 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.075484333 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077702917 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077440898 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.068722768 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06701975 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.071560249 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075322742 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.066101991 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078689699 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075234106 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.075011715 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076065047 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078804625 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068134609 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.068657453 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078458057 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068592324 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.076508509 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.074870589 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073193833 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.075154289 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07692232 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.081180876 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.101143223 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073595244 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078777363 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079577625 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080380273 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074219143 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073526729 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076471058 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074608411 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.101153123 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076800926 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074017741 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.078004033 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.077011878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073670412 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075090484 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075290774 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077613268 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.078394676 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073287641 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077334418 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074318689 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068167882 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076438672 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.073360982 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068269457 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.079500974 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.081382675 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067835824 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.071487303 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.074351316 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074976142 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.066538992 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070742929 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.066163174 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.07120498 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070700987 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.074850876 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.071182755 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07400461 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.066107555 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074859642 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073507326 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.074295732 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066277523 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079119861 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066279756 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.07258928 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066688438 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.06649381 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.06570174 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071334078 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.065840539 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.070454049 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076890881 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067506017 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.073474504 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.081613676 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068348287 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.075224487 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067097961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067671631 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.079252075 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078136692 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067812478 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072556612 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066337411 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.072448721 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.06718346 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.06712879 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.067403782 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067596096 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071632004 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067735097 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072782512 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.072805698 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080235811 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.067417894 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.07207901 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072835781 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067555875 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074271518 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067858634 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067696541 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.067539963 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.081300494 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073372734 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067852591 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072981005 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072651374 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075351063 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065833249 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074749653 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.07058073 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.068998593 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071415507 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.0641272 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.075558098 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069098692 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068807092 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.064290628 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.064873638 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06378108 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.064566438 seconds)
done (took 12.672025132 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.073741876 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.1205703 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.095074424 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097169072 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.086025486 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069600524 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077039952 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.095479407 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070534726 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099545857 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090418622 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.090459513 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.112049744 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.068094181 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068908198 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070116606 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070181964 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081660527 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097573747 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.0909788 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107360558 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.067842989 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.088826738 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090016664 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086321906 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.091245365 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069962507 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069858847 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071856037 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.093370493 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.095078267 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.071213764 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070085947 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.093933214 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.088218916 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083402704 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.070109227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.078412414 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069742651 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068856846 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070511496 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.090935769 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.077903652 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078509851 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070313706 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.077265686 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.071394911 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.085451605 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090631359 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077791846 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.08512941 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.09395177 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.07354117 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.086062078 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068112629 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086002783 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079355374 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.069613157 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069765539 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.074463046 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069238432 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071563603 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081730196 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.079132371 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.074329634 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084687508 seconds)
  done (took 6.763358343 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08795712 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.094994655 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.08357414 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083606524 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066492203 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067338293 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067453478 seconds)
  done (took 1.977747657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069792168 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089958155 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.093223016 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092997055 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086051205 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.097039979 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.077066607 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069326168 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.098125626 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068431816 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090355486 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100591272 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07314859 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078740371 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091770153 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06753677 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091803338 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067416694 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.067867037 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091678509 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071731834 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.09399807 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.079184212 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067492344 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079952517 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067615873 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100249769 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075429133 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069148113 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069344877 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068506819 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.093868054 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079357447 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.08150298 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070801376 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084654608 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083219469 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072862366 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.080557689 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.08199247 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082837521 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070745938 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068715508 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070789636 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.070255902 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079013663 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.066607182 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.069141853 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069425687 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087926414 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.068555312 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.082114781 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.073494774 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.075908967 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.074943537 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074594172 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07811873 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070718949 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.088102128 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070666915 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087033875 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.08378875 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.081900585 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085900426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069846574 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.08229492 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083144657 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070505799 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071341897 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.07104668 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086346301 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.073069194 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071327911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081933589 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069304055 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.094916986 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.094317114 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069247818 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083696599 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070594664 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.070778081 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.081517624 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.093595479 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074541374 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068888078 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073039891 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070620123 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.071022878 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.067290239 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071857504 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.069195429 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.072606486 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.068332523 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070845819 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.069935512 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083180842 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.066880408 seconds)
  done (took 8.960754139 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072305483 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071338668 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.07209089 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070457161 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070189837 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070356939 seconds)
  done (took 1.875162173 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094348268 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07027856 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083111072 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.070263966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.107016927 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086640569 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.086780407 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.08055486 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084349943 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.082160123 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.086992147 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089542939 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.090772195 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072990006 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.086309054 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.07171044 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.086591963 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075688109 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.081958742 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073497991 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.084889981 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073232198 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073620564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.091263471 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.074420514 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071624538 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081003775 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082432184 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082519747 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.080704518 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072762468 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074492679 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.078857417 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080641434 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087011531 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.079152237 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070610394 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.075185939 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071186513 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.073084977 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.089188267 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072994583 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07285746 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077074235 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080273636 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.078883862 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077078152 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079379077 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086269023 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.079836622 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077373561 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071388419 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074049314 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076972803 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.078940492 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.080438667 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077282807 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087215745 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07259672 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.078686215 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.070191424 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074032748 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.08082451 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074197009 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078002777 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.074664997 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.076478813 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070571237 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.070919513 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.068443766 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075522518 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068549409 seconds)
  done (took 7.089810413 seconds)
done (took 28.10888017 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.526005705 seconds)
  done (took 1.928158819 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.627872961 seconds)
  done (took 2.059836256 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.507173271 seconds)
  done (took 7.934139866 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.40475106 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.470881307 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.744217029 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.134111064 seconds)
  done (took 3.215161557 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.712618069 seconds)
  done (took 2.152195445 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.241219578 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226601206 seconds)
  done (took 1.922223463 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.350892138 seconds)
  done (took 1.781528785 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.056295525 seconds)
  done (took 2.487449989 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.242748048 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.160702329 seconds)
  done (took 1.842055358 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.448044247 seconds)
  done (took 1.883280275 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.256590797 seconds)
  done (took 5.694908218 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.218967409 seconds)
  done (took 1.686986409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237759789 seconds)
  done (took 1.670407451 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.749506343 seconds)
  done (took 3.185503143 seconds)
done (took 40.89189754 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.086098949 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.085844504 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.084928932 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.08092934 seconds)
  done (took 1.743815023 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.077805997 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073482891 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.07710234 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.073383305 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.077240133 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073278957 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.075083895 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075835304 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.073036383 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.073760334 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.073243815 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072844567 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.076059865 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.074863732 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07167332 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.075265239 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074498748 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.070988218 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07361424 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071216665 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.068964122 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073359768 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073789326 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.070032467 seconds)
  done (took 3.201866233 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.081548722 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074444361 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075754908 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072211597 seconds)
  done (took 1.757614229 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079891033 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.088893807 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.086202418 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.077758983 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.088892579 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.084225987 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.067545559 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.067384238 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.068827822 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.077534687 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066645592 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.093383319 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086122615 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.077220674 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.07925608 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.063960512 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.066603599 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085925811 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078588593 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.079189306 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071411171 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.079698958 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.068892008 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.089100042 seconds)
  done (took 3.320988645 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.089375289 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.069535467 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.089592256 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.093192376 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093368292 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.066367614 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.084709895 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.096153186 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.146159831 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068243582 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.072365543 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066312745 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.105251709 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.066912359 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.085834181 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109880212 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112597747 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.070558846 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.09924959 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.066402434 seconds)
  done (took 3.200787733 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.086424532 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070755419 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.071540324 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06630413 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076589467 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.073512809 seconds)
  done (took 1.895393987 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071134648 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070211951 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068447241 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067655778 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072935736 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068162368 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.066537528 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068771639 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068292551 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06764748 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067426398 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.06683146 seconds)
  done (took 2.270554548 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.214351774 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070417818 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.071305125 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.066873913 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.07502406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.067399761 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.082463968 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069344017 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.085187244 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06674859 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06740365 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069347042 seconds)
  done (took 2.453078236 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194169204 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07485695 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221004127 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143770766 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101573514 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108618603 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110439568 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107351522 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.132195976 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097217689 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152134325 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15824027 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102890082 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125803884 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087091663 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119382898 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143238995 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151997638 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099042894 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152374159 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134342015 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118465803 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139255124 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.096168361 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100422056 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115567118 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072234593 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.07740745 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157533662 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122319635 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134675969 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105030029 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089314646 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168417639 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155256015 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130934552 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14057079 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08099037 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.117160704 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.126725624 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191466147 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086642195 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147564567 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10087656 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076645378 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118918181 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107969461 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.112218602 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.098661153 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085985302 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.272898414 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17242614 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.127414831 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.083485989 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1159257 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104258475 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.107884147 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112820511 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167222513 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146937611 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117298696 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.069188673 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.10543246 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140408597 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.123658002 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.10370656 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.116343992 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089065202 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123076582 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147202585 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123960264 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132474661 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.111283638 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084662584 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112793764 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129747341 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119942419 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157933404 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114246839 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.070901909 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114788379 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094540288 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077757943 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141457295 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073220111 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162452073 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095493137 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.119979476 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124333677 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104182224 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10396737 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149111898 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133199923 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100478003 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.08361455 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098925457 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.114119502 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136051534 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.083325839 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.102859582 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108460422 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076605618 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125413131 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.071951366 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110786437 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091446988 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111836555 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114733682 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.075610624 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.259402455 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09944775 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.097563413 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122148271 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146485564 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084605307 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078282802 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154230612 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112934226 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.099282958 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.134064227 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147079864 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.11675921 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093888859 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135591851 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161892037 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087229626 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15029543 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098767332 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080956856 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.101878676 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114495192 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108330024 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.118229465 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078922764 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.114035334 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154648816 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074838513 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096434147 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125315165 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.082101583 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081226645 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103817635 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102103087 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094915959 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099389832 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.100541981 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129498019 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114218608 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100013858 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117154887 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093345105 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155015691 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084966095 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.098100083 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100105156 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070381214 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.12559861 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144765851 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.076415381 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149754248 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.114820928 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110000052 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111006699 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08064825 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127777809 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075925191 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070787111 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131036032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105813978 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101795197 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.287586398 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109661268 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.118105614 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.111809673 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123592995 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121942988 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.120384618 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102066013 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.085683639 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108034032 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121857288 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.070930421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.088117508 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079624616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098346369 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.090125046 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081216521 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130155839 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114617969 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105444424 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107832469 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092967814 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138733654 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.075964184 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117526637 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.115002303 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092315668 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.144977191 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143633047 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122985574 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097266554 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128951553 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.07159276 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072520687 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.086052295 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121040842 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084034144 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084607197 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111303602 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143077735 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12278648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131956506 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121033988 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112120251 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.147000657 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.070994392 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.117227794 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138865058 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115020716 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.102607642 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089759428 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.094649612 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133552605 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099404088 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167937241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107424924 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114849361 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145433944 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.097509561 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079150546 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10188893 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.274364663 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10103192 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.138199617 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098850558 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087226486 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106002311 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.078921406 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097024341 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121868594 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115209747 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130014209 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.108485265 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12107819 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078403462 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110310898 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.117440266 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118926817 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.083855508 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113317438 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157178726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094376317 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109998814 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141852353 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.076573026 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.133839584 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165150949 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138598159 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084228099 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102825346 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116981626 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123746548 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114137339 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130917229 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099988819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128200223 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105142565 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.082046024 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083279582 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09207751 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09965445 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.108499318 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.1003526 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.10650001 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.091930461 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124498287 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098572586 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105023936 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110488129 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096995511 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.092631241 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092662121 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162043088 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109344593 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.156144448 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.094768588 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.132879459 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148431616 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072720896 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075733454 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077610388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126503949 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228321196 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120812346 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.107577395 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110469205 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113848966 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1292205 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092593384 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069834187 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102897436 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124472858 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116753195 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093577982 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.098911677 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148344562 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.113550489 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.076297202 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107485839 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110260858 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099588739 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161248185 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.079283536 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105005767 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075009171 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077329252 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11910055 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141857832 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.084245866 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.100201931 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112661029 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.106968371 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.119813669 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094131655 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106664081 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125278444 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138548941 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119664337 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.087175388 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106094202 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121843349 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143879788 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099482808 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.097114449 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163202525 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140858505 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.149274223 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.085314674 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107517463 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107485249 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103584764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127301521 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081358395 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150479176 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078611556 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125232411 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09604206 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085668524 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120024589 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.10714207 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.084008955 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.283518882 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109760679 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081382395 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077674632 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106769149 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109668646 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098378017 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.072772295 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129325383 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.071592651 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123530175 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15585947 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077220464 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099418635 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.092132361 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079704172 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098773876 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097345502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083200675 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.095588101 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158265205 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.084036595 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137271161 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125151141 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106041106 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129413997 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100308175 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.639226152 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.077723716 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141346655 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11022218 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164958168 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094899204 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111098464 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104735722 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114848792 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133672754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097952332 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173757247 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.122960705 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.109651396 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.076943558 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097478691 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098827292 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.085942449 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.102061715 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107532205 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107963624 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09146955 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.109392905 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115675771 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.080005312 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.092637703 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144572863 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110242693 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132029434 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129164688 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081616088 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110174442 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125069314 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.076234538 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.108700385 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137095496 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098108873 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.0943972 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.078293303 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.094475421 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154582805 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072560012 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142377869 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108319911 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.101684011 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1041333 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.101902287 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116397775 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093434805 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106081701 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084774731 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.098519044 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100266581 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.114898089 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.074492865 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094460785 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09959595 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.089618571 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.087156376 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.089931147 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130187252 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.06846117 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08885698 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104257724 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125203093 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147046132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.098672544 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078700968 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104768968 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106296633 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.099921836 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105092184 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.075790769 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.075066602 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.074916981 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.096814434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.113505922 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10000818 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107416867 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.096964517 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138019798 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.078383314 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.214597604 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087303967 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.093608201 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.083295708 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.074013431 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.08769222 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.086747536 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092261522 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100846521 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147088108 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.086304984 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.082374011 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083484371 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.0703812 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077284561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111576235 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.358674979 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110843631 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102620922 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.082909004 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102090041 seconds)
  done (took 55.928804265 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.126888873 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.10132015 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100836856 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147907816 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.125230737 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.203279072 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.15404194 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.192459302 seconds)
  done (took 2.746698032 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074149193 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.098017659 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.106650102 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085954865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069843956 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.07108428 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.234694009 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084902699 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.06981821 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.093751313 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.079823396 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.071231443 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.463412101 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06842564 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.070093785 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.078332138 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.069652071 seconds)
  done (took 3.451124197 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.386183805 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.611246273 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.361172258 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.076806465 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.890566577 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.090916123 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.168192877 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.141038126 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.08292357 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.520360947 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.367793417 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134803118 seconds)
  done (took 18.408938345 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.086349256 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.078447948 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091700442 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090860917 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.07921141 seconds)
  done (took 1.997889013 seconds)
done (took 103.828286051 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085375528 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.548980109 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.069637911 seconds)
  done (took 2.215396915 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.095178586 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091762079 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.089365216 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.087529427 seconds)
  done (took 1.947243137 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.078174319 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.079933382 seconds)
  done (took 1.730693508 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.234224968 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.175370678 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.098425951 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.087405058 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.083902837 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.082307686 seconds)
  done (took 1.835010263 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.075888002 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074687584 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.073762985 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077191772 seconds)
  done (took 1.877350829 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.071346789 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.06787253 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.072244424 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.072261813 seconds)
  done (took 1.861355955 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087901385 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.088020058 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.082092765 seconds)
  done (took 1.835678939 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.105924976 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.098226961 seconds)
  done (took 1.783793259 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085148088 seconds)
  done (took 1.665921207 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094327541 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.101385609 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.132361616 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.11499837 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.139847903 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.118649635 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085400771 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.089595866 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.079540318 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086618667 seconds)
  done (took 2.622962946 seconds)
done (took 21.540899901 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.082937664 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.374927832 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360810087 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091527943 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.67642596 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357508406 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.998446214 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093596297 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.108787109 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070334548 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08794871 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.651917382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987811966 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.32569188 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.976898189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.331681014 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.65189177 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070128292 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069389 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069974642 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.981495129 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06933757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069738994 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069883519 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651483801 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374268218 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070827795 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.331509742 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069652111 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073585865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358879445 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.07068343 seconds)
  done (took 16.18718268 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.075010856 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125197395 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073528728 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.086375566 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071403307 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071083507 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.072858065 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.070266038 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118713529 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070461631 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08810466 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069480486 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.073456327 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.070996958 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090622182 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070117776 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072444087 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070244241 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069646587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070434173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.088857885 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069263184 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070833984 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.070482983 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07015113 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082654089 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.070944828 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069496413 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069644294 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074024216 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075299647 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071065119 seconds)
  done (took 4.053537038 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1217249 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128038907 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074057616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107583207 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.118231641 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071818873 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147536606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094154053 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.121633337 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070188612 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087743773 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.07013794 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10487965 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071231241 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091393424 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070011859 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072929396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.070098167 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069251507 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070155001 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089199803 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.069430549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.070213767 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069831995 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.070582938 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.085264014 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072023378 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.070824746 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.070891333 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074771926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076332576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071839916 seconds)
  done (took 4.316654588 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073909035 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075760749 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082283354 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.082469808 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068829208 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070400316 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071874562 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068410275 seconds)
  done (took 2.18915275 seconds)
done (took 28.33258242 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081914468 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.07021358 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071985874 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08775186 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074610334 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.080036706 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066765435 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075619677 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.073691787 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073503488 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075151476 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068526 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.072244844 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067098311 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074796411 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.070506422 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.083794859 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072027 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.081774542 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.084206657 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.072047133 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076762408 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.079035242 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.083132158 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.081948327 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.081134969 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077837438 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.075921405 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071035645 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.073629609 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.073981715 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083058839 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.083303551 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081657644 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067923053 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.068036126 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.072574167 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069703841 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.083206458 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077436737 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069799794 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.077153185 seconds)
  done (took 4.746259812 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089241114 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092805181 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.082371815 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080391257 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.090204942 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082993785 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087005656 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078314399 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.078238093 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.085910375 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074520334 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.081779177 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079253566 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.073402341 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077963749 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075709573 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.081315527 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.075366241 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.078794057 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.079089084 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087972051 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.07317539 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.088021176 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.080839869 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.07539664 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081350584 seconds)
  done (took 3.729587816 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07684068 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088058213 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093260108 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.14397424 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.111589803 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080678039 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.082026895 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092682025 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.097386809 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.069369256 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073528257 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093532061 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093643942 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.074834528 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.112175584 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085158243 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.084595729 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.071283724 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.075636534 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.09787671 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.089691071 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.086767642 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.095326782 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.086107041 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069052765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.071573785 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073905228 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08571037 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071886574 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.080739135 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.072081295 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073404326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070382184 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.079816213 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.07228085 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.06883911 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.093626418 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.081459424 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.082322943 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069900184 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078533078 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.069902337 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094438771 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.129436961 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068230179 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.073080464 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.072528527 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.079972063 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.06830998 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09587724 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.080257446 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.068278628 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069057927 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.06751494 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067778666 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.070865069 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.070087312 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.071028898 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.078418473 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.075401911 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.090206464 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073573626 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085784683 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067832864 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07867292 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.068678957 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070290174 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.067759381 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.096949799 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070564885 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.112853073 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.069525435 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067315827 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079808354 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078664124 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.074532017 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068570527 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086062055 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.080099571 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.073058831 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.077733582 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.072075431 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072263417 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099242992 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069134383 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068370135 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06747205 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.072235521 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.07201256 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069348786 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08077302 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068417211 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.072276166 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089036424 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068932056 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.069748395 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.072309346 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071212833 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.068542642 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079755046 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072707855 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069995679 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079458912 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.069492978 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072044271 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081680672 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075430996 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067597054 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071068042 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.07243981 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069876238 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069953312 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072288456 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.071004704 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075927831 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.075530125 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074444516 seconds)
  done (took 10.823100403 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168071725 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.156175711 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071271264 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148401738 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.078168016 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080906164 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.151644617 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095653753 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069176574 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.07046821 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069405764 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110664197 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105996658 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.116614579 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.081828484 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070191808 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.094656971 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.115327672 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.154206973 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14809041 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.092001257 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.077292489 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.07182561 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070862018 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070891293 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.078993005 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085970017 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077854698 seconds)
  done (took 4.418332837 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.0812849 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.106027163 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073614914 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.091255725 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.088787534 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070011856 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.071012266 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070786093 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.085989601 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078176305 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.069673583 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075017994 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.073296239 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.072405499 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.070198803 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.076083253 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.076675604 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068718073 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.073324441 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075064426 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.079797133 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094267302 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072642823 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.069313045 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072329788 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.069257756 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.077470257 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.081730616 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069589379 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.105883075 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.067272392 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074384515 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083478627 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069997445 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.069010528 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.069527403 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.069551011 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.069817057 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.07077556 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.067854931 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.068117786 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.073017587 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.068873305 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.077323976 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.082567048 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.071474971 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071818922 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072205349 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072555915 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.067309493 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.072247249 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.072033185 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.072433764 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.076758474 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073377165 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.07256442 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.070035878 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.09551975 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075710561 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.068829181 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068462803 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.068334567 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071523424 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.078744513 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.084783353 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071547888 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.067876093 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06963181 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.082388328 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.082175437 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.069164684 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.074203216 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.066943016 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071110729 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072387293 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.071871168 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.070482945 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.068288225 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068951246 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06974904 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.070132685 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.069144984 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.068756801 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072263772 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071445642 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.068650396 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.069667829 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071172381 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078088922 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068608004 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073260046 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.070311101 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068202685 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.072564873 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.077448293 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.072540501 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.080068104 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.080851508 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070046508 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.068093128 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082952722 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.072432073 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.068574342 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.074985482 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074045668 seconds)
  done (took 9.416142 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.095323096 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070424217 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.085939023 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.092455002 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.079215942 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075209135 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.07966299 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069301808 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085590941 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074920717 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079748745 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.070608534 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.081797016 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.081775446 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072629286 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.082127558 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.075667098 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.089295693 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.084486323 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068034508 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.078831727 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.081658858 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.080967868 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.084033804 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.083614025 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.084946863 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.081464506 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079219586 seconds)
  done (took 3.901926293 seconds)
done (took 38.622204316 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.696909965 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.845557302 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.668902111 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.874796813 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.797973768 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.679186465 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.761750612 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.662723733 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.944891398 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.709501173 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.980160973 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.155450459 seconds)
done (took 64.524114049 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.694222546 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.816463939 seconds)
    (2/2) benchmarking "String"...
    done (took 1.914417302 seconds)
  done (took 5.404901687 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.911688063 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.532163524 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.897932356 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.663137067 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.666417297 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.947514323 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.43715767 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.107424315 seconds)
  done (took 29.851484555 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.829731529 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.887356239 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.380117178 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.389750316 seconds)
  done (took 15.132995123 seconds)
done (took 61.687882532 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.687628371 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.660264062 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.666688304 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.658860719 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.753615011 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.676828165 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.804309004 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.903690308 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.662216483 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.663028758 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.663327059 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.084013803 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.663730045 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.889436993 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.662223357 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.660587978 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.674230909 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.174584128 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.817124536 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.682453528 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.677010442 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.665123732 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.666388375 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.661295734 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.698933497 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.663359158 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.059105917 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.666383395 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.280435012 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.663491162 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.697688191 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.008095469 seconds)
  done (took 201.113974452 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.660844956 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.760180234 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.781171637 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.707293091 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.128418171 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.853451939 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.78093185 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.171096807 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.66672991 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.675994964 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.765037463 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.662434645 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.783647367 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.675532246 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.699117787 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.67009228 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.869986021 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.811477394 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.700066932 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.827582584 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.67090276 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.589365293 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.564281487 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.769022396 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.673355034 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.680854913 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.673820849 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.681047271 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.85095266 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.839418392 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.705495982 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.680521852 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.789143635 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.533087553 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.669353192 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.670927678 seconds)
  done (took 165.294130706 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.005874003 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.669351153 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.66311078 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.665688079 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.678026165 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.660551394 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.665160318 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.830976978 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788740666 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.344371177 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.206226635 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.721289878 seconds)
    (12/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.667088854 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455679434 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.660859146 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.730161188 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.675941525 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.664397252 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.677395206 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.688564546 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.663584958 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.667246827 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.787409547 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.674655144 seconds)
    (24/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.662190298 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.674308081 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.665096837 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.670423579 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.052160428 seconds)
    (29/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.661712861 seconds)
    (30/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.834581146 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.6646453 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.670342473 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.923023148 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.663291644 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.666608479 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.492516769 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.765505809 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.74700598 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.667415579 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.673736778 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.665224743 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.887318441 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.664308101 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.667622303 seconds)
    (45/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.664540405 seconds)
    (46/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.667085923 seconds)
    (47/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.668481429 seconds)
    (48/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.66710161 seconds)
    (49/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.786873022 seconds)
    (50/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.666904043 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.788844679 seconds)
    (52/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.669060704 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.154612878 seconds)
    (54/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.665564515 seconds)
    (55/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.671323587 seconds)
    (56/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.976394535 seconds)
    (57/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.26774499 seconds)
    (58/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.663358891 seconds)
    (59/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.669355565 seconds)
    (60/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.666572402 seconds)
    (61/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.667434968 seconds)
    (62/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.673273073 seconds)
    (63/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.03555152 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.738135865 seconds)
    (65/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.669972252 seconds)
    (66/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.666579909 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.664478183 seconds)
    (68/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.672165261 seconds)
    (69/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.669677957 seconds)
    (70/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.756368026 seconds)
    (71/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.664775615 seconds)
    (72/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.072672894 seconds)
    (73/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.681445685 seconds)
    (74/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.893181167 seconds)
    (75/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.78964517 seconds)
    (76/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.668450063 seconds)
    (77/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.732920355 seconds)
    (78/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.757266249 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.66619685 seconds)
    (80/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.668056447 seconds)
    (81/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.665609014 seconds)
    (82/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.666666604 seconds)
    (83/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.748006693 seconds)
    (84/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.667700007 seconds)
    (85/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.765746446 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.674635762 seconds)
    (87/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.669267586 seconds)
    (88/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.724813599 seconds)
    (89/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.739108749 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.665431902 seconds)
    (91/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.488859767 seconds)
    (92/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.66884477 seconds)
    (93/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.668176243 seconds)
    (94/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.920085132 seconds)
    (95/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.73141567 seconds)
    (96/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.666077355 seconds)
    (97/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.672258844 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.761520759 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.788368455 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.393520928 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.66946703 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.198830579 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.756964927 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.66890832 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.792994252 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.672262277 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.752714523 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.677009933 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.668897215 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.705830709 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.671644714 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.682797464 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.66798072 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.041558508 seconds)
  done (took 389.06476145 seconds)
done (took 759.137723678 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.268992094 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.232193513 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.340187439 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.252817603 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.222501884 seconds)
  done (took 12.921518906 seconds)
done (took 14.529032129 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.753321081 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.755285684 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.687363643 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.748615677 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.683388207 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.747065473 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.731504043 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.689964026 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.721651635 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.691372187 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.720300964 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.691778243 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.676965788 seconds)
  done (took 23.902872822 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.904272605 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.895253455 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.736409515 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.899034423 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.712913717 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.909335728 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.828723183 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.812506794 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.810304894 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.684475192 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.681941058 seconds)
  done (took 21.481718431 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.899996525 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.910134477 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.744281471 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.900638794 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.719391498 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.904398759 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.834177899 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82335803 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.814012486 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.68626123 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.679956608 seconds)
  done (took 21.524486167 seconds)
done (took 68.51619847 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.675644393 seconds)
  done (took 3.283809957 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.69677643 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.854234161 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.67484579 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.674837181 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.677531398 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.677940193 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.676395689 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.67805199 seconds)
  done (took 15.220376344 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.675254867 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.676385052 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.677549484 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.677299926 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.676681459 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.674453225 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.676012723 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.677478224 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.675779184 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.678215994 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.67696836 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.676104932 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.677830727 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.67783179 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.677863698 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.677806107 seconds)
  done (took 28.439420437 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.679172482 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.679392412 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.677150293 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.677134005 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.676141908 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.679252281 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.676949041 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.677448595 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.677125206 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.678110934 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.67927136 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.676541213 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.676886158 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.679965324 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.678286627 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.679046289 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.678727502 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.678187976 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.682920822 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.678091081 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.676908514 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.679086885 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.679218513 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.677315209 seconds)
  done (took 41.89043227 seconds)
done (took 90.440483331 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.397932287 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.277401315 seconds)
  done (took 9.286127278 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.681272858 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.67868603 seconds)
  done (took 5.040678672 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.678250948 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.678410815 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.676919496 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.678328081 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.677965273 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.677033743 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.680006192 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.678378301 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.678897967 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.677447505 seconds)
  done (took 18.393597586 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.676354653 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.678954143 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.678924594 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.679507385 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.678552772 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.679886931 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.680331854 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.679725985 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.678083031 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.678235594 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.677679802 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.679627339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.67959099 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.678946439 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.67981843 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.677714229 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.678685297 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.680371835 seconds)
  done (took 31.831528716 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.679116826 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.680087435 seconds)
  done (took 4.971758223 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.680174937 seconds)
    (2/7) benchmarking "second"...
    done (took 1.678177377 seconds)
    (3/7) benchmarking "month"...
    done (took 1.678041692 seconds)
    (4/7) benchmarking "year"...
    done (took 1.677857367 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.680349389 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.679829963 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.680620192 seconds)
  done (took 13.368323656 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.680906864 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.838412768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.903896014 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.364041118 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.683054623 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.681823041 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.631296992 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.683803052 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.684960828 seconds)
  done (took 18.764058722 seconds)
done (took 103.266385283 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.56944212 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.67883995 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.948089914 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.770146869 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.695686112 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.974111835 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.684648945 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.962230074 seconds)
done (took 41.895677 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.733824765 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.39160899 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.419818041 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.713135384 seconds)
  done (took 15.140546113 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.681511621 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.986919461 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.708318641 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.525029833 seconds)
  done (took 21.522637528 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.041200746 seconds)
    (2/2) benchmarking "read"...
    done (took 2.029663107 seconds)
  done (took 5.692544648 seconds)
done (took 50.706221657 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.681236352 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.682119952 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.682189184 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.683270073 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.683009631 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.680504354 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.681460185 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.681884863 seconds)
    (9/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.679831822 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.681450258 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.681636217 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.68172883 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.68267691 seconds)
    (14/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.685494567 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.683986923 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.681403614 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.68326389 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.681906086 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.682367447 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.684191923 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.682552663 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.681201995 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.681040012 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.680956126 seconds)
  done (took 41.987979724 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.682341712 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.683727863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.682996496 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.683742951 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.683221693 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.683892259 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.683694356 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.686385439 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.682555801 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.683064563 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.683859026 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.684852207 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.685335808 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.684285225 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.684202259 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.685060394 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.683710482 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.685571452 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.685212232 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.684489269 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.686105288 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.68599933 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.684555021 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.685840339 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.684618817 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.685429779 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.685417187 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.68614684 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.684945216 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.68672418 seconds)
  done (took 52.153234944 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.683980001 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.685083439 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.685499052 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.685357512 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.684096601 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.684670692 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.685809945 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.688338799 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.68347296 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.685893384 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.684916636 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.686720246 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.685353527 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.684692358 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.686335342 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.685213816 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.684172363 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.684805566 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.686077564 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.684057682 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.685979917 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.685076778 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.687014125 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.686580798 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.68672468 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.685705645 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.688546905 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.686199493 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.685502814 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.687254177 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.6862144 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.686584759 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.687084346 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.686917783 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.687770833 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.688563382 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.68861789 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.687714746 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.68800471 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.686484454 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.686940421 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.687703946 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.685172873 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.68513715 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.686136689 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.685622663 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.686881239 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.688287542 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.687368711 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.686505072 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.687129676 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.688306269 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.68725647 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.687676142 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.684850688 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.687042501 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.687312814 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.688555464 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.687953208 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.687651474 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.686398025 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.68631325 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.687587511 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.68825407 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.688287765 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.686757278 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.685709739 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.68753557 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.688421008 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.686423155 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.687910234 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.687236826 seconds)
  done (took 123.04746573 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.689059947 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.687438847 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.687016116 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.689088993 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.687698159 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.686841353 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.686827519 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.689961945 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.687316126 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.6885244 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690038631 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.688383035 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.688154252 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.686860664 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.688238083 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.689385298 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.688705992 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.689590858 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.68952904 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.689962999 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.688014585 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.687588872 seconds)
  done (took 38.765017109 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.690523989 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.690441711 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.688332894 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.687831517 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.688703209 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.691144585 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.690800725 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.690469311 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.688595111 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.689971148 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.69032158 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.687767519 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.689265205 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689958928 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.689879429 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.691252541 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.689117871 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.688224856 seconds)
  done (took 32.034375408 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.688999806 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.688896353 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.691393062 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.690406175 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.688709788 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.690378039 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.690807136 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.689333641 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.689793453 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.689353578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.690935149 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.691534432 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.690558387 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.689372775 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.690137131 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.691492376 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.690621542 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.689169189 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.690304703 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.693260429 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.691990437 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.690164561 seconds)
  done (took 38.810113061 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.689442557 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.691786542 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.689548968 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.689633265 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.689544686 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.689382355 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.691985171 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.692119746 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.689874491 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.691464177 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.692461286 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.69167127 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.691729646 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.693050557 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.693350688 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.692116398 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.691981992 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.692616697 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.690815046 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.691294768 seconds)
  done (took 35.451147555 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.692389827 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.6915806 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.692955361 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.692421039 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.692737598 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.691660168 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.693931675 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.695168414 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.694540318 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.693893561 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.693134151 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.694820984 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.693468974 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.695063155 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.695083617 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.694580074 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.693288601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.693865053 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.69335162 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.69364916 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.694673566 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.695604234 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.693310286 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.694128403 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.69495626 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.697204174 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.694445406 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.696669829 seconds)
  done (took 49.056891558 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.695053666 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.697449841 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.69395131 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.693524367 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.694522348 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.693503098 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.693654843 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.694129063 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.69370101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.694012904 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.693319186 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.693080644 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.693508645 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.692323794 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.694589615 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.69341704 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.692887858 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.693958087 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.695023819 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.694156152 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.692805614 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.692472307 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.695304467 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.69352801 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.695973624 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.694750688 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.694007525 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.694829591 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.693775497 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.693197541 seconds)
  done (took 52.445878654 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.714675641 seconds)
    (2/2) benchmarking "in"...
    done (took 1.714723195 seconds)
  done (took 5.055636115 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.69388397 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.696540108 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.696192172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.694696151 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.696954916 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.693196075 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.696757098 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.695646562 seconds)
  done (took 15.190266736 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.696720142 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.697821238 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.696419068 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.695530413 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.695782466 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.696686422 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.704782172 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.697482407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.698391195 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.697638095 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.70473151 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.707163087 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.700440665 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.695997368 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.698732482 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.699099506 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.695625327 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.694806178 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.696631064 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.696555289 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.69573217 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.700392559 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.699816061 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.696690223 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.698536581 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.708213328 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.701020144 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.695974132 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.697721042 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.703845583 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.697906069 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.697379689 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.697420583 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.698864721 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.69819578 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.697689594 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.706832598 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.699159397 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.70439459 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.698281776 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.698466556 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.696626054 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.699565513 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.69973301 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.700551763 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.700212177 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.698880431 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.697846571 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.699481328 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.701909299 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.705971381 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.698974136 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.699085976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702857715 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.7020941 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.7047333 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.700306755 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.702778761 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.710576933 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.709469757 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.710625317 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.710559165 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.701572334 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.700038006 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.709184362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.728322565 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.707581847 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.700441514 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.698206242 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.698393663 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.705397495 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711059248 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.710880549 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.699833665 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.698442601 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.699485015 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.701606174 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.700732491 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.707053493 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.705447743 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.699355048 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.700804761 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.711363273 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.727432244 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.701039143 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.701544079 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.699834548 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.699509577 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.701366165 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.711352137 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.701533856 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.699800313 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.700647396 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.702468781 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.702230256 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.700986658 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.699367997 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.702563184 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.701412684 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.700490391 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.701565488 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.705874879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.709949867 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.701454005 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.701048042 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.709961283 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.701294392 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.70350109 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.708407731 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.702225386 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.70150769 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.700212113 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.708793441 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.700880366 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.705846361 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.713678033 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.705023971 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.703583216 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.701925201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.70185754 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.711625455 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.732349447 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.702702252 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.701070846 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.708068348 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.71523096 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.70319117 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.705809479 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.703196099 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.700600706 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.701172496 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.704241156 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.701586442 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.704179711 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.703195164 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.70613695 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.702188656 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.702631056 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.701701953 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.706124595 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.705079858 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.706280054 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.707404171 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.706924907 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.702341798 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.70667257 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.710826876 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.702253905 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.704084546 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.703125013 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.702140516 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.702605105 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.70648017 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.70263357 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.703632574 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.704075944 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.70307067 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.703844914 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.705251406 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.703676883 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.703897291 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.705834212 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.707682491 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.704488536 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.70856941 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.705086462 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.706316119 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.704753107 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.704373549 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.704568768 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.703716728 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.703747896 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.707487471 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.713287213 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.704750963 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.703823056 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.706646681 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.705741616 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.704715473 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.703757239 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.708648903 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.713679058 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.7048274 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.712456461 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.704744845 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.704476729 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.703794426 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.706327204 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.704084326 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.702023293 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.707537471 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.712248179 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.716726287 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.71597897 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.705739865 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.709059411 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.704488533 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.711192085 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.708488118 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.705592682 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.70375426 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.704863416 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.705824292 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.70545164 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.706270576 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.707668274 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.704281876 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.705016995 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.704226124 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.705588814 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.706027112 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.706429768 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.708717118 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.705669512 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.707825093 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.704193121 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.706276634 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.706479735 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.70545158 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.705301673 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.705024611 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.707499214 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.71214492 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.706746071 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.707970949 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708580449 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.707103775 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.707043282 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.707218819 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710801578 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.70998831 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.714320351 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.709065097 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.708711144 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.716099473 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.706448604 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.708278749 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.712706973 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.708988217 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.707967686 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.712300641 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.71643791 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.708144216 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.706873752 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.70832559 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.708748698 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.708034045 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.714891553 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.70854711 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.70748649 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.708355743 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.71000006 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.707531922 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.710846468 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.709247945 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.708513823 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.710982195 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.708778572 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.711788967 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.708841701 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.708742088 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.708143084 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.707198442 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.710793901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.716450982 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.714256546 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.707875313 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.710400186 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.710165217 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.710155922 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.70979537 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.707124889 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.708966984 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.719267945 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.717447516 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.715233862 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.711100962 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.708061523 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.713813553 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.708988378 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.714069934 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.708946045 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.711397583 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.708733718 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.709785485 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.708175913 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.713361255 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.710081185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.710607401 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.709904997 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.715296658 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.710498413 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.711078847 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.710735892 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.708759622 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.709083167 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.710156259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.70913017 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.712287958 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.710930822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.708811816 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.711009395 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.717377958 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71173662 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.71130524 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.71127406 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.711433707 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.710808598 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.710857982 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.712470914 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.713159969 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.721496068 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.71652588 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.722823512 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.712625686 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.722075799 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.711578144 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.714676881 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.72059397 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.710526158 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.708748719 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.711907116 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.711713846 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718675992 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.712340628 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.711961079 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.716568388 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.712311454 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.714336917 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.712240063 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.713231204 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.711998337 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.711891114 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721552356 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.713158681 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.717601278 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.715684984 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.712502834 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.713420477 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.711153718 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.711307308 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.715152595 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.712621223 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.714574974 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.713698154 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.713785418 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.712250004 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.712099328 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.712180904 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.713638627 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.713325473 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.719267353 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.714148094 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.717792546 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.71410402 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.719689523 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.712337875 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.719973277 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.711859749 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.714768368 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.71099846 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.712646544 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.715319997 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.712040287 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.714364264 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.713869182 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.713723813 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.717110178 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.713215539 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.714022073 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.715092961 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.712892906 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.714038597 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.722871546 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.739877641 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.717129899 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.717118787 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.7132719 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.714954822 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.719227432 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.713643245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.712569537 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.718221085 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.72760429 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.722683824 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.71409802 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.716315191 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.71748742 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.713118954 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.712817109 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.711592046 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.711874095 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.711675103 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.713479341 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.712384172 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.718140493 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.713678954 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.716296841 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.718518843 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.715838014 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.724942734 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.715257937 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.716949736 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.716414221 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.713647055 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.716878963 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.714750057 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.71523444 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.71612462 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.71600114 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.716652294 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.722899974 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.724090662 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.718613369 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.71552548 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.715222009 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.718999747 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.71634797 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.714692008 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.714245799 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.714468696 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.716817344 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.713985744 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.715578277 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.714277898 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.7145963 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.716022973 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.714869487 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.720857284 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.726639434 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.718464575 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.716331841 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.714946613 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.716404002 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.716006154 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.717509158 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.723946029 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.720806528 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.729723926 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.726776516 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.722399174 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.718583157 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.721344038 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.727221093 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.717712378 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.719243666 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.71650603 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.717769413 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.718839524 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.723645197 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.717727296 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.725859595 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.718460919 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.71858307 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.727191787 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.719484406 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.718470601 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.720934306 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.725034211 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.719477487 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.717324441 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.719401677 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.720466554 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725507527 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.721134611 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.718602653 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.719300971 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.718798763 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.721105018 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.723217122 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.719554472 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.719393139 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.718630272 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.720880362 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719956132 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.718636973 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.718641954 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.719664695 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.719874772 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.72178169 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.727563891 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.718125058 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.722313421 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.718297742 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.718584698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.719931403 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.718205307 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.716867691 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.718169005 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.719497309 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.719042864 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.721562281 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.722475827 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.719118735 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.718481979 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.723630631 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.720464585 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.722283206 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.731348533 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.730221563 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.717500172 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.719292624 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.719067935 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.724028082 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.719616461 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.720004122 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.720071029 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.72246203 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.720978758 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.718943038 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.719861534 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.723071665 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.73723612 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.719298116 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.723019768 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.721098513 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.72556345 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.719295515 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.719453978 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.718867597 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.721888456 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.72242838 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.730026857 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.719924277 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.726483512 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721292113 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.721382049 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.725331294 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.724916702 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.732046939 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.723119503 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.721068804 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.719904857 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.726752451 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.740132185 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.721067398 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.732231328 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.754456373 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.722049105 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.721126126 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.721795167 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.72328137 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.722334135 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.723741246 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.721738185 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.720881888 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.720524401 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.721703754 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.719787986 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.729556118 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.725315185 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.721200574 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.719607904 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.722835782 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.722732803 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.721812615 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.72285285 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.721788285 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.720513933 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.72265861 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.72225957 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.724310339 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731731801 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.732447762 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.723436826 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.722196506 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.721381522 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.728435973 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.725370375 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.734022037 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.731409969 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.723113989 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.721531752 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.724918554 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.72319852 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.723619479 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.725896021 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.725519546 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.724539846 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.724852773 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.734558096 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.732299983 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.728766472 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.722797977 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.723602868 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.72334215 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.725602829 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.724349749 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.723849425 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.725198912 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.724719536 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.727901506 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.723332086 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.726081609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.727941046 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.732963987 seconds)
  done (took 1022.293406732 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.725337492 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.72545186 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.724150393 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.724652667 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.724493097 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.722608691 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.72533754 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.724441947 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.725643646 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.727296183 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.724729158 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.726317222 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.726110182 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.724765249 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.725200794 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.725247642 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.72688093 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.725298013 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.725426481 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.725167685 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.727055583 seconds)
  done (took 37.887689273 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.725806923 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.72525385 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.725809456 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.726672545 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.725919045 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.727266336 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.726608381 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.726432573 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.729606806 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725621179 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.726565166 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.725148377 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.726145346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.726938303 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.727504371 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.725514942 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.725344036 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.726049334 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.727053214 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.726713852 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.727919897 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.726214598 seconds)
  done (took 39.637653434 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.726901762 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.726653829 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.729296639 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.726156375 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.726366672 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.726260273 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.727897502 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.727876801 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.725566992 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.728589861 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.72759326 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.728308714 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.73568831 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.736034686 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.730767755 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.727916337 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.872044353 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.728813587 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.726536466 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.729471862 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.727368633 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.733974472 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.726740759 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.730401333 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.726665091 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.726603816 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.727131115 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.725012065 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.725748148 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.728058862 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.733218399 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.727254001 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.728735509 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.729655652 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.726600126 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.729366479 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.731925961 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.728435927 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.728144898 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.727473723 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.73827178 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.755031776 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.729022419 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.735982489 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.728669603 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.728446094 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.731711909 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.739295338 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.728841738 seconds)
  done (took 86.557346312 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.728141274 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.728160168 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.727746962 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.726837497 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.727787422 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.727779712 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.729114219 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.728040882 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.728883503 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.733569452 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.729241943 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.728438858 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.72837045 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.728230879 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.729805036 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.728512772 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.727873309 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.727565648 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.728663138 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.728110912 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.730885889 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.726441569 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.727725448 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.728695896 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.728916279 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.726881158 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.729261754 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.727635181 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.727849559 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.730467819 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.72902674 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.727662927 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.731322347 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.727253501 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.726314479 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.726518177 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.728627881 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.728706226 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.728431724 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.725374237 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.726828926 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.725324087 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.726515751 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.729049056 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.725999702 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.726447134 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.7261575 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.727373037 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.727350327 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.72704572 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.726089116 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.727181585 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.728642175 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.727353488 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.72695764 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.729419078 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.726706553 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.726491546 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.728148704 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.727276027 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.726923254 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.728470088 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.725271027 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.722650149 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.724506273 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.723873386 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.723259698 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.722867381 seconds)
  done (took 119.134421157 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.722037893 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.723334817 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722418579 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.728371955 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.72206651 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.720194588 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.720708978 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.720580522 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.721684593 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.725358891 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.721380517 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.721196086 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.720123184 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.719960049 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.721446009 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.720846985 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.720103418 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.720027378 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.719992452 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.720054778 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.720846303 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.722170453 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.720734618 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.718523198 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.722772088 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.72108545 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.721010194 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.72220141 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.720263326 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.720388016 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.721774627 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.721528446 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.722171294 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.719633111 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.721780261 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.723080706 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.722093201 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.720832141 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.72031389 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.719600398 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.721692849 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.722637832 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.722260416 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.720815171 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.721772439 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.722922726 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.718619538 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.722584415 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.721893379 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.722366975 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.721901494 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.7251723 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.722519661 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.721326699 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.72252427 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.72277944 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.723419624 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.72457339 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.721061396 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.723848214 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.723050958 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.726506448 seconds)
  done (took 108.406374816 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.722725875 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.721769371 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.722677391 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.721700161 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.724029841 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.723346079 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.721846803 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.722257856 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.723495691 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.722006271 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.724865451 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.720136176 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.725721373 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.722577473 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.721936323 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.724308246 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.725346264 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.722450814 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.722578207 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.723927989 seconds)
  done (took 36.116020337 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.726117352 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.730842605 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.72721742 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.72286301 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.721783609 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.722232093 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.721559529 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.723091285 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.723560003 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.72221398 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.724619099 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.723881626 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.72661788 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.723797761 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.724427009 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.722739701 seconds)
  done (took 29.241968791 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.721129274 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.722912739 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.721415518 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.724353243 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.722990743 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.721854129 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.723170214 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.725421699 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.72500256 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.720922089 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.724401661 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.724016462 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.722907511 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.721160317 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.717007576 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.718942977 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.720040555 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.718348919 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.717570578 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.72038368 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.717557884 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.716312116 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.716952366 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.715774417 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.718790816 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.715477425 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.714405895 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.714247747 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.71552104 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.715724316 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.718029 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.718778005 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.716771784 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.716278349 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.716978233 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.716136641 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.717894688 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.715886641 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.715407219 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.71501902 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.716042017 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.714504115 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.718624034 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.715574589 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.715454338 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.716449093 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.715931342 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.716280332 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.717561392 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.718298334 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.71400624 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.717507171 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.716124838 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.716176767 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.714575028 seconds)
  done (took 96.159931895 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.715163394 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.715709779 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.715675825 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.715710658 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.715373363 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.716007245 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.715532172 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.717730041 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.716869372 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.716237836 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.716053801 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.716788658 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.713292284 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.717380729 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.715715272 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718470459 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.717417109 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.716781466 seconds)
  done (took 32.536241893 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.716136591 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.716957774 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.7174519 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.716738314 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.716098903 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.717573477 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.719150115 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.718309939 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718118993 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.718535266 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71554241 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.715801318 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.718604067 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.717918138 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.722011913 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.715516333 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.716260319 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.717842697 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.715479555 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.71990681 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.712954255 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.71585745 seconds)
  done (took 39.423944062 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.713117572 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.714936863 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.728626245 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.737329496 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.734443225 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.752919732 seconds)
  done (took 12.026688535 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.714988174 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.717031559 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.711165045 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710466156 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.713309785 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.712206347 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713887765 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.716439717 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711833437 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.713392752 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.710598773 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.713391937 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.711817517 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712758068 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.710971394 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.711841632 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.71266734 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709539309 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.713459841 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.71325568 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.712069994 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707955004 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.71251121 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.710701777 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710926416 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707566742 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.710275305 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709077029 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.710462799 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707599214 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70925038 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.71068332 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.706922918 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706780401 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707839729 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709072716 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708851981 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709373236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.709381169 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70694915 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.708678919 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.708336612 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709271096 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708010085 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.709095718 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.708592078 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707717923 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.708807381 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.711322815 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709342901 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707083043 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707270524 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706773559 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707759662 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.709551744 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706726797 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705259387 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.710281399 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707567409 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.711711308 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.712057407 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70866557 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707378353 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.706674012 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.706362322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.709787949 seconds)
  done (took 114.504187785 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707736196 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.707824885 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708564519 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.709038169 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.715210791 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707993171 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.705773301 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.707209874 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.709046751 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707898057 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.708579078 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706986743 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705835538 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706653946 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70460779 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706413228 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.705630366 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707436843 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.709417022 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.70753117 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707815853 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.707618341 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.711463565 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.707449385 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706273022 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705899838 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707307545 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.705783674 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.707098661 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705636168 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705008803 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705422436 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.707303107 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.704897857 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.708421736 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.705685778 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.707516846 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.706519968 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70597675 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.706291303 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.706434167 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.705101613 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.704475066 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704637784 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707139359 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.707375328 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.706108068 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.704707936 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.702452066 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704050129 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.705759074 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.70538504 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.702816547 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.704883177 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704046958 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.703911683 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.704693817 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.708868878 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704086048 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704085427 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.702387951 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.703784737 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.704808547 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.707321647 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.702981602 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.703036865 seconds)
  done (took 114.256916771 seconds)
done (took 2373.798025595 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.785304361 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.726688062 seconds)
  done (took 15.145186213 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.867530051 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.82113223 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.706686527 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.738814026 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.702100752 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.726910183 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.723585673 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.69955261 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.702657277 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.703438934 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.705410824 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.885701233 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.74113618 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.700205416 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.702888728 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.799031467 seconds)
  done (took 49.56555894 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.70742161 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.707227592 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.713411839 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.70835115 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.709033166 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.716504947 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.736841341 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.711095469 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.740941164 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.721735559 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.776157866 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.713582954 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.708182295 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.755787608 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.721085011 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.722355408 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.799578222 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.7813117 seconds)
  done (took 32.782221859 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.782825525 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.717768675 seconds)
  done (took 10.139776162 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.732748579 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.759148276 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.702757273 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.71785801 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.695174588 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.703137741 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.735270178 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.736041995 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.732997746 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.879414004 seconds)
  done (took 69.030480601 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.717966638 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.717367959 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.714713029 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.715760797 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.709043514 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.712946012 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.711868378 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.711962368 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.385976281 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.756503108 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.722481483 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.719662092 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.715128692 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.715045733 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.712704883 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.736387895 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.828951207 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.715218259 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.711606977 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.720712342 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.71532867 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.773686793 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.729900191 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.717916715 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.742558153 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.377553132 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.720615676 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.719714923 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.830645221 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.713222349 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.716697268 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.900468588 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.717135083 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.180255773 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.987143448 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.717442822 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.725675567 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.722502023 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.709908303 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.825293027 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.716071638 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.721507011 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.641769908 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.961664827 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.816174444 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.76265532 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.01911776 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.729067234 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.714837504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.744354216 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.719955678 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.716091025 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.726532873 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.218972494 seconds)
  done (took 124.246071225 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.714304189 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.056781282 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.87547014 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.714192107 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.989949529 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919475275 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.709781214 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.757875798 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.715237093 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.939876723 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.960821985 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.815182035 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.710966571 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.713552511 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.708883528 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.705990115 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.865677249 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.779441558 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.709666998 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.713426641 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.739063594 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.950972946 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.832242125 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.708158909 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.740432008 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.924478546 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.829374428 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.811768813 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.485301529 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.710533329 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.773009741 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.711934796 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.714311994 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.71098654 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.877261982 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.806258174 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790081823 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.708026524 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711038154 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.712144845 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.456589056 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.91234111 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.805612345 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.839387782 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.960058552 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.913617092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.486098805 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.71069626 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.45023746 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.8748682 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.942796746 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.941524919 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.831730965 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.712941972 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.233687848 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.714291659 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.713116021 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.959523068 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.929688376 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.804363372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.711642043 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.713103901 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.710646465 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001062406 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.713283745 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.803164551 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.71101742 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.711896398 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.806959749 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.807346495 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.941562099 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.91996996 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.742925732 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.054251278 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.229584833 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.962202423 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.776923173 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.960788106 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.713088327 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.712386873 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.790677038 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.553005737 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.966614277 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.992759149 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.956108369 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.750164672 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.435658414 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.714302725 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.941985634 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.927924169 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.969012695 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.958348008 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.945529554 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.027516515 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713474045 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.713568847 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 3.946624245 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.834606164 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.714763301 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.062294245 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.943725845 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.462172892 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.743845216 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.015559948 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.845182818 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.713420827 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.349989154 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.713318638 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.945399098 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.755032487 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.716959742 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.716468336 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.932157377 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.702720532 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.717448324 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.705916825 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.775969196 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.720134516 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.945349019 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.717355913 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.982129989 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.720565923 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.947660202 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.144547499 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.743390804 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.94715065 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.963231274 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.715033154 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.957206866 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.956926927 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.829791422 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.987500089 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.610075897 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.717419468 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.999975914 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.720608382 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.720884109 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.883185383 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.719488099 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.857711838 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.715293008 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.007745653 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.73780903 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.970279166 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.715935077 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.968035945 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.748894947 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.768614496 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.720583026 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.846563698 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.718573863 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.539410828 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.875361176 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.159215691 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.714379676 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.515966385 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.718812663 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.864299672 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.946560862 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.738407583 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.78740674 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.3740658 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.716446611 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.79756577 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.740973484 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.102703693 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.717687441 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.96989937 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.717880589 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.717828507 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.718587714 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.005680866 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.952291177 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.718994591 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.717153694 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.620983979 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.723131255 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.718054855 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.897379323 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.044274949 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.715929802 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.919711208 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.723204995 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.843728673 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.719462042 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.790874264 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.055155191 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.718231943 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.718902374 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.720254492 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.717993464 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.720569247 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.978695011 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.739598604 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.208560916 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.854376525 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.989202601 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.022265571 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.959922076 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.758493958 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.718689967 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.968145316 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.720817689 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.777413962 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.719868491 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.736427806 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.944625418 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.721046556 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.925441389 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987230765 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.559716038 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.767373248 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.718370164 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.723275863 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.718135258 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.867350029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.800374657 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.716972597 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.719053812 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.833557927 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.836878124 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.925384498 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.722356013 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.804321721 seconds)
  done (took 869.609854077 seconds)
done (took 1172.154980905 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.718143378 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.714958528 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.724147757 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.720796312 seconds)
  done (took 28.52871078 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.731021289 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.724450745 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.723514165 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.722435986 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.723107976 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.723824918 seconds)
  done (took 12.002145113 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.729705517 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.720479644 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.718055476 seconds)
  done (took 20.824482548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.793309828 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.103702463 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.85295654 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.136232649 seconds)
  done (took 9.542876457 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.725831616 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.724341938 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.722653868 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.723339377 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.732240415 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.736547692 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.724405867 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.725763625 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.73122502 seconds)
  done (took 17.200977872 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.780590216 seconds)
done (took 93.53031683 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.736257646 seconds)
    (2/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.126364366 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.788744873 seconds)
    (4/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.725021435 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.926809884 seconds)
    (6/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.821237952 seconds)
    (7/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.824513942 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.689887504 seconds)
    (9/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.811317957 seconds)
    (10/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.854189181 seconds)
    (11/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.737120772 seconds)
    (12/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.373006253 seconds)
    (13/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.744569424 seconds)
    (14/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.985548526 seconds)
    (15/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.726685952 seconds)
    (16/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.827357342 seconds)
    (17/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.933771151 seconds)
    (18/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.731211128 seconds)
    (19/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 3.809359977 seconds)
    (20/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.892187673 seconds)
    (21/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.752010944 seconds)
    (22/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.896271887 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.064680017 seconds)
    (24/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.72661243 seconds)
    (25/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.122205306 seconds)
    (26/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.729996277 seconds)
    (27/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.82968244 seconds)
    (28/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.817242623 seconds)
    (29/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.729109297 seconds)
    (30/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.323771838 seconds)
    (31/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.101313234 seconds)
    (32/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.747272949 seconds)
    (33/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.85826349 seconds)
    (34/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.903822657 seconds)
    (35/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.730412876 seconds)
    (36/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.91506384 seconds)
    (37/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.836660933 seconds)
    (38/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.967040556 seconds)
    (39/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.943992713 seconds)
    (40/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.038430451 seconds)
    (41/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.680314287 seconds)
    (42/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.651465578 seconds)
    (43/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.833054562 seconds)
    (44/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.731839912 seconds)
    (45/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.37387436 seconds)
    (46/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.072253831 seconds)
    (47/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.728752669 seconds)
    (48/309) benchmarking ("sort", Bool, false)...
    done (took 2.655599987 seconds)
    (49/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.732289216 seconds)
    (50/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.843539332 seconds)
    (51/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.012663134 seconds)
    (52/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.868698943 seconds)
    (53/309) benchmarking ("sort", Int64, false)...
    done (took 5.364074807 seconds)
    (54/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.853178417 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.980558198 seconds)
    (56/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.827047359 seconds)
    (57/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.242094913 seconds)
    (58/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.104101298 seconds)
    (59/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.768733228 seconds)
    (60/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.91558338 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.883838166 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.751343739 seconds)
    (63/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.753445472 seconds)
    (64/309) benchmarking ("sort", BigInt, false)...
    done (took 6.729508648 seconds)
    (65/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.738213784 seconds)
    (66/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.861569278 seconds)
    (67/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.809626549 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.412721848 seconds)
    (69/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.818528453 seconds)
    (70/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.818968016 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.857790302 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.041767484 seconds)
    (73/309) benchmarking ("map", identity, Int64, true)...
    done (took 1.98229928 seconds)
    (74/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.79376175 seconds)
    (75/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.730279322 seconds)
    (76/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.063498731 seconds)
    (77/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.746542326 seconds)
    (78/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.187193876 seconds)
    (79/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.751939416 seconds)
    (80/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.380952432 seconds)
    (81/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.760031359 seconds)
    (82/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 2.865654301 seconds)
    (83/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.034427348 seconds)
    (84/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.732623512 seconds)
    (85/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.852239679 seconds)
    (86/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.810238516 seconds)
    (87/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.485333007 seconds)
    (88/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.892985937 seconds)
    (89/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.836465874 seconds)
    (90/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.815529456 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.729766981 seconds)
    (92/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.837614717 seconds)
    (93/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.076704345 seconds)
    (94/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.77673009 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.737742544 seconds)
    (96/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 3.467191814 seconds)
    (97/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.857711362 seconds)
    (98/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.790104206 seconds)
    (99/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.853274184 seconds)
    (100/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.739103144 seconds)
    (101/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.842083408 seconds)
    (102/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.051165636 seconds)
    (103/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.916648212 seconds)
    (104/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.92574593 seconds)
    (105/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.34255852 seconds)
    (106/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.729998199 seconds)
    (107/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.862097506 seconds)
    (108/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.642924064 seconds)
    (109/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.728966971 seconds)
    (110/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.785940613 seconds)
    (111/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.857266763 seconds)
    (112/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.726858292 seconds)
    (113/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.500365198 seconds)
    (114/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.081454591 seconds)
    (115/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.498704897 seconds)
    (116/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.959321855 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.727690968 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 3.274386923 seconds)
    (119/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.932982373 seconds)
    (120/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.730054933 seconds)
    (121/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.509870817 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.865420784 seconds)
    (123/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.739632893 seconds)
    (124/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.818085946 seconds)
    (125/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.949472542 seconds)
    (126/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.751665349 seconds)
    (127/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.052237282 seconds)
    (128/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.821267788 seconds)
    (129/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.036111416 seconds)
    (130/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.735286031 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 3.316018907 seconds)
    (132/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.754747025 seconds)
    (133/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.729418072 seconds)
    (134/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 3.571730947 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.733806589 seconds)
    (136/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.140304866 seconds)
    (137/309) benchmarking ("map", identity, Float64, true)...
    done (took 1.982343618 seconds)
    (138/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.733234342 seconds)
    (139/309) benchmarking ("map", abs, Bool, false)...
    done (took 3.346004291 seconds)
    (140/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.850797819 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.869521605 seconds)
    (142/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.968500641 seconds)
    (143/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.126752004 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.763437615 seconds)
    (145/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.049664464 seconds)
    (146/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.859404886 seconds)
    (147/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.981337585 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.343967147 seconds)
    (149/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.872898847 seconds)
    (150/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.912320782 seconds)
    (151/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.747865452 seconds)
    (152/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.730308268 seconds)
    (153/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.750778991 seconds)
    (154/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.984234638 seconds)
    (155/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.830164903 seconds)
    (156/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.988261364 seconds)
    (157/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.758040421 seconds)
    (158/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.525317372 seconds)
    (159/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.729640178 seconds)
    (160/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.329860646 seconds)
    (161/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.811317779 seconds)
    (162/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.760701667 seconds)
    (163/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.632255689 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.633191143 seconds)
    (165/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.755601193 seconds)
    (166/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.748716054 seconds)
    (167/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.733534355 seconds)
    (168/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.969068853 seconds)
    (169/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.927425227 seconds)
    (170/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.87320701 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.733617924 seconds)
    (172/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.977886518 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.785865051 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.081348447 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.735730845 seconds)
    (176/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.758099399 seconds)
    (177/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.767424939 seconds)
    (178/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.747857417 seconds)
    (179/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.12369616 seconds)
    (180/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.738193954 seconds)
    (181/309) benchmarking ("map", abs, Int64, true)...
    done (took 1.972107084 seconds)
    (182/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.733949329 seconds)
    (183/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.18441467 seconds)
    (184/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.889234297 seconds)
    (185/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.876076464 seconds)
    (186/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.056639042 seconds)
    (187/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.056247411 seconds)
    (188/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.100492169 seconds)
    (189/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.76108614 seconds)
    (190/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.794918962 seconds)
    (191/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.354013639 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.624007897 seconds)
    (193/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.869983166 seconds)
    (194/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.737861778 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.970081116 seconds)
    (196/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.735893439 seconds)
    (197/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.140189998 seconds)
    (198/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.741662534 seconds)
    (199/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.819039933 seconds)
    (200/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.046400274 seconds)
    (201/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.760538793 seconds)
    (202/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.751768242 seconds)
    (203/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 7.384540077 seconds)
    (204/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.95489721 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.74518669 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.004118032 seconds)
    (207/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.766567541 seconds)
    (208/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.742451332 seconds)
    (209/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.744822256 seconds)
    (210/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.805479384 seconds)
    (211/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.123828316 seconds)
    (212/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.413716824 seconds)
    (213/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.406104412 seconds)
    (214/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.883334389 seconds)
    (215/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.754756896 seconds)
    (216/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.980865502 seconds)
    (217/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.815376319 seconds)
    (218/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.739124828 seconds)
    (219/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.799453479 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.382676402 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.939198902 seconds)
    (222/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.068616668 seconds)
    (223/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.928847345 seconds)
    (224/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.124831301 seconds)
    (225/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.742200763 seconds)
    (226/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.058812888 seconds)
    (227/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.872582773 seconds)
    (228/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.896223564 seconds)
    (229/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 1.988450101 seconds)
    (230/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.766352636 seconds)
    (231/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.842019262 seconds)
    (232/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.818003703 seconds)
    (233/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.933144108 seconds)
    (234/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.744136581 seconds)
    (235/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.143601623 seconds)
    (236/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.183413845 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.999782329 seconds)
    (238/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.742766067 seconds)
    (239/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.088660962 seconds)
    (240/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.880580899 seconds)
    (241/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.855312194 seconds)
    (242/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.230803362 seconds)
    (243/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.123986526 seconds)
    (244/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.855863487 seconds)
    (245/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.97552787 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.880802577 seconds)
    (247/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.871466352 seconds)
    (248/309) benchmarking ("sort", Float32, false)...
    done (took 5.448969166 seconds)
    (249/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.437566997 seconds)
    (250/309) benchmarking ("map", abs, Float64, true)...
    done (took 1.977010952 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.743837543 seconds)
    (252/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.613974154 seconds)
    (253/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.1290167 seconds)
    (254/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.919870598 seconds)
    (255/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.087909098 seconds)
    (256/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.73926407 seconds)
    (257/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.951355663 seconds)
    (258/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.09813036 seconds)
    (259/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.050892416 seconds)
    (260/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.883377095 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.127059836 seconds)
    (262/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.741612684 seconds)
    (263/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.160238021 seconds)
    (264/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.873583105 seconds)
    (265/309) benchmarking ("sort", Float64, false)...
    done (took 5.462283595 seconds)
    (266/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.963440982 seconds)
    (267/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 1.991927836 seconds)
    (268/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.742826574 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.224866625 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.760470368 seconds)
    (271/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.197085759 seconds)
    (272/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.852330226 seconds)
    (273/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.897696476 seconds)
    (274/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.824622812 seconds)
    (275/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.903431414 seconds)
    (276/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.755233223 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.112791695 seconds)
    (278/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.744388297 seconds)
    (279/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.192197902 seconds)
    (280/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.870386459 seconds)
    (281/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.621539115 seconds)
    (282/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 1.995136691 seconds)
    (283/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.075843543 seconds)
    (284/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.531257931 seconds)
    (285/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.741778711 seconds)
    (286/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.874288182 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.764724424 seconds)
    (288/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.193342923 seconds)
    (289/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.854505587 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.562799556 seconds)
    (291/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.816924382 seconds)
    (292/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.824478189 seconds)
    (293/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.478604408 seconds)
    (294/309) benchmarking ("sort", Int8, false)...
    done (took 4.635611646 seconds)
    (295/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.747898454 seconds)
    (296/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.743415834 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.300070693 seconds)
    (298/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.896420346 seconds)
    (299/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.769431068 seconds)
    (300/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.956495599 seconds)
    (301/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.943969546 seconds)
    (302/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.590416905 seconds)
    (303/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.744296735 seconds)
    (304/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.709725964 seconds)
    (305/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.747533733 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.951392469 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.057092671 seconds)
    (308/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.747018043 seconds)
    (309/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.006651285 seconds)
  done (took 965.399940351 seconds)
done (took 967.117893829 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.773289039 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.759964148 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.745154102 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.766745832 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.859049275 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.79246616 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.761701088 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.747636359 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.798164822 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.795356813 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.742877169 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.790805177 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.749730834 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.74732387 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.744995273 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.763539373 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.049569899 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.768940864 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.763411895 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.758670381 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.765313877 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.746718686 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.79682287 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.796050869 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.749268787 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.751692292 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.750857657 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.765111066 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.860856705 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.750497879 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.750309022 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.759981764 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.050003847 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.764053367 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.747846886 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.769982677 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.758459129 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.760597339 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.751670952 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.781586401 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.138372363 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.77660627 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.750046588 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.751289393 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.748463552 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.753879809 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.747769807 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.755765318 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.761776038 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.763109722 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.132473519 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.79412235 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.750627659 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.747776419 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.761654889 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.748786291 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.75399135 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.764517315 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.768831461 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.763013551 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.035810298 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.775946395 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.753569189 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.766510498 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.758315517 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.165958255 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.777429763 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.755762011 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.137703929 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.784187755 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.167199405 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.789989165 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.751500203 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.764174518 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.780782807 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.049999509 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.764978221 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.747253698 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.758206436 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.747174467 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.761702459 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.763594311 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.753655292 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.749119506 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.767992269 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.796126027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.762941837 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.750301553 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.762572186 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.770789647 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.758011559 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.761363167 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.754192991 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.747504619 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.763045539 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.755310704 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.751879282 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.753608963 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.75289031 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.761774528 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.134639975 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.795249766 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.746851096 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.747867499 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.749494367 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.764473437 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.136562471 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.780808693 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.774835439 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.800154631 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.753663426 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.039530723 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.777960125 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.769107677 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.763501395 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.752831769 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.745808743 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.037237684 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.153796336 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.796725954 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.751449391 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.751840248 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.769427398 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.752269075 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.748190466 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.054137775 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.77415204 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.766373313 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.875320365 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.765136521 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.782519618 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.749023739 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.753836863 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.803886565 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.768421516 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.783803641 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.75439772 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.766542798 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.769016052 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.748581753 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.763475633 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.764645857 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.751629772 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.759840665 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.749673395 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.80542754 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.766216313 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.766834423 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.777016407 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.875245611 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.750506385 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.039026309 seconds)
done (took 275.433245914 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.829072445 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.750904186 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.841935398 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.750785716 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.839574096 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.824909847 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.751839584 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.752781847 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.751678776 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.240051324 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.752689592 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.756660097 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.749301469 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.753559546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.822026482 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.750627529 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.751314537 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.192224965 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.754442953 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.831965027 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.75011544 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.751925268 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.752081002 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.247743562 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.751431553 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.749880806 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.831058605 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.752173275 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.195185401 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.753110127 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.749266886 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.19409973 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.832834903 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.779566418 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.762749687 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.757834045 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.839717108 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.76204064 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.818385806 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.823059695 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.848084065 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.785394764 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.752431953 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.750354399 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.754894592 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.753854233 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.752980936 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.782428032 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.750435228 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.757794783 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.192431908 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.762226418 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.757863442 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.752861269 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.753203437 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.781615236 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.755505374 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.754226583 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.832912615 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.75142398 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.820269617 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.246157659 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.242856204 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.752250644 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.75155513 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.753836045 seconds)
  done (took 177.334555134 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.817068664 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.830176336 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.816829907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.756787096 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.80381737 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.820985212 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.757130993 seconds)
  done (took 14.282538002 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.759769657 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.757447593 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.801383665 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.802421697 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.754782866 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.908760147 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.754612569 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.766479683 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.758905214 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.781233153 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.75607543 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.755265655 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.761557091 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.756226746 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.804356752 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.765725566 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.869263746 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.755803902 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.755171735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.902571742 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.758722779 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.763476837 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.780117018 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.766522037 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.755503175 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.76372742 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.332758756 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.754507443 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756846812 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.75617851 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.755563952 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.796593868 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.757723076 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.753439176 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.756326677 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.868841021 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.755785594 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.755110422 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.754159584 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.752883129 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.756421171 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.755619118 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.755779679 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.757451289 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.757083704 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.780312486 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.755956707 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.756302998 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.755798091 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.759272748 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.779846329 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.755763127 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.755771881 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.761547624 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.798690071 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761970741 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.75656588 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.754998499 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.75695956 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757179558 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90701732 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.805730383 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.756141154 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.805751583 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.75777423 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.758434277 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.756176265 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.757442039 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.845866584 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.757847324 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.807362402 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.757466004 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.914723418 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.7793489 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.758834977 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.7613653 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.759136289 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.761941717 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.756184231 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.763612089 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.758023504 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.758588673 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.76271359 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.761603949 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.757838878 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.873971502 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897808121 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.758846927 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.757220174 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.763984537 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.757457259 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.801078712 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.756534518 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.756882068 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.817705813 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.872266944 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.785578833 seconds)
  done (took 194.66186379 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.764988782 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.766793815 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.761643957 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.774540791 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.760817356 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.761497039 seconds)
  done (took 12.273944924 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.758993782 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.763641493 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.758862366 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.760983098 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.75975878 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.759862112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.759831659 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.760946766 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.765963589 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.759420181 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.759446875 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.759766786 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.761604185 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.75976877 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.758798429 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.759674259 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.758651917 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.76004438 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.760780909 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.760557804 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.011479508 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.760402223 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.762479607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.763709106 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.76443839 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.760764273 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.773554749 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.76031542 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.760187556 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.766378838 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.763156905 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.760457918 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.766610895 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.765464133 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.765364491 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.766714934 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.763949971 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.762099993 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.759983864 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.760854924 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.760561812 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.759507866 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.761929728 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.762492361 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.762811864 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.769476153 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.768514934 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.77315225 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.76069595 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.762938492 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.76406766 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.760742025 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.76048062 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.762889549 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.766166861 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762511724 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.765857704 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.760787964 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.761663892 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.767795229 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.766496633 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.764376323 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.765516054 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.766679087 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.769783989 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.762913733 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.766499861 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.76749749 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.762362893 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.760975721 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.763824687 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.763166823 seconds)
  done (took 129.868892034 seconds)
done (took 530.114414466 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.022575825 seconds)
  done (took 8.711117804 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.775256953 seconds)
  done (took 8.526785269 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.053655578 seconds)
  done (took 9.75288682 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.783470481 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.771548777 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.774520168 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.764416002 seconds)
  done (took 28.807604953 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.016107457 seconds)
  done (took 8.711094567 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.787126349 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.760037219 seconds)
  done (took 15.314313903 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.784669012 seconds)
  done (took 8.48253423 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.055412007 seconds)
  done (took 8.754148567 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.783461119 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.790166247 seconds)
  done (took 15.291329664 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.767919609 seconds)
  done (took 8.46383464 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.952620533 seconds)
  done (took 9.721379623 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.77925605 seconds)
  done (took 8.538728512 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.791688287 seconds)
  done (took 8.48603932 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.841205262 seconds)
  done (took 9.535759861 seconds)
done (took 158.785914027 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.780520525 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.763582957 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.76477776 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.763770932 seconds)
  done (took 28.763346289 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.80136532 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.799382829 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.801623817 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.812065809 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.802040745 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.796841102 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.79080438 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.790886795 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.810528892 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.802515218 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.799253681 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.802729651 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.800692829 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.789190067 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.80597091 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.799762401 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.81114154 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.799109557 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.793462151 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.802314371 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.765280936 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.809620515 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.801152047 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.765416878 seconds)
  done (took 44.848473706 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.960355149 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.833661967 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.918025623 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.816113035 seconds)
  done (took 9.221812429 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.817137755 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.820043391 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.833141375 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.869431029 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.892407893 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.824733628 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.793922363 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.788499594 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.773499249 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.815899856 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.895542573 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.815618429 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.908849446 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.766339366 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.949695366 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.766064985 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.76760359 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.820061789 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.870064967 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.885751529 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.768114641 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.82028422 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.823048086 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.81584305 seconds)
  done (took 45.598363721 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.766644156 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.776674598 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.772418409 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.767826943 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.768943394 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.767467829 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.776308198 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.771401112 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.792507173 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.772018082 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.768971704 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.771935583 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.775621648 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.769073798 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.768539422 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.7837881 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.783204732 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.767872066 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.775388687 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.775483134 seconds)
  done (took 37.16770179 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.767793296 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.61191952 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.112365415 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.018763172 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.765526563 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.770119674 seconds)
  done (took 30.742495304 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.778744137 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.767707233 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.766710155 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.821251569 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.901121203 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.768841931 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.770567033 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.779023718 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.809547467 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.82786865 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.785650321 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.796937896 seconds)
  done (took 23.271072229 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.770312737 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.78059999 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.760907033 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.794694698 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.77283521 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.771030588 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.774208868 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.761112121 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.775546219 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.781784048 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.768580687 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.77414057 seconds)
  done (took 42.984322168 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.844853516 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.639255466 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.223298425 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228973761 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.288110566 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.965949892 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.762556129 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.847277555 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.76636802 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033127328 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.157077579 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971762841 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.008071217 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.451610578 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.766724997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.258887983 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058380553 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983002774 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.792090713 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.421762389 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879301502 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.167948479 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.477023118 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.883670113 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.969595066 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.888826907 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.027088218 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.72054287 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.814460056 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.772475464 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772397251 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.770549855 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.039525209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.889247227 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.838900618 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.773005953 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.178296854 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.473788228 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.805424557 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.434865147 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.325680789 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.889590192 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.772184434 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.767974735 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.695975465 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.169684849 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.853986393 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.771147485 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.468918229 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.771110572 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.773983012 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.843225525 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.768723275 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.576935889 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.453250316 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.036247845 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.771345208 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770950273 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.319895195 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.813019864 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.269933163 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.694322478 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.860052685 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.481759809 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.234640274 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.924676124 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.769978147 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.769879115 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.695381023 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.487532284 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.889830404 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.903234902 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.783834456 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411916553 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066907008 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.224908678 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.820947972 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.047498121 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434857429 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.697698301 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987420408 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.717569596 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698017791 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.598097838 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.69814008 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983746467 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801218829 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.373338956 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.803198938 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.851675237 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.776257819 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.785537803 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.770118834 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.983864199 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.667462383 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.769161812 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.114116411 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029656856 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.784987619 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.857232386 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.698639449 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.771143463 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.016466203 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.97402739 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.888495298 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.258206445 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.861982233 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.481007825 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.869712519 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.574563979 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.773476856 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.047588029 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835644203 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.818690102 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.893075141 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.721100865 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021448162 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.536354248 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.957917037 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.178471973 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011317011 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.113041499 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016494294 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833906807 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.778605571 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.772959324 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.495644064 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.3888689 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.988559217 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.787617711 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.144957066 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.772595264 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.774863082 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.706159143 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.479530669 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.189706835 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 4.854002469 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987400412 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.599247189 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.04424427 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.701058977 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.908848538 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.781951615 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.984018541 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.427059204 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.861364683 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024157224 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.787335171 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.877135802 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.87881327 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.787964977 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.864959765 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.79066506 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.957209137 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.103810829 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.773699664 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.774234893 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.496785097 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.82706138 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.776063582 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.777669391 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.323383657 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.052003045 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.797283235 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.778285344 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.647307446 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.783413794 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836434844 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.777651083 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.778572388 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.290800683 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275640208 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.779364403 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.534867247 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.020341364 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.777405831 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.448747021 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.956093823 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.785555721 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.051526144 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842860239 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.701886091 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.475566747 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.477669316 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777048851 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.703966184 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.776085694 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.780287219 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.780519778 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.961689446 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.056626499 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.824894689 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.484486855 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.887004712 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.781016644 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.779091322 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.777516875 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.263158673 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.821788231 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.185233372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.868036171 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90681615 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.790288756 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.705211561 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777812379 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.779202505 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.77861233 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.731964807 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.823162426 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.497661961 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.989047429 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.023588899 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.183278438 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.785238509 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.446824319 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.897923173 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.884680297 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.112004609 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.206085512 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.858376578 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.822573787 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.781313877 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.448993069 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.508417281 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.327944049 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.075765062 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.105366803 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.132874086 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.027615248 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.079620413 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.865485419 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005533526 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.300188859 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.834993478 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.863292822 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.717791664 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788839859 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.436061297 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.132677472 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788289409 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.993113151 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.072604409 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.196249935 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.911770659 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.980408095 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806304318 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.482191281 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.785510254 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.313921377 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.795207399 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.233839808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.980263764 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860233469 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.11497386 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.867343942 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.774571652 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.123434595 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.816931493 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.478295374 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.131208911 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.069531572 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.266652368 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.007293896 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.782790103 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.218674019 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136821864 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.853078269 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.879906417 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.708486187 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783914858 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.783841158 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.794465641 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.754905612 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.73640208 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.072255632 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.784437436 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.005092128 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.789474484 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130343117 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.689018426 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.78238017 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.779422272 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026923656 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.33824855 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.91550142 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.952908988 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.34468167 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.785587217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.707120735 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.70710698 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.482758352 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.788933711 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.746948303 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.98940295 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.881289331 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454037564 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.033595589 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072629029 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.024758494 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.792248315 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.055519912 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.052970394 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.269729128 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799377614 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.878683771 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.121332223 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.526140172 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.993936601 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.007779834 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30814043 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.994136765 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.233295805 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.751506659 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.777698199 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.984750459 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.994033416 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.18936194 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.95445792 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.490374556 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.788877341 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.142297555 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.846135352 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.18752131 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.965574284 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.866148365 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.783429883 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854480646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.782833816 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.787485112 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.786396927 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.790701571 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.186670781 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.901911788 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.794149671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.857363793 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.824539235 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.371738088 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.79241079 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.057482548 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.143820001 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.122981298 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.849649855 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.782159888 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.789879424 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.709748621 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.909776753 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.22206597 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.055570059 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.901940614 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.912304868 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.801228084 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.127904446 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.914900511 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.075500551 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056694507 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.667130743 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.316016869 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.882601451 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.000169959 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.788352368 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.987738348 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.004048981 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093572838 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.343403052 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.812962029 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.95637128 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.05529303 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.149774505 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.784262943 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.362414263 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.786827455 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.179348401 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.814978908 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.190723679 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040840554 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788543812 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.904560662 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.789431291 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.984854377 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.235195977 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.454302891 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.12977478 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.642415461 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.788162972 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.065705546 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.118613074 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.090468769 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.858926604 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.788679209 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.497688687 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915095325 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.789099718 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.049650584 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.78531471 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.988577045 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.495554513 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.789093502 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.0612698 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.094014561 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.782512366 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.777117502 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.83473896 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.788299407 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.003737759 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.996302341 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.030109572 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.787539453 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.795231927 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.593865499 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058384398 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.844072512 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.711503226 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.785854834 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.835945259 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011818111 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.803319846 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.301275621 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.485959265 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.061387459 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.692863501 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.803788087 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.08788032 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.140969284 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112689763 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.305117673 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002257137 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.338873071 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.524316169 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.143773347 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.789220801 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.084635512 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.145770409 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.789410537 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.176079206 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.876293915 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.054124287 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.110926364 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.796970986 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.870050402 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.827324963 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.004379237 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.149842251 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.720260253 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.79252132 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.841402221 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.791547583 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.786928607 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.796315797 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.902223607 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.650671529 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.635866768 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.350754913 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.791420879 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.799875866 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.113348125 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.366010085 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.897613657 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.808880651 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.79734904 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.491616344 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.080601125 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.035962565 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.332322968 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.890950664 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.790867798 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.790129468 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.71267279 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971243148 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.978745411 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.069090059 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.179756685 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.902824067 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.794159779 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.999653805 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.995024227 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.1311634 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918421748 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.970429344 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.912872152 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.731486552 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.501034537 seconds)
  done (took 1616.060107285 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.816360756 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.797874743 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.799914675 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.851586139 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.822120632 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.808088548 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.841717426 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.79769475 seconds)
  done (took 56.25505224 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.792673394 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.948233554 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.795323345 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.793047483 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.792526796 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.795565892 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.951556792 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.799071394 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.818664516 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.79880648 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.797309775 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.789950365 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.11486212 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.815528734 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.795402272 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.796888221 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.797324696 seconds)
  done (took 72.924625064 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.797920348 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.06096094 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.823275267 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.796438299 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.510257126 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.80656997 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.743304238 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.802634984 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.795761599 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.848481929 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.089608488 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.846702143 seconds)
  done (took 88.644512677 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.807755834 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.799595106 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.796150035 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.796012491 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.798868888 seconds)
  done (took 10.728115893 seconds)
done (took 2108.992139286 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.023999636 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.98560964 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.043180418 seconds)
  done (took 5.749333415 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.940641672 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.991996548 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.106401328 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.111610429 seconds)
  done (took 9.882553221 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.108628878 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.172454102 seconds)
  done (took 6.010588709 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.120420342 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.830541187 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.214184781 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.804348382 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.806410733 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.809064612 seconds)
  done (took 22.154642462 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.805788557 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.804675538 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.805139006 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.806025755 seconds)
  done (took 8.952943796 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.803997021 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.492670162 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.801762203 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.81090362 seconds)
  done (took 20.637650062 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.954213032 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.919243893 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.94969417 seconds)
  done (took 7.555396805 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.945376596 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.664177574 seconds)
  done (took 6.341337741 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.941613565 seconds)
  done (took 3.669716599 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.831768428 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.072817744 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.284964922 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.766849127 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.427649804 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.052409199 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.143918412 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.024873455 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.243773506 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.287131125 seconds)
  done (took 24.867893916 seconds)
done (took 130.732557095 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.358693369 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.834008454 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.008923196 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.16267154 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.069403609 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.00810972 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.025344585 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.161094273 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.857516243 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.835876899 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.17623932 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.068789416 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.96712896 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.824222417 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.977824227 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.825708224 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.036179313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.187453235 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.844940348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.06304987 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.035827545 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.806401904 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.995406814 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.821803545 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.038165214 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.973050033 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.353003996 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.827232219 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 3.990370549 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.36148578 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.96393392 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.205654213 seconds)
  done (took 166.396182142 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.805725228 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.803035164 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.803801165 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.80250906 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.324157608 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.801513001 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.802978523 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.802455354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.216322028 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.204770141 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.803690373 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.310592873 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.805383439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.799069507 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.802680574 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.799251262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.359760129 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.802670631 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.799779072 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.797903887 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.798548769 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.157373565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.804960946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.161796977 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.355263043 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.800800843 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.796686915 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.794694908 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.793297172 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.793719926 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.791818863 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.795426463 seconds)
  done (took 207.029775548 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.79603673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.795285068 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.794798767 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.792761359 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.793017119 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.792844549 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.794869032 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.79285299 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.384224004 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.375477665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.791821671 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.791105285 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.793367371 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.791178829 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.793240518 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.790686044 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.789747018 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.788050269 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.792113793 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.79503823 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.794193229 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.572520171 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.79204851 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.574642292 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.793140143 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.791032016 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.789985297 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.79046649 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.790609363 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.791114374 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.790915466 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.789326615 seconds)
  done (took 217.814196804 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.042314499 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.794624963 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.796706195 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.70531329 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.795438315 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.792702331 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.773533523 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.040169544 seconds)
  done (took 18.463423375 seconds)
done (took 611.444237777 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.158524446 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.004173061 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.972034875 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.817945725 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.073809468 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.859945167 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.811613132 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.879716088 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.629919116 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.891020308 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.485256184 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.833168667 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.587784618 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.839893366 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.933062017 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.871483771 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.368606146 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.46645135 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.987963128 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.894181081 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.988955842 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.718315372 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.89735353 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.661158536 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.618673616 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.758171818 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.822718594 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.372388581 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.821643716 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.97747652 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.487391792 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.063574166 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.827630604 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.811612016 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.868513209 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.846642655 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.006226899 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.826264257 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.940399145 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.505475117 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.894552048 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.539388549 seconds)
  done (took 99.343090975 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.804915444 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.803896183 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.80383555 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.80077322 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.809292411 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.799481259 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.801334752 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.804316866 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.802347492 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.801821219 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.801203593 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.810715491 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.800393567 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.807168271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.800949494 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.802042747 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.801754603 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.811201021 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.801510483 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.800708612 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.801411258 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.801673229 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.795756355 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.802684805 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.802065292 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.801026025 seconds)
  done (took 48.611219342 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.79664724 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.95122549 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.045125543 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.813736696 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.797821372 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.799283692 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.815105113 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.801644168 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.799490652 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.799045493 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.897425171 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.800060963 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.814412531 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.041440464 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.814156465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.792966605 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.796278547 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.796455644 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.954649351 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.819273254 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.812174828 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.800098127 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.814571735 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.81075872 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.798332757 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.802094975 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.800605005 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.232132347 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.806410795 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.897960863 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.858393285 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.821353182 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.177953487 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.047585019 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.850252174 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.809148616 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.79756484 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.905592932 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.802809785 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.795446455 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.813047231 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.805560784 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.038880268 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.318192985 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.808481799 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.797750755 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.248278403 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.909207914 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.835838313 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.80274088 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.042850638 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.81671189 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.797977876 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.795987168 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.830073622 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.796765276 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.799484507 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.105024958 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.80604477 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.813695807 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.796381555 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.796876877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.960655528 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.80278666 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.94916946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.806240703 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.801048667 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.796821336 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.042127237 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.810344926 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.330153415 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.804687717 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.795946935 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.89926286 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.950103479 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.261966181 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.806409441 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.959803255 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.191556732 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.817620155 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.801404373 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.216275328 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.823181056 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.800493027 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.798417334 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.799040144 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.795667068 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.840359478 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.814268274 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.235288327 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.327290348 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.123357316 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.821268244 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.80963687 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.795297138 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.104928853 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.802570708 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.797642529 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.031511706 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.333307405 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.808492807 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.804586402 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.3138385 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.810135899 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.817566655 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.802566955 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.052093621 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.81162674 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.876808117 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.796814053 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.805285834 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.798305583 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.817903364 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.803255777 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.798353328 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.304373134 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.918268512 seconds)
  done (took 223.484565169 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.797784888 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.79685148 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.796592126 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.798278471 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.796459715 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.799065643 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.795255849 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.798763212 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.797985227 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.797912346 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.79831657 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.796566243 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.799947787 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.798623818 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.818141764 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.811627288 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.412087891 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.811245593 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.807264099 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.805881408 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.451955698 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.811117075 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.809419376 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.806955001 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.811084977 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.810922058 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.817954971 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.811876831 seconds)
  done (took 165.494690443 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.811688297 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.923643733 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.826315612 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.840935174 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.815012478 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.809662322 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.908685782 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.826749915 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.816812962 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.810758797 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.81252459 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.871297732 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.817255096 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.907587678 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.842316529 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.915698726 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.914795054 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.817744399 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.811807257 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.814865672 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.841627629 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.819193473 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.871649979 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.931310375 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.828079537 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.924693667 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.827311575 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.814238887 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.812432585 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.923239331 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.827324041 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.873865921 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.837075615 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.826856963 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.925930906 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.923897159 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.917018305 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.916778989 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.819413437 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.811406027 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.814698774 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.814890597 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.923733437 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.828358154 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.813537943 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.928643897 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.828935708 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.814247497 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.815386628 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.812830096 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.827358648 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.829890689 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.875526115 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.938586186 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.847936677 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.834820871 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.910886722 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.938066503 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.81427089 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.91060705 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.819947628 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.92542575 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.830671467 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.817361712 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.81619591 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.817984794 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.84330695 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.915800545 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.914697361 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.81945866 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.910823585 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.849594582 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.817786579 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.814528722 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.814261699 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.926622219 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.924991842 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.847550919 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.847048307 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.842873293 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.821602119 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.814870348 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.81773439 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.832373747 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.817587385 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.928301998 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.92669989 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.819615979 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.818547201 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.816675501 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.817188121 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.837761919 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.930934422 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.846956173 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.91788796 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.880112197 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.886900958 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.825844655 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.830060139 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.817944772 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.878183549 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.824356982 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.827774348 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.107953119 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.875240477 seconds)
  done (took 196.688989444 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.212700028 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.860277668 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.867605898 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.1344486 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.156886621 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.762518664 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.857172489 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.857857202 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.883954738 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.047578934 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.924010581 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.880872636 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.846866865 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.83804582 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.865141147 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.886107403 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.868305257 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.198021787 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.064942572 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.008592815 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.84861971 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.130043909 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.176283217 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.43736207 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.910732797 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.275599803 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.419762169 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.991828519 seconds)
  done (took 59.961378813 seconds)
done (took 795.304811433 seconds)
SAVING RESULT...
DONE!
