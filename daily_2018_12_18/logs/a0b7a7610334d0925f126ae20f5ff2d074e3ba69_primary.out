cset: moving following pidspec: 8583
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.363640186 seconds)
loading group "string"... done (took 0.560048353 seconds)
loading group "linalg"... done (took 7.725660399 seconds)
loading group "parallel"... done (took 0.173097415 seconds)
loading group "find"... done (took 1.183689164 seconds)
loading group "tuple"... done (took 1.86705727 seconds)
loading group "dates"... done (took 1.256059118 seconds)
loading group "micro"... done (took 0.237048844 seconds)
loading group "io"... done (took 1.113432292 seconds)
loading group "scalar"... done (took 41.116614421 seconds)
loading group "sparse"... done (took 13.496564114 seconds)
loading group "broadcast"... done (took 1.040280649 seconds)
loading group "union"... done (took 14.266317269 seconds)
loading group "simd"... done (took 4.7820665 seconds)
loading group "random"... done (took 9.683652833 seconds)
loading group "problem"... done (took 2.016719494 seconds)
loading group "array"... done (took 22.714284028 seconds)
loading group "misc"... done (took 2.050612042 seconds)
loading group "sort"... done (took 3.453159553 seconds)
loading group "collection"... done (took 19.545790633 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.573452984 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.143136393 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.149697179 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.130594905 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.206392671 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158624304 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158990371 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099495411 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.997363102 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.175257171 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.153411693 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.526119932 seconds)
done (took 5.23325575 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217051909 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094895867 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104591752 seconds)
  done (took 0.907421584 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077687257 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145453934 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094920043 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.077626093 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096880885 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.078497014 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095224525 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077618322 seconds)
  done (took 1.379798623 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086938194 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097357846 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082476779 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096821517 seconds)
  done (took 1.077978264 seconds)
done (took 4.378540797 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.737564981 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.276134438 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.2082615 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.464879538 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.196894988 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.218180603 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.686312947 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.358758747 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.257383074 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099223366 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.143343314 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.386911849 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137945041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.699593784 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.088871537 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.125342169 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.17943215 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.468088303 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082024407 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110553906 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116923611 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142413434 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.131190923 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0903554 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.184779138 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081794117 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194927534 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108898437 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.081360432 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.275722327 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200939018 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692649956 seconds)
  done (took 10.979163888 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.113093087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134425769 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098114172 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.138938335 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.136431282 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100085281 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084100017 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097288684 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121401847 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.177719046 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114382577 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.136893173 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095238606 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.08211747 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115582564 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24615596 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120800448 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.100433056 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100504555 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.088502069 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.137781053 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.113676485 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.109570476 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094434671 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.167106144 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222698195 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112857345 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126469515 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097632926 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.112964821 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143962568 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.142498047 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095416189 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.080694428 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.17386393 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124454026 seconds)
  done (took 5.181161326 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083793418 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189688655 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121543702 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170930066 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080366118 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143131895 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094754135 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113718098 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.256466994 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.111120641 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.486838382 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140107542 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.098954961 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097550353 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.08349165 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.097129881 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.604000105 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.121903432 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.149324134 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.114902694 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101431525 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.083743364 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364676176 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099645527 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.085975657 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098868283 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067322475 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163145904 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097650648 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 1.251868953 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.082614941 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.118364478 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080440844 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.129065983 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134195054 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127605715 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.134112153 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.079161497 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.096148982 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.175176322 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.086135102 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.098047436 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.119918629 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.104618716 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135141618 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.13452455 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096529432 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080842021 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203240474 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09671849 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113067666 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.077558893 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.960544273 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183320464 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.102651608 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.095843421 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.291155053 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.116143329 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096425482 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078950007 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.274344227 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.190872698 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098035508 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.07980987 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096975459 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.077095977 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.098535246 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.388858379 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.097405287 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.678014523 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084180295 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106474146 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.081872181 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096744791 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103214623 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.087289869 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115769648 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.079184476 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.098286231 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.07831266 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.096550585 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080804431 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107467444 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.215248705 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.098208992 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.0793732 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.095956943 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.115551874 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111935113 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.099610867 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.094815014 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114000918 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.101531615 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.09650269 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.11611274 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.09945495 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106477719 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083483311 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144251578 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.096936626 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.142412925 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096824389 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.123897392 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09878304 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113850476 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.111371694 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099090032 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.167112044 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.07866736 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095807091 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079904934 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.096510425 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.080783935 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099794203 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.108002614 seconds)
  done (took 22.740253866 seconds)
done (took 40.695213824 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.324006185 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.10415908 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104608404 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.10361723 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101913942 seconds)
  done (took 1.523346251 seconds)
done (took 2.279466294 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.288323486 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.174726166 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096519819 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.166226888 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.093553775 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.166056962 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.159613227 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.093820306 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.221152451 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094249531 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.161972234 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076270992 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095568896 seconds)
  done (took 2.676770918 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09492735 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.11564115 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083323282 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110695755 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076684957 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111128652 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092447345 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117001369 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110202552 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.0855889 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094312721 seconds)
  done (took 1.851538269 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09507665 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.113346532 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083078623 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111615542 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077126526 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11136704 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09327488 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116663078 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112824907 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085986302 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094443777 seconds)
  done (took 1.851576869 seconds)
done (took 7.129728895 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091937099 seconds)
  done (took 0.848523271 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.935789596 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.829839527 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.112923573 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149807113 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.297252211 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.192258338 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478186577 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.124562561 seconds)
  done (took 11.085935804 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.14423577 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084636078 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105323129 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.08227688 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.102628021 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.08578193 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.099901796 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.101860109 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.083489217 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100405243 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085191366 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103243567 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.098642094 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08669729 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.100346247 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085699358 seconds)
  done (took 2.37033513 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.119270307 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117692117 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108260986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108377614 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.086234787 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.105433693 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107432732 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087870794 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10253495 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104807692 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090397764 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.106432785 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.103794868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080010033 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.107189011 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.107320595 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085289816 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.106417329 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.106318365 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.089874707 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108348334 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.095338851 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.086876014 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.106594052 seconds)
  done (took 3.297930994 seconds)
done (took 18.362574128 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.160349363 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.108995197 seconds)
  done (took 1.03173841 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096541999 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.113674699 seconds)
  done (took 0.977091036 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.098271737 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096817427 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.12191579 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110047781 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080179297 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097225065 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120038646 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080128818 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.096866595 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079916903 seconds)
  done (took 1.752095427 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083540247 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110727822 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101320244 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095953292 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.10654013 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094882483 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088504216 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100069543 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109584829 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.07733485 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102548388 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.11434004 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086005887 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117547452 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105737562 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083523901 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103487785 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099506068 seconds)
  done (took 2.552466937 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081514368 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097136093 seconds)
  done (took 0.94844606 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082927515 seconds)
    (2/7) benchmarking "second"...
    done (took 0.094782061 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081599695 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098135362 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.093906641 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077554486 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.094280765 seconds)
  done (took 1.392434051 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48415496 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135268664 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259134147 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.101565276 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.102954054 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.301215272 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098746461 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083837835 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104977388 seconds)
  done (took 2.500334485 seconds)
done (took 11.919686355 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093759702 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.115640936 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.112157821 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46522189 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108326688 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.09916755 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146844731 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.251334007 seconds)
done (took 2.166494385 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.147124344 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.602300237 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.426698151 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.230965714 seconds)
  done (took 2.036432598 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40555201 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.098446208 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.083561079 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082010273 seconds)
  done (took 1.448321499 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080759059 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099374159 seconds)
  done (took 0.961551262 seconds)
done (took 5.376186138 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081823112 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.096562773 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.07864159 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.097254356 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.111087562 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.097461258 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.077081849 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.096598752 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.07917955 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.099987722 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.096209009 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.081390694 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.09669495 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081331923 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.094276687 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.078992006 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.096527751 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080976856 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095029167 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078205102 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094859564 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081156523 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095479519 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.07816547 seconds)
  done (took 2.961239955 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.101349627 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099734599 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.10295084 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086826309 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102976117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085876255 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.104089686 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097501715 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086780238 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101805117 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100644706 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085714059 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100414832 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.08470447 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100089071 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102478459 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.086924227 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099001818 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08199569 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102333106 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102210469 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081236963 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102419411 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.102709762 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086197773 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101740186 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082548959 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099528976 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102528773 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085072257 seconds)
  done (took 3.645725185 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.085658764 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094612881 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079055761 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.101819869 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078027844 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097289859 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.078214846 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096846399 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.079261592 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095710203 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079513665 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.097331405 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.077935369 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.09753285 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078215314 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099949413 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.112350113 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079148215 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09577039 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079845607 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.098415363 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.077877225 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096473536 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078625715 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095858002 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.077641375 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096187693 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077740595 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096965002 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077565994 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.100315301 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081017114 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.096722575 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084551702 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100141989 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077400971 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100182341 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077656971 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097443673 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076444416 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.096140369 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094773099 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079101486 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101291973 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079092855 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098584996 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.078927997 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097548435 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078841808 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.100210843 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077362689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.096132951 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079802176 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.098174316 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.081592192 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096318565 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.096155484 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079662409 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096547522 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078918095 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094894504 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078771215 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097304406 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079536537 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.111513999 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085017802 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096354853 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.080465234 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.0981246 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080058517 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.098895739 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.091905446 seconds)
  done (took 7.216499523 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084153866 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10730634 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080361455 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099109343 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.077019659 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.09806927 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100369889 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07958984 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098075786 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085165737 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097744515 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.080082703 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098446175 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108328944 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080817577 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.097501403 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.085496188 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095508994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079246296 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101212544 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078337229 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.100900643 seconds)
  done (took 2.802795497 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.210883961 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106798023 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143364663 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107396067 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.08434175 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.10860201 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.102887224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.087834525 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.1037892 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083135731 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102192874 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.213287112 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083433863 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101138132 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100553199 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.085860323 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103391776 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084073436 seconds)
  done (took 2.804625826 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.093755745 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100443935 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102107281 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100536498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.099726207 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084330441 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105600037 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107893136 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.084105014 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098876648 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.0909605 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103148213 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101484816 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082362787 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10212081 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081882563 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102535558 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081466581 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.108976856 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105383032 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08637613 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.108480086 seconds)
  done (took 2.927728675 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09787294 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101955929 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118888435 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085122898 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096656676 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079600073 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106768642 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081117495 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108303293 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100742865 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08231434 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09907051 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087911842 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100307665 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104442377 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082331447 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102317702 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081589176 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102649613 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076985334 seconds)
  done (took 2.693676281 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.10425066 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.1014566 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100114116 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092830118 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101818332 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082029501 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110624769 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101498136 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081442992 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126563161 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.10195496 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082190503 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.110927103 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.10675259 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099266897 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092952207 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110682862 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.109545325 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.082562835 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101375191 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126978138 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082262208 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.110343373 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101056792 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.08297296 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100751733 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099677693 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.089205748 seconds)
  done (took 3.593282714 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082694404 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.09929827 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081822111 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.096212959 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079622604 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096785128 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.079265554 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097001446 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.081403153 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096593874 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.08151514 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.10007033 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.081219699 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100207283 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.0814061 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.100363335 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081368086 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097963259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078676907 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09837275 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080866104 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100445297 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.080897046 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.098245866 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078554414 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.101058066 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07885742 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.098221145 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081632209 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097769113 seconds)
  done (took 3.488642561 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092067054 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107782754 seconds)
  done (took 0.999355389 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079890489 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.116149843 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078600181 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104481374 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085637742 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10149066 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109435585 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.085930837 seconds)
  done (took 1.561356018 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097225073 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11149377 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082715305 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114575913 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110194197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.098696564 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171883076 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102872005 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086817531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099719813 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.114381207 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081444557 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.107305084 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.082069726 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.107363794 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087496641 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098738245 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105493558 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085447183 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.102466513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083707791 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110283617 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08396186 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.098226698 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.101676681 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091898461 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.114055836 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082668727 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.105327249 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.108396854 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.088267229 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094610197 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08212872 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102778406 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08006431 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.110306704 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117373872 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.084966945 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.111270435 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.082660384 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113014824 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095855446 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.086360746 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.107362183 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.109800422 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084128966 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101143996 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.078401684 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098552931 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.084787489 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.096848545 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.08219405 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.096060976 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.088754143 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105046312 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111111809 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.080867741 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.103161125 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085014452 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.104531984 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088748209 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103951461 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102497421 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.081887022 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107978011 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086847893 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111992413 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.076309603 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.095802404 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098059415 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.093564297 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.125418313 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.088059332 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102649729 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.102141289 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.08110892 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.104857006 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084328012 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108156843 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.105872636 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084049838 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108441738 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.089999924 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102804137 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.085591956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110679464 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.098885166 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085280126 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.099792544 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.118413472 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.08210807 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.09874311 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.080913286 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.11264473 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085613725 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102918968 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.079180407 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110035662 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.0753145 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102869422 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.102235868 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083849428 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.113635531 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.106804125 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089491771 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110844756 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.08844795 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102599168 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10364328 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.080538347 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102158513 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.085402933 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108862 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077326574 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106339674 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082503145 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102940844 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.110019286 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.081423574 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101603664 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09069336 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108443977 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080169575 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.099364421 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.104117557 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.084163225 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.105824267 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.090907401 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100795387 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.077535831 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097529697 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.085431912 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102548705 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104436332 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088900583 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105380147 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076361611 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.10032441 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.105910724 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.093077888 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.10277154 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.083840637 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.108624325 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083241681 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.102229176 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.108292703 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086128515 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101277431 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.08780248 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103163181 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077865691 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105932959 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103755275 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082482045 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105177042 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086989589 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.105432832 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.08339521 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101405415 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107585592 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.084693152 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.101176759 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082849714 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100465826 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093266415 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105094899 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.096356532 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.080816447 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.109979438 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080843583 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.102143186 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.082506613 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.104361649 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.083167288 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100782861 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.100569747 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085718498 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11490915 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087407746 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.103344778 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.10696336 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.094713345 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.102195552 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.08552536 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.101984922 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084152366 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.103915724 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.111163945 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088476368 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108745365 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.085072052 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.100037601 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107751689 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091306637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101668854 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.081702103 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101261841 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.086276189 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.108234008 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105398478 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.084448338 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100144736 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084368809 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.106395658 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085250685 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.102704331 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.100146079 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.089386316 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.101193834 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.0896693 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104144631 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.112251944 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.087101575 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.097809672 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.087310695 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100496429 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.088390512 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.099038132 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.080265397 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.102523909 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.102969793 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.082930707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105017339 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.077286971 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109935435 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.0912973 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.103083562 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.081972629 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.102762595 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.108825113 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085498691 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.106083109 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.086797101 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.109976662 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113254376 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.083631988 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.105233735 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.094388284 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.103157252 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.076382308 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.109062469 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.099674001 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083763009 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.100521754 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.081731683 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105772262 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093130052 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.110829798 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.095142532 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.086816506 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.10048718 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082554644 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.097596656 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.087751356 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.10632094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.082834019 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110139373 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103779085 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087651773 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106516287 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.084411572 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104420434 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.083944918 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106597511 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.103005145 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.08647488 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.101649049 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087019455 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101842436 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082517754 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104633968 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.08322294 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.104239189 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108963184 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084773175 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102524825 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086485905 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103359985 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084272388 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104039375 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.081913786 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106783275 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.103035782 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084250008 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104484236 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079400439 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110326151 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083112135 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.11137424 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082971564 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100781731 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108127958 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08710237 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108945493 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083557682 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104679373 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084472229 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.103988548 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105246792 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.090789838 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.099992366 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094401007 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112310745 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102594815 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.087251013 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.102774048 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.0854446 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102368961 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.084495141 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104627854 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.082714405 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.104342149 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.106888956 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.087296394 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.102605107 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.085191955 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104704666 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.08393513 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104373861 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.077029106 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.103138685 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.082126467 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.104485082 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113503712 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.085326335 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.106654498 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.081667459 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.105430675 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.100757665 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.081331999 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.112193273 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092379183 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.104799343 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.109581385 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084004461 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105282685 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.09502025 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097925125 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.081665126 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.102256148 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.080652397 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112683585 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.112558203 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.093546313 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.10341713 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.082658166 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.101315758 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083555113 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102771216 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.077077569 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.103129851 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106093605 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087601765 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.1011315 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.085101779 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.107363425 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085404769 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.115461952 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102467307 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.084651846 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.104408395 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.08086955 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.102140337 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.083011161 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.107814913 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084860812 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.102178703 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.080355343 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.104147876 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.102740721 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.085586114 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102178858 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085323896 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111082146 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083120198 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.107113661 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.10647357 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.07982096 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105460017 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.084549105 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103014245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082911332 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.108366449 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.086369159 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.105798176 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111232772 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.08418715 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104527975 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084255041 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.102720944 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.083288306 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104738877 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.083198306 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103656089 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.104764367 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09283244 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.102688886 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.08627938 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103970745 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.084191004 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111336881 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104044624 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.087433688 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.112156402 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086317987 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105433539 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110612337 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.087652111 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106927169 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085466144 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106652219 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108035411 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084377266 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.109626016 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.084606718 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104989282 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.085347149 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101966444 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083256052 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104234211 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.082154153 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.11132069 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104699278 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.083858608 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.103117499 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.082373745 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.104651843 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087837408 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112867418 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.10521039 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088622716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098029026 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081675858 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105427807 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.082022443 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105840674 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.087012697 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110527346 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.104762727 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.085033019 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102616704 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094187125 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110597381 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.087919787 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103583289 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.106686072 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.08615325 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.106009278 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.085919705 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.104897354 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085459386 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.108591891 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084965664 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104488546 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110332113 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088521684 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105165744 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085753101 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.105056505 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083939107 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.099715701 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084353771 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106745082 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109458503 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086754136 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.104178192 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094866719 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104822393 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082915331 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.109128886 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.103088468 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089523135 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.099576942 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085037531 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105763415 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.084446732 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.100600703 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102143226 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.082906249 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106126917 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.083719569 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098675797 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.095600695 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.114707302 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.105583914 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084142288 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102237213 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.080101701 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.099368533 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.084170058 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105362237 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.085773887 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.116234412 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.102348381 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085048882 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.098934302 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085152738 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.10764705 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087657077 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.102055716 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.079021431 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.104575457 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086675012 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.110492028 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.101621483 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.084788681 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107612338 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08725283 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102549507 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087598459 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.102204654 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.086727484 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118697923 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105808075 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084750873 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.111191854 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111767071 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.087241143 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099408953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.085680297 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.107346803 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.084695484 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105642745 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084756207 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120312983 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107380991 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083032265 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104437015 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086283984 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104274987 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111928429 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086483139 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104963397 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.089202299 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.108118352 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.113444371 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087636371 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113013158 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087006664 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.108420704 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.082682863 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.105911109 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.101423627 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084211799 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.105086715 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.08630518 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110030061 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112242073 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.084853675 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.115302637 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093866214 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.110597618 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080157842 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.104688509 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082408806 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101087688 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.10749478 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083740659 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102260906 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083593994 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.102761616 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085047651 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111695186 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085276254 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.106562543 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.102788639 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079980602 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.104963369 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.087877868 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104718352 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082032708 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.10471979 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.086070593 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110287917 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088279195 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.106456962 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.105345732 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.087750642 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105538234 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080154256 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.111926966 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083751929 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.10793186 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.083889925 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.10617069 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.08448702 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109149188 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.110186899 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085530632 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107884308 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095731223 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108541429 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101381099 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.082872412 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.109847841 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082846021 seconds)
  done (took 58.528332833 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.149590044 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.081727209 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10006983 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.080514892 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.115759278 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099756804 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080747161 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100951875 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082032304 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.103336721 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079763824 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101067978 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109688904 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126324917 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095037382 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.105573901 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079977865 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.102022731 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.10020359 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.081893734 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.111794862 seconds)
  done (took 2.940559722 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105453097 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.120547696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116948941 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119999704 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090793787 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118075321 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.11687841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115655064 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100965946 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.113660616 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120356689 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.11711061 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093099755 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.113134226 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111679235 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093354687 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.12050396 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.11210169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.117031275 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096503128 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115679492 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116686084 seconds)
  done (took 3.29728778 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085982432 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103551586 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086285188 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.099214121 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.084175461 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.100200818 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.088649099 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103038085 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087351163 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.104766897 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081481581 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.105175335 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.105207627 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080722975 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.103878487 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082779296 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.153533587 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109316859 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.083673996 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.107716982 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078936778 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107754194 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099482448 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080994157 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103607659 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089288857 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.106898596 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082200186 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104630551 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.08216872 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105652973 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081208376 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.107278905 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.103951354 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08478345 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.103467509 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085067828 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.104266243 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.079741643 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102294587 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085641831 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100742101 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084853033 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.106678712 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081694293 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.104532593 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084626207 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105583436 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.078726106 seconds)
  done (took 5.53677205 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.106354284 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163538892 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.087799717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145178676 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123639548 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114266841 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.088203364 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.144474068 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104680242 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082761606 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125034246 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123266807 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105766301 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.089396432 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.109578013 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104588658 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087558556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.104554364 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.089201586 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.105328729 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.11084494 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.091277378 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.121636261 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.120133177 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108999617 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084136525 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105340158 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.088646519 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120200729 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.111231581 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110493648 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091713337 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.123086397 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.110887234 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.083780888 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109159072 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123570831 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084501702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.109081572 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.102581735 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.08806005 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111855804 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.110897337 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.104002146 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106387591 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110376188 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085984727 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.103162669 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119251877 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088106115 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11431359 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122579738 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088998589 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.107324677 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11121578 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.121585951 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086617502 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.103898267 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.088644016 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.120526938 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.103074846 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.089045115 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121518171 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.107812725 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093282414 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.12313279 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.113075513 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109172143 seconds)
  done (took 8.26709713 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0953452 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112220689 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122006955 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121886596 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091579229 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113941883 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111892213 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091641487 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112787667 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119148261 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11222649 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134943463 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.087215826 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116589496 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.11259928 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092332904 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112968608 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112620644 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.091566501 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112765739 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.113075785 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121520676 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091918094 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.122081638 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144244157 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107648068 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091540982 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113504927 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122973714 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111439875 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124316998 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092205419 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.113888123 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122109308 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124207473 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091775098 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105664822 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110871311 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.092974941 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11349487 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.105771421 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101212889 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.114017967 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.107295421 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.09181108 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112727695 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122067837 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.12499315 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116049959 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097907332 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.113077596 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122982147 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111774693 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.093154311 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121974308 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.149106407 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122617435 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122595114 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.112805073 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101301351 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122782892 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.131117645 seconds)
  done (took 7.786430369 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109258668 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.117396663 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119476807 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101201495 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084314681 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.110892213 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083140694 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104944076 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114658241 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095042213 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118946462 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.109936666 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092302141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.120239104 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.111371382 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114562213 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.089036751 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111771106 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116792251 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.088722574 seconds)
  done (took 2.976317265 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094807016 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125344054 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085046522 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114192501 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.110052306 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.092080533 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.10974034 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108218001 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087436134 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109398788 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096555562 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.118528147 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107717932 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091807241 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118165432 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113385074 seconds)
  done (took 2.547719955 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.101489196 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119037229 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123250418 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08464731 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106413903 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.081729811 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.107533476 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.101943325 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082646909 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122708662 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.085167331 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.111620407 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.106072154 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08395818 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.102943881 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.087930787 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103182144 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082387505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.10730434 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.120719177 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.096341612 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.106175499 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.085129296 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.109061906 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107751559 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.090723563 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.107949639 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.103467753 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.085091412 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.106794575 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.085663758 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.115832772 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103115532 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.08553851 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.104567545 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.083791647 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.107106331 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085878474 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109850837 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105226382 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084605819 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.106630941 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085621131 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.108973957 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.080523474 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107738986 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.080801758 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113427631 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.104651906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086033712 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.107303796 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086879796 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.10825016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.118027466 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089325658 seconds)
  done (took 6.34195494 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.1008343 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111308503 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080668892 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105375089 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087888091 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.109542148 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.110123615 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.089970929 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108140737 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.082632498 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.109424863 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.089816682 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.109251369 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.109808582 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.088750438 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110343284 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081367347 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109701105 seconds)
  done (took 2.666777575 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.09261388 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.106588645 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093595489 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108134601 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084716621 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110133219 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079811257 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.106982233 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10379511 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.08670475 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106879441 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08857344 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106175601 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087459616 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.108333686 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084747789 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.110383183 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104237958 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087060015 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102557371 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089239059 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10667294 seconds)
  done (took 3.025300432 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.119783334 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127212367 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.0934125 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.233833037 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.104012249 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.13386263 seconds)
  done (took 1.682832498 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111032187 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122378983 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107021001 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107931962 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117206585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087164808 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110133157 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109684712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119888658 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102424461 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109831929 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120026484 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118966181 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097620568 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116809737 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116533462 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107605439 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088701112 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108074168 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129304028 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088002952 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120228846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109637986 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087474647 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111034313 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11959949 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118968219 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102077195 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110467015 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119551003 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114793566 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088422957 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119244753 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12542994 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088975276 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120469399 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110453046 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.129616471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114646862 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09779689 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.11106672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115674127 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098814335 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115138415 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120677305 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109382419 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09427892 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110396035 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109048477 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136901708 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095414825 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120237448 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117372358 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119545142 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098368001 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.136295691 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12488156 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119000434 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11653816 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123637542 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119470556 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094664691 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119604829 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12540179 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115696843 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096698718 seconds)
  done (took 8.248737886 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103677375 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.128481037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109676533 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122900553 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097750268 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110369016 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108909314 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08826407 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110113686 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107076342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.154000087 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089027757 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119841547 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120100905 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087230714 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110674627 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109782571 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117657196 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087655771 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136528905 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11040081 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118956623 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09696449 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120402231 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.125213943 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116373397 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109055687 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089315776 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111139982 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088073174 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11619345 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110857582 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119521674 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087401079 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120248258 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.11010452 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087628286 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116755944 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110134621 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114688239 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098922376 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129777476 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111115288 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109226059 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10267043 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11027806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11027803 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087533964 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111036526 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107887576 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10367791 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124895751 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124762585 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120326828 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109384656 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088685049 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109619334 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10938862 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089064213 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117029265 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.11916043 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087388683 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137860757 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111033452 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11052022 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117931406 seconds)
  done (took 8.146533691 seconds)
done (took 157.464825931 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.229532434 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.210454984 seconds)
  done (took 1.320300724 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.089338229 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.138231692 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.096806033 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.172108925 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.085130273 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.142014562 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.139329748 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.09800015 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108345899 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086444161 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109234709 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087878607 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.175531698 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085525765 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.108890594 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108503507 seconds)
  done (took 2.719241645 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.119579249 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.255065352 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.126557466 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106871872 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.090819234 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.11171364 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.083980734 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.113941652 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.089426612 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.108480996 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.087898623 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.109508712 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.084289777 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.108528429 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110755457 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.088899401 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106859621 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.089094511 seconds)
  done (took 2.879195438 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.114530063 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150370164 seconds)
  done (took 1.16036944 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.244506394 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.164420032 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.232861252 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.479134291 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.279828383 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.369920538 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.206969578 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.216446436 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.164358238 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.212608894 seconds)
  done (took 3.45835307 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119852196 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181306451 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319821666 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157367432 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.108020499 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.132146651 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158031237 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132415118 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.123814612 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.101896233 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.12383994 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.119918486 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.138811565 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.095400423 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117434946 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.118138065 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121240259 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.116552252 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.11564057 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.095648077 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.139914182 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085174063 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.117646381 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.115450093 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.098630949 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120837574 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.107661137 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.085673046 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117847422 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.093457817 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.115447016 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.126775948 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.119846339 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.156586456 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124659232 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158760867 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119352383 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.092169684 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.116904437 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.090836452 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121638279 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.12053792 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.125613475 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.098611306 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.107755294 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.097439898 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.108373218 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.084971323 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.117107423 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.120883055 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.094281852 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.116013039 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154887052 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.120672586 seconds)
  done (took 7.48330084 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.789181389 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15773899 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090053229 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.878937797 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111779587 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.128003733 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.77381826 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11122786 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.256154663 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.750522434 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133827331 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09724268 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.228127153 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.257684739 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.898876598 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.307522348 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.639587527 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126768847 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153687806 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153872044 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117630833 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114861742 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132122832 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.4295156 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118167389 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090009607 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.119456762 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119588231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.160518242 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.126174048 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092626853 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.201068141 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.247646546 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.203428537 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094999505 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112386621 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088838665 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191372355 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.241147888 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215321912 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.181734833 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10906658 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089761889 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.123723263 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132666026 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.087471595 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185198023 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175145838 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.171470748 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116823999 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.096369497 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.122113427 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122565318 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.165542686 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.122277013 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.3084724 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.322648548 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090199432 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123187455 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.125805885 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.236774082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124957051 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226183652 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.138585634 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.190025402 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112670833 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.778033873 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.170236257 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.088517656 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.118189369 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121585281 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.094531803 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12187185 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.168335425 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.407405348 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124602529 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092348582 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113239019 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.228246254 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102972546 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.114354991 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.163193084 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.116908277 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098674551 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.12591631 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.123649273 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.169169474 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.226994936 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124309444 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.121747841 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.092430887 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.126792024 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117653151 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.212090028 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.219849563 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162186464 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.208154951 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123862734 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.16238823 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.191119224 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.097272629 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.193936976 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097713125 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124676903 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124296312 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21601591 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.146584802 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.101246934 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116619683 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119052581 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147848332 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.10396578 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.120175572 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.170104565 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.480030749 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.169312076 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109424803 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.105103022 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12172048 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.161823455 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118393058 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263145235 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.100042758 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.192150601 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09736331 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111017027 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120601234 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163039746 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121527705 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099663819 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122865073 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119282505 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.236529234 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.214982005 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.098346025 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.244926174 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.184711594 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118489061 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172874928 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121673116 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167966853 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119764926 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099991266 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117991192 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.770177678 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101532431 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.122194973 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116965347 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.187952985 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090555047 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124536662 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.124960755 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.088235931 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.802024137 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127186116 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.099034044 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.125335646 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118865953 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.09859 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.119991074 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116578499 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162499526 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.23099408 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119046563 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.09914522 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.126140667 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.160664987 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117617681 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.124368616 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.103490092 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126818705 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122520679 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.09333278 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.125752429 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.169305308 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.184356641 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.196098269 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.596765556 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112409654 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.102089679 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.227723043 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113424088 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28803671 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097925383 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.223600443 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162910709 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122597987 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.317845187 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.164822651 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.187578883 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128041721 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173970573 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11045526 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.09572952 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.188024872 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089972179 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118952539 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162623891 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126500721 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.122919908 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.944165107 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.114415635 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22529858 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110118291 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.172184548 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118176363 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09736629 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.28770219 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11378983 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128671387 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.16620117 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091893585 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.126585698 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.869005381 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.103198804 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123950833 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119466178 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222749645 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16465527 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120973274 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.097077164 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121988736 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.162083455 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.234638581 seconds)
  done (took 44.120187951 seconds)
done (took 64.025009897 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.280669665 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217333404 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.271716439 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.175092741 seconds)
  done (took 1.940370489 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174382836 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.152576488 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.122372905 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109961022 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15399374 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08447988 seconds)
  done (took 1.712187415 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.366672262 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.280133141 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244753509 seconds)
  done (took 1.814530509 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.321032567 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.250454327 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.476998618 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.326621315 seconds)
  done (took 2.391204345 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.211363694 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134208184 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.111816134 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.104068583 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.200209213 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.248531507 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.143231522 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.204010348 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098602619 seconds)
  done (took 2.419954642 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.200049196 seconds)
done (took 11.396877971 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.241129049 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.27040051 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.158931972 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.185439085 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.160996816 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.265887489 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.127937547 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.185235942 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.125180744 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099116618 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.11884569 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.099006714 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.252357851 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.186590128 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.152872126 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.149028278 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.244150662 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.223028529 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.197668937 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.135360797 seconds)
    (21/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.160670682 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.148613841 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.12511599 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.214415366 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.146316292 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.254206531 seconds)
    (27/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.094917113 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.117579782 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.118904871 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.095587855 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.212634684 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.197988035 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.115396214 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.116091056 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.263282493 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.117513468 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.193559468 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.094838889 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.12272522 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.093795457 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.152104456 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.109421663 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.135902598 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.138491243 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.124976739 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.067691798 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065519695 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111588492 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.067537578 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111040537 seconds)
    (51/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.200829414 seconds)
    (52/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.097366924 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.11834435 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093996876 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.192880497 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.136936804 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.09318767 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11863461 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.090930474 seconds)
    (60/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.141844118 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.136094544 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.0934411 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.127827741 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.087394701 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.113546611 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.21292477 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.190139527 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.111796516 seconds)
    (69/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.120871811 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.153798008 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.118230224 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.147586055 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113899393 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.198505075 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.202423871 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.184724899 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.192073555 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.178596766 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110621576 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.085062998 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.185540686 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.149287016 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.131029119 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.123949186 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.067979436 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.14406353 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.173334441 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.086582797 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.090149676 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.148441479 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.122829317 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.145183667 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.16129728 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.140735463 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.120875207 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068400987 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.076820852 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.145895179 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.191967781 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.146551636 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.119282907 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.1775955 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.189374588 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.088653428 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.183411043 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 0.172258151 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.183412507 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.12223051 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.145449633 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.09662798 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.065661711 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.180400666 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120803495 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.0969159 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.145321289 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119345801 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112539046 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.340703077 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.066498211 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.194964218 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.111090879 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.140893417 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.091969069 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.079661363 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.185969794 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.066309908 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.091507075 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 0.182089156 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096179596 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.144180513 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.094357892 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102321113 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.16671675 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094935214 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.140056609 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.218327012 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.067712692 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.066269178 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117455245 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.093508187 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.196799057 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 0.176298404 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.141330909 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.067434875 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.18789424 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093356757 seconds)
    (147/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138852122 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.175204971 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095063568 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.09263398 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.08576138 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119382626 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.066287274 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.123884142 seconds)
    (155/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.186767852 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067998399 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095445775 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.183332728 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.176933527 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.111395808 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.094197207 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.066670289 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.184338668 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.111603435 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094783356 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.118377248 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.066998256 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111810741 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.08665993 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092536929 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.087895462 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.06581749 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.092924573 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.133416595 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06957967 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.08377682 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.139788933 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066796695 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.091053338 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087257636 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.109482547 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.098157838 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.091157734 seconds)
    (184/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.091628571 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.115461807 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.128638192 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.091721577 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.168269025 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.093792343 seconds)
    (190/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.075865757 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.151268902 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.131581156 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112224091 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067670826 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.11338739 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093729436 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.118271966 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.129528506 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.183826479 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.119213862 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.116501274 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.133505299 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.09548519 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.115426913 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.109014304 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.113977914 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.065999441 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.091813438 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.108867155 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.111998505 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.076648458 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.115893612 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084769061 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116585375 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.087214957 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 0.187066185 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.119773869 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.130891922 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.089124412 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.120185812 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.095817175 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.112179244 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086542135 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.225245043 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.091601733 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.088242085 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.140542755 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.067463756 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.06757103 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.116750457 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089007909 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.117150937 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.099499594 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.101186433 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.084876818 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.16554004 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.132458258 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.087823503 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.150853828 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.150549703 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.091687081 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.18935097 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.088488559 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.092599146 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.103395964 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.138016871 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068084495 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.127121504 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.06779166 seconds)
    (250/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113069139 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.087847612 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.176539826 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.067490524 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116350891 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.09209621 seconds)
    (256/309) benchmarking ("sort", BigInt, false)...
    done (took 0.221122102 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.119721035 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.135389522 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.096487435 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.06634071 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.11195146 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093064405 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.112744582 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068143519 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.093050166 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.155043983 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.134280844 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.154336921 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.219132505 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.091271494 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.097709229 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.067848526 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.085850324 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.113825187 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.116784162 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.08794183 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066073446 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119692839 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.076024723 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.093124854 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.067385052 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.084283972 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.093323672 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.068079126 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.112397207 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085676554 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.090052733 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.068480805 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.093822315 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.102579446 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.107836566 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.119710468 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.085299297 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.167274644 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094236635 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121483599 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.092503253 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.172355789 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.118854965 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087640617 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.13670553 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.068043417 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.093308103 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.093227718 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110575117 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.068547037 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086000406 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.179061328 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.131065709 seconds)
  done (took 39.954512014 seconds)
done (took 40.876241646 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.10073846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.150192012 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.096395024 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.13738256 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124944496 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.092099085 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120446568 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097486895 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125431568 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.126052965 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098657799 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094955461 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.097108081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.122200466 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.097130032 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.141231194 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.125173098 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094361578 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120111558 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.085244634 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120893872 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086457211 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.114214759 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069911388 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123626304 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093786737 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.119365984 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119609256 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088273773 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.111702721 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090964705 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.118502341 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087533506 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.125674743 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093106723 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.121871057 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.09729486 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.122242387 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.088130298 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.11324973 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.118065225 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.088561366 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117175933 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096235841 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.117849464 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092971772 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.1202702 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.099497467 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.141567091 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.115954677 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096708053 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.122650104 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.097501398 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.120054404 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090557535 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.121943132 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091876633 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143927959 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.122071148 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092922222 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.122702735 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095093449 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.11881586 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094804277 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.12216192 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.121883586 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.099715558 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.117567123 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097864189 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117837815 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.08656238 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.121745556 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.089769352 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.113004963 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.09558667 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.123755654 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085501967 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118440775 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.117226471 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.093491976 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.110551545 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090926074 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.113268349 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.09349583 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113634038 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070665468 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089519291 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118761836 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.110283357 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.09708869 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.117822386 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09476011 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.113985922 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099490918 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.112519975 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092398383 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111955022 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.086847001 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.115355502 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090694529 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.11268307 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089720345 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122237755 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088594343 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.119028213 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.123727717 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088788798 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118103085 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087577472 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111553885 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102388913 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122812897 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.086828712 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.118964442 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.085824126 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.120153728 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.08527525 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.112698362 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086427753 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.113206258 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092734924 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.114129559 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089237351 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.119538596 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.12520995 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.088303585 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116012668 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09045553 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.111583622 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093787663 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111926897 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.087556941 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.113850826 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078907647 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11400925 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088695038 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.119817287 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090572929 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.120185211 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089451409 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.122029939 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091969031 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118910771 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.092924771 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.113214542 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074101292 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117867423 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08986241 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.114679777 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.086573357 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.114216225 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086884119 seconds)
done (took 17.110575067 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088697928 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187690826 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.153169154 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.143820647 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.108163702 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11365381 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121907258 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.120136989 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115112551 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.144035012 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111039062 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.13381433 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.148946707 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087003132 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113528676 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091313489 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114546467 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102308937 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14712839 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134653936 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.165662915 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085523244 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.149361087 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.137565615 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120837288 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115542856 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112821141 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091677624 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.11633957 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103623971 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.134240775 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090399553 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.114021212 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.134446744 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105537126 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.122146017 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086546534 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.121198542 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.087272087 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113564747 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142383284 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.13354091 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094696687 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.118638906 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.092217915 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115211892 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089149995 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122517957 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.098514076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118012711 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.127765829 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.157785798 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091640478 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123625256 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086495835 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124397167 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.122394155 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.091044838 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.113166404 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.091653114 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.112353508 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091947332 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.129140318 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.143276805 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.092759502 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124089305 seconds)
  done (took 8.712387406 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105558298 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.141319897 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.123160027 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132510832 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113122246 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088973526 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113553868 seconds)
  done (took 1.805829919 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090160302 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134946672 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.112759771 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137787491 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132516766 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110383634 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124778635 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088173651 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.13347782 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.089450315 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.135570418 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.153332792 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08997107 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122903749 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.138555991 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089150672 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138533806 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088606897 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.117794162 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112158869 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11914539 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134965741 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091099699 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.114293141 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.102476706 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.11585102 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.161919456 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094343802 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115834797 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092232594 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.11312656 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.167592856 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105989453 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126990463 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087506207 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.129917635 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128621966 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087482876 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.130847981 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.094241608 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.130043069 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089469814 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116878313 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.086025237 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.120446712 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.124146714 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.091277944 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.115155745 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092618352 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13436613 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092327312 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.129478811 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088297405 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.120118115 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089257112 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122900641 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12350601 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091116059 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.134029766 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.091136035 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132971641 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.105651571 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130146272 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.131133395 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091759049 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128869169 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102001306 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118597763 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090150405 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119493933 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.131317992 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088210667 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.116284884 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.10180628 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117058474 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.113471504 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.139323965 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089666771 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126650827 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114743348 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090096358 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114825375 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.1135591 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119240622 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088871082 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120179143 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091820635 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.113782596 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087253018 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119403365 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086478256 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11655647 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091341751 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.116746374 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116422779 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107603907 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115625413 seconds)
  done (took 11.928321614 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.091934246 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114877704 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.09318302 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115238069 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090980025 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11635456 seconds)
  done (took 1.623061475 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115887605 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119686689 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103567433 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.12195971 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157072992 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103221252 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.131606032 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.125389113 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107101447 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129737563 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130905841 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105292628 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.138293529 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121277558 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104773384 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123022848 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103759041 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127126946 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128151892 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.09664881 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.138843278 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.122207959 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097071215 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134359705 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.118427786 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097068137 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127508339 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102641544 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129413652 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.123698961 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096894841 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119815112 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.096407452 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.125109763 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.131182553 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095887057 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122245608 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.11879949 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101395393 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119420542 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104865543 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123137924 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.127054258 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094386225 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125319085 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121177735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.0956317 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.12697142 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103418934 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.12144225 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119416591 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.096211417 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119992039 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093564196 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122441397 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.124481467 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.095208248 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.131340909 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.09555954 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123441457 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.118393814 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093826222 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125754277 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092946151 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.131274632 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121295151 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.095553326 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123778825 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122198784 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096850454 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.120674875 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.093500819 seconds)
  done (took 9.317880815 seconds)
done (took 34.370674556 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.699267935 seconds)
  done (took 1.698609713 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.715265422 seconds)
  done (took 1.715756181 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.126516176 seconds)
  done (took 18.12713553 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509498941 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.597118587 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.887419085 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.182255127 seconds)
  done (took 3.177251501 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.965497689 seconds)
  done (took 1.983687639 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.29877528 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.25979522 seconds)
  done (took 1.563692745 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.782029341 seconds)
  done (took 1.796173611 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.357337983 seconds)
  done (took 2.362057157 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.336625021 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18525141 seconds)
  done (took 1.536811724 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.548655463 seconds)
  done (took 1.564625901 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.978927873 seconds)
  done (took 7.999966025 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.269626442 seconds)
  done (took 1.296905111 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305114615 seconds)
  done (took 1.323036778 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.568769407 seconds)
  done (took 4.590217925 seconds)
done (took 51.744746044 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100464048 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128339645 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10305529 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125343142 seconds)
  done (took 1.470322977 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101939741 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121767508 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100767429 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122357464 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.126113592 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097147138 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124245897 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100984522 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.12260104 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096447245 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.123139796 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120617182 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099962446 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123957612 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093077149 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126008625 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.099118153 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122178835 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.124523043 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096815743 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119360989 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097714705 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126392023 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.094719953 seconds)
  done (took 3.706057762 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101156848 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.11934912 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096582504 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.119305438 seconds)
  done (took 1.464053412 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101796935 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.144458466 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.139504826 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101218979 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.144145172 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.136250154 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.093376802 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.118269823 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094751528 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126079793 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090899586 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.150784687 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.139358906 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099725633 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128371269 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.087955107 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119222399 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.138178028 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.099751853 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.128525978 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.094445872 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.126567236 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.090849323 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.140928854 seconds)
  done (took 3.857778281 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.171000081 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.129487484 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.140159353 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095672278 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161849908 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141622242 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088486701 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.142188416 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087861716 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.133860098 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117811719 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.13409252 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131101429 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087773405 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.115834034 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087476366 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130966906 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130695391 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.091524944 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129563841 seconds)
  done (took 3.478333458 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.099243781 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118019937 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.089024477 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.116905036 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099794932 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.121685321 seconds)
  done (took 1.673437043 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091551144 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114414151 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.090527696 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.11499797 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095417793 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115228304 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089177664 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115126381 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.09057188 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115412881 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089813088 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.114012829 seconds)
  done (took 2.265587497 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.464008419 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.09422091 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121946865 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.115105063 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.096272901 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.115594059 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.102978808 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.120457309 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.140536547 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090189332 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115051117 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.092398466 seconds)
  done (took 2.698626899 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23499096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127614615 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.286961489 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.275529618 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159443187 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172403229 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.282371322 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164358465 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225409464 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160862429 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204029078 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224505897 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152863721 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190507422 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139059877 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.119801732 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.227548761 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.240258515 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153946619 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204944338 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227403079 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166846605 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182300079 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123710593 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140035817 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171697764 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.12279314 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12965211 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206924321 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202312454 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189144658 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163408848 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148504541 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238552595 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254350217 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193211547 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285674722 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137835575 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.171815801 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169130471 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265120348 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113251342 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.233131825 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15605547 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104039732 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.221235476 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167781538 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.17755193 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151660201 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140399725 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219281535 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214597384 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.219391324 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112934927 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235323822 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160913643 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.168844007 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196400943 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253086799 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223668316 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180309681 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.094237134 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.215340232 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195579746 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184872385 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.1956662 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.181812872 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149507057 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192738928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.188045978 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191427238 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188757315 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.187196223 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141932306 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168635928 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17307395 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172658825 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.258148292 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20242767 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096800326 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169621362 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150804183 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134247707 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195333715 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099936611 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239156369 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148365501 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.137315227 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245589754 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161035635 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160969918 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200369667 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222404132 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120195464 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.112496078 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155366633 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155278022 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193588844 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141183072 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160582554 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163074926 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.129843901 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179267823 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096507322 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20250104 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.09223974 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174356052 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207814286 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100645366 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161646461 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152425089 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.150192215 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174628262 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197795932 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143513354 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135525877 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20851828 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204178123 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.122753081 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.204522171 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.204955112 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.14439044 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149417625 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20126748 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.243862966 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111635196 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230659343 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157423073 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1347767 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.105565867 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208367285 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128523543 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.162215329 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137544822 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183074249 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235538811 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125204435 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112737513 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213102771 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10738704 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134102487 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16179469 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148839087 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.139601685 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.120960742 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152470737 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208702675 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178285685 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15419871 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166473793 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153291435 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255890249 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141940344 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.124345278 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150133125 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.120890389 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.193320359 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19860593 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.132771935 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230471746 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172999625 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204618223 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170071277 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13568891 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177901654 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130857753 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.09350589 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22196434 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16924241 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.163139624 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.19747092 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.227423596 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.18424435 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.181678339 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173050179 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.202193608 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164803659 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157088413 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.112863201 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160267443 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166113022 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.124758513 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.143472309 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.106626251 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148297703 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143962752 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135780437 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195060215 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196795854 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19160099 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162999195 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149953042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182371486 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128315175 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175747347 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17928798 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14917722 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.199524586 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221481959 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190473501 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143094493 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202313162 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.122473754 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097851482 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.144121254 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.170123028 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135606669 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135694074 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168241223 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182198133 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181833361 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176344488 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.241027144 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173119989 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190813903 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.123564133 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.168750781 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186266572 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177455403 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.187175567 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144610772 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.149900225 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177240318 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159498725 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226651113 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195533942 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178288818 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207377788 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151546618 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132478629 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151781981 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18742199 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156216762 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178989001 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148033848 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141273025 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163278621 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105351375 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187944796 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184373871 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164251934 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18800207 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152201561 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211326551 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101569428 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165969761 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159712992 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164732873 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.109898875 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176607693 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203551844 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149265813 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167786307 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218825124 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103192728 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.307811787 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.239235399 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217409142 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111176964 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159538922 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162634607 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165533509 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171116421 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178631587 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159873708 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216450271 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157121063 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.11133976 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142339923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149157397 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149975832 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.104077071 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.149469174 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203032733 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.113269548 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211131475 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161852657 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130783452 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199893379 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.122930586 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.14553775 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152519376 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215165016 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203689675 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211800246 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151484831 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.181105788 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234849393 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098936741 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132742728 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133935504 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17892987 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107981753 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220561687 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189216309 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.233378752 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184283822 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186927364 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141261116 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.120193224 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130116905 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201014327 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211206534 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153756708 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158761246 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.232514 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.114814551 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132979584 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173386238 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201435387 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148219673 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.226016417 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080577125 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.281224258 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129487803 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105312456 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164276853 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237892137 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137788634 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.182969144 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171231862 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170717246 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165686633 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151202431 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192952573 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21899758 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231107685 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18055385 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.13500664 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156360711 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178209831 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.192123917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158554678 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141432837 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205817997 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22436278 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198109847 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144916323 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172323153 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169244064 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158789092 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215358961 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108987922 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234644055 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107226625 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223333587 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154510177 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143931948 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177602452 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189287777 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144764047 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188832503 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203250278 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109488786 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134677209 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170566967 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178031548 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157634262 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129628456 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180578346 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.126029328 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193953944 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260844191 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134902904 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12712806 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14831368 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13738539 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157005249 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159211311 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141759975 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139154634 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232428158 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.134797661 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194056926 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230227391 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170927463 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176464716 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145798934 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.695163746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.102178219 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22582864 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155767662 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206940592 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151701065 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174211712 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159503013 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169822128 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224076271 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161214609 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.23166064 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195661847 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.178591457 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.133216054 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158975699 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162977741 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145511289 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151724946 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169985215 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160707398 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.154031335 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.180880309 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170233001 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.135452105 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11205324 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230836817 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155661151 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184464024 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18075401 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.139185928 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176567648 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186719299 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135824339 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.179516102 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238929623 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142479932 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15325101 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.106093529 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.157964269 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264219509 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.125747429 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203113414 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177317482 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159681695 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168419206 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148772112 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220270427 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158758985 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180171676 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14717231 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.161191411 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156129462 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110980982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.132312853 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156330206 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169677087 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150136643 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16086203 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139271167 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221137929 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.096213728 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146288359 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.228784745 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193541769 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214693692 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137751719 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137567385 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163225665 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151879692 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.180463065 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179663599 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135916578 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107783621 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.137886202 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.159195286 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.114672871 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157576357 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198754015 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166920207 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.239397581 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.138238499 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.280753403 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113211812 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156903981 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.087562128 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.133460076 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152147934 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14790824 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161407866 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.194838206 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.265351129 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148405835 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.13365909 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122536489 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.126394974 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135484161 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165124356 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164916399 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179032757 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14635638 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.080799555 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159821423 seconds)
  done (took 83.056453145 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.165198612 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134246955 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.14967151 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204499434 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178588933 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270768486 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.212357233 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.255637358 seconds)
  done (took 2.691711311 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.094765777 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14798739 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.158761747 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134444779 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092133852 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.119810002 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.348188462 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.133427564 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118483189 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.121467524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.175092232 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094439099 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.556441386 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091481653 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.120623538 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110643961 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092947747 seconds)
  done (took 3.826113424 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.481299626 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.73784137 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.517382986 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.098185629 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.204667463 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.11358305 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.806538799 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202124494 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.117210408 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.493259986 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775491338 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.161955485 seconds)
  done (took 18.833187651 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.099929272 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121580432 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108803726 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.136010626 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.095581409 seconds)
  done (took 1.69028297 seconds)
done (took 131.72489056 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105375786 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.405170883 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.07203406 seconds)
  done (took 1.636507687 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108602898 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137311062 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109321378 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.138015229 seconds)
  done (took 1.624928269 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099065661 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127111457 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.10936072 seconds)
  done (took 1.462523994 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.3249665 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191278756 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.164787296 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107309372 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129690788 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103731776 seconds)
  done (took 1.469113461 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.097986883 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127115453 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.097827012 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130826517 seconds)
  done (took 1.584311442 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094908886 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070743883 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.10333754 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075478974 seconds)
  done (took 1.470998005 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114916216 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.13222792 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.103023112 seconds)
  done (took 1.481817968 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130368821 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139728351 seconds)
  done (took 1.401399642 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106367502 seconds)
  done (took 1.233638444 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118211331 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.169628213 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.190008754 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.16542771 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.230108312 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.165062058 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141459627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113963525 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132739525 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144969658 seconds)
  done (took 2.703813946 seconds)
done (took 17.980868132 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104475673 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.517564894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.413169917 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.117719805 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72378845 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.380375205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.07241773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147260918 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.165401641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.094316732 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139986585 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673668108 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.026704883 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.474084051 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.984432554 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.473594995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.676367859 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.122367564 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.119764803 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096071534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.057218733 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093024085 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123322226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09284951 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.704668038 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.42541967 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09602807 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.471575452 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09260194 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.12709187 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.383646072 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123773653 seconds)
  done (took 17.434954627 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096755456 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174219159 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.09822859 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.138768175 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124150139 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095087886 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125568294 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094226501 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18098524 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123986174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110588437 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123028195 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126175292 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095821072 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142749412 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092682174 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126432724 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093254481 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122895337 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121296909 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11317322 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.121643353 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094482783 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122784556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.09436377 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137183618 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122321922 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.094304334 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12155747 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.099048806 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128545184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095178251 seconds)
  done (took 4.887532423 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141048425 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183783511 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.13000689 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127427773 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.169985411 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.124751876 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.20032983 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117821115 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183543414 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124756652 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140482162 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093890251 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158010102 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.122950021 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115189659 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122047087 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096747006 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123194881 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.093057637 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124021793 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140393428 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094382823 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122915863 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093683789 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.124236631 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108168189 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12570017 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12117912 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094652097 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128420792 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.100214345 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125340354 seconds)
  done (took 5.215671977 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.098007118 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127461293 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110521022 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.139654041 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095649884 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.126875166 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.097152665 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126382263 seconds)
  done (took 2.060586977 seconds)
done (took 30.724673743 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112737838 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128419597 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107116264 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.135974213 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103857248 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.133031171 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091769622 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135690593 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133569285 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.10376307 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.13812782 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09255758 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123807298 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092002772 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136772834 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097439984 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.133566759 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101357367 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.134944907 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.132420847 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095103151 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.134120775 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103612216 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134880511 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104472747 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.134601255 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137944116 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100736384 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.123399857 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094968203 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125828396 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104470019 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124712787 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.10596891 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127659209 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.098419769 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.125242991 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094196588 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134110341 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.132923253 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100722135 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.134147516 seconds)
  done (took 6.073061769 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108874871 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.139994567 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.105802684 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081160805 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118078151 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081773914 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.138362381 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.079067039 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.110353352 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108507238 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074087584 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108285796 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079092126 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101752925 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077824269 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075798358 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108540868 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076511982 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076106533 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106098919 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.08073454 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072494941 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109350284 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.078265875 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075032187 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.11177658 seconds)
  done (took 3.626367365 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101238055 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136122486 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.112646187 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.18603873 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.161439073 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.09952149 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.133309512 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.139457022 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.109712941 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.121048307 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097393813 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.150571424 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110660914 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130748753 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09123577 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.137946759 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136962825 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.094408714 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128364871 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113529451 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139123992 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.10252387 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.145178173 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.133435822 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093262566 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.12352687 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.097721082 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135413579 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.097653636 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.132341225 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096636248 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.12675254 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.123450335 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105322656 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126745963 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094993088 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.142891179 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102300954 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132208551 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091976861 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.126897989 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.122107551 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115545809 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.170419719 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091610202 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.133405821 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.09969616 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134103537 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.121911361 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111276159 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.132499681 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.09238719 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.126565873 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.0923381 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123021304 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.107101359 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.12552966 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.095332532 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.133148163 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.124274966 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.107104819 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125909248 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108625048 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122983595 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099982539 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.12203243 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092340505 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122421598 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114108462 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124996702 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164294915 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.093305925 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.124643211 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101178316 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131344691 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12885773 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09409117 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137889677 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.102625082 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.126546011 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.102591324 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.127618052 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095786847 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141613049 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.095364786 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125424303 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.093462984 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.130695674 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.125314759 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095325005 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.137393831 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093859768 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126301156 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.11009745 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.122691043 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093630058 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.130213918 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12653163 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.09328293 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.136851741 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.098385398 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.124385577 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102997989 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123685534 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.095504935 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.133310544 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127138679 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092895574 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127880519 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100065184 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123897768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094629852 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.126178444 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09388916 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133713202 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.099131345 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128518932 seconds)
  done (took 14.944123352 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.229940465 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216353293 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.238504104 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.263619389 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137052097 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.113980291 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.213609725 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156472923 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124464421 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161255248 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.16217492 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.183268522 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.139553549 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.180915182 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.142141465 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.121715404 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.112869567 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.165298832 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.215377833 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.291234951 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.113441099 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.133601202 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.162632614 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.16145799 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.105537896 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133984918 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.139838857 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106138955 seconds)
  done (took 5.790987416 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108266996 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158094352 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.09802246 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145738137 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14916012 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092617471 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.128840367 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094214777 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136778823 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.136638523 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.0934003 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.13033987 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100413615 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.13365736 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123898187 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103879848 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133208001 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094780922 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.12727782 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.097478601 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131278348 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101045849 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128727724 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091194802 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134045269 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121843045 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.086738659 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.14270808 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.092564378 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.145521721 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121586816 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100757403 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.133682803 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093608894 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.124256467 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.09577373 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125742424 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.09466288 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125589836 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091907232 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.123193174 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077802858 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.123108105 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.10694409 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130364803 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079671384 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.13129305 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128345569 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.095472483 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.120814309 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.096923788 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.125695562 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.09694004 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.130377651 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099301228 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.124511381 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096694997 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116683668 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100496715 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.126043313 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.08551993 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121134079 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099525847 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.118586213 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102594602 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129024474 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.093020734 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.127062425 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098133095 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.130598954 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096295139 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127029144 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090882211 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127206566 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095189123 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12959264 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095550382 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123388192 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.093319019 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125098533 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075348586 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124341728 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074163676 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127399465 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092130609 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123296641 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.09595732 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.13039515 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13814624 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096287101 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.13215005 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.09434961 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.122936568 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096832368 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113991023 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097033579 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139631177 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.141544383 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.095840794 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.121883456 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108053556 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127058428 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.092912823 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106636978 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10170879 seconds)
  done (took 13.0556076 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.128673887 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155031116 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.095141693 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.144714045 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156424683 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.157851097 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102398894 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131513417 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.095793508 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143069938 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.093561322 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.13329453 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097708929 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138058902 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.15790794 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.103066167 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126704371 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10820689 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.133066658 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171154287 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111888753 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144205002 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107777518 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.125428162 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098728257 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.141474296 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162412398 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108231657 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138411993 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.141751121 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.108654524 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162206181 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.11247078 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.129621855 seconds)
  done (took 5.547278294 seconds)
done (took 50.176088156 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.252136941 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.471334122 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.238810996 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.23477131 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.269594708 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.241050312 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.246870655 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.235371112 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.424816128 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.238525376 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.498169463 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.967931268 seconds)
done (took 59.486014907 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.300439974 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.372904016 seconds)
    (2/2) benchmarking "String"...
    done (took 1.503916461 seconds)
  done (took 4.049763338 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.608750901 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.191823023 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.50068393 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.237776819 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.239597683 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.527064485 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.984904146 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.618507165 seconds)
  done (took 28.467302527 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.244707022 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.643479449 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 5.093527932 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 5.089857263 seconds)
  done (took 19.237203537 seconds)
done (took 61.835492334 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.224313058 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.277086077 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.248296648 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.220888812 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.37831537 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.2768413 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.604985175 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.314723907 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.267824606 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.227584683 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.259924914 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.269038702 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.2524969 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.804635601 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.2482312 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.243691983 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.268284377 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.798222292 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.660225532 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.25723693 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.273689861 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.261399734 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.246537267 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.241791865 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.328883194 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.247842567 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.239845782 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.266865683 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 5.000889628 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.246277944 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.268181629 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.322224865 seconds)
  done (took 192.214434881 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.241613106 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.301223541 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.416209056 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.26101016 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.885309981 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.440089702 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.379119881 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.969079441 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.261699704 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.244658962 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.449748264 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.245924931 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.521014449 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.222687747 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.251501432 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.349036431 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.425479049 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.536806684 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.266279421 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.518348267 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.245839096 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.446250741 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.377634127 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.41717568 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.300704527 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.331483583 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.27234356 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.251888456 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.421785904 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.3730983 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.273423278 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.278868133 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891277521 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.103888769 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.257291157 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.246651024 seconds)
  done (took 151.846359784 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.54793995 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.242402183 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.24262039 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.242640605 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.27650908 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.243441193 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.852641561 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.859226494 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.757671767 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.723523041 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.306679206 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.538107166 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.243715746 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.340417729 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.257496447 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.245003528 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.258337567 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.287724983 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.247043191 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.244603168 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.852539363 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.259590996 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.44134965 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.27286386 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.244626243 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.279538733 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.637355387 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.245480656 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.279006769 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.051720725 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.581405983 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.298775618 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.244057967 seconds)
    (33/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.244461513 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.64862742 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.359748971 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.247748337 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.280029025 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.244014939 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.5295827 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.245500951 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.246034477 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.247952041 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.245154671 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.93222137 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.246124792 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.855758242 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.249036402 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.233232686 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.245880013 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.246691764 seconds)
    (51/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.2469433 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.958158903 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.956862937 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.263805774 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.246292495 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.248784206 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.245569689 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.245800919 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.280247618 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.128805764 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.343608297 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.270110967 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.251282064 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.280830229 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.24702676 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.247913147 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.404158201 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.251345888 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.126052673 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.303554765 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.36360872 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.859552449 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.251695129 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.346640099 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.370680764 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.248024596 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.248246826 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.247276202 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.246776227 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.360518906 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.247748392 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.696556808 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.254527296 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.249473157 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.309196734 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.346235852 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.247892036 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686477806 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.251217834 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.248892639 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023291238 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.348735373 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.24792263 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.248139946 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.247141085 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.701072477 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.863438101 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.555924075 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.253326309 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.149939161 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.253420384 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.714968033 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.830148658 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.935505529 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.249893007 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.363790209 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.253134404 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.249777301 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.249327554 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.277247943 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.268525452 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.308167864 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.248252831 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.650997844 seconds)
  done (took 354.944724422 seconds)
done (took 701.723357462 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.921903302 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.910756048 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.029239049 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.903344343 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.887481221 seconds)
  done (took 10.829671109 seconds)
done (took 12.011139445 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.458501138 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.462438617 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318967994 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.460371774 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.280378059 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.472975623 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.434749669 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.273286207 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.360793963 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.34403721 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.366351989 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.312276471 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.283083452 seconds)
  done (took 19.004129601 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587220596 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.587275005 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.318190349 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.605288101 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.298302992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.583855846 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.46512415 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.481391718 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.476274824 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.28918591 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.265117736 seconds)
  done (took 17.134478379 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.587011067 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.595681557 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.322150375 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.604011122 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.29659501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.58988142 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.463121035 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.480029581 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.479564353 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.289864486 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.264525737 seconds)
  done (took 17.151469084 seconds)
done (took 54.473366553 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.260950967 seconds)
  done (took 2.439096437 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.297017099 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.464032381 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.284878541 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.266481838 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.26134444 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.262370353 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.265740105 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.261661386 seconds)
  done (took 11.542990346 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.260535667 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.2582264 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.261540164 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.257602107 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.258134002 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.259902123 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.258839576 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.261399687 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.258267936 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.258601105 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.261484264 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.263095357 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.259589466 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.261325199 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.259622971 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.261884559 seconds)
  done (took 21.340326223 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.26154915 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.259916496 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.257687444 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.258944366 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.259487947 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.259105604 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.260280254 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.258081753 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.25915155 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.260656134 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.261051302 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.259519055 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.259117977 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.259066158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.260000556 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.260291993 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.259976537 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.261039124 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.26454913 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.260932925 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.260644464 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.260870092 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.260521876 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.260872108 seconds)
  done (took 31.425289182 seconds)
done (took 67.931741968 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.456437724 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.071132234 seconds)
  done (took 9.708783719 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.262893333 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.262806428 seconds)
  done (took 3.708827626 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.263321352 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.262453179 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.264195875 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.26406517 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.263672455 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.264896664 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.263994868 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.264729618 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.264059546 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.26275743 seconds)
  done (took 13.819684458 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.264095099 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.263669418 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.261318866 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.264689423 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.263975827 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.262271672 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.263814482 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.263650536 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.262618819 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.26090794 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.26427611 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.261301971 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.263543568 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.262658332 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.265031956 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.261422811 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.261945289 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.261284648 seconds)
  done (took 23.914284008 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.265544105 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.263714835 seconds)
  done (took 3.711918356 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.261078597 seconds)
    (2/7) benchmarking "second"...
    done (took 1.262723293 seconds)
    (3/7) benchmarking "month"...
    done (took 1.262086464 seconds)
    (4/7) benchmarking "year"...
    done (took 1.263367197 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.262896697 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.261454516 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.262496885 seconds)
  done (took 10.019020889 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.264591728 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.4538773 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.536230419 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.90589229 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.267064211 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.267965895 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.174710742 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.269794067 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.271362573 seconds)
  done (took 14.594315146 seconds)
done (took 80.663780386 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.307003293 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.276935122 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.489128961 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.27711436 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.278346446 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.601888472 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.279644393 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.387535465 seconds)
done (took 38.08844335 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.276443939 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.01579042 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.021088657 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.259717991 seconds)
  done (took 11.482245828 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.240828013 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.238101422 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.249827386 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.333213178 seconds)
  done (took 18.247042423 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.338421509 seconds)
    (2/2) benchmarking "read"...
    done (took 1.598157773 seconds)
  done (took 5.121670386 seconds)
done (took 42.316933118 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.267846035 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.267583836 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.265090338 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.268627402 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.265085537 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.264343256 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.265237704 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.265031824 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.268677003 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.266497505 seconds)
    (11/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.267663139 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.267569273 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.26784166 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.26750208 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.265579795 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.265477372 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.267567869 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.268442786 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.26539989 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.265646568 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.266335228 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.268932824 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.264050836 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.265845873 seconds)
  done (took 31.583593285 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.268926745 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.265933881 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.268224008 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.269458327 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.26491679 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.268909947 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.267948439 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.266842714 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.268686563 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.269232564 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.265964643 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.266652799 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.268086588 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.266862179 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270697772 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.267108358 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.269340298 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.266669565 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.26880964 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.26682223 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.269628252 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267874828 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.266869507 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270060274 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.267679622 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.267530986 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.27008418 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.267974309 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.270244945 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.267858067 seconds)
  done (took 39.229293412 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.27446987 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.276685126 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.27098979 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.270763454 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.271630849 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.270393278 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.270958166 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.270781687 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.27131291 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.271653995 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.271516589 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.269316799 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.27071396 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.271461533 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.270792298 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.271043115 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.271706963 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.27095466 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.270502644 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.271821938 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.271919959 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.272037384 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.271063128 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.271290692 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.2716499 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.271073947 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.27229405 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.271764595 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.272112727 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.271662446 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.271544131 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.272203805 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.272393246 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.270899599 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.270990745 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.270715558 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.276979564 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.281108562 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.273096269 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.27176558 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.272437339 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.271526395 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.271675916 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.27241078 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.273542709 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.273833018 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.273521801 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.273261927 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.272751113 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.27259454 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.271976988 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.272836989 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.27349683 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.273518757 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.272680279 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.273710234 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.273689546 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.273059708 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.273470505 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.272642215 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.273283246 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.274083468 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.273724045 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.272371125 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.274713172 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.275224539 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.273855352 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.274234217 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.273929117 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.275168033 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.275307493 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.275476169 seconds)
  done (took 92.819131205 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.27396046 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.271740867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.271222056 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272966145 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273194967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.274561628 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.272992872 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.275562646 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.272325289 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.27594867 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.275862458 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.273154717 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.271952383 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.275834346 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.275178463 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.272875601 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.275304619 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.273433169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.275910647 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.276161302 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.275115427 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.27299752 seconds)
  done (took 29.221607149 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.27548747 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.277483505 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.27280834 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.275471984 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.273587772 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.275504561 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.27666278 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.277114615 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.276403162 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.273119909 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.273106961 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.27652928 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.279442961 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274543167 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.275153508 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.275791214 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.276827917 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.276056793 seconds)
  done (took 24.15453871 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.275048665 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.273906018 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.277012339 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.272950485 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.275254041 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.277898986 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.273353072 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.277269243 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.277942644 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.274216874 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.276716687 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.27756563 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.277388246 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.276384427 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.277941351 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.275799449 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.277673712 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.274953769 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.277606279 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276213608 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.276843033 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.278546777 seconds)
  done (took 29.274423392 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.277022743 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.277510802 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.276219149 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.276280375 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.276141618 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.278989969 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.279965019 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.276843026 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.280245686 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.277460963 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.277880758 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.277631842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.278904061 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.277498752 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.276324147 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.276165138 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.279955245 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.277991687 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280099364 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.277315282 seconds)
  done (took 26.752800621 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.280204263 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280715882 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.280999866 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.280641154 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281658244 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.28127657 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282331219 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.28234756 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281874841 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.28318465 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.281966054 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.282496615 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281547412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.282958904 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282083645 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.282673172 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.282195796 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282102125 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.281835345 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.282051655 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.282463525 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.282935684 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.281962725 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.282676824 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.282387485 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.282092746 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.282068492 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.283205606 seconds)
  done (took 37.09493218 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.283189435 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282548305 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.278100736 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.279693152 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.279524361 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.27972102 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.281404607 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.279511242 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.28218591 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.279672925 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.282246917 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.282752977 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282379067 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.282701286 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.282845804 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.282269126 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.282537845 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.280865825 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.27976044 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.280241117 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.282164323 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.282559245 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.282484712 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281381525 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281227387 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.283555135 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.279596543 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281143656 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282940571 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.280596635 seconds)
  done (took 39.642012032 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.301957923 seconds)
    (2/2) benchmarking "in"...
    done (took 1.301658557 seconds)
  done (took 3.805583394 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.281191125 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284131102 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.284370362 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.282778634 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.282035469 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.28508785 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.284550745 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281712028 seconds)
  done (took 11.467615138 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.28450944 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.285870104 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.28592554 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.285701879 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.285201035 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.285106849 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290851418 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.307672616 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.285398089 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.285390077 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.292789284 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.293296731 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.287301102 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.285687863 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.284410986 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.287582449 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.285094935 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.287038755 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.285861275 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.286539315 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.287966087 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.289029233 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.287844294 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.283794388 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.287328716 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.297660704 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.310705826 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.287270649 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.286907513 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.288921325 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.286223645 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.284431789 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.288056539 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.289017177 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.287079511 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.288413112 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.294730511 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.307919583 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.292673287 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.309132685 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.288945534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.284771896 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.287772086 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.288616907 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.288884771 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.288801562 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.287675564 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.287052591 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.287616356 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.291044796 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.293947031 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.287756864 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.285951131 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291143434 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.289308056 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.29432498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.311341337 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.291601538 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.297718353 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.298360501 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.322546702 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.316080772 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.290241503 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.289130933 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.299369249 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.312172381 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.296982729 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.30883058 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.286436787 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.290928743 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.295557846 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.322353459 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.317125362 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.29065203 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.290147017 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.291050943 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.290469743 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.289189481 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.296712355 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.313856515 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.291078628 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.291818655 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.301781203 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.314147533 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.290294457 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.291641665 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.291510074 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.291840838 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.293505289 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.300760499 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.313071793 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.29080191 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.291019652 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.291612241 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.292455559 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.291448366 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.290896102 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.291710414 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.28907357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.28948246 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.292301807 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.294402621 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.299981514 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.292350263 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.291270679 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.297451192 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.312221175 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.290252492 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.297115615 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.292936026 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.292662395 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.294714693 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.297895919 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.29025442 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.295143466 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.300667021 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.292815759 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.292661977 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.293711715 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.292347389 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.30269475 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.317944537 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.293327445 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.292818008 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.297619188 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.305524391 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.29371272 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.296123528 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.294107276 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.291485663 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.291798859 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.293971378 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.2943431 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.293699138 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.293927946 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.293909306 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.290724874 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.294634997 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.294946818 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.294261498 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.294875234 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.292121117 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.294535806 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.295392296 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.295149178 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.294831216 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.298963891 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.315724188 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.29479179 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.295749025 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.291599436 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.295236948 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.294608894 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.29608935 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.29556006 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.295866167 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.293399773 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.296813817 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.295768223 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.296591105 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.295275181 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.296356054 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.299864412 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.297127422 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.298724624 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.295621504 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.294109216 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.296296378 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.295913688 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.296454252 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.296884673 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.29464567 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.298845118 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.305073851 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.29652353 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.297481972 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.297263976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.297997256 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.297065582 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296661428 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.299585263 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.304605646 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.297130965 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.302162555 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.317240766 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.296938783 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.297334427 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.296638274 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.297066957 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.296898647 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.299376143 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.304747603 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.309170073 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.323156246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.297672181 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.301171179 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.298801499 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.30236888 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.298995407 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.297741709 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.298032019 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.297544923 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.29602668 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.297490688 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.299752145 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.298419394 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.297279129 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.297844047 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.298614204 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.298966391 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.297303137 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.297965189 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.296948893 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.294940661 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.298570857 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.298029493 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.297715008 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.296688963 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.297954856 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.296843897 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.299382402 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.299773194 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.304569848 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.296925657 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299432023 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.298903895 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.300277178 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.29838358 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.299497351 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.301310453 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.298485798 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.305189247 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.32063821 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.300049916 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.30391367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.321134511 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.29966091 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.301311966 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.300671535 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.296773326 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.303214914 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.309425998 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.301183688 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.30239839 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.300712042 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.299953295 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.299873864 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.304553896 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.317927286 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.300640469 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.299146958 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.301581314 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.298880858 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.301091544 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.300746982 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.300485329 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.302792872 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.300982618 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.301532461 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.30147557 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.302017201 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.302636977 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.302705187 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.305827099 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.309354282 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.306158488 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.301285328 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.303813138 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.302018093 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.306975191 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.301609986 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.303950778 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.303212203 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.313567821 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.329726573 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.30818485 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.323261418 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.303507674 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.307536884 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.325507818 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.306479666 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.302722364 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.302542409 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.302451414 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.302171621 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.300462082 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.30300312 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.302741946 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.304497878 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.304949209 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.307200642 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.304232588 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.301896076 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.30329141 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.304300867 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.30464549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.302849303 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.304351002 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.304325934 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.304641997 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.303727727 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.304433636 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.310657727 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.325824055 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.304622169 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.303814883 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.304578783 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.303857075 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.305229389 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.305336656 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.30748728 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.314425143 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.30822192 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.313559462 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.30563277 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.31409069 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.306031074 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.307938823 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.313912879 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.303133166 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.30442493 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.305433619 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.305639234 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311414401 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.32778376 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.307362321 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.310157891 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.307630861 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.306696091 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.306652808 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.306866559 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.306635979 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.306451456 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.313228343 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.327023817 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.310082317 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.308178497 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.303693045 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.306497036 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.307434125 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.305463058 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.309277673 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.307478304 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.308832805 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.306100698 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.306368809 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.307543179 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.306654368 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.308502377 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.304343355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.307049327 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.313360595 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.330425693 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313121065 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.308248047 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.314154752 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.329161096 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.314337098 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.329743141 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.307852592 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.308291054 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.307945459 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.308866244 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.306241064 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.307387799 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.308700255 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.308585215 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.311853669 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.309341671 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.310726118 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.309180243 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.308433486 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.308561837 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.319332531 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.332856667 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.310904203 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.312960662 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.307767755 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.310109184 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.315023394 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.310835966 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.308700862 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.312144064 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.320789201 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.319497252 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.308955712 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.311125682 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.310151173 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.311299033 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.31091098 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.310729852 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.311465328 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.31100274 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.309381982 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.310564178 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.311720758 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.310133485 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.310820381 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.312599055 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.311960334 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.319307782 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.332829277 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.31167434 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.312065556 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.311850686 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.310348482 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.310160583 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.312000929 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.311832585 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.312536506 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.312625114 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.319104644 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.317615363 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.313409975 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.31129948 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.311832861 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.31208684 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.312659737 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.312596287 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.313488878 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.313153149 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.312301644 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.311885453 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.313646102 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.310733228 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.313095627 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.311824166 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.313259228 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.31616684 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.319860199 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.312590396 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.310652246 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.312881399 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.313689761 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.31157068 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.31250269 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.31920841 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.337707734 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.32385075 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.321827237 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.319529999 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.314736531 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.317007495 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.320985421 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.312302863 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.31317749 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.31491744 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.314608043 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.31500425 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.31620369 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.314305039 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.32079687 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.335257477 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.313283468 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.322611061 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.335891585 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.315740079 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.315598021 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.318947561 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.313770274 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.313632554 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.315353079 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.313370627 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.321029288 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.337667352 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.316595133 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.31621409 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.314433908 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.317315312 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320165136 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.315870348 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.315376145 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.313156992 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.315704486 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.316184794 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.316691171 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.314453238 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.31561723 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.315990031 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.319211499 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.32353856 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.316435665 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.317370366 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.315378672 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.315126938 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.317625114 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.314705929 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.315211271 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.314659728 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.317081447 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.317132198 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.316443198 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.317948178 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.316483694 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.318301916 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.318542025 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.317662032 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.320350404 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.32719473 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.324512524 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.314031054 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.315971182 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.318718931 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.318323939 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.317507896 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.31919522 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316668799 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.317170553 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.317885683 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.317752296 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.318433033 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.32110453 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.333008269 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.338757971 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.318484763 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.320141013 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.320724478 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.318865178 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.316050723 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.319686098 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.318144619 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.321812888 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.32705471 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.319665442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.323981513 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.340064291 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.319572868 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.323269612 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.32178008 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.325922337 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.320350956 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.320719666 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.322154861 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.325273758 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.335720024 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.320434152 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.32920424 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.348300515 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.341027022 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.319269095 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.321756864 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.319385567 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.319255805 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.321085035 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.321456525 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.321028255 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.321186719 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.320714994 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.321523765 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.325074749 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.32329413 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.321298425 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.322041606 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.320655666 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.320041042 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.318493674 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.321337745 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.322266487 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.321609798 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.320935244 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.322032956 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.321188797 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331455213 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.348234761 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.320029965 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.322189628 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.319287619 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.323127463 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.323867003 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.332256326 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.329868264 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.322550978 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.322669371 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.322875661 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.321299256 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.322107364 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.321468735 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.322234854 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.32023257 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.319327058 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.332712687 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350384676 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.325784781 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.321740935 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.322806467 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.323146836 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.322028763 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.324244706 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.323713056 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.322993175 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.325074518 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.327629491 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.323621622 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.322907991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.327069367 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.331249258 seconds)
  done (took 780.331354908 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.321538523 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320440967 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.320664809 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.320977351 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.320217352 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.321637448 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.32078165 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.321219432 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.320753832 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.320779478 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.321603958 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.322246184 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.322036623 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.322335227 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.321780842 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.323140329 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.321995466 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.322065348 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.322687115 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.322800735 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.322249876 seconds)
  done (took 28.99310035 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.325077594 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.322467415 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.323331005 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.325448089 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.322434517 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.324469498 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.322343625 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.325359769 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.325470879 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.323441977 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.326219621 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.325698021 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.324029795 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.323849848 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.322294077 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.326582769 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.326166307 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.323822673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.325322647 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.323635583 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.326805186 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.325023704 seconds)
  done (took 30.379152903 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.326498484 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.326143489 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.324961261 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.323413336 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.327117148 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.323305965 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.326640382 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.327775225 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.32728083 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.326380162 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.324183785 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.325518986 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.33411099 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.332050484 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.327609364 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.327345479 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.469866627 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.327468848 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.329459974 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.328022729 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.325944987 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.330267685 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.34488424 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.326643134 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.325901966 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.328256245 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.328312262 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.328545078 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.328477166 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.328790078 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.332656799 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.330241675 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.326468608 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.330841911 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.326251035 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.328982449 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.331859241 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.330086499 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.325660003 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.328934124 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.338831159 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.348148683 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.329778189 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.334554152 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.349027506 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.327566558 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.331638246 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.337380054 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.326156221 seconds)
  done (took 66.537725215 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.329349272 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.329174552 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.327352907 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330714705 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.328718982 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.330472998 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.329052819 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.327750034 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.327334283 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.327220483 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.32999491 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.327356899 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327655313 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.330029307 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.330249136 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.327363172 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.327419702 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.32787529 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.327700618 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.328061474 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.328129472 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.330526063 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.330319477 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.329653689 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.330455715 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.327628852 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.327835621 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.329085865 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.327918796 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.328601826 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.33060224 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.331468895 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.3311559 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.32972999 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.327957837 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.331982756 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.330627268 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.328563832 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.330847115 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.328442131 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.33134179 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.331014861 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.3316378 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.332913345 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.330841934 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.329493915 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.330737377 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.329713149 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.329156591 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.331329352 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.331777399 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.329518931 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332639899 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.330614691 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.332121776 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.332676544 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.330058438 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.33047619 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.331402833 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.33129135 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.331662831 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.333628297 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.331639793 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.332479826 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.333621191 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.33111141 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.330827972 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.334407737 seconds)
  done (took 91.687921747 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.334277441 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.333325404 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.333446516 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334520429 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.333564715 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.33376164 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.335178742 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.334025383 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.334250183 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.334506108 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.334410938 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.335362935 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.33277832 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.334015166 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.335359824 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.334347315 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.334999132 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.336158313 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.335287787 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.334778281 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.334810717 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.335105646 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.334753638 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.335751462 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.334193735 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.335203946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.33464197 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.335401619 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.335563031 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.33432366 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.336360699 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.335102544 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.334629513 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.33526899 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.335376438 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.335530548 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.334804747 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.335623041 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.336648411 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.335601153 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.336458689 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.335426437 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.336960882 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.335491135 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336780048 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.336902206 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.336971207 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.337461079 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.335737662 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.337002879 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.335905797 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.336837532 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.337755213 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.337132267 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.336988577 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.33597885 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.337395706 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.336370659 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.336935437 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.335768926 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.336040378 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.337667758 seconds)
  done (took 84.048432847 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.33770457 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.334879467 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.334950088 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.333820755 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.337935546 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335853112 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.337299373 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.337498571 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337329125 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.337475185 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.337613702 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.334776019 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336205668 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.339185492 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.336142569 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336356937 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.335760759 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.334957348 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.339179365 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.335201661 seconds)
  done (took 27.981807101 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.336955575 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.338871904 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.336115729 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.336517658 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.338381266 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.336285053 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.339244733 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336806501 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334110948 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.338992803 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.340800501 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.338842362 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336743966 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.336423094 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.33965108 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.337047983 seconds)
  done (took 22.652920629 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.337416218 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.339406614 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.339146438 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.339398113 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.337411381 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.335062717 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.33954339 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.337237659 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.336524282 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.340858592 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.339526553 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.340411957 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.340398855 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.339829483 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.337192794 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.34110906 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.337089994 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.336833003 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.340517253 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.339696934 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.339405655 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.338294011 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.339434239 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.33961315 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.337408361 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.338951197 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.33879234 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.338819751 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.338313992 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.341054623 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.337785546 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.33857449 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.339577118 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.339482428 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.341873723 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.340633604 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.342031482 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.341916149 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.340839197 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.341350543 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.341189415 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.339063511 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.342286458 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.341269908 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.338983928 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.343098631 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.339296551 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.339667314 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.339616055 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.339879426 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.342795943 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.343043002 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.342276206 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.342289402 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.34252725 seconds)
  done (took 74.940240666 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.342966382 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.342870665 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.340608631 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.342347343 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.343181849 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.339351286 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.343495102 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.343913794 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340363199 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.343240206 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.341299631 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.342547394 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340865022 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.343175341 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.342237005 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343896988 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.341777618 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.340863673 seconds)
  done (took 25.415105777 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.342943231 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.341762595 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.343598849 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.341389718 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.341785457 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.345217888 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.340524599 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.342274944 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.343351134 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.341041137 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.341828187 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.345496492 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.343859885 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.345846767 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.342495684 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342849487 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.345378946 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.343957717 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.341399208 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.341344625 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.345174986 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.34459049 seconds)
  done (took 30.806166803 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.343693259 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.343808886 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.343406508 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.360958321 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.363042807 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.367147191 seconds)
  done (took 9.379636482 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.353229142 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.344919516 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.342844317 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346370354 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.34596116 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343083179 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.342588438 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.340848069 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345401208 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343386395 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.343847481 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345381441 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346202987 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345326056 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.345709738 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.345525832 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344048997 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343921636 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.34517478 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348079679 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.343263831 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347124146 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344506132 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.343309899 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.344442695 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.34466112 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347314138 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.345288394 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.343441486 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347621919 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34739676 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.34542042 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347477032 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.346401814 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34890883 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.34754803 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345163145 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348865458 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.348029074 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.344722686 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.348886672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346753927 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348672845 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.34553485 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348471775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345319685 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.345795705 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345217805 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345785817 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.347839005 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348927983 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345115481 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349135343 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349021951 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348727532 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348407831 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346729224 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345988381 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348655021 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347506723 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.345725368 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347060564 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347686703 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.347070323 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349960726 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.348087525 seconds)
  done (took 90.137782311 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346223864 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.347330975 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.346527267 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348702692 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347113758 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347620647 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348375501 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.346119632 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.346949295 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347273162 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349569085 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347325815 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348234167 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.345169501 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347148883 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346495067 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348168106 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.347957401 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.347487621 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351617233 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.34679083 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.344902273 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349381843 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.346300203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348389294 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351593647 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348886226 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348002073 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348543357 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.347748918 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.35004937 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.349420088 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348029653 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.349100875 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.348788845 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.348271147 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349027945 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349220875 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.345718045 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.353252339 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.347697349 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.351638012 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.348524002 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349315258 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.351087646 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.349678036 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350726797 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.349220898 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.350113925 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.346588531 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.351378403 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.350169261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.347733798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.349230435 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.350473548 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.348822968 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.350657719 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.350609642 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.349512826 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.351990698 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.348561331 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.348097634 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.354059518 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.347845617 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.349156115 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.352631724 seconds)
  done (took 90.282677895 seconds)
done (took 1819.812115023 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.386516994 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.453232884 seconds)
  done (took 14.103007878 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.517370244 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.464840897 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.348268683 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.347244232 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.350380047 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.34520111 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.352331486 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.349135158 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.349330865 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.349486487 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.349928629 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.537966849 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.346536638 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.350457027 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.350411615 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.444493395 seconds)
  done (took 43.424885551 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.378291114 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.356697916 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.483961864 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.379272974 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.377868009 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.562258567 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.418226297 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.35727756 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.553634338 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.401800034 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.094962438 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.377967404 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.354361486 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.59177561 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.376208253 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.56318031 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.629662524 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.100840646 seconds)
  done (took 31.624075383 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.864326571 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.356631546 seconds)
  done (took 9.487197674 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.395233646 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.395342004 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.361767249 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.357961712 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.374465408 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.407349657 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.42176387 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.440100938 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.415736944 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.380007162 seconds)
  done (took 65.223555297 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.379376696 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.357125534 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.357378925 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.355623748 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.347412469 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.347979074 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.355893569 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.349754746 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.56993602 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.50665505 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.361521571 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.364630125 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.375942905 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.357770433 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.354404532 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.394028595 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.508988317 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.357732223 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.354623137 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.360396963 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.3557376 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.471476205 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.404874691 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.361166954 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.498829766 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.563980213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.364324479 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.362728175 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.481147372 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.358589232 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.355739507 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.358355643 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.358268764 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.008412422 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.937006008 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.373998406 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.383068358 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.365489496 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.35471446 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.514045594 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.358984918 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.363069746 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.36262093 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.912322543 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.515602302 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.491732155 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.802557196 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.382776489 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.359214532 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.424928426 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.358585809 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.361675544 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.390449076 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.174272191 seconds)
  done (took 114.477710366 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.383842128 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.743637797 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.52034522 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.377409483 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.027779217 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.106836657 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.375519092 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.687031866 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.409467474 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.352381501 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.656881597 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.912491448 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.383511181 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.371681786 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.979724616 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.421503523 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.352069649 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.162794515 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.376616845 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.355588919 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893853737 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.357418903 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.368862882 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.523613302 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.393056754 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845100349 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.093649618 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.678012348 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.374967368 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.35179047 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.868222187 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.377705669 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.39541553 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.354256457 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.641699878 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.752672166 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.744472742 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.373147542 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.354654876 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.353128309 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.372834933 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.838956684 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.749502455 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.373078942 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.367392626 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.845147444 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.371750402 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.356392823 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.358722898 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.563011278 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.025229341 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.355689004 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.078209354 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.361916447 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.748643535 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.3771895 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.421955252 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.874242978 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.373484876 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.378628891 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.413294663 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.349542039 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.355202132 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.356604436 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.36189742 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.737010552 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.490645822 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.353765183 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.73659642 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.879039388 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.377399292 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.941177031 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.31906892 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.378519454 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.462651755 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.36411906 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.931800981 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.883363653 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.388623294 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.355607784 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.723572351 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.371853001 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.657317055 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.374249925 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.372061135 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903038335 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.37132929 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.390403787 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.35594841 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.387449636 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.985803767 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.357070596 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.66685813 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.431948488 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.357952152 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.355235706 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.35657251 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.357201204 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.374212802 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.359481509 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.926160025 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.379475743 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.355047701 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.379511735 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.362909042 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.371952106 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.356962493 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.357777074 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.582169763 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.89842975 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.374994097 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.356358181 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.370305325 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.359636236 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.526309711 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.362282962 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.720776488 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.380538969 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.35919333 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.388565677 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.116031165 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411080029 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.359422233 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.381487725 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.279152631 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.575674656 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.378540118 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.361355404 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.361325355 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.399862687 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.75343459 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.381509518 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.400091392 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.360562571 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.10844663 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.416767652 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.362583887 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.693445079 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.362507222 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.360775033 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.363673513 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.360546845 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.676165521 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.643994335 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.43274864 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.361796952 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.374871133 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.102007856 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.406583728 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.509786878 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.382169413 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.408583839 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.560530081 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.689335868 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.360991105 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.991811791 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.364091889 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.578848318 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.363185303 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.671926512 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.900806251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.382376397 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361808644 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.112766116 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.080019098 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.009953204 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.36385829 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.655426041 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.337925826 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.849237329 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.360314573 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.361862874 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.80834149 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.362197934 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.368270727 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.361402178 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.360745404 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.495027475 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.538867816 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.573248227 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.363055465 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.874034949 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.396260889 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.374207811 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.369114505 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.367401279 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.710808736 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.366333899 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.366394993 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.387535105 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.363024982 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.366994021 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.893441224 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.359397154 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.363799359 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.517575829 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.04518358 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.385401503 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.363152872 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.121675515 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.678651699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.933413841 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.411032738 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.72593892 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.389937532 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.404550969 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.982505738 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.402845937 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.891991416 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.390323121 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.366134952 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.002557567 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.388782928 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.719023122 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.365112071 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.365981087 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959464641 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.386753993 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.368191964 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.763283547 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388665752 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.634191911 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.366476064 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.368650519 seconds)
  done (took 1119.719032409 seconds)
done (took 1399.330791156 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.364893237 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.371615347 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.35525485 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.37260839 seconds)
  done (took 26.747335879 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.376306168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.37225177 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.374681089 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.372068764 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.373288256 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.373047553 seconds)
  done (took 9.526739032 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.503235655 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.371138968 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.371820323 seconds)
  done (took 19.530535047 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.603589165 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.802573018 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.778877631 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.870129779 seconds)
  done (took 11.339028107 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.373223882 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.374431307 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.376498057 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.371793461 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.376096666 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.379873387 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.376043461 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.375391418 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.378050342 seconds)
  done (took 13.662186493 seconds)
  (6/6) benchmarking "26942"...
  done (took 5.811115797 seconds)
done (took 87.907803704 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.349823967 seconds)
    (2/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.444948273 seconds)
    (3/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.906401606 seconds)
    (4/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.36888549 seconds)
    (5/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.381344513 seconds)
    (6/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.098287012 seconds)
    (7/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.644291808 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.261949994 seconds)
    (9/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.129337991 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.430469753 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.394494424 seconds)
    (12/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.418279053 seconds)
    (13/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.37115023 seconds)
    (14/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.401931384 seconds)
    (15/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.134415092 seconds)
    (16/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.05324751 seconds)
    (17/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.992078551 seconds)
    (18/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.381382662 seconds)
    (19/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.364307775 seconds)
    (20/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.37858646 seconds)
    (21/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.562407105 seconds)
    (22/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.828832643 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.34399068 seconds)
    (24/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.492754903 seconds)
    (25/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.478063562 seconds)
    (26/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.184190169 seconds)
    (27/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.519216688 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.38922878 seconds)
    (29/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.451995064 seconds)
    (30/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.370906759 seconds)
    (31/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.703264219 seconds)
    (32/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.718737854 seconds)
    (33/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.09729019 seconds)
    (34/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.458147952 seconds)
    (35/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.351105032 seconds)
    (36/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.433994526 seconds)
    (37/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.674777044 seconds)
    (38/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.158592357 seconds)
    (39/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.462389551 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.471174803 seconds)
    (41/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.387813066 seconds)
    (42/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.380331294 seconds)
    (43/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.364898563 seconds)
    (44/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.811992573 seconds)
    (45/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.484076504 seconds)
    (46/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.121780113 seconds)
    (47/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.355183281 seconds)
    (48/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.199745833 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.35347369 seconds)
    (50/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.804304117 seconds)
    (51/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.291118752 seconds)
    (52/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.385730769 seconds)
    (53/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.3973323 seconds)
    (54/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.397916456 seconds)
    (55/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.382496744 seconds)
    (56/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 4.19551143 seconds)
    (57/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.490105933 seconds)
    (58/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.635545297 seconds)
    (59/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.895164577 seconds)
    (60/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.078209864 seconds)
    (61/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.389558218 seconds)
    (62/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.291829364 seconds)
    (63/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.119195484 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.434204104 seconds)
    (65/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.479006264 seconds)
    (66/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.371754942 seconds)
    (67/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.373642483 seconds)
    (68/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 4.779909063 seconds)
    (69/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.485990888 seconds)
    (70/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.352841405 seconds)
    (71/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.380370949 seconds)
    (72/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.826193135 seconds)
    (73/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.381609452 seconds)
    (74/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.448046655 seconds)
    (75/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.372663006 seconds)
    (76/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.187041474 seconds)
    (77/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.61040963 seconds)
    (78/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.94469667 seconds)
    (79/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.751542019 seconds)
    (80/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.76872097 seconds)
    (81/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.372142347 seconds)
    (82/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.846469569 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.442337518 seconds)
    (84/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.399688172 seconds)
    (85/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.354926366 seconds)
    (86/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.392706915 seconds)
    (87/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.161062871 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.668539512 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.787664536 seconds)
    (90/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.467339215 seconds)
    (91/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.372975706 seconds)
    (92/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.807328115 seconds)
    (93/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.360074052 seconds)
    (94/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.091527864 seconds)
    (95/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.379652765 seconds)
    (96/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.147711514 seconds)
    (97/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.848418092 seconds)
    (98/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.679878853 seconds)
    (99/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.352869897 seconds)
    (100/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.518482542 seconds)
    (101/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.400981832 seconds)
    (102/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.35575515 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.374685947 seconds)
    (104/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.377320541 seconds)
    (105/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.35863201 seconds)
    (106/309) benchmarking ("sort", Float64, false)...
    done (took 5.769549997 seconds)
    (107/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.523760533 seconds)
    (108/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.518764607 seconds)
    (109/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.76381992 seconds)
    (110/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.485747866 seconds)
    (111/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.079628169 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.37872716 seconds)
    (113/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.394155958 seconds)
    (114/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.377519924 seconds)
    (115/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.227968522 seconds)
    (116/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.579984705 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 6.379823355 seconds)
    (118/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.51612108 seconds)
    (119/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.367123954 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.373636184 seconds)
    (121/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.376049298 seconds)
    (122/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.395298826 seconds)
    (123/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.355784012 seconds)
    (124/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.36625346 seconds)
    (125/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.358721557 seconds)
    (126/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.844783661 seconds)
    (127/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.972715212 seconds)
    (128/309) benchmarking ("sort", Bool, false)...
    done (took 1.899506492 seconds)
    (129/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.416229336 seconds)
    (130/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 6.223234955 seconds)
    (131/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.405115901 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.189082531 seconds)
    (133/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.384302596 seconds)
    (134/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.634627544 seconds)
    (135/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 4.014725649 seconds)
    (136/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.374863992 seconds)
    (137/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.037668286 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.657460498 seconds)
    (139/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.224882761 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.640457936 seconds)
    (141/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.375287382 seconds)
    (142/309) benchmarking ("sort", Float32, false)...
    done (took 5.417447297 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 3.019386095 seconds)
    (144/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.359250139 seconds)
    (145/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.876112869 seconds)
    (146/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.480310765 seconds)
    (147/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.402595024 seconds)
    (148/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.361324408 seconds)
    (149/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.460209335 seconds)
    (150/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.373867895 seconds)
    (151/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.252924401 seconds)
    (152/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.404110938 seconds)
    (153/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.385200169 seconds)
    (154/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.899740881 seconds)
    (155/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.357994616 seconds)
    (156/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.714574507 seconds)
    (157/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.456010017 seconds)
    (158/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.023814 seconds)
    (159/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.372124892 seconds)
    (160/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.463476704 seconds)
    (161/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.29384728 seconds)
    (162/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.356013502 seconds)
    (163/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.413152916 seconds)
    (164/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.406897958 seconds)
    (165/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.401921547 seconds)
    (166/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.963244431 seconds)
    (167/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.360887502 seconds)
    (168/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.423596375 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.261149247 seconds)
    (170/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.359386341 seconds)
    (171/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.412156291 seconds)
    (172/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.392845775 seconds)
    (173/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.377669341 seconds)
    (174/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.395814561 seconds)
    (175/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.359412693 seconds)
    (176/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.604170769 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.261362319 seconds)
    (178/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.378373702 seconds)
    (179/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.114117306 seconds)
    (180/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.407347571 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.208584253 seconds)
    (182/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.467741512 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.698893827 seconds)
    (184/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.481886448 seconds)
    (185/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.403335126 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.391249121 seconds)
    (187/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.935731042 seconds)
    (188/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.363756071 seconds)
    (189/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.361419027 seconds)
    (190/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.805669676 seconds)
    (191/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.993490412 seconds)
    (192/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.468857345 seconds)
    (193/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.390814879 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.360992231 seconds)
    (195/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.40132247 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.428850441 seconds)
    (197/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.406167642 seconds)
    (198/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.360864189 seconds)
    (199/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.397140331 seconds)
    (200/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.416100687 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.426508245 seconds)
    (202/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 4.288481277 seconds)
    (203/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.429838742 seconds)
    (204/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.443861149 seconds)
    (205/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.93658436 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.425480915 seconds)
    (207/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.36509297 seconds)
    (208/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.606645393 seconds)
    (209/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.694793169 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.093798276 seconds)
    (211/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.359590176 seconds)
    (212/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.685374684 seconds)
    (213/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.460693627 seconds)
    (214/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.239074086 seconds)
    (215/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.467585143 seconds)
    (216/309) benchmarking ("sort", Int8, false)...
    done (took 4.484845769 seconds)
    (217/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.410926755 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 4.206510301 seconds)
    (219/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.420504448 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.603044465 seconds)
    (221/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.030610778 seconds)
    (222/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.515428876 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.804866099 seconds)
    (224/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.400910031 seconds)
    (225/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.554423191 seconds)
    (226/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.383888174 seconds)
    (227/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.285087373 seconds)
    (228/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.371279754 seconds)
    (229/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.334793725 seconds)
    (230/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.446937059 seconds)
    (231/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.447258907 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.405984032 seconds)
    (233/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.993063509 seconds)
    (234/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.993220045 seconds)
    (235/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.442871412 seconds)
    (236/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.38148577 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.85930376 seconds)
    (238/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.642887878 seconds)
    (239/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.261849158 seconds)
    (240/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.374196708 seconds)
    (241/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.167470549 seconds)
    (242/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.400693585 seconds)
    (243/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.406392765 seconds)
    (244/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.397950702 seconds)
    (245/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.540516557 seconds)
    (246/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.385558926 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.581454173 seconds)
    (248/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.151269145 seconds)
    (249/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.382278063 seconds)
    (250/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.506094953 seconds)
    (251/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.624381068 seconds)
    (252/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.766580052 seconds)
    (253/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.878713693 seconds)
    (254/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.400804707 seconds)
    (255/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.510381622 seconds)
    (256/309) benchmarking ("sort", BigInt, false)...
    done (took 6.384011722 seconds)
    (257/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.409707546 seconds)
    (258/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 4.161711479 seconds)
    (259/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.779066527 seconds)
    (260/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.366870533 seconds)
    (261/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.998830182 seconds)
    (262/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.409943938 seconds)
    (263/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.22974948 seconds)
    (264/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.368431392 seconds)
    (265/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.379324168 seconds)
    (266/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.385193773 seconds)
    (267/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.879516069 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.385670932 seconds)
    (269/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.447028786 seconds)
    (270/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.503840989 seconds)
    (271/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.300574945 seconds)
    (272/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.600586732 seconds)
    (273/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.364353148 seconds)
    (274/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.384412771 seconds)
    (275/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.560354246 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.398562767 seconds)
    (277/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.674053471 seconds)
    (278/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.47195819 seconds)
    (279/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.797310691 seconds)
    (280/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.41528586 seconds)
    (281/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.272579318 seconds)
    (282/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.466801891 seconds)
    (283/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.366233029 seconds)
    (284/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.584288072 seconds)
    (285/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.453201817 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.501781553 seconds)
    (287/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.380239731 seconds)
    (288/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.380696289 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.185187147 seconds)
    (290/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.857333091 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.426923341 seconds)
    (292/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.397085465 seconds)
    (293/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.484216455 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.460265098 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.412489261 seconds)
    (296/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.41335547 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.42953271 seconds)
    (298/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.49118249 seconds)
    (299/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.412897499 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.103204053 seconds)
    (301/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.703277637 seconds)
    (302/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.381336893 seconds)
    (303/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.028004039 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.428883016 seconds)
    (305/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.489321542 seconds)
    (306/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.812384772 seconds)
    (307/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.269002761 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.486597722 seconds)
    (309/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.983064859 seconds)
  done (took 1066.694443434 seconds)
done (took 1067.986979841 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.421462875 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.420275351 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.397436662 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.420176953 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.511065607 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.420114788 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.410052748 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.398847419 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.448809503 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.446851995 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.399060657 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.419644339 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.398177027 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.400039971 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.398759887 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.414244133 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.559842843 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.399818145 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.415161231 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.409464887 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.416213759 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.397642639 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.450878626 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.421655953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.402542822 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.404799369 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.400860578 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.419666132 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.51220672 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.404187192 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.404115934 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.415309641 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.560270879 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.397110977 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.395060153 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.420558666 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.415665408 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.411466735 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.404614921 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.431541484 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.022552404 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.417183037 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.405591172 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.403735806 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.400790176 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.406376033 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.400405568 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.408327044 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.417731322 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.418580296 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.009764784 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.432004386 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.406617177 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.403211572 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.410498292 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.40250181 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.405643503 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.418934325 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.420796182 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.420077107 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.548829642 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.407107906 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.403111738 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.42029786 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.410803959 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.046104945 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.41765948 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.406175241 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.018123488 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.426125495 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.048719092 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.426989813 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.405042756 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.419443964 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.438712491 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.56469281 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.398039431 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.404206997 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.413137241 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.404267173 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.41485882 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.41796438 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.409213142 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.405517381 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.419128675 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.427924688 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.415777559 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.407940694 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.41414036 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.421834921 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.412678523 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.416102529 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.407173351 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.39923392 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.412063836 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.407442549 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.407090479 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.409456354 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.410955359 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.414786785 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.02541541 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.442772121 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.401772211 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.402716496 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.406592741 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.419022289 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.021177927 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.424640738 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.428602842 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.451825456 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.408507145 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.549469821 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.410055237 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422960768 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.415326356 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.4129337 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.402336872 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.548880693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.016705276 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.439391896 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.410215746 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.405770744 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.425289478 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.409760786 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.403552302 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.568309176 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.407957177 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.422748795 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.527644225 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.418212321 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.440092174 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.407504268 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.413792838 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.431993789 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.42627464 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.438487093 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.410454232 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.427725341 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.422968129 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.403950556 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.42224036 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.418809172 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.412188279 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.41542469 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.404225016 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.431207888 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.422539029 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.426289704 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.426877138 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.530252305 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.408549176 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.556743045 seconds)
done (took 238.773547719 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.469039576 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.39973387 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.498582396 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.404305417 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.509032055 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.510668979 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.402832065 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.403934819 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.404615701 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.786639206 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.403199951 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.404589771 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.406447448 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.403052975 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.490488453 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.404530028 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.402827998 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.747628904 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.410454633 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.478048537 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.403399758 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.405472357 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.406264549 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.788122403 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.403123311 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.39957225 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.48000333 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.40640604 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.75465724 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.401232851 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.403250405 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.751320833 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.496374615 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.425045533 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.416091096 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.41544748 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.509466708 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.426151924 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.491881821 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.490271651 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.501966083 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.447545663 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.402466576 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.410277583 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.409877799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.41004603 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.406520003 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.436984167 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.40628918 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.406123139 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.750275888 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.418825892 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.404965651 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.406820452 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.407448471 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.439590416 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.406320732 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.410547663 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.500632094 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.410090428 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.469736802 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.789025896 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.78896241 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.410266802 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.408102328 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.404016001 seconds)
  done (took 153.390360826 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.473678987 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.485535202 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.531016317 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.426582031 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.4607896 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.53309959 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.425189134 seconds)
  done (took 11.650878408 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.416561288 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.408505531 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.456794464 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.459190064 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.413937918 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.557051114 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.409646121 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.41969454 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.40593138 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.464048687 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.414246596 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.411983318 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.414995112 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.40954838 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.462695589 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.420510864 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.524437761 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.412351717 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.410380198 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.5673864 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.41018771 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.417718618 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.462588367 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.426637394 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.412795924 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.416047748 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.974551639 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.413485494 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409129885 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.412406981 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.408595975 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449083128 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.414548894 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.411014989 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.407398429 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.526150641 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.412145766 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.409197037 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.413671696 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.406443215 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.414541927 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.412768606 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.415029304 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.409231536 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.411783755 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.435245344 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.411892741 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.411772349 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.413427129 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.411414315 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.463103116 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.412953737 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.409685339 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.410047725 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.468984663 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.422200869 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.414203356 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.412411901 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.41296547 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.410778534 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.567576614 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.461784462 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.415574412 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.460636675 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.416002423 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.413828137 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.416346133 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.415898943 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.466902472 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.415974486 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.462620296 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.412429636 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.56744515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.438884738 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.415929008 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.416182018 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.416659972 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.414956533 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.409205103 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.420908292 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.413407997 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.415300608 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.421289928 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.414335046 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.414871544 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.517434119 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.523600106 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.41263023 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.426744174 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.424628512 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.414503991 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.466861098 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.415992846 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.411864508 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.46912047 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.531479824 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.469319962 seconds)
  done (took 160.96637475 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.421196432 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.424248938 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.41767397 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.433325973 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.41728843 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.417295437 seconds)
  done (took 9.854001767 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.418684914 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.417360513 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.418241288 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.418420483 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.417700209 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.415882587 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.418252533 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.418875013 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.422067935 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.418290056 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.417586836 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.416348209 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.414807444 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.415005605 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.416196688 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.417788526 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.417647882 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.416148822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.416575162 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.417815115 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.521545176 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.415846454 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.417923757 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.418766532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.421405405 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.416902582 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.426286436 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.417356164 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.418079899 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.425027679 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.440420701 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.418936234 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.418740446 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.427330951 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.425320125 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.41681979 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.424814227 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.418106115 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.417101088 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.418159152 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.419507294 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.419443287 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.420268874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.419740548 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.419230296 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.425247238 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.425939173 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.427353726 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.420461284 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.422052217 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.419848415 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.421062096 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.418142444 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.422335513 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.420044495 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.439863282 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.426329634 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.42067795 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.422279807 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.421661291 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.423999227 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.421926631 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.422494969 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.424384294 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.41779718 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.420495798 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.419645075 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.427623379 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.421815268 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.422185791 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.421632866 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.419388475 seconds)
  done (took 104.714518983 seconds)
done (took 441.893075076 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.505844717 seconds)
  done (took 7.830390061 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.667529101 seconds)
  done (took 7.993651418 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 24.46847323 seconds)
  done (took 25.802011452 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.494414257 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.542370637 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.425553171 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.415981161 seconds)
  done (took 27.202812865 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.520868806 seconds)
  done (took 7.845402965 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.426874096 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.41626722 seconds)
  done (took 14.168962931 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.709438952 seconds)
  done (took 8.034457086 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.038204958 seconds)
  done (took 8.370480523 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.912123491 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.450634492 seconds)
  done (took 14.964181069 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.418054684 seconds)
  done (took 7.745133068 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.741374896 seconds)
  done (took 9.067007904 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.42036859 seconds)
  done (took 7.748969548 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.436426486 seconds)
  done (took 7.762589951 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.601486418 seconds)
  done (took 10.927766897 seconds)
done (took 166.797764614 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.415232609 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.414451401 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.416411592 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.414861903 seconds)
  done (took 26.9852548 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.454009745 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.456965855 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.45919256 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.467475833 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.459329704 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.457280862 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.448891303 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.447432866 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.467747724 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.463127235 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.460228709 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.46006286 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.458950738 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.447199768 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.459078053 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.459772829 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.468587379 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.457831896 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.452299069 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.460386701 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.427758514 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.469040087 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.460569032 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.426581877 seconds)
  done (took 36.276443461 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.947109219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.499008039 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.58106159 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.477754232 seconds)
  done (took 7.830326441 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.475906959 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.480992743 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.494056286 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.533480976 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.555254161 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.486677085 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.450808479 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.447514901 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.432715985 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.47796941 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.552501941 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.498089518 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.565396695 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.427022433 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.612343744 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.424654982 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.426434694 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.478421608 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.52945955 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.556541278 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.425570535 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.477134325 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.482123379 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.492210422 seconds)
  done (took 37.111674715 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.426397046 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.444318401 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.424454056 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.421763595 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.429974778 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.42455657 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.426733346 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.425669686 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.424227939 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.430050396 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.423573378 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.435675941 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.423086999 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.424192604 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.432519172 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.429508149 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.430872538 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.426091641 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.423743734 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.43240465 seconds)
  done (took 29.891594948 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.42001357 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.271817665 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.771442939 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.676702772 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.420620119 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.417195587 seconds)
  done (took 28.308196911 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.508466283 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.690343319 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.431261819 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.865940196 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.961458167 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.443862208 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.427477474 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.710512934 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.10238887 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.092389549 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.499666848 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.51360695 seconds)
  done (took 21.578713556 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.427976088 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.42394237 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.430864148 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.441684095 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.490721428 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.445140913 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.43446078 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.422425255 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.499038622 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.515003176 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.449531406 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.494116658 seconds)
  done (took 38.807632237 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.50860957 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.472022215 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.497164623 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.435098805 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152610044 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.6361926 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.529244187 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.904468826 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.425686099 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.694716246 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433249512 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517744593 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.680425122 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423373643 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.451198225 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.533348997 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.668810826 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.965189734 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.423724525 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.88710035 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.455743617 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.425020106 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.05445999 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.46216921 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.638776988 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.571020086 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.684836289 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.202471247 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.765736497 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.437836408 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432548147 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.425507348 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.698447851 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.147880777 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538786093 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433613839 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421395913 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.998010416 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.421204428 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.910999178 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.441835076 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.425999198 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43691584 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.424896109 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.359608832 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.430622929 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.916938554 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.431123459 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.137596189 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.427663191 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437270521 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.517699524 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.429201634 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.999586923 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434267123 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.439183968 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.422160551 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.447938776 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.016463735 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.503396649 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451670609 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.368575022 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.429417582 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010819255 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.138591948 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.544509208 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.4310764 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.429957663 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.363002716 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.968851956 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450616147 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562503666 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.448989951 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.089656413 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.224601333 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.456934252 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.364897346 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.035262105 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.439898839 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.369347127 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.655839317 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.20742577 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.367556625 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.372966391 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.362243876 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.216547689 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.436427787 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.924735007 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.446403057 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.928614712 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.439077297 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.443475182 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.450862407 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.651813681 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.307798784 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431651066 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.442116985 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.551715943 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45013048 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.916861946 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.360923523 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.43284611 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.687520939 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.639925106 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.427985969 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.547363081 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688945654 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428503824 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.446539059 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.444863392 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.447239938 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.085758288 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.460424977 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.512351814 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.45066701 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.207256609 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.253726311 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434769226 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.535727287 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.438385225 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.716034869 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.280480341 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.314332258 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.499395652 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.435952436 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.430972831 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.031859129 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.034649045 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.315129594 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.4270782 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.438000687 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.448214526 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.431628942 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.388764402 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.428005039 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.439770454 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.217631935 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.654985487 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.450583996 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.714506095 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.366565335 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.568979593 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.450038994 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.655953657 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.8383794 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.455946227 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.69332461 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.446658948 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.438573785 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451901807 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4491889 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532942518 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.453558916 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.443721654 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.697124896 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.435671004 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.437352309 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.060906447 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.21892645 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.433978686 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.439757384 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435947591 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117359364 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.424409941 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.436290859 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.328526575 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.445938747 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.500151128 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.440543259 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.446684498 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.572462195 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469319512 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.445356292 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.443118411 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.663271913 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.444640179 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.02871237 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.522297832 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.668876316 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10067334 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.464637704 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.367601366 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.142894005 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.12758574 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.434479293 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.627905144 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435282034 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445302047 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.446877433 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.435456579 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.104527594 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.452440945 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.9465716 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.44859848 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.445796649 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.442485831 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.436547967 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.567670524 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.559910395 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.445534706 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.454709356 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.5794597 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.450964545 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.368868406 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.952683756 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.443498193 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.437906331 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.215703965 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.469351477 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.95191934 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970316808 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.696603379 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450831298 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.457104774 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.159785536 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.479585295 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.439126796 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.444653825 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444453267 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.445887774 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.470971013 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.448231979 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.954455657 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.809692689 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002990153 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240858554 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.070374638 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.494239631 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.444265269 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.343069261 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.928610116 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.373463459 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.098521156 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.664054952 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.94144278 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.394788465 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678232318 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.84729404 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.359584001 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.454601862 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.669623639 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.479611806 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.453402145 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.450260826 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.650754282 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.471747942 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.452467644 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.375995784 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.957035625 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.731897716 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.439441917 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.516861315 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.922755709 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.451902808 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.221202562 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.437624269 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.894782473 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.657731765 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.986584996 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.836014185 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.447981883 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.453449674 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.965278421 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.444900396 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.970285225 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142671748 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.459697844 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.685980064 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.382945371 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.453803759 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.455019102 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.439379137 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.099388795 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.459836134 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.699361263 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.451229589 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.379661353 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.449811593 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.061344445 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.317287904 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.448860016 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.444703695 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.271143962 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.445473657 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.819387597 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.452215824 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.518628085 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466699135 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.381078648 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.380477878 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.138039564 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.455326561 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415638169 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002656018 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.465581073 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456487144 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.476258513 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.303240186 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.70286923 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.459431712 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.114952046 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.690590646 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.460483123 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474383893 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.547308846 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.462498451 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.431428432 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.345535226 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.682446071 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.447375476 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.695927707 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.524169325 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.34582991 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.465249498 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.657531366 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.332001824 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.455326142 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.733505261 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.17583969 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.449287673 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248243685 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.490807901 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.449979185 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.464128884 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.447031091 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492428737 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.536134678 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.461020185 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.458952729 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.458734706 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.646863101 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456789176 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.457664431 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.463317256 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.541949497 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.580072953 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.583141653 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.222429494 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.119660119 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.284938907 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.138792969 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476597828 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.451839703 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.450529354 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.384604688 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.598413751 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.977553476 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723337878 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.568407254 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.454363163 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.477129503 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.449179044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.483133646 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.666972919 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723590211 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.425754642 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.453762351 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.241637285 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.331476079 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.460762077 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.662508496 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.006805097 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067389046 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56967601 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.455256595 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.940581506 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.723389685 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.543236365 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.450153531 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047673545 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.461016438 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.904830532 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.473087835 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465754 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.595981544 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.463116713 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.206704742 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.478560629 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.609909655 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.224111847 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.015075919 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.711711238 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.958025097 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.462300053 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125170611 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.293559799 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.724954058 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.52138038 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.464576371 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.558410589 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.600199364 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.455835165 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.359301084 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.449774269 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.30290847 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.163365207 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.462446737 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.139723869 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.742195606 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.447319837 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.456145142 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.481397341 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.464004648 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.677875836 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.242914981 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.674450567 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.463661065 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.462429914 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.026627043 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.15414396 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.486665801 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.390271281 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.458255215 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.735138607 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.708423292 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479911342 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.907914171 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.165137177 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057778225 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.42903415 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474315521 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455203278 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.287374407 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126115652 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.60123345 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.017341958 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.115061878 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.455921177 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.735543716 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.46184492 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.456530474 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757146648 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.461005287 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471956932 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.473071605 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.123500354 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.375933927 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.472087492 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.956553799 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.392574005 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.684836141 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.456237818 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.397449908 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4569853 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.66236564 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.456215322 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.577716736 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467159406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.454422452 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467851971 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.220443815 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.740293099 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.460435274 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.449543809 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.436137169 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.471815807 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484852753 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.773431652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.461393543 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.129990782 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.812060165 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.716900613 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.472915288 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.440760642 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.46241629 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460247496 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.162570556 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457192435 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.466369098 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079718841 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.458095189 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.472441669 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.464365286 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.675323334 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669571201 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.457773655 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.4754544 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.462856786 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479777023 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.357954939 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.231565737 seconds)
  done (took 1709.850778034 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.483521277 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.490218839 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.476020606 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.475733416 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.502640856 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.548111026 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.514767443 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.578070911 seconds)
  done (took 53.435572861 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.479891539 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.622178861 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.491611981 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.475937848 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.471098424 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.473588958 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.999852311 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.493939799 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.466095013 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.471553441 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.472651933 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.473481675 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.208256129 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.473200107 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.474973113 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.445079984 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.467318712 seconds)
  done (took 67.834259736 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.459092473 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.466134787 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.501121012 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.460171574 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.189248308 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.480270197 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.055809498 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.490152988 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.468150954 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.637426439 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.113974782 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.498814564 seconds)
  done (took 82.190143761 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.469708696 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.467726717 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.469603586 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.468406204 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.468287758 seconds)
  done (took 8.713465026 seconds)
done (took 2150.147129539 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.710379933 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.283851342 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.197552954 seconds)
  done (took 5.850920476 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.609215567 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.65919431 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.788492498 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.801848678 seconds)
  done (took 8.229341009 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.746792098 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.831828972 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.663802063 seconds)
  done (took 6.611685615 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 3.117907696 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.481098376 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.473543007 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.463846382 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.466228656 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.467319142 seconds)
  done (took 20.767841495 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.467152925 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.471406057 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.466232689 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.47019591 seconds)
  done (took 7.246980654 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.443958906 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.169590505 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.443017718 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.457911425 seconds)
  done (took 18.884934303 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.214950069 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.228352029 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.211799026 seconds)
  done (took 8.028642378 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.466778931 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.303230406 seconds)
  done (took 10.141665459 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.771133147 seconds)
  done (took 3.140992624 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.599896709 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.797167208 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.671395685 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.539484331 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.680444761 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.119013179 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.457041478 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.954735843 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.518173646 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.118617824 seconds)
  done (took 31.827934731 seconds)
done (took 139.890908678 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.826025021 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.866787015 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.667123801 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.837803063 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.739935837 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.665857543 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.979973233 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.805703908 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.301113488 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.287180665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.839882546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.73972356 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.710847119 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.870999489 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.709723999 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.872305862 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.697732516 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.864248005 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.467004587 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.464467376 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.986743522 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.425711887 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.669559424 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.447629968 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.697891737 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.616960503 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.007791738 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.870375881 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.481495226 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.029364893 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.614980896 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.482508834 seconds)
  done (took 203.915823886 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.474220527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.481742175 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.463489611 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.482759363 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.463169539 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.465153787 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.483028004 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.481840591 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.48380791 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.478271848 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.464519175 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.465502172 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.485340684 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.484451247 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.46780251 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.483352722 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.465696894 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.484918562 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.4873603 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.46532569 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.486432225 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.481479418 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.465232548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.488257308 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.464312577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.46642401 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.465552349 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.466904416 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.484479884 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.46528791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.466084438 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.467047094 seconds)
  done (took 208.555787355 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.47031284 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.466613446 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.467697818 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.467395578 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.474379088 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.46900501 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.469232792 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.481162285 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.466112753 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.497492034 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.467604969 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.467631466 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.466108982 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.468058433 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.469046336 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.474962111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.467398551 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.466770508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.495811717 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.484424125 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.474706324 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.467555382 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.486024739 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.469448119 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.469351064 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.488664333 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.49604538 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.468067451 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.468024215 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.469692385 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.486081359 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.48852367 seconds)
  done (took 208.566618188 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.678451965 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.476924272 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.480129772 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.435854969 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.478179412 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.478597381 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.480142624 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.670716267 seconds)
  done (took 15.55562405 seconds)
done (took 637.973867234 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 4.087380156 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.771837898 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.700022332 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.49634394 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.421341231 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.520066082 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.49921672 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.69253123 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.488504366 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.707118767 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.83057124 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.513688413 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.983445584 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.497026106 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.783958996 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.610215434 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.423445987 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.546723405 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.861840106 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.181011947 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.796377044 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.070013164 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.714147543 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.475592579 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.004737475 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.061322891 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.398900261 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.415469452 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.515880999 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.869038746 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.435972578 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.659451595 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.579463022 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.572405913 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.632839383 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.613497077 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.654037787 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.572082857 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.715170331 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.817828678 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.179372437 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.29525333 seconds)
  done (took 101.043760792 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.464814083 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.464204245 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.464548829 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.464658883 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.466502277 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.464833211 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.465672598 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.465451035 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.465514326 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.464024877 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.465145408 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.467201996 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.466202222 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.467859455 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.465701479 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.466405391 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.467503767 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.468977348 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.465342543 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.467853199 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.466488411 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.466093443 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.466192439 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.464915972 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.466338471 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.467715123 seconds)
  done (took 39.500476476 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.483196543 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.763821948 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.950877828 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.490915251 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.482594591 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.488267504 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.578567262 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.486797768 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.485229045 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.48775316 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.668521456 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.488384475 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.523058472 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.991311735 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.488540023 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.487668329 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.48484601 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.485475652 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.769564954 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.492990091 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.599414209 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.489242449 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.580320517 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.498924445 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.509628108 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.485157262 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.490083961 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.028809307 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.506869497 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.666856625 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.427870183 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.579188365 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.97440544 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.985371539 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.434981966 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.490273111 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.484320701 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.67175341 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.486354067 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.485722308 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.580100262 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.489298152 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.96597265 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.163291754 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.510195174 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.486616714 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.053556866 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.689231146 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.78449911 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.499831022 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992350165 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.494426731 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.488278077 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.486183561 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.778305522 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.493978278 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.487585911 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.053221511 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.513252209 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.582120077 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.492299366 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.488535387 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.783148733 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.489323851 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.771658723 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.489063597 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.495906342 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.506863419 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.959123668 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.494446513 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.190101496 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.509837452 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.490588239 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.674783406 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.771950631 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.091364649 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.513156105 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.787774609 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.991273229 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.602209285 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.495722847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.015669295 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.604779016 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.494260985 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.493995 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.491546955 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.491084771 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.536991393 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.578695624 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.106049725 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.195349551 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.100435568 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.608950074 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.50765515 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.490669218 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.071449913 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.515659794 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.491238326 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.959275847 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.172310922 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.51442385 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.499610928 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.17968835 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.516827845 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.584610164 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.499721445 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.97605591 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.494186709 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.538228987 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.492253004 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.498012205 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.512705046 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.584795299 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.501240662 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.492490478 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.152329314 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.701985359 seconds)
  done (took 196.188273899 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.488142674 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.482451183 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.485807599 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.484184599 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.485497137 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.492615609 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.485967898 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.486610581 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.490025248 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.486956013 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.487580368 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.485743683 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.489534237 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.492787532 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.495196871 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.493178439 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.097148311 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.487309457 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.48837199 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.502651797 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.317334136 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.488160611 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.488341965 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.502038975 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.488863154 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.490782318 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.519302197 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.488313669 seconds)
  done (took 156.563348996 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.495424713 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.148394184 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.512002423 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.650360901 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.520613432 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.492796117 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.646850709 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.562627937 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.511937833 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.491521643 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.493083782 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.844099068 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.49540457 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.097734897 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.721976172 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.674387827 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.100100431 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.514055048 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.495278111 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.49287368 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.654498481 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.503384531 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.845984231 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.149781428 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.515021759 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.149584396 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.478950999 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.495981 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.494466219 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.153076675 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.510651945 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.849020531 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.587162501 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.566103432 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.171988178 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.11754041 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.11518201 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.668841948 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.494488958 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.493392641 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.495696846 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.480446881 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.159762327 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.514747567 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.49445534 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.148536817 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.517215909 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.49861003 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.50322763 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.494592914 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.569473931 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.585360422 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.891104233 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.169056444 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.60751246 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.509094347 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.657296713 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.906996492 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.503471019 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.104175268 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.479975634 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.203889209 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.51947227 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.482394416 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.497952672 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.501558365 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.680068183 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.662194639 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.102332299 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.515088121 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.105571762 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.69616988 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.500160425 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.497326833 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.50051589 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.202412036 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.124354245 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.695528036 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.660079011 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.730570521 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.485476195 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.498727309 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.484165959 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.590875876 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.496532564 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.205262293 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.126431986 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.517643125 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.501623282 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.501904626 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.502059269 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.710226755 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.224329694 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.612702657 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.094816382 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.894527203 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.880176245 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.507648766 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.570491562 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.517691548 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.880629432 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.504869244 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.571681614 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.980281325 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.881545147 seconds)
  done (took 180.28459958 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.783756656 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.839960814 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.603421005 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.6507926 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.177839185 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.111579932 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.919427785 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.665077782 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.624719677 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.784745777 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.85450671 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.591024286 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.710412552 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.587566506 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.316626377 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.604742565 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.62033899 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.665820622 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.627702567 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.602582264 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.22122869 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.821182992 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.71200696 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.613403406 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.607897252 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.389440047 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.118467841 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.072503061 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.689573487 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 3.01192678 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.078487629 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.709902642 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.60469809 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.301209462 seconds)
  done (took 72.695094295 seconds)
done (took 747.662357501 seconds)
SAVING RESULT...
DONE!
