cset: moving following pidspec: 18707
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "broadcast"... done (took 1.606648426 seconds)
loading group "shootout"... done (took 0.986050045 seconds)
loading group "string"... done (took 0.41173895 seconds)
loading group "linalg"... done (took 7.634597996 seconds)
loading group "parallel"... done (took 0.156693709 seconds)
loading group "find"... done (took 1.249784405 seconds)
loading group "tuple"... done (took 1.840740537 seconds)
loading group "union"... done (took 12.596907991 seconds)
loading group "dates"... done (took 1.324296157 seconds)
loading group "micro"... done (took 0.201245049 seconds)
loading group "simd"... done (took 4.297357124 seconds)
loading group "io"... done (took 0.998371491 seconds)
loading group "random"... done (took 8.50868251 seconds)
loading group "problem"... done (took 1.521561924 seconds)
loading group "array"... done (took 19.078398196 seconds)
loading group "misc"... done (took 1.462866452 seconds)
loading group "scalar"... done (took 38.714472229 seconds)
loading group "sort"... done (took 3.061213905 seconds)
loading group "sparse"... done (took 11.532325329 seconds)
loading group "collection"... done (took 16.707601034 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.491822504 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.115927652 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.120276168 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11312753 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.191983599 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116095102 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.118221932 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.080035464 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.811919281 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.132332749 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.106760576 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.411030571 seconds)
done (took 5.142448749 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.161506567 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082615681 seconds)
    (2/2) benchmarking "String"...
    done (took 0.074406126 seconds)
  done (took 1.271049389 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.060791952 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128321306 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.061860661 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.061969788 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.062267376 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.062027214 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.061365104 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.061438263 seconds)
  done (took 1.61600575 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.066616018 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.0630133 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.060935935 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.062914935 seconds)
  done (took 1.370838405 seconds)
done (took 5.610642202 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.229595033 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 0.094760693 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 0.274065225 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 0.375405276 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 0.456814799 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 0.089591731 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 0.069873885 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 0.065036841 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 0.12556773 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.323221095 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.09643573 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 0.171448181 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.084072312 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 0.170077361 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.969656839 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 0.112769322 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081021684 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 0.117159909 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088873277 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127389497 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 0.367746654 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 0.072760723 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 0.068552914 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 0.065489781 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 0.063041239 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 0.642195731 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660899193 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.124132674 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079625158 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 0.094955542 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.112281696 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 0.638000438 seconds)
  done (took 10.261888457 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.086895801 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.084172067 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.063834189 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.119093044 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.08722542 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.065952658 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071449005 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.064358449 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.084620495 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.119929446 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.0887917 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.094240874 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.063300378 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.065451418 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.070942181 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.19248214 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.075012868 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.075092892 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.062907574 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074835047 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.101096675 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.072586144 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.073194596 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.074620458 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.125286711 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.164492029 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09190812 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.093173971 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.061483704 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.073370003 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11046111 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.11987243 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.062201601 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.060685124 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.118576868 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.090388282 seconds)
  done (took 4.370885236 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.936180669 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.088166945 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.093981149 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.584210379 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.061370571 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.141364874 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.224682576 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.067738003 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.287711302 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.143309651 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.135442533 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.14126344 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.112113871 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.067995098 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 1.154658295 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.110291309 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.44732152 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.06458879 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.063345076 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.062819381 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.065183025 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.06420897 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.060099341 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.065126505 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.088931398 seconds)
    (25/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.058948013 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 0.081727477 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 1.153029447 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.911860044 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 0.271119678 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 0.064149114 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.161371797 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.079521947 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 0.347890001 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.065073132 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.077386673 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.398139073 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.11764054 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.060687157 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.157932115 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 0.110419149 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.060429105 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 0.112187448 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.073044317 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 0.0649128 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 0.064629837 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.064108682 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.066927442 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.073980843 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.10034486 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063910104 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06137853 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160436905 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.060453125 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.063038903 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.063564449 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.146532151 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.062317801 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.136181275 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06148458 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.065446439 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.097102813 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.06521757 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 0.08310394 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.089674304 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078814517 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 0.324072389 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 1.053384188 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 0.062980201 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.223878987 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.071184997 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 0.061494809 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.066094858 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062000455 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 0.062805877 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062566058 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 0.068449533 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.066801789 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.06383063 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.103656593 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.062060619 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.065733698 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.060324838 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.061966723 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.067394028 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.09433511 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.060813647 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 0.460577811 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.096255726 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 0.062077077 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 0.072037898 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.101712513 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.062167782 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 0.066283412 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 0.062319276 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 0.062412867 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.061665663 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 0.063003674 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.064568533 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 0.089814994 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 0.064952992 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.108489178 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 1.166430189 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 0.064642869 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062397055 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 0.067479575 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.059691345 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.065294554 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 0.065007219 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 0.062064707 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 0.064989218 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 0.063864724 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.060902454 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 0.101646474 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 0.061900992 seconds)
  done (took 21.151117429 seconds)
done (took 37.836010224 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.235343656 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.075420896 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.073412387 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.073398181 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.07358142 seconds)
  done (took 1.750534687 seconds)
done (took 2.957811623 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 0.101687925 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 0.059880401 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.093342548 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.092643849 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 0.059667438 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.059628621 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.094495232 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 0.059676151 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.091855201 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.092844015 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.094259678 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.094212887 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 0.05980232 seconds)
  done (took 2.270459402 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065179593 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.076163122 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077536234 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057951962 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067762575 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.077549115 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.058227475 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076586 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.081637376 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076154117 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077180751 seconds)
  done (took 1.994946615 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 0.065513999 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 0.075674853 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 0.077307618 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 0.057276123 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 0.067845422 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 0.07633211 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 0.057420478 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 0.076147688 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 0.079196793 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 0.076365773 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 0.077552171 seconds)
  done (took 1.983603646 seconds)
done (took 7.446771182 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.060998769 seconds)
  done (took 1.241569448 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.479057282 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.099265904 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.063377352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.082539062 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.180166975 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.088809516 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.192507187 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.066370231 seconds)
  done (took 7.597344856 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.092000915 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.067081823 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.064512313 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.061916834 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.063002758 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.063115819 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.062877186 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.063108462 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.062646209 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.065619623 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.065759246 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.065441601 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.065559137 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.064504982 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.064044214 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.065438962 seconds)
  done (took 2.335769191 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092071326 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092659894 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.06852989 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.069216412 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.067430943 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.067278272 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.06934861 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.068741589 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.065856265 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.067636152 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.068829922 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.067664056 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.067914835 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.058924289 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.068862204 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.070245572 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.066072127 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.068450982 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.069880996 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.070580873 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.069860808 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.05919432 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.067344 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.068785204 seconds)
  done (took 2.973434207 seconds)
done (took 15.34621747 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.168242609 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.069298825 seconds)
  done (took 1.425979067 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.063176006 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.063337051 seconds)
  done (took 1.329841408 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.068461163 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.05608566 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.07303528 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.065355555 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.057083191 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.056678765 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.071307867 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.056611848 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.057023034 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.057551167 seconds)
  done (took 1.822859104 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.05840008 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.064074387 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.062614873 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.063314748 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.062431349 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.057991247 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.060012948 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.058174521 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.064003213 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.056929608 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.061073006 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.075706506 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.060341805 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.077424858 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.060210086 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.061212875 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.063620537 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.061502166 seconds)
  done (took 2.337841446 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.056939037 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.057953616 seconds)
  done (took 1.330559581 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.059761013 seconds)
    (2/7) benchmarking "second"...
    done (took 0.057666311 seconds)
    (3/7) benchmarking "month"...
    done (took 0.059489047 seconds)
    (4/7) benchmarking "year"...
    done (took 0.06007065 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.0586099 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.05756523 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.058429359 seconds)
  done (took 1.618642989 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.383598138 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.114195636 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.318306152 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.063924104 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.070796674 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.238858099 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.059427364 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.063926109 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.063431917 seconds)
  done (took 2.625065952 seconds)
done (took 13.706737503 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.075573635 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.167382757 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.082567038 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.392045729 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.086132189 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.061934654 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.107951436 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.15824465 seconds)
done (took 2.360245004 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.223504246 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 1.255238251 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 0.871396189 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 0.06666336 seconds)
  done (took 3.409804589 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.305604015 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.075379152 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.074576887 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.064781794 seconds)
  done (took 1.74559139 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.060704317 seconds)
    (2/2) benchmarking "read"...
    done (took 0.066643541 seconds)
  done (took 1.349296878 seconds)
done (took 7.956222751 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.060326957 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.086538671 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.059629418 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.061090288 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.060452758 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.061059052 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.060157386 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.060172127 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.060337265 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.059854732 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.060067855 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.0602846 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.06003209 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.059962165 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059969398 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060284522 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060723601 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060101982 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.059975118 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060462489 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.06061245 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059788729 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.060312838 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.060237164 seconds)
  done (took 2.720432762 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.074098401 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06106542 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.063398236 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.06331079 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.063935878 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.063595237 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.063496315 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.062346386 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.063068847 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.06171911 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063785332 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.06358156 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.061843231 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.063989589 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062025773 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.063964225 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.063097843 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062369864 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.061818376 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.063855874 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.06316821 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062379389 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.063503245 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.063280487 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.063664713 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063526337 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.062043104 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.062535414 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06326355 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.064190005 seconds)
  done (took 3.138568671 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.060199637 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.055560742 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.056079256 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.065715049 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.057321274 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 0.057377032 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 0.057597397 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.056800323 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.057031548 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 0.058301075 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.057580406 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 0.056521834 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.05736005 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 0.056571241 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.056675247 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.057459006 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.060904081 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.074208653 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.056995623 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.056745312 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.061114276 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 0.05698535 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.057229491 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.056744028 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 0.057158173 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 0.056469154 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 0.057409013 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 0.057239755 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 0.056843803 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 0.057743202 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 0.056481836 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 0.06059363 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.06152336 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 0.057044658 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.066444034 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.070904206 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 0.057270427 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 0.060791879 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 0.057891745 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 0.056874425 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.056936488 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.056911395 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 0.056637181 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.05661856 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.06605406 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 0.057185814 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 0.057865601 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 0.057554448 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.056883461 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 0.056629948 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.056849126 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 0.058645482 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.062232667 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 0.058247568 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 0.056662324 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 0.057676357 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 0.057003796 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.057965657 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 0.056584273 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 0.057184768 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.05632822 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.058670161 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 0.0571991 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.057326397 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.074919616 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 0.058217739 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.066152922 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.059289759 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.057428395 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.060513563 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 0.057218472 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.072812568 seconds)
  done (took 5.484709184 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.076476328 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079968221 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.060836994 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.060211889 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056445206 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.056110551 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.063227956 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.056404427 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060495145 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.074644866 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.05654172 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061416428 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.061305955 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.061241474 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057417228 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.061751353 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.064748425 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.057804098 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.05711641 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.061058027 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.057345294 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.064368887 seconds)
  done (took 2.617037779 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.130465538 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.061936869 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.097952449 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069467521 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063604441 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.069207933 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.062172012 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.062510295 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.062900841 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063107768 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063223806 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.062592074 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.065254693 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063038193 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062928167 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062729354 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062880091 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063312414 seconds)
  done (took 2.488834268 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.071952008 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.061543842 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.080302422 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06138287 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.061529358 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.061548572 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065787695 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.065273938 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.061069552 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.062136846 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.066704308 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.061991801 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.062666193 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062555351 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06209216 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.062545718 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.06306965 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062186999 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066341275 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065370963 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065478917 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066180533 seconds)
  done (took 2.661240113 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071346217 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.0599734 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074331796 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062444085 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.057273642 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056986383 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.062333696 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.061301215 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.062044531 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.061032822 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.061498966 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.057179326 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.06330477 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.06177537 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.06305432 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.061619643 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.061483757 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.061636936 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.061284551 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057102353 seconds)
  done (took 2.480850367 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08000849 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058275949 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.058402323 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076255184 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.058242986 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.058238589 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076150479 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.058047599 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.058433091 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.07932721 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.05925999 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.059221431 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077829971 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078141098 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.059834242 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078304895 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077802198 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078337343 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.059844281 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.059461044 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.080256843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.059866573 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076767453 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058552125 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.058438695 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.058509196 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.059458479 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07729507 seconds)
  done (took 3.12154849 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.059628545 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.058764431 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.059203539 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.059714179 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.059878148 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.059403938 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.059605098 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.059473196 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.059151545 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.058999987 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.058961935 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.058655617 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.058654332 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.059417421 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.059991985 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.06023899 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.059855635 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.060223896 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.060218262 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.060502925 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.060288471 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.060198413 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.060045923 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.060378483 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.060301483 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.060405716 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.060491439 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06032488 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.059728369 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06016756 seconds)
  done (took 3.040109379 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.068111054 seconds)
    (2/2) benchmarking "in"...
    done (took 0.066597055 seconds)
  done (took 1.381908158 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.057633855 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072241275 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.055734697 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068903504 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.065354832 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.060733854 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.066046113 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.065362365 seconds)
  done (took 1.754127149 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 0.061961431 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 0.083480225 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 0.057639986 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.058138513 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.0621992 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.115187827 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.070542348 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.072308715 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071115222 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.061041409 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 0.059085285 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.070113085 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 0.058394384 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071269323 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 0.06036124 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.067624345 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065119641 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070663569 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070210798 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.057446677 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069992095 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.059322646 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.057798211 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.059436923 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.058865674 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.064605004 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.073134391 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.070025263 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066693871 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.056803022 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 0.076227398 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.05812792 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.058814638 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.066647419 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.061905291 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 0.058021089 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09190253 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 0.057938341 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 0.062758122 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.057119253 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.068915947 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076798907 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.070982649 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 0.074829659 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.059526796 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.059651844 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.057446311 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 0.059719579 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.061050682 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.066331196 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.057791654 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.064758416 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.056831268 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 0.058941163 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.067271716 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.057622445 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 0.062722253 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.066344376 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070071884 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.067266414 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.065776308 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072075682 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.066270903 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 0.065264465 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.058416448 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075588189 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 0.059216358 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069335023 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.071614706 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 0.058384935 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069048688 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.056952367 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.056703749 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.057516705 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089044225 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.059213692 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 0.058545592 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 0.057776403 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.057635718 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 0.059321586 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.066619482 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 0.062972266 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.064602587 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06106308 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072520831 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.0665477 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 0.057036644 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.062942525 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 0.072685572 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.059822932 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.056384744 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 0.071689301 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.059631317 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.056041807 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.073148632 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.065884832 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 0.059016808 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.05840845 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.060912973 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070508617 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.059133125 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.056461792 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065314523 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 0.059081086 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.059814412 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 0.061566638 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06447341 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 0.057103401 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.066331722 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 0.061826313 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 0.058552352 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.056207254 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.061030391 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 0.057729469 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.055731956 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065637196 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 0.056747312 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.0705579 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.063027558 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 0.070072028 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070344119 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 0.06622152 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070664344 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 0.056035635 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.054265894 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 0.072628361 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.064664001 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 0.05613914 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.071025657 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.054989545 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.065945568 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.190936349 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 0.059248322 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 0.067210116 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.05697434 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 0.059328622 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.057628077 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 0.062145298 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 0.058629915 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 0.058956431 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.061555339 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.065460101 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.069663917 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 0.059390059 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066532235 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.058374304 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072451579 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067218259 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.062577849 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062019886 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 0.05911335 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.069838177 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.064107954 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067338402 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.05749918 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 0.058767888 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.058060969 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.067752654 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.067316679 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.059725682 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.065397389 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.062144872 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 0.058484935 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.058110309 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 0.05930372 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.06104223 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06208508 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.059080997 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065446465 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.066173604 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 0.073695528 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.065472135 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.066747497 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.057641783 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.057482724 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 0.059953664 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.057658446 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.062426121 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067253076 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 0.072999253 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.068354546 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.075750645 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 0.056421199 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.065673994 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.057954086 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07313886 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070655414 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 0.058637237 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 0.062751433 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.056929612 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 0.05946151 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.066787423 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.068458801 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 0.070933887 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071508579 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.062384993 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06220827 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.057395555 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071818575 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 0.058207451 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06574901 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 0.066714333 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.062808385 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 0.05820021 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.059765171 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.066619624 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.061959376 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.05813791 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 0.072342061 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.064283549 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.057743784 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.070991127 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 0.058257326 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 0.068223956 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.057280697 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.061305879 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.062852493 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.059733061 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.066789234 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07220752 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.056900644 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.058361818 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072231085 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 0.059903821 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 0.059320966 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065212887 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 0.07190168 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.062223399 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.065593223 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067892453 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.066602108 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.06213054 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.066664548 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.059042394 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 0.065889789 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 0.060685626 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.069070518 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 0.057396084 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074239293 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.056621207 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 0.07161384 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.058128727 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 0.067608707 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.057846103 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.066391271 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 0.058197803 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 0.073308721 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 0.059342316 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 0.057059348 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.06684089 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.054761787 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.064024279 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.055075043 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.060193266 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.061406652 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 0.063688772 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.057087846 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06389361 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.056684708 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.063905614 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.059687749 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.063062743 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 0.064102937 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.059906542 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.055041923 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.063055685 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.065218999 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.199679338 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 0.05908593 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 0.059345707 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.058595628 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.066169802 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.058901384 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.05838246 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065221476 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.061703228 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.062849468 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 0.058450627 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 0.058611827 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 0.058641651 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064808277 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.067023949 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074784876 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.065343197 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.064437129 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.066271469 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.058044184 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072816869 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 0.058405348 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.065467002 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.057004502 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.063871581 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.066658149 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 0.056752361 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 0.074134961 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.058001537 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.063883301 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06820014 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064559328 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.060574686 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.073526669 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 0.060145187 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.064638133 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.064543703 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.062357379 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.064199357 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.059383927 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.065972851 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.066966982 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.06844907 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.059138383 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.06550187 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066683318 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 0.06003266 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 0.065623964 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.059818062 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066210463 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.059394147 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.05692326 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.062213605 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.06890688 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.062760641 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.06252968 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.05835618 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.05706747 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.057869283 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.062749164 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.060915997 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.064817284 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 0.071867505 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.056748878 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 0.058973305 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.057334595 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.063995696 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 0.074864282 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.067032819 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.065475716 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.062540439 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.057176985 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.059517666 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 0.059691534 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 0.057900312 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 0.061529615 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.056876336 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.057589859 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.06751953 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 0.059503237 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.06221354 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058145127 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.05879868 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.066457238 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 0.062461482 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.058618795 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.064346229 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 0.057703123 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.06272488 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.05691322 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.059824219 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.062484267 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.057977802 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.061377373 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 0.067365854 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 0.073483894 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.064613167 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.065120839 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.057408635 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.063785193 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071691936 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 0.063630253 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.05744367 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.065369304 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.055914543 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 0.073845141 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.065351635 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.064868303 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.06555181 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.057081602 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.071385835 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.061006939 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.065523186 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.07044433 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.057065275 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 0.062392371 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.056058078 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.070236313 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.060620515 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.05559044 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.063124223 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06292044 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.061330256 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.066550242 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 0.056563319 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.063227128 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059920951 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.058977838 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 0.056777938 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 0.05688963 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.063582527 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.069624633 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 0.055999661 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.058781598 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.062415505 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.063058839 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.201259198 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.069468094 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.065689038 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.059149777 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.059675275 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.061808971 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.05823606 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.069005302 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.058414711 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.062429513 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.062218201 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.058038717 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.064141718 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073872892 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.067107342 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.067289016 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.057950433 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.057669267 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 0.0750149 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.061963175 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 0.0612378 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.065704623 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.067163232 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069661462 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06706043 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074107345 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.058803892 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.063706556 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.069717047 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 0.05878977 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 0.057947483 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.061658723 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.059955478 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.067209979 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.06742794 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065347345 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06028332 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.064321157 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070265798 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 0.059145193 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.061560903 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 0.062009865 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 0.05774879 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.066618313 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.06604994 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066360807 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.05991403 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.057848773 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.061470645 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.066607466 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.065326011 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.065955991 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.058087793 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 0.063453384 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 0.069271156 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.063713533 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 0.05982298 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.056570543 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 0.060041021 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.064969803 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 0.061091541 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.056401927 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.061580319 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.060591761 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 0.063288762 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.065151253 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.062100705 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.057408868 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073594193 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.065664936 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 0.066808902 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 0.059760117 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 0.05998244 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.058316289 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.057764341 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.06899695 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.0578753 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 0.059708119 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.062599433 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 0.059663384 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 0.074718222 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.06618147 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 0.073153383 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.059052952 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.062164557 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.057517115 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.067138463 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.062585075 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 0.058020068 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.067478201 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.056539933 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 0.071106585 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 0.067772736 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 0.064553094 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.056530101 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.061636295 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.064063445 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07074884 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066129871 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.065606965 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 0.059831305 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.065851617 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 0.058839203 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 0.066554857 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.056618239 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.055904739 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.06575224 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.064398886 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 0.068095001 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.056164009 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 0.066050199 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 0.058261704 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.063833364 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.063679519 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.057689731 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 0.057461803 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.057615807 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.064627035 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.060066116 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.065043186 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.060326882 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.071035287 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 0.056729193 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.065643936 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.063740983 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 0.065607686 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067822538 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.066283259 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.062992278 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.056036996 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.062329149 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.063372522 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 0.057048383 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.060508174 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 0.058816539 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 0.075172098 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.196297031 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.059699519 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 0.071599402 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 0.063962926 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 0.058282168 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.065745652 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.062412906 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 0.066947533 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 0.058241813 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 0.067046795 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 0.060868068 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 0.058118769 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.061714663 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.061350775 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.056178617 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.056597629 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.057024216 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 0.066736702 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.061147806 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.056854399 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 0.073857827 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 0.05858407 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.06497967 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.067629177 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.063519365 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 0.058354536 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.05593803 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.057606566 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069269278 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 0.070944366 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.060357411 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065086073 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.059279516 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.065280824 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.055899443 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.06481446 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.064136093 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.064597385 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.057184405 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.057326127 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.087843211 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 0.071264638 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.061134095 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.066056901 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.065812297 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.058707871 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 0.077490572 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.065286612 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.057831679 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 0.067391435 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.059116008 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.05607882 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.055936547 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 0.058174222 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.067312714 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.056561513 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 0.059104024 seconds)
  done (took 39.523888657 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092619122 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.058446431 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.057128786 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.056840192 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066823183 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.05779875 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.056663665 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.057413246 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.05848693 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.060207977 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.057817365 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.057758316 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.06824324 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.070348188 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067752831 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.061522882 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.058624373 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.058979085 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.057767217 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.058398552 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067503343 seconds)
  done (took 2.669524225 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.062990216 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070883311 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066962867 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.071897758 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06417702 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.060553754 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066799125 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.060504514 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.06783073 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065452975 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.067099288 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06026869 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.065405203 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.065440975 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065565877 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.060533834 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.067633497 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064099524 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.061304718 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.06763274 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.061271119 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066921004 seconds)
  done (took 2.776332852 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.058103857 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.057134652 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.06463069 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.056229249 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 0.056155196 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.059559467 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 0.056065359 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 0.060177977 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 0.060745117 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 0.060403274 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.064720948 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 0.057022143 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 0.056102951 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 0.062992258 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 0.057463087 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 0.05836736 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.098254957 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 0.058787487 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.058532517 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 0.057705055 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 0.063655818 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.066784709 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.057414835 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.057584154 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.061595358 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.059593419 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 0.056470461 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 0.058759731 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 0.057383543 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.060278922 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.057770665 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.055783597 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.064784676 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.064473071 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.060734608 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.060469168 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 0.057663992 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.057205173 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.056443411 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.05660131 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.064518694 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 0.05797428 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 0.056322638 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.057271245 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.064583338 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 0.056306836 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 0.056063613 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.064714726 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.056394074 seconds)
  done (took 4.293075579 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.066440929 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.10390367 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.061880959 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.086029682 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.068432914 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.062022544 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.061601655 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.087396946 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.057587706 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.058281358 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.069316641 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.069402934 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.059622439 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.060477658 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.063133574 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059172305 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.059740773 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058424243 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.061470749 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.058615068 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.061801147 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.062878236 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.068023437 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.068250477 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.059799341 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.058404213 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.058362424 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.06076918 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.068336175 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.062769471 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.060550798 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.061182936 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.06902083 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.063145739 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.058763701 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.058816469 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.069492552 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.060136693 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.059158888 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.058161039 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.059285584 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.060212856 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.062803474 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.069610874 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.060067014 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.063857466 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.059252553 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.057365504 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.06889041 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.058867704 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.062707203 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.070322106 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060194447 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.059713377 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.060278883 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.068682259 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.059269696 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.057896653 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.059651936 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.069059968 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.057727002 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.060046852 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.069376417 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.058986168 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.062248822 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.069441837 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.063559782 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.059833896 seconds)
  done (took 5.787996453 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065781546 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.088381009 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067225433 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066763245 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066413394 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.06608793 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066015117 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.066127959 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.066317024 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.066871194 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066136594 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102356531 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.062647966 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.070592046 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.066350447 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066339195 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.066429422 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066197593 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066248384 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066256686 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.066422729 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.06702205 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067999905 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.068550499 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.069013828 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.06381475 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06767843 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.066570711 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066803738 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.066423213 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.068851742 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.066472158 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.066691919 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.067076869 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.068743006 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.06654083 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.057383603 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066665053 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.066544631 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066686024 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063084377 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066782778 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066566866 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.063062852 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066512997 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.066225297 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.067673804 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.069217584 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073582557 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.067380321 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.066887509 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067176172 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066742373 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066629123 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.06685305 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.0732159 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067213407 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067187825 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066632113 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.067461362 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06702704 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.07300916 seconds)
  done (took 5.585794291 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.070255239 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.063806572 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.07426159 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.059418884 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.056613095 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066421536 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.057775258 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.057640466 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064555996 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.064645145 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066233085 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067097067 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06903352 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066363533 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066824569 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06967196 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066687104 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067520628 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.064367297 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066894632 seconds)
  done (took 2.682234011 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.070852841 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.074321418 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.062097918 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065622271 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06250577 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.066839937 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.062679091 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063111023 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063394213 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063183118 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067856762 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068073034 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063784799 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067096344 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068198187 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.066923318 seconds)
  done (took 2.421344361 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.06359409 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.063870299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.063004921 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.058354935 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.061469006 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.058534932 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.059176004 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.057959753 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.058462336 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.071832642 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.05911927 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.070831162 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.058881649 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.058045378 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.05904072 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.064544408 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.058243228 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.059234164 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.058634037 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.063253997 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.065519719 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.059736179 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.062451896 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.058867215 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.063918534 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.065537395 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.060309228 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.062646235 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.059192052 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.059446793 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.064184626 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.064696065 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.058116588 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.059100102 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.057782906 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.058816047 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.057388843 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.058023618 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.062662718 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.05776895 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.05614594 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.062276881 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.05752737 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.058425508 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.056628607 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.058334952 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.057033168 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.064016836 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.059186422 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.064473544 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.059257469 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.060601916 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.059312201 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.065438977 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.061201722 seconds)
  done (took 4.709599731 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072392958 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.061782724 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.056250202 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.056785273 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.061056406 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06229082 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.061466914 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.061722425 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062894074 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.058240445 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.063482909 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.062242408 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063159716 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.063114458 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.06395964 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.062930344 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.057435176 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.06298456 seconds)
  done (took 2.495038949 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.067465692 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.061666395 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.065917835 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.061314615 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.061086451 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.060920475 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.056982086 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.057050352 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.057158342 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.062339028 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062134712 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.062085083 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.058149931 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.062105736 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.062370819 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.062803934 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.061971429 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.057983754 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.062206001 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.058526075 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.06213941 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.058146651 seconds)
  done (took 2.716584056 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.082895976 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.078839447 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.118430525 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.074749992 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082440537 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.068144987 seconds)
  done (took 1.880096609 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.086489399 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095957383 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061158465 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.061725938 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069693188 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065709719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065731894 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065569474 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071012817 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069237969 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065812945 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070083887 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069854516 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066874192 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069879454 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071384433 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065944269 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065533242 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.062743202 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073383029 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.065900916 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071209763 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065868283 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064602246 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064442729 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067338525 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073137729 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068394099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066244954 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06941528 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071672481 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06429607 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069484284 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067763308 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.061581702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069635512 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064222992 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071992316 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069844808 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066096842 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061207145 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06945849 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069517621 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06609927 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071942039 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064469733 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066128321 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064471293 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064709843 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075566233 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.070544851 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066711423 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070167634 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071833854 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072464603 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074013661 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068711764 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06612646 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069587964 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068495438 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.065851732 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06947455 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06626891 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069771123 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074143695 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067866056 seconds)
  done (took 5.913005713 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093556802 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061861149 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064526994 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068376253 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066477759 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064365189 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064420743 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066046675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066096658 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.06328329 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099928658 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066437888 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06784757 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067776477 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066143022 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065988355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.066067178 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067524007 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.063280153 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075789383 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.065853374 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067833205 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067508186 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066920547 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068571704 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071499691 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064158671 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.063904734 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064041717 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064364107 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.065985187 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064298211 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066228006 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.061689369 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.065807528 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064251074 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064287349 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.066130695 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064727398 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069696824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067503538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071561145 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.064383189 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.064588517 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06793747 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.063883731 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064023508 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06155895 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.064072604 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.061675496 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067903118 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067933624 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068018532 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06612582 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064545069 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.064582848 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.064480389 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06435084 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064394251 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072111749 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.065713091 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.064206409 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074052729 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064576715 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.064166345 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.065747088 seconds)
  done (took 5.817616583 seconds)
done (took 121.387226092 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.203517194 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.180640554 seconds)
  done (took 1.746096963 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069094525 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.091406201 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.071017459 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129203284 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.067119493 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100624832 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099383002 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.071129348 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066645966 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06692643 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068953711 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070906558 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134136426 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066998758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066437105 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06979496 seconds)
  done (took 2.691735508 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099901602 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.173084414 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108852746 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.066364186 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.101620398 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073110495 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066064445 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077422221 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070067765 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06854413 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072987132 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.071649031 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068440554 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070282246 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.068528892 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.071249026 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066958776 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071702879 seconds)
  done (took 2.854161659 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.08833141 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.081187092 seconds)
  done (took 1.559300211 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.148239772 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.100582421 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.136715293 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.305869199 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.1244623 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.12040115 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.124519014 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.119558257 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.105430433 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.11670737 seconds)
  done (took 2.787520191 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098957424 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.16706121 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.293882892 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.112891161 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.071208289 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.092915095 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.114603119 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076779523 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.074396484 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.073921315 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.076447181 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.07177842 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095018036 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.070803881 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.069630583 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.071679066 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.097542628 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.069194649 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.069825517 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.070561453 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.098348371 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065646466 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07096307 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.069266942 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.072131331 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.072503262 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.066671201 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.066926773 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.072760953 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.072397163 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.073505676 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.0904936 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.072541648 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.09244027 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069778682 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.093708598 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.06949213 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.068964846 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.070211394 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.068710829 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.071569856 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.071299989 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.073668535 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.07167333 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066741506 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.06941331 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.066639627 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06560091 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.073024416 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06595807 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.073414467 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.072770933 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.092338761 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.06686023 seconds)
  done (took 5.839048701 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101469835 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.099621499 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06550223 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.105962234 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098452809 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065648757 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.097650862 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09389273 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102267026 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.064961619 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064863623 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064806117 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.07114872 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.074030314 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108090338 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100479966 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.066768884 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.065642303 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100429446 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.100110634 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.065345786 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.096561389 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.095488524 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101381293 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.063290503 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.065086799 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06347436 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.064788342 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069029465 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.069838993 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064074295 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070771514 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.075944446 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.070668478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063434255 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063991112 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.063814035 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.071137458 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071441185 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.071042012 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.069992378 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063361225 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063731547 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064270037 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.065080448 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063413438 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069821401 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.071039918 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.069638593 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064203925 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.064543822 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.063588253 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064603929 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.07071612 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.069316031 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.07134109 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.071007372 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.063648994 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063498322 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.06545718 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.071936231 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.071384022 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.071198478 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064879078 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.07237056 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.063628332 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072519724 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.076062759 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.063677494 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.064331936 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.063897381 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.063987919 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.06419872 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.069000092 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.069245399 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06416705 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.063511053 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.063459783 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.071568328 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.069800157 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06387843 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.069068824 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063210022 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.063479694 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063990714 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.063948202 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.069387233 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.070453573 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.064584524 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063782012 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064089755 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064161367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.063193704 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.06912962 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.070440334 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.070599673 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.069750721 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063949572 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07017166 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069555268 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064450073 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.068970043 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.063243311 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.063719537 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.063782844 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.068678463 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.068078862 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.070695451 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.063167811 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06281233 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.068789647 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.071759776 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.062933415 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.068027241 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.070625315 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.20559007 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.065741995 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.077327486 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065433014 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.073574051 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.065612047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.073213817 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.065236004 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.070997259 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064863247 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.063991706 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064506803 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.070643759 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06499202 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064648429 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.065050575 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064477738 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.070589921 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.074353301 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.065087643 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.07069368 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07064184 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.065203229 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.070529124 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.064537495 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071304344 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.064372175 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064448839 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064278659 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.072791207 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.064210558 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.064499858 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.064412054 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.072484454 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.06434361 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.072323294 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.070140897 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.064128993 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.074294115 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.072165313 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.06975551 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.072814106 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.065189608 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.064598784 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.064227153 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.064617402 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.069859677 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070875562 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064946816 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.064245819 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.069625984 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.072790997 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.063730198 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.069940686 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.070279552 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.070044836 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.064870021 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.064580773 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.073004836 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.071999247 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.070400893 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.069932692 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070859639 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.06463132 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.06959918 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.070510641 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064292478 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.075355698 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.064259333 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.073919492 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.070537451 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.069715777 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.070861632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.072051725 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.072502934 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.072316238 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.074136976 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.063847158 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.064042366 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.07031321 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.064015115 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.064411398 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.069652009 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.064298061 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.064451322 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.074461918 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064495938 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.072292807 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.064031358 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.071080843 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.063948313 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.064542662 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.074577518 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.064409839 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.064403483 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.06965822 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.063803725 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.069830846 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.071855178 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.069657754 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.063430398 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.064588337 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07053736 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.070470558 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.063390121 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.063369632 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.063382968 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.068151859 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.068007855 seconds)
  done (took 17.153374427 seconds)
done (took 36.031296895 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195941226 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.155757642 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.190709176 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111282376 seconds)
  done (took 2.142299946 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.08692777 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.093802023 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.073476371 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.062534598 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.078817675 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.062891809 seconds)
  done (took 1.892106282 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.249829047 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.17759401 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.164689673 seconds)
  done (took 2.020184813 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.203665338 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18609204 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.471197348 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.286924564 seconds)
  done (took 2.673390154 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.121990328 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.073408907 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.059237301 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.06992302 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.101345617 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.128128563 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.080989974 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.10310457 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.071209454 seconds)
  done (took 2.299531581 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.125254569 seconds)
done (took 12.606227259 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.215457733 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092247926 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066688 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.066836554 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.063662669 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.252611241 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.196712948 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072026367 seconds)
    (9/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 0.070404358 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.175963949 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.225706745 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.217118088 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.07378735 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072939275 seconds)
    (15/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 0.175032777 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.076873436 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.14390368 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.065667592 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.069692081 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.402714068 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.110578618 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.068218222 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.215492135 seconds)
    (24/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 0.177700046 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.070324354 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.13899421 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089519334 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.173416138 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.073422012 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.073825608 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.213477036 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.139167157 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.071856097 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.084220732 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.137551523 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.086945937 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078208893 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164785932 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.142680165 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.161891296 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.162019599 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.071222103 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.223630201 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.061810251 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.065093379 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.206007647 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.063923238 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 0.117610695 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.06901839 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 0.078607058 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 0.140373144 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.17681192 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.181589669 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.085583929 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.069793215 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.175455751 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.06902328 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 0.127450262 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 0.062725166 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.076976185 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.060716141 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.069922482 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.059204815 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.085662968 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.061147587 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.06186451 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.082453121 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.067845358 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.071727941 seconds)
    (70/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 0.072280802 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.164507518 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06074768 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.060012835 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.067612931 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.06367764 seconds)
    (76/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 0.181774683 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.082248676 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.061034713 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.061237398 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.061067681 seconds)
    (81/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 0.070652468 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.183566655 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.184146876 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.063650015 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.18413185 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.157409421 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 0.280033278 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.063712625 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.10435385 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.116416221 seconds)
    (91/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.070247983 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 0.093635003 seconds)
    (93/309) benchmarking ("sort", Int8, false)...
    done (took 0.163153233 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086092569 seconds)
    (95/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.081985795 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.069183449 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.061546906 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070092601 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.187794087 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.06125851 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.148155963 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.136081823 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.125005475 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.117669181 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.061763314 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.071622575 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070567375 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 0.244597958 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.144246944 seconds)
    (110/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 0.063207541 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.084993045 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126308963 seconds)
    (113/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 0.080389334 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.073972139 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.191234349 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.141538062 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.155265588 seconds)
    (118/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.071184747 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 0.068829906 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.141556914 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.155409288 seconds)
    (122/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.085490208 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.073073031 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.069879766 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.070900973 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.220968352 seconds)
    (127/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 0.140407212 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.060855078 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.141796447 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.062210766 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071155959 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.068173312 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.068985424 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.068887041 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.073042079 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118605752 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.060992612 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.126205541 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.062764508 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.069718316 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.068192384 seconds)
    (142/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 0.075142744 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211870376 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.060254046 seconds)
    (145/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.063269868 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.084278035 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.064036023 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.062751394 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.060246833 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.060425678 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.068392382 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.134577405 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.171159889 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.06215638 seconds)
    (155/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 0.087762028 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.060657124 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.072663661 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.140787494 seconds)
    (159/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 0.068437407 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.149651791 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.062712508 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.060444868 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 0.061033789 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.060080221 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.063485639 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.069985687 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.132857591 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.155726003 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.062171544 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.063687181 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.059849083 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.061938519 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.083176649 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.062320595 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.060400492 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.168236281 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.081330611 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.060402777 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.087663276 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.067101042 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.071715487 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.185927702 seconds)
    (183/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 0.060188903 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.061477702 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.060071163 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.148982466 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.161236352 seconds)
    (188/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 0.064772079 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 0.133813285 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 0.066883383 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.196559924 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.081679634 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.061209877 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.063000784 seconds)
    (195/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 0.064733304 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 0.290002874 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.064141169 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.074932186 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.064149016 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.090161442 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.069364842 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.063706791 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071497611 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.0668581 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.119199342 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.116158466 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.068381081 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.062444208 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.062813561 seconds)
    (210/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.143893107 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 0.208850458 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.06171983 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.064466827 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.115303102 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.068803307 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.156854081 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 0.062838907 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.073045788 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.071336283 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.063018457 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137191529 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.059935299 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06176411 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.061774336 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.061957804 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.061196818 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.081666978 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.069546425 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.14028115 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.062353411 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.062311131 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.062511641 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.061349225 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.062327047 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.072127723 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.06157532 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.061780284 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.062188399 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 0.060960265 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.063882416 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.081090671 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07368052 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.080754276 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.071988689 seconds)
    (245/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 0.061525996 seconds)
    (246/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 0.156360285 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.063931905 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.06114333 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.176504954 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.084199875 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.060978104 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.060457893 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.138735785 seconds)
    (254/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.06948185 seconds)
    (255/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 0.061460094 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.061917495 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.114670267 seconds)
    (258/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 0.06910164 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.075801532 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.060808444 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.061834816 seconds)
    (262/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 0.062374285 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.073311746 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.061893093 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.062160596 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.061082367 seconds)
    (267/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 0.060551195 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.062357009 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.062579833 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.068514382 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.121195392 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.06252533 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.069209846 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.061774763 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06259943 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.060285356 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 0.061599416 seconds)
    (278/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 0.061129673 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.068653144 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.169781535 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.084653225 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.061607283 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.104739903 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.061322142 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.060165432 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061415151 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.075306242 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.06798825 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.061585306 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.072181109 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140558319 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.08775069 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.060135363 seconds)
    (294/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 0.062120906 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.060336956 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.060726894 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.068689607 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.059873311 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.083683094 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.061573 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.061933344 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.062078866 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.060338468 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.061266667 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.061638082 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.06072037 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 0.062142993 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.061733356 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.074806735 seconds)
  done (took 31.475906287 seconds)
done (took 32.925170783 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083972978 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.084655537 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.069219737 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.080108489 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.076548812 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.090949024 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.069283243 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.073998392 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.075955383 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.074854718 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.07422224 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.068362447 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.070178547 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.070247737 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.068396551 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.082544698 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.076204145 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.069205592 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.069362447 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.060945341 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.069677545 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.061482083 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.060317838 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.067336953 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.072692749 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.068024565 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.070192224 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.070335034 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.061924008 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.061818851 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.066265729 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.070019461 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.064010803 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.072518769 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.069743157 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.06962632 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.071295542 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.074074349 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.060340611 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.061442549 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.071782623 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.061527716 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.069615125 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.067603307 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.066656427 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.06819889 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.069337118 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.072586451 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.083003723 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.065840881 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.072662628 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.072350411 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.072242213 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.06667229 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.066814477 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.069771268 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.067894559 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.082527473 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.070126266 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06556546 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.071689309 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.070509878 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.068321719 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.069401897 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.06911094 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.072365307 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.072437958 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.068274297 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.072140442 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.068575561 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.061125672 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.06927951 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.066810744 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.061207261 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.072150034 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.074621972 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.060361928 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.06737338 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.071211828 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071511994 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.062703416 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067568374 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.062434089 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.068093855 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06771016 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.069797936 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068378242 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071077558 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.062546281 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072192361 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.070645551 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071542179 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.062318314 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07486104 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.062434747 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.069121981 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.061546791 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.061521686 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.060463696 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.066394829 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.061284407 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065889977 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.069226926 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.060136032 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.066223981 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.073819011 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.061389225 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.068333348 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.059963104 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.060778806 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.071098974 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.071848003 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.061512395 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.065962561 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.061031571 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.066426368 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.060563423 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.060936089 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.061046069 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.061144475 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.06578705 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.061328262 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.065607805 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.066410595 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.072565762 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.061141337 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.065840715 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065223096 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.061026007 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.067777115 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.061290015 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.061113557 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.060427898 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.074261126 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.064798872 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.061076629 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.065964257 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.0647199 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.068091159 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.058986147 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.068928094 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.066226241 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.064999146 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.066975121 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.059099095 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.071153858 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.06410318 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.064310058 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.20327867 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.062572139 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.06151317 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.062027487 seconds)
done (took 12.043488979 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06289282 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.0986029 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.069302888 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.076208629 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.07340294 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.064898348 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.067328895 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.078959216 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.065428675 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.081951883 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.087289411 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083862284 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.089194384 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.062506913 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.063650194 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.064260846 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.062576078 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.070225406 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.075410153 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08350255 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.08825882 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.061402015 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.069780636 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.077038391 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.071984902 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.076796523 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.063102872 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.062499394 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.064347844 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.078347301 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085491196 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.062031562 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.063633772 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.07461637 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.075534379 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.068577394 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.062748399 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.065693587 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.062802874 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.061815332 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.063529343 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.075211654 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.068184043 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.065416907 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.062565113 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.063063416 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.062281055 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.064561981 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.074525083 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.064723485 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.069307367 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.072860063 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.063221602 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.061925808 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.060538102 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.065401573 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.061757376 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.062194855 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.062263031 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.061624164 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.062280582 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.063929502 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.0629051 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.062526955 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.065077608 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.064018 seconds)
  done (took 6.075331788 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.07936418 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.088357589 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.077577744 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.0782824 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.062161953 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.062362322 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.062402029 seconds)
  done (took 2.06664521 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.062878824 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.073637819 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.077257026 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.077485451 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.069922197 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.079072908 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.062830838 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.09200239 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.061360524 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.07344807 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 0.10451291 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.080118482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067131086 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075604016 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06434393 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 0.071097067 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.064440329 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071798789 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.071875953 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079557622 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067802383 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.091950492 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.077747118 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.06452406 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 0.083056649 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.068309087 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 0.062009495 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.063713007 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065504915 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.065364911 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06553896 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.101983657 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.067996376 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07568984 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065268743 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 0.06353887 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.069387683 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06743863 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.065390057 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.070669964 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.066714789 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.063172697 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.060557546 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.063058424 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.06468694 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.065448301 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.060682278 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.063432255 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.062770923 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.073080611 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.061418763 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.06600203 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.064909163 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.066468459 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068222588 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.066373147 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.070226821 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.063931076 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.072515811 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 0.069495112 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.062772713 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.070443886 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.069980121 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.066526076 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.069474131 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 0.100518674 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.065842797 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.066775319 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.062934423 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 0.064443556 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.064044632 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.069276122 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 0.061821692 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 0.063987631 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065231514 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.063608957 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.066189093 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.077765723 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.077388977 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07409124 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.064253594 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.06397185 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067661093 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.079916705 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068761332 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065143054 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067001085 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.063675789 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069258977 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065127402 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070186887 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.065136481 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 0.072165953 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 0.06657148 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068134871 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.0721674 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.064227146 seconds)
  done (took 8.295836134 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.06432506 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.06360927 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.064120313 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.063493375 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.064145762 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.06340698 seconds)
  done (took 1.972980578 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.083285813 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.063090324 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.077048178 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.062922753 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.096112974 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.068962778 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.068711851 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.069767584 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.074677116 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.076063087 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.071014218 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.073533954 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.070840044 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.066492158 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.069864001 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.063687838 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.068231293 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.065556893 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.073999113 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064076865 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.074674716 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.064159278 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.064317793 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.073532124 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.065284816 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.064880245 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064011974 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.074650673 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.076307158 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.069629252 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.063832875 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.065162317 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070063168 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.06967171 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.068777541 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070411752 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.06250872 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.067833316 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.064448813 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.064902133 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.072558283 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.065782914 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.064410827 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.067551496 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.069806589 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070132012 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.06751512 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.066119491 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.068942654 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.069397991 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.069674158 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.065433607 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.066880747 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.069449452 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072050543 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072102723 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07036508 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.070565796 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.065994573 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072677887 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.064483285 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.067361078 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.070878022 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.067031416 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.069433472 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.069586048 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.070966876 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.064368622 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.064277812 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.063645389 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.069554471 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.064314769 seconds)
  done (took 6.525901902 seconds)
done (took 26.477074533 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.890624706 seconds)
  done (took 2.429429158 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.550584175 seconds)
  done (took 2.12481293 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.862936607 seconds)
  done (took 8.43480714 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.282441298 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.299178831 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696941468 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.124390192 seconds)
  done (took 3.004836938 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.716556478 seconds)
  done (took 2.302050391 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.225370282 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.216341328 seconds)
  done (took 2.039018767 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.334446619 seconds)
  done (took 1.911358345 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.088493664 seconds)
  done (took 2.660519294 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.215315578 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.152905289 seconds)
  done (took 1.952622242 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.459226941 seconds)
  done (took 2.035565617 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.094014257 seconds)
  done (took 5.674290446 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.22654819 seconds)
  done (took 1.841026954 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.22869252 seconds)
  done (took 1.812372904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.763542203 seconds)
  done (took 3.341214596 seconds)
done (took 43.148707482 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078586496 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081121038 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080677921 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076612968 seconds)
  done (took 1.871088854 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 0.069342918 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 0.065380638 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 0.06856049 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 0.06888526 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.067209859 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.0680418 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 0.067519329 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.065291713 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.066691299 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 0.064985488 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.064007361 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 0.065409927 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 0.067459274 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 0.065585473 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 0.069364345 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 0.071639599 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 0.066394317 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 0.066806483 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.068993367 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 0.067086143 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 0.069623047 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 0.06693853 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 0.064534996 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.065973437 seconds)
  done (took 3.189608235 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.073441663 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.068350854 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.070685066 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.066779294 seconds)
  done (took 1.866161668 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 0.071173824 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 0.078811206 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 0.08005706 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 0.084674545 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07143234 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 0.071495003 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 0.077086246 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 0.078458841 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 0.061012089 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 0.080480307 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 0.063291752 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 0.062356424 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 0.062473205 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 0.079790814 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 0.077579817 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.058112305 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.059759461 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 0.071085741 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 0.070332239 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 0.0729059 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.064267711 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 0.061213019 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.071405262 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 0.07056971 seconds)
  done (took 3.286581577 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.074539461 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.06147711 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.07322758 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.08553442 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.087075172 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.061703268 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.07374346 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087630481 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.117094541 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.063568256 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069258192 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.063041632 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.100833567 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.063683354 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.076952423 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.100128521 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.103456445 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.065505392 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.091642394 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.061064441 seconds)
  done (took 3.176231703 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.071215053 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.065100116 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066219794 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.061386445 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.07267838 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.068395564 seconds)
  done (took 2.001516246 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.064270242 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.063554445 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.062969235 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.062944999 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.067286436 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.0627093 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.061965509 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.063426993 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.063245881 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.062974843 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.062140058 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.061818171 seconds)
  done (took 2.348778237 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.153096939 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.065538303 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.065983015 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.06464793 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.067267063 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.062095774 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.076136782 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.06402175 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.079384012 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.062586385 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.062497509 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.065324671 seconds)
  done (took 2.480066328 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093504119 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094518557 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.137531956 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.109989456 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088005276 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 0.085061312 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 0.150288044 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.128076704 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.10955046 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 0.065136716 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081366269 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095236151 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.093016089 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.125680079 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10582988 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.067900547 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.104713698 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075725614 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10758152 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114826228 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107844288 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.114267514 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.086760631 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.092731749 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100471302 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.110473856 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 0.066630675 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.066129953 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.140044828 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 0.094270945 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 0.086782864 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.092625257 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.104385316 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 0.064503151 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 0.081223831 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 0.099216549 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077935576 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.113259667 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 0.082121578 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092883487 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07528795 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.123904517 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.099393503 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097542513 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.123853818 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086936875 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103199163 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.099377766 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077043383 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 0.111279861 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09198575 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085014198 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074458858 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.149417307 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083755691 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.103577118 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105171256 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.07598985 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.082690435 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.0945098 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.120917938 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.098009062 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105290502 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.252055191 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.086128339 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086734843 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.124905089 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.080523228 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095320784 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.12337785 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.087155187 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.071398904 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.089915277 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.06510307 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.090674362 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.1002209 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.087051008 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.105659546 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.072484138 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.119349169 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.103518366 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.06833624 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.109745197 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092916378 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.14731255 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090352617 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.095489932 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085614137 seconds)
    (89/481) benchmarking "5d"...
    done (took 0.140713844 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080274567 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.075276752 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.092160965 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.122133211 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088383215 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090020406 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121241382 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.090928526 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.082301938 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.070696871 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 0.083319826 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095047368 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.10131615 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.096092554 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083900867 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.081439885 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.089845271 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.070297034 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075529614 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 0.095314756 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082017757 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.116675392 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.102637311 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.11589886 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 0.074017396 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099139799 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 0.090984512 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121794877 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 0.110519583 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.078787256 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102311974 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132294159 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.106839763 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07984876 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.095167643 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.103695927 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.100386432 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.090107515 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.128575622 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.109139347 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082801327 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.086749248 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.24233659 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.105964543 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146718402 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085673455 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.098445133 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.131979683 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 0.106626261 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087282086 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.07914833 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.089213706 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099737445 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.133508562 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 0.090615792 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 0.066121769 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.086937182 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124287951 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.071870962 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09338358 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 0.087288097 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.078828882 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.075942003 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 0.064078388 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098996929 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.130079055 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 0.107980017 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093967271 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.097149249 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.065456742 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.094626657 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098369695 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.135006988 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110202541 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092407028 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.092806269 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098108185 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.0747736 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.126327668 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.12567288 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086200539 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08564258 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117022149 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.089953955 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.098626325 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.107819504 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097843652 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 0.094744032 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.134170236 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.112931352 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 0.116995369 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098994015 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.117031917 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.076945492 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.108898485 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.069723598 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.097583346 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.072154949 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.099837403 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 0.073870266 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 0.103779627 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.074096086 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.09369483 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 0.064286964 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.068515984 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.261144387 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.084953542 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081869612 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.128195051 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.123482021 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 0.076376124 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.095317589 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.094525168 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095224338 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.102651933 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 0.084358069 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086514805 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073777317 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.075573886 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092715914 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088266849 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10209965 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.073358359 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070939252 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.131480136 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098228325 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.085662857 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.089403148 seconds)
    (218/481) benchmarking "4d"...
    done (took 0.111671692 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.083633204 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.082375001 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098227779 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.130996799 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.111415154 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.075266753 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 0.085270638 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 0.06539872 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 0.079513602 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 0.071194051 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102848276 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.070078677 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.10561582 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 0.064139312 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.122363862 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081825069 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.095935197 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091679989 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.121415136 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.084849003 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.120744506 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082057849 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101448105 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.088115119 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.089796104 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.103011136 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 0.089779966 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.098965402 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.105290231 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087332322 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.084697213 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.113836371 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.09924549 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.110844457 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.100612538 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.12846009 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.105561217 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.070241488 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097906397 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.093502855 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.145530199 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.093877552 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.084363724 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.088930332 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09636172 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.075633184 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.290321281 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.082698368 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 0.081778591 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.106951627 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.084728951 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091145833 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07279396 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.095092671 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.088539405 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107698218 seconds)
    (275/481) benchmarking "3d"...
    done (took 0.092693505 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 0.087559574 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.103541336 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104491954 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.081320185 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.08219001 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.116903643 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 0.121234308 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 0.096902948 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088247516 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082911443 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.094401714 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.088959257 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.102676791 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075758053 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.071588758 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 0.06430752 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 0.067910296 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.110577689 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101991875 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.092892238 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.095134453 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.098620364 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.069046733 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08383605 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085568963 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.078544277 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.084731243 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 0.108358352 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.097456123 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.122098708 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 0.096321108 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087370274 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.134201899 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.122274893 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085510023 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087572852 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.095384424 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.073274441 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.139791105 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111891306 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.072762695 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.077682042 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 0.072586271 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080218479 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 0.067071694 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.097848459 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.097936067 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071115139 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.096548319 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091981805 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.116904535 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.091082664 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071953651 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.075230872 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.070085012 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.07023822 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.096008445 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 0.072050932 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.071192913 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121348897 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.095812626 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.099777144 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.07797972 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.226543442 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.125150288 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 0.066249523 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.126348244 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.077325595 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103995488 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 0.07603952 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075085327 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.084850276 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.099806924 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.099717686 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.10752643 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.066692176 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.098035062 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.146849178 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.0716862 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073104453 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.072628281 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.107563435 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.085039563 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.138223984 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083960102 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.087556429 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.072638936 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.12057224 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.097007646 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.078010196 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.120395532 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.074736199 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.067006891 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.080898478 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.104771347 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 0.068073716 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.070662359 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.107379148 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 0.625742451 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.085174588 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.071210559 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.083282799 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.121353148 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.078440157 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.102970848 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 0.111155229 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100455517 seconds)
    (383/481) benchmarking "6d"...
    done (took 0.173922491 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.069606482 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.086087601 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.097641343 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.091921366 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086175894 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.074338807 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 0.083060982 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082990808 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 0.079362954 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.100539141 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.075895309 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.085291957 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.074929867 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.097713754 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.122451903 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081257546 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 0.095961791 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.081757677 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.08509119 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.09290327 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.104781503 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.098992909 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.081319496 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.082077991 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.101038402 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.234180648 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.074894686 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.095134466 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.07306984 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074101484 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.111754204 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.080093415 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 0.088179999 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.098561014 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 0.084129279 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.106984846 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.111655621 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105610104 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.092026491 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.074605073 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.080512377 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.082285316 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069984219 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.073882992 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.070727629 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 0.06670181 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.101042786 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080452113 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.077034241 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.094318735 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 0.102851322 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.094868158 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.100858326 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.08491421 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.091868601 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.095191607 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.120036682 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.150120582 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.09549483 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.116816811 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.124767653 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.071853499 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.071478085 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 0.07588004 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.124679193 seconds)
    (449/481) benchmarking "2d"...
    done (took 0.076577721 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087194739 seconds)
    (451/481) benchmarking "7d"...
    done (took 0.226281062 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.073278281 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 0.076551453 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.086315379 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.101329661 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.078281681 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075171155 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.09385586 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.105573781 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.080190476 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.07610824 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 0.087565126 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 0.100296388 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 0.122033093 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.083671563 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07080656 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.103088448 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 0.096487859 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.11736579 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 0.069719797 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.075855969 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 0.121782575 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.083331074 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.098162474 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 0.075436906 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 0.118433229 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 0.123519209 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.069066516 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 0.083010766 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 0.066279921 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 0.081439205 seconds)
  done (took 48.493680836 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 0.145998889 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 0.138736607 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 0.078749085 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.093865692 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.181165645 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.190823633 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 0.114250489 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 0.090067116 seconds)
  done (took 2.786080806 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.063685732 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.077971288 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.094773729 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.080814865 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.064685321 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.065831138 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.193933282 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.078496435 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.064964966 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.103479065 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.073429047 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067145852 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.349271048 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.06408888 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.065268799 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.073994051 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.065546356 seconds)
  done (took 3.351764846 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.352333119 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.603937126 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.311480482 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072861406 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.709593373 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.084380149 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.095258715 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.131484033 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.076911611 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.514598259 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.36539253 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.124072139 seconds)
  done (took 18.16030719 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.071419941 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070900673 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.07380878 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.07306614 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.069785082 seconds)
  done (took 2.065786731 seconds)
done (took 96.677422566 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.07741984 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.160129841 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.063420224 seconds)
  done (took 1.963587196 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 0.077351774 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.075906956 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.075853408 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 0.074163808 seconds)
  done (took 2.017613302 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.070338215 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.071651075 seconds)
  done (took 1.850100129 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223195118 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.16037671 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088989203 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.078271704 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075031183 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.075615445 seconds)
  done (took 1.949969675 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.067155541 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.067035 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.067840242 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.068178248 seconds)
  done (took 1.977286761 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.063673818 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.062295717 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.064179795 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.066892818 seconds)
  done (took 1.966504848 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.078037511 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079156444 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.0729118 seconds)
  done (took 1.941758188 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.103983287 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093524938 seconds)
  done (took 1.908594141 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.075616758 seconds)
  done (took 1.793126095 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.084538214 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.090139148 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.134668738 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10145992 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.134181541 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.123729447 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.074667221 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.075631293 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.071795824 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.070167948 seconds)
  done (took 2.674001599 seconds)
done (took 22.298982209 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.073694685 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366839747 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.357656745 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084916812 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.669092877 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355013918 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.981502112 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.088566604 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.096430384 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066867197 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083136552 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.647099028 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.971016001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324671377 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.959004608 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.328578263 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.64738871 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067043512 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.06618284 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06659862 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.965248639 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.065664476 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06419091 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.064357771 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.645726659 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.367755582 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.064233567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325717948 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.063860444 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066101077 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353686997 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065495609 seconds)
  done (took 16.103054683 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.0658462 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116100012 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.068355625 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.078781546 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.066133159 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.066011354 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.069320002 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.064427189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.10342989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.063887071 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.080307204 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.063488928 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.067996826 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.065432197 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083910697 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.065428039 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.065783451 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065446116 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067753467 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065381626 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082761748 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064530925 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06520834 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065219491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065384921 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.076905258 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065542228 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064480412 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.065004836 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066765891 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068397155 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.065880922 seconds)
  done (took 3.99813816 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114797631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.118897394 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.069126051 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102276225 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111151395 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.065956952 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142091399 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.085661904 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.107556852 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.065144711 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08095091 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.064922527 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.098723306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.066279108 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.083907596 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.064844998 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.066517868 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.065359787 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.064457517 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.065594173 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.082763289 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.064270513 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.065728061 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.065650918 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.065486839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078413781 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.065459571 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.064817277 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.064675461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.066895895 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.068647104 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.066049116 seconds)
  done (took 4.253438736 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.065749708 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.06749278 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.075325274 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.075972071 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.063132536 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.064778719 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.066545116 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.06258068 seconds)
  done (took 2.27266805 seconds)
done (took 28.357882747 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.073648825 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.06431079 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.067169906 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.082519616 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.069624379 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.066641396 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.061259592 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.069893258 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.067017363 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.066945229 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.069042304 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.06412394 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.067637084 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.063922938 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.07124316 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.064891793 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.071152359 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.069200447 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.069612859 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.069083656 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.064989 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.068024362 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.070524154 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.067507147 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.068137602 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.067637104 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.071559107 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.067813949 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.063330869 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.065465268 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.064617035 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.072658522 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068835628 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.068646888 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.0624264 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.062828076 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.066607523 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.064402219 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.068440945 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.07091266 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.064382245 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.070925039 seconds)
  done (took 4.548732024 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.079617086 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.084922034 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.077479111 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.077573454 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.095533006 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.077661688 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.081915919 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.0746988 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.073704617 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.081147951 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.069390723 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.073916491 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.075620104 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.067714829 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.074015297 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.070405961 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.076258172 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.069715908 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076201416 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.077229664 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.085811896 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.070715478 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.077333109 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07895393 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.072901392 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.078160742 seconds)
  done (took 3.73812614 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.068833513 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.082242599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.086789956 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.133373437 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103648202 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077910236 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077106539 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091429318 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.095405971 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.064134175 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.067801387 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.088777436 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.09032782 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.07297667 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.104154154 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.082375654 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.076193959 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.066272066 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.070515298 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097115564 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.087293522 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08291653 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.097532719 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.085162022 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.065443297 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.075322956 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.073051897 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080201585 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072810399 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.077564988 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.069893616 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.068672993 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.063989313 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.074988243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.067261414 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.061347783 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.084437117 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074842993 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076974648 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102682114 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072403533 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.065250241 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.091559676 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.12402645 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.065906092 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.06826437 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.069077306 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077334182 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.066915088 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093359834 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.083580625 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065352583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.083299011 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066982958 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066889168 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081393921 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.067207004 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.067728731 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077997579 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.072030067 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085092873 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.070705164 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08391712 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.064283273 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07407364 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065552885 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.066931334 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.062897188 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.097233541 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.070309659 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.111996131 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.066629689 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.064050057 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077214463 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.076143808 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072449955 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.065815678 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083743929 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077347193 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.069142998 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076612256 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.068274294 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.06884955 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099628175 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.06478553 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.063477052 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.063953687 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.067979582 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.068581885 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.066066354 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079325587 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.065119449 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.068527774 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.080475096 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06585161 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.066207577 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.068422382 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.067109844 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.065486724 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.076364427 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.068540961 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.064877159 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.074943272 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.064445934 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.066544017 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077176117 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072488282 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.062973783 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.064577136 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.065409912 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.064762603 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.067766135 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.066911935 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.065358471 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.069352404 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.070174844 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.069080092 seconds)
  done (took 10.582775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.152977779 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.144310094 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.065108094 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.138636769 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.071999982 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.068289758 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.140837532 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.084508408 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.066194796 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067463482 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.065648244 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.092882543 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.085187612 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.097252984 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.068015525 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.06447933 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.088724066 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.095409164 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.14129768 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.136987028 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.088954279 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.073995496 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069086779 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.06793569 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.067612686 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.074996233 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085205146 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.072515179 seconds)
  done (took 4.318875213 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.071227958 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.103655392 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.069019375 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.086675901 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.082199982 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.064529627 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.066068516 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.065477645 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.080278483 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.070933889 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.064438121 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.072175325 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.067385435 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.066396162 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.064829766 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.070182935 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.069969793 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.063687276 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.067285796 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.068447661 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.073847325 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.087999517 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.068118162 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06545596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.0688445 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065966325 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.073104172 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.075587651 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.065900642 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.095298726 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.063830911 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.070587554 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080082317 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.066796652 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066013678 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066371131 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.066546489 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066190304 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.066714796 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.064082091 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.064155973 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.070684347 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065245425 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.072515446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.079444725 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.072574018 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.065067482 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.066120415 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.066146248 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.061349619 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.066633798 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.066987448 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.066535515 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.072019911 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.067895992 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.066431967 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067997513 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.088329081 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.069749383 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.063844403 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063371439 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.062621678 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.065103517 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.071712901 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.079996752 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.064872745 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.062603596 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.063782953 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.068824041 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077273676 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.063989365 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070789532 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.063278621 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.066404845 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.068251384 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068654933 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067339319 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064905666 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.065711809 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066316453 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.065989359 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.065942433 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.065874756 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069109819 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.063893888 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.064667888 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066767036 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.067010461 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.072850639 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.064872556 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.068416832 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.06724085 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.06515645 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.068585388 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.071210883 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.069326895 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085111076 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.074777318 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06655648 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064206879 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.079968457 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.06778489 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065261332 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.072666556 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.070692536 seconds)
  done (took 9.077536007 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.085726443 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.065521869 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083631746 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.089887851 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.074063699 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.069516237 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076912123 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.06566219 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.080184628 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.066247584 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.074882577 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.064532883 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.078112787 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.07421981 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.067423178 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075612627 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.069184933 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085316421 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080140406 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.064921817 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.074116591 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078058844 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.078380321 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.082861893 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.08237367 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083142398 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.078101676 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.069324461 seconds)
  done (took 3.907312882 seconds)
done (took 37.897754648 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.809521883 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.979841051 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.803188766 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.000969381 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.001896342 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.934023271 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.84840293 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.801164684 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 8.00966821 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.841921124 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.118253006 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 5.208191994 seconds)
done (took 67.155892176 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.820404898 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.944992229 seconds)
    (2/2) benchmarking "String"...
    done (took 2.006197512 seconds)
  done (took 5.689258742 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.938818375 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.463895269 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.063766503 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.801202817 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.807424671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.206389588 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.576699523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.241450965 seconds)
  done (took 30.899803089 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.950649956 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.028814389 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.501193319 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.532248141 seconds)
  done (took 15.79636824 seconds)
done (took 63.978357767 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.831927184 seconds)
    (2/32) benchmarking ("eigen", "typename(Diagonal)", 1024)...
    done (took 6.802528811 seconds)
    (3/32) benchmarking ("eigen", "typename(LowerTriangular)", 1024)...
    done (took 6.818378488 seconds)
    (4/32) benchmarking ("eigen", "typename(SymTridiagonal)", 1024)...
    done (took 6.827614316 seconds)
    (5/32) benchmarking ("svd", "typename(Diagonal)", 1024)...
    done (took 6.805510223 seconds)
    (6/32) benchmarking ("eigen", "typename(UpperTriangular)", 256)...
    done (took 6.799478207 seconds)
    (7/32) benchmarking ("eigen", "typename(SymTridiagonal)", 256)...
    done (took 6.80680324 seconds)
    (8/32) benchmarking ("eigen", "typename(LowerTriangular)", 256)...
    done (took 6.803287984 seconds)
    (9/32) benchmarking ("eigen", "typename(UpperTriangular)", 1024)...
    done (took 6.858709622 seconds)
    (10/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.028528907 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.801311314 seconds)
    (12/32) benchmarking ("svd", "typename(LowerTriangular)", 256)...
    done (took 6.80807392 seconds)
    (13/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.803617473 seconds)
    (14/32) benchmarking ("svd", "typename(Bidiagonal)", 1024)...
    done (took 6.804530789 seconds)
    (15/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.597308719 seconds)
    (16/32) benchmarking ("lu", "typename(Tridiagonal)", 256)...
    done (took 1.862735746 seconds)
    (17/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.817458252 seconds)
    (18/32) benchmarking ("svd", "typename(UpperTriangular)", 256)...
    done (took 6.805187255 seconds)
    (19/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.821725969 seconds)
    (20/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.821773108 seconds)
    (21/32) benchmarking ("eigen", "typename(Bidiagonal)", 1024)...
    done (took 6.805599806 seconds)
    (22/32) benchmarking ("svd", "typename(Bidiagonal)", 256)...
    done (took 6.803777936 seconds)
    (23/32) benchmarking ("eigen", "typename(Bidiagonal)", 256)...
    done (took 5.271618018 seconds)
    (24/32) benchmarking ("lu", "typename(Tridiagonal)", 1024)...
    done (took 1.989175215 seconds)
    (25/32) benchmarking ("eigen", "typename(Diagonal)", 256)...
    done (took 2.416810817 seconds)
    (26/32) benchmarking ("svd", "typename(LowerTriangular)", 1024)...
    done (took 7.111106616 seconds)
    (27/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.304173478 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20220394 seconds)
    (29/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.813952143 seconds)
    (30/32) benchmarking ("svd", "typename(Diagonal)", 256)...
    done (took 6.800798319 seconds)
    (31/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.890860685 seconds)
    (32/32) benchmarking ("svd", "typename(UpperTriangular)", 1024)...
    done (took 7.111439543 seconds)
  done (took 205.585069413 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.803180079 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.996416596 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 4.033280355 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.809920621 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.465613283 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.979030021 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.900687117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.494272561 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.803805299 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.830797941 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.063191834 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.803023394 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.090847182 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.744770663 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.839104019 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.812344459 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.933731923 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.093918977 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.841528775 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.952814662 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.809649189 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.896458842 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.851335563 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.04196136 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.831530305 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.859609841 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.818915366 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.823422808 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.994002736 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.916527936 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.813240912 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.836998721 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.974375369 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.672193942 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.824392605 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.830886803 seconds)
  done (took 171.830056144 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.006412017 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.810529288 seconds)
    (2/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.80439934 seconds)
    (3/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.859232838 seconds)
    (4/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.927638307 seconds)
    (5/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.809237871 seconds)
    (6/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440712381 seconds)
    (7/114) benchmarking ("*", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.815278733 seconds)
    (8/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.006703034 seconds)
    (9/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.812127677 seconds)
    (10/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.804273067 seconds)
    (11/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.805287115 seconds)
    (12/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.804431179 seconds)
    (13/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.81638688 seconds)
    (14/114) benchmarking ("sqrt", "typename(Hermitian)", 256)...
    done (took 3.881343552 seconds)
    (15/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.807672548 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.818624364 seconds)
    (17/114) benchmarking ("*", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.806099674 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.829352174 seconds)
    (19/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.808759372 seconds)
    (20/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.804378002 seconds)
    (21/114) benchmarking ("*", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.804394253 seconds)
    (22/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.803896464 seconds)
    (23/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.80391517 seconds)
    (24/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.804195402 seconds)
    (25/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.804340998 seconds)
    (26/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 256)...
    done (took 1.804184702 seconds)
    (27/114) benchmarking ("log", "typename(Hermitian)", 1024)...
    done (took 22.28103303 seconds)
    (28/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.049923709 seconds)
    (29/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 256)...
    done (took 1.807021574 seconds)
    (30/114) benchmarking ("\\", "typename(Bidiagonal)", "Vector", 1024)...
    done (took 1.804926178 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.66062885 seconds)
    (32/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.822411891 seconds)
    (33/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 1024)...
    done (took 22.005696828 seconds)
    (34/114) benchmarking ("+", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.811402958 seconds)
    (35/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.897185682 seconds)
    (36/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.860760615 seconds)
    (37/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.92100336 seconds)
    (38/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.804996642 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.02219711 seconds)
    (40/114) benchmarking ("exp", "typename(Hermitian)", 256)...
    done (took 3.877788675 seconds)
    (41/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.806263807 seconds)
    (42/114) benchmarking ("*", "typename(Diagonal)", "Vector", 256)...
    done (took 1.805318963 seconds)
    (43/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.870069407 seconds)
    (44/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 1024)...
    done (took 1.819396836 seconds)
    (45/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 1024)...
    done (took 1.806546381 seconds)
    (46/114) benchmarking ("-", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.807879971 seconds)
    (47/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.812163725 seconds)
    (48/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.870995798 seconds)
    (49/114) benchmarking ("/", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 5.04644746 seconds)
    (50/114) benchmarking ("\\", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.806864109 seconds)
    (51/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.929566933 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.289330858 seconds)
    (53/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.806586344 seconds)
    (54/114) benchmarking ("*", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.806084252 seconds)
    (55/114) benchmarking ("*", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.806135268 seconds)
    (56/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.413030247 seconds)
    (57/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.806742283 seconds)
    (58/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.80692254 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.812558037 seconds)
    (60/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.812268747 seconds)
    (61/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.80678511 seconds)
    (62/114) benchmarking ("-", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.809400356 seconds)
    (63/114) benchmarking ("sqrt", "typename(UpperTriangular)", 256)...
    done (took 2.192716311 seconds)
    (64/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.878187171 seconds)
    (65/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.808577846 seconds)
    (66/114) benchmarking ("sqrt", "typename(UpperTriangular)", 1024)...
    done (took 22.319551673 seconds)
    (67/114) benchmarking ("sqrt", "typename(Hermitian)", 1024)...
    done (took 22.176416571 seconds)
    (68/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 256)...
    done (took 1.81218545 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.974573047 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.878569054 seconds)
    (71/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 256)...
    done (took 1.806880962 seconds)
    (72/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.806648264 seconds)
    (73/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.806399263 seconds)
    (74/114) benchmarking ("\\", "typename(SymTridiagonal)", "Vector", 1024)...
    done (took 1.807541731 seconds)
    (75/114) benchmarking ("*", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.806695793 seconds)
    (76/114) benchmarking ("\\", "typename(Tridiagonal)", "Vector", 1024)...
    done (took 1.808695195 seconds)
    (77/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.930158113 seconds)
    (78/114) benchmarking ("-", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.815827858 seconds)
    (79/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.942761394 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.891111302 seconds)
    (81/114) benchmarking ("-", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.928906304 seconds)
    (82/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.810866455 seconds)
    (83/114) benchmarking ("+", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.807387145 seconds)
    (84/114) benchmarking ("*", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.818563621 seconds)
    (85/114) benchmarking ("*", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.652664291 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.878873806 seconds)
    (87/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 1024)...
    done (took 1.845753468 seconds)
    (88/114) benchmarking ("*", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 4.635142991 seconds)
    (89/114) benchmarking ("\\", "typename(Diagonal)", "Vector", 1024)...
    done (took 1.811644683 seconds)
    (90/114) benchmarking ("sqrt", "typename(UnitUpperTriangular)", 256)...
    done (took 2.179991586 seconds)
    (91/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 4.59530262 seconds)
    (92/114) benchmarking ("\\", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.81134153 seconds)
    (93/114) benchmarking ("*", "typename(SymTridiagonal)", "Vector", 256)...
    done (took 1.807152544 seconds)
    (94/114) benchmarking ("\\", "typename(LowerTriangular)", "Vector", 1024)...
    done (took 1.820888288 seconds)
    (95/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 1024)...
    done (took 1.807138878 seconds)
    (96/114) benchmarking ("+", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.807519047 seconds)
    (97/114) benchmarking ("*", "typename(UpperTriangular)", "Vector", 256)...
    done (took 1.811011101 seconds)
    (98/114) benchmarking ("\\", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.888501637 seconds)
    (99/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 1024)...
    done (took 1.809028354 seconds)
    (100/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 1024)...
    done (took 1.929881096 seconds)
    (101/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.535954891 seconds)
    (102/114) benchmarking ("exp", "typename(Hermitian)", 1024)...
    done (took 22.253279624 seconds)
    (103/114) benchmarking ("+", "typename(SymTridiagonal)", "typename(SymTridiagonal)", 256)...
    done (took 1.81130154 seconds)
    (104/114) benchmarking ("/", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.807509358 seconds)
    (105/114) benchmarking ("*", "typename(Bidiagonal)", "typename(Bidiagonal)", 256)...
    done (took 1.816265116 seconds)
    (106/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.80828588 seconds)
    (107/114) benchmarking ("\\", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.890414505 seconds)
    (108/114) benchmarking ("+", "typename(UpperTriangular)", "typename(UpperTriangular)", 1024)...
    done (took 1.933294458 seconds)
    (109/114) benchmarking ("-", "typename(Diagonal)", "typename(Diagonal)", 256)...
    done (took 1.811204502 seconds)
    (110/114) benchmarking ("/", "typename(UpperTriangular)", "typename(UpperTriangular)", 256)...
    done (took 1.874576922 seconds)
    (111/114) benchmarking ("+", "typename(LowerTriangular)", "typename(LowerTriangular)", 256)...
    done (took 1.814755599 seconds)
    (112/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.809938134 seconds)
    (113/114) benchmarking ("log", "typename(Hermitian)", 256)...
    done (took 3.903827853 seconds)
    (114/114) benchmarking ("-", "typename(Tridiagonal)", "typename(Tridiagonal)", 256)...
    done (took 1.811209008 seconds)
  done (took 404.650916915 seconds)
done (took 785.870320203 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.403235092 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.375042681 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.467624438 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.397874333 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.369415592 seconds)
  done (took 13.761400767 seconds)
done (took 15.508089901 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("Vector{Bool}", "10-90")...
    done (took 1.824308796 seconds)
    (2/13) benchmarking ("BitVector", "10-90")...
    done (took 1.815962594 seconds)
    (3/13) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.868969769 seconds)
    (4/13) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 1.893181047 seconds)
    (5/13) benchmarking ("BitVector", "50-50")...
    done (took 1.827002392 seconds)
    (6/13) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.829398854 seconds)
    (7/13) benchmarking ("ispos", "Vector{Float64}")...
    done (took 1.891826197 seconds)
    (8/13) benchmarking ("BitVector", "90-10")...
    done (took 1.83150534 seconds)
    (9/13) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.860191775 seconds)
    (10/13) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.864242169 seconds)
    (11/13) benchmarking ("ispos", "Vector{Float32}")...
    done (took 1.895596205 seconds)
    (12/13) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 1.894282273 seconds)
    (13/13) benchmarking ("Vector{Bool}", "90-10")...
    done (took 1.834955301 seconds)
  done (took 25.880790269 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.82124551 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.952789252 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.031418505 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.85179153 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.819961808 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.026305467 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.875679075 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.944850586 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.952899127 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.040205019 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.033829574 seconds)
  done (took 23.102791832 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("BitVector", "10-90")...
    done (took 1.819746405 seconds)
    (2/11) benchmarking ("ispos", "Vector{Int64}")...
    done (took 1.963190625 seconds)
    (3/11) benchmarking ("ispos", "Vector{UInt8}")...
    done (took 2.030815214 seconds)
    (4/11) benchmarking ("BitVector", "50-50")...
    done (took 1.854755711 seconds)
    (5/11) benchmarking ("Vector{Bool}", "50-50")...
    done (took 1.819948646 seconds)
    (6/11) benchmarking ("ispos", "Vector{Float64}")...
    done (took 2.042393891 seconds)
    (7/11) benchmarking ("BitVector", "90-10")...
    done (took 1.882385688 seconds)
    (8/11) benchmarking ("ispos", "Vector{Bool}")...
    done (took 1.946446085 seconds)
    (9/11) benchmarking ("ispos", "Vector{Int8}")...
    done (took 1.956764404 seconds)
    (10/11) benchmarking ("ispos", "Vector{Float32}")...
    done (took 2.038784809 seconds)
    (11/11) benchmarking ("ispos", "Vector{UInt64}")...
    done (took 2.045739089 seconds)
  done (took 23.159053286 seconds)
done (took 73.890689149 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.815420295 seconds)
  done (took 3.56601336 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.830224998 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.958360671 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.815217227 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.816438822 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.815357344 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.815515717 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.817156962 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.815181507 seconds)
  done (took 16.433834901 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.81667584 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.815630096 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.815351853 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.815898975 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.815144523 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.816049498 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.81626002 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.816229909 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.816184295 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.81676172 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.816246198 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.815628235 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.815969776 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.815192648 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.815660076 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.816602941 seconds)
  done (took 30.807221979 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.817772951 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.815812019 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.815982799 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.816211608 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.816477921 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.816341895 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.817631997 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.816497448 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.816239145 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.817455688 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.816936161 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.816841041 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.818767565 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.816838371 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.817354592 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.816829137 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.817426811 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.816838233 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.821769642 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.817066705 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.818011307 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.817271176 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.817310876 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.818021773 seconds)
  done (took 45.366258545 seconds)
done (took 97.933278691 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.548006545 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.827957366 seconds)
  done (took 10.127945795 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.818349126 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.81797736 seconds)
  done (took 5.392326316 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.817756976 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.81797041 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.81792249 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.819182278 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.818607281 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.817500716 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.817332962 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.817051459 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.816811385 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.816540232 seconds)
  done (took 19.930830048 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.817162648 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.816672 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.817358867 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.817568204 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.817165115 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.817786762 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.817252161 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.818467105 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.818060816 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.818498889 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.817256425 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.818529738 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.817201894 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.81810827 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.817514014 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.817663922 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.818162423 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.817708293 seconds)
  done (took 34.470802453 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.817835741 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.818275123 seconds)
  done (took 5.388271971 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.817709343 seconds)
    (2/7) benchmarking "second"...
    done (took 1.818157926 seconds)
    (3/7) benchmarking "month"...
    done (took 1.817669033 seconds)
    (4/7) benchmarking "year"...
    done (took 1.818589679 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.818827876 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.818695288 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.8188574 seconds)
  done (took 14.482008819 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.819552615 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.970648029 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.021071942 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.451917767 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.818471253 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.820929944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.670778564 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.820960551 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.824105344 seconds)
  done (took 19.972206843 seconds)
done (took 111.518667204 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.643987796 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.822847205 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.083481816 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.950356342 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.844601783 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.159985414 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.854465501 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.47277024 seconds)
done (took 42.588002232 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.864169981 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Matrix{Float64}(100000000, 1)")...
    done (took 6.816125178 seconds)
    (2/3) benchmarking ("display", "Vector{Float64}(100000000,)")...
    done (took 6.861838413 seconds)
    (3/3) benchmarking ("display", "Matrix{Float64}(10000, 10000)")...
    done (took 6.860740778 seconds)
  done (took 22.293413052 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.814653901 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.110569753 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.840176475 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 3.811391391 seconds)
  done (took 22.347108351 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.191395179 seconds)
    (2/2) benchmarking "read"...
    done (took 2.166969188 seconds)
  done (took 6.114777878 seconds)
done (took 59.377916869 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.817743568 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.816275949 seconds)
    (3/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.817401519 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.816504657 seconds)
    (5/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.816687395 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.817599082 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.817571246 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.81823834 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.817610866 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.817097262 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.816894758 seconds)
    (12/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.818084249 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.818445711 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.817989554 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.817648877 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.817862431 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.818086137 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818591518 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.817627715 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.818126504 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.817581417 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.819175771 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.818253984 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.818697458 seconds)
  done (took 45.379137888 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.817742177 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.818764842 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.817770789 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.817745302 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.818482637 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.817745534 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.817973253 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.818060726 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.817318562 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.81797854 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.818301527 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.818714243 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.81911163 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.818804658 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818542258 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.818870296 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.819342323 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.819108466 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.819214027 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.818304676 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.819153537 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.819308729 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.8190051 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.824142876 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.824375881 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.823882677 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.824681635 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.827353063 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.823303046 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.824670595 seconds)
  done (took 56.352907503 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.824603479 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.824653207 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.824527191 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.82435534 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.824772676 seconds)
    (6/72) benchmarking ("isnan", "ComplexF64")...
    done (took 1.825609208 seconds)
    (7/72) benchmarking ("isodd", "UInt64")...
    done (took 1.826283751 seconds)
    (8/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.824720877 seconds)
    (9/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.824663866 seconds)
    (10/72) benchmarking ("isfinite", "ComplexF32")...
    done (took 1.824291426 seconds)
    (11/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.825557682 seconds)
    (12/72) benchmarking ("isnan", "Float64")...
    done (took 1.825387042 seconds)
    (13/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.824900336 seconds)
    (14/72) benchmarking ("isequal", "Float64")...
    done (took 1.825271122 seconds)
    (15/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.825137749 seconds)
    (16/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.825681302 seconds)
    (17/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.825724395 seconds)
    (18/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.824817591 seconds)
    (19/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.825420668 seconds)
    (20/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.826749594 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.826124106 seconds)
    (22/72) benchmarking ("isodd", "Int64")...
    done (took 1.826569009 seconds)
    (23/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.826584392 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.825304946 seconds)
    (25/72) benchmarking ("isequal", "ComplexF64")...
    done (took 1.825016547 seconds)
    (26/72) benchmarking ("isequal", "UInt64")...
    done (took 1.825853536 seconds)
    (27/72) benchmarking ("isinteger", "Int64")...
    done (took 1.826048966 seconds)
    (28/72) benchmarking ("isfinite", "Float64")...
    done (took 1.825306993 seconds)
    (29/72) benchmarking ("isequal", "Int64")...
    done (took 1.825556081 seconds)
    (30/72) benchmarking ("isinf", "Float64")...
    done (took 1.825855978 seconds)
    (31/72) benchmarking ("isless", "UInt64")...
    done (took 1.826994277 seconds)
    (32/72) benchmarking ("isequal", "BigInt")...
    done (took 1.826144284 seconds)
    (33/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.826363487 seconds)
    (34/72) benchmarking ("isless", "Float32")...
    done (took 1.826082961 seconds)
    (35/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.826200406 seconds)
    (36/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.826260518 seconds)
    (37/72) benchmarking ("isless", "Float64")...
    done (took 1.825874341 seconds)
    (38/72) benchmarking ("iseven", "BigInt")...
    done (took 1.826215328 seconds)
    (39/72) benchmarking ("isfinite", "ComplexF64")...
    done (took 1.826268986 seconds)
    (40/72) benchmarking ("isnan", "BigInt")...
    done (took 1.826311661 seconds)
    (41/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.826508485 seconds)
    (42/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.826520304 seconds)
    (43/72) benchmarking ("isnan", "Float32")...
    done (took 1.825904991 seconds)
    (44/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.826869107 seconds)
    (45/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.826254766 seconds)
    (46/72) benchmarking ("iseven", "Int64")...
    done (took 1.826126913 seconds)
    (47/72) benchmarking ("isinteger", "Float64")...
    done (took 1.826943461 seconds)
    (48/72) benchmarking ("isnan", "ComplexF32")...
    done (took 1.826987572 seconds)
    (49/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.826899241 seconds)
    (50/72) benchmarking ("isinf", "Int64")...
    done (took 1.826903792 seconds)
    (51/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.826858127 seconds)
    (52/72) benchmarking ("isinf", "ComplexF32")...
    done (took 1.827571874 seconds)
    (53/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.827731553 seconds)
    (54/72) benchmarking ("isinteger", "ComplexF64")...
    done (took 1.826718936 seconds)
    (55/72) benchmarking ("isnan", "Int64")...
    done (took 1.827140286 seconds)
    (56/72) benchmarking ("isinteger", "Float32")...
    done (took 1.826083576 seconds)
    (57/72) benchmarking ("isnan", "UInt64")...
    done (took 1.826288345 seconds)
    (58/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.827693519 seconds)
    (59/72) benchmarking ("isless", "Int64")...
    done (took 1.827236157 seconds)
    (60/72) benchmarking ("isinf", "BigInt")...
    done (took 1.827792379 seconds)
    (61/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.827751481 seconds)
    (62/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.827608384 seconds)
    (63/72) benchmarking ("isinf", "ComplexF64")...
    done (took 1.827738752 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.828415311 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.828896322 seconds)
    (66/72) benchmarking ("isinteger", "ComplexF32")...
    done (took 1.829088312 seconds)
    (67/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.828934844 seconds)
    (68/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.828105109 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.828091785 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.828071788 seconds)
    (71/72) benchmarking ("isequal", "ComplexF32")...
    done (took 1.828758215 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.82827832 seconds)
  done (took 133.264277297 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.827809768 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829204225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.828023565 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.827706974 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.828361444 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.828440638 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.829014551 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828479301 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.828612586 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.82886217 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.828417468 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829548555 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.828954048 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.828454102 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.828657754 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828596066 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.829096052 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829596164 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.828993689 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.828854534 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.828645298 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.829267218 seconds)
  done (took 41.994785657 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.829295936 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.829115419 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.828771251 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.828422176 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.829299789 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.830425466 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.82870267 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.829060145 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.829542665 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.82925879 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.830640707 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829375749 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.830076897 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829545264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829608295 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.829710247 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.830618846 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.830791923 seconds)
  done (took 34.696407174 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.830991365 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.829904185 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.830376025 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830608893 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.830979801 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.830764538 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830902152 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.831250945 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.831166496 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.831430744 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.832214196 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831414811 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.830981734 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831128904 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.832188141 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.832362701 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.831748544 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831704467 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.832484359 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831831633 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.832287312 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83139171 seconds)
  done (took 42.055166922 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.83097556 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.830928731 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.831526966 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.832326993 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.831693086 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831233931 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.831393063 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.832286507 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.832357155 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.832441496 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.831474137 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.832596324 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.831707016 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.832218496 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.832339541 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.831974975 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.83154989 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835610322 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832194819 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.832718974 seconds)
  done (took 38.408426546 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.832338459 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832867852 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832277293 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832928587 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832359333 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.831592192 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83291907 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.832377941 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.832168052 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.832479245 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833043785 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.833259998 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833475117 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834563313 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833177621 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.833668049 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.833912183 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83390099 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.833763421 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.833781087 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.835032308 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.834264956 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.834765077 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834054459 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.834248331 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83420627 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.834205559 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.834219921 seconds)
  done (took 53.104529431 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.833963011 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.834054896 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.834112449 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.83440587 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.833804023 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.834341549 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.833917025 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.8350531 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.83370541 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.834408897 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.834189991 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.833810601 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834190444 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.8341852 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.834504543 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.833923697 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833921998 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.835555339 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.834929471 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834945561 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.834261552 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835332488 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.835388433 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.835086198 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.835313079 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.835165923 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835697916 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.835910946 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.83514093 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.8351993 seconds)
  done (took 56.808381248 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.855952274 seconds)
    (2/2) benchmarking "in"...
    done (took 1.85546389 seconds)
  done (took 5.481752145 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.835735172 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.835219995 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.83526992 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.836109315 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.836418598 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.836335143 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836034902 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.836650339 seconds)
  done (took 16.457788831 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("sub", "ComplexF32", "UInt64")...
    done (took 1.836464255 seconds)
    (2/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF32")...
    done (took 1.838644956 seconds)
    (3/596) benchmarking ("div", "ComplexF32", "UInt64")...
    done (took 1.836369616 seconds)
    (4/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.836557667 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.836285405 seconds)
    (6/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.844073096 seconds)
    (7/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.83699714 seconds)
    (8/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.836704657 seconds)
    (9/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.837995794 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.836518755 seconds)
    (11/596) benchmarking ("div", "ComplexF64", "Float32")...
    done (took 1.84177994 seconds)
    (12/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.840306471 seconds)
    (13/596) benchmarking ("sub", "ComplexF64", "Int64")...
    done (took 1.845591693 seconds)
    (14/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.841379623 seconds)
    (15/596) benchmarking ("add", "Complex{UInt64}", "ComplexF32")...
    done (took 1.837669771 seconds)
    (16/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.837233343 seconds)
    (17/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.837226004 seconds)
    (18/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.839875602 seconds)
    (19/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.83790622 seconds)
    (20/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.837261897 seconds)
    (21/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.839724687 seconds)
    (22/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.837242903 seconds)
    (23/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.837443369 seconds)
    (24/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.836884471 seconds)
    (25/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.837650473 seconds)
    (26/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.839317273 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.847255514 seconds)
    (28/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.83895624 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.838609156 seconds)
    (30/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.838732857 seconds)
    (31/596) benchmarking ("mul", "ComplexF64", "Complex{BigInt}")...
    done (took 1.844530441 seconds)
    (32/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.83846421 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.837421612 seconds)
    (34/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.839503353 seconds)
    (35/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.838797236 seconds)
    (36/596) benchmarking ("sub", "ComplexF32", "Float32")...
    done (took 1.838303207 seconds)
    (37/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.845040004 seconds)
    (38/596) benchmarking ("mul", "ComplexF64", "ComplexF64")...
    done (took 1.838338033 seconds)
    (39/596) benchmarking ("div", "ComplexF64", "Complex{Int64}")...
    done (took 1.837753321 seconds)
    (40/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.838581732 seconds)
    (41/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.840262429 seconds)
    (42/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.840344265 seconds)
    (43/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.841995016 seconds)
    (44/596) benchmarking ("div", "BigFloat", "ComplexF32")...
    done (took 1.846356005 seconds)
    (45/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.839059862 seconds)
    (46/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.838901721 seconds)
    (47/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.838496608 seconds)
    (48/596) benchmarking ("add", "ComplexF32", "ComplexF64")...
    done (took 1.839684513 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.839672939 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.842419798 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.848009293 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.840196532 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.83901146 seconds)
    (54/596) benchmarking ("mul", "Int64", "ComplexF32")...
    done (took 1.838830076 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.841389901 seconds)
    (56/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.840039401 seconds)
    (57/596) benchmarking ("div", "ComplexF64", "ComplexF32")...
    done (took 1.839623862 seconds)
    (58/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.841909583 seconds)
    (59/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846282186 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.84695973 seconds)
    (61/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.843707758 seconds)
    (62/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.860750593 seconds)
    (63/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.848774822 seconds)
    (64/596) benchmarking ("div", "Int64", "ComplexF64")...
    done (took 1.839592705 seconds)
    (65/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.839739804 seconds)
    (66/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.848997121 seconds)
    (67/596) benchmarking ("sub", "ComplexF64", "ComplexF32")...
    done (took 1.863581069 seconds)
    (68/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.84152557 seconds)
    (69/596) benchmarking ("sub", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.841527613 seconds)
    (70/596) benchmarking ("sub", "UInt64", "ComplexF32")...
    done (took 1.839928114 seconds)
    (71/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.848188605 seconds)
    (72/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.840626323 seconds)
    (73/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.840660167 seconds)
    (74/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.840697446 seconds)
    (75/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.854069791 seconds)
    (76/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.84842568 seconds)
    (77/596) benchmarking ("mul", "Int64", "ComplexF64")...
    done (took 1.84072361 seconds)
    (78/596) benchmarking ("sub", "ComplexF32", "ComplexF32")...
    done (took 1.840572796 seconds)
    (79/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.840915601 seconds)
    (80/596) benchmarking ("div", "ComplexF64", "UInt64")...
    done (took 1.841123106 seconds)
    (81/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.842707565 seconds)
    (82/596) benchmarking ("div", "Complex{UInt64}", "ComplexF64")...
    done (took 1.839972017 seconds)
    (83/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.841376335 seconds)
    (84/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF64")...
    done (took 1.841033962 seconds)
    (85/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.850345133 seconds)
    (86/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.865264224 seconds)
    (87/596) benchmarking ("div", "ComplexF64", "Float64")...
    done (took 1.840751201 seconds)
    (88/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.841637367 seconds)
    (89/596) benchmarking ("add", "ComplexF32", "BigFloat")...
    done (took 1.841941954 seconds)
    (90/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.841464982 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.845491716 seconds)
    (92/596) benchmarking ("sub", "BigInt", "ComplexF32")...
    done (took 1.844030608 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.841001552 seconds)
    (94/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.841522299 seconds)
    (95/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.842137351 seconds)
    (96/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.843983376 seconds)
    (97/596) benchmarking ("mul", "Float64", "ComplexF32")...
    done (took 1.84261518 seconds)
    (98/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.84157911 seconds)
    (99/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.84044969 seconds)
    (100/596) benchmarking ("div", "Complex{BigInt}", "ComplexF64")...
    done (took 1.851125575 seconds)
    (101/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.842856784 seconds)
    (102/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.843376288 seconds)
    (103/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.844958061 seconds)
    (104/596) benchmarking ("mul", "ComplexF64", "Float32")...
    done (took 1.850805427 seconds)
    (105/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.84272865 seconds)
    (106/596) benchmarking ("div", "Complex{Int64}", "ComplexF64")...
    done (took 1.842778032 seconds)
    (107/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.843645887 seconds)
    (108/596) benchmarking ("add", "Float64", "ComplexF64")...
    done (took 1.842307978 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.849725041 seconds)
    (110/596) benchmarking ("div", "Float64", "ComplexF32")...
    done (took 1.843245337 seconds)
    (111/596) benchmarking ("mul", "UInt64", "ComplexF64")...
    done (took 1.84233922 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.843492015 seconds)
    (113/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.843359686 seconds)
    (114/596) benchmarking ("add", "ComplexF64", "UInt64")...
    done (took 1.848257488 seconds)
    (115/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.842122912 seconds)
    (116/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.846008873 seconds)
    (117/596) benchmarking ("sub", "ComplexF64", "Float64")...
    done (took 1.851061174 seconds)
    (118/596) benchmarking ("div", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.851095953 seconds)
    (119/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.843714242 seconds)
    (120/596) benchmarking ("div", "ComplexF32", "BigFloat")...
    done (took 1.846664356 seconds)
    (121/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.846508319 seconds)
    (122/596) benchmarking ("sub", "BigInt", "ComplexF64")...
    done (took 1.845640239 seconds)
    (123/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852608591 seconds)
    (124/596) benchmarking ("mul", "ComplexF64", "Float64")...
    done (took 1.867157144 seconds)
    (125/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.842985798 seconds)
    (126/596) benchmarking ("mul", "ComplexF32", "BigInt")...
    done (took 1.846453832 seconds)
    (127/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.84805426 seconds)
    (128/596) benchmarking ("sub", "Float64", "ComplexF32")...
    done (took 1.855523117 seconds)
    (129/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.846757882 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.84468135 seconds)
    (131/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.846395719 seconds)
    (132/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.84324096 seconds)
    (133/596) benchmarking ("mul", "ComplexF32", "Int64")...
    done (took 1.84386419 seconds)
    (134/596) benchmarking ("sub", "BigFloat", "ComplexF64")...
    done (took 1.845153082 seconds)
    (135/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.843938028 seconds)
    (136/596) benchmarking ("add", "Complex{UInt64}", "ComplexF64")...
    done (took 1.84332738 seconds)
    (137/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.843953391 seconds)
    (138/596) benchmarking ("div", "UInt64", "ComplexF64")...
    done (took 1.844245395 seconds)
    (139/596) benchmarking ("mul", "ComplexF32", "UInt64")...
    done (took 1.843439876 seconds)
    (140/596) benchmarking ("add", "ComplexF64", "Complex{UInt64}")...
    done (took 1.844886105 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.846201531 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.845096171 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.846123049 seconds)
    (144/596) benchmarking ("sub", "UInt64", "ComplexF64")...
    done (took 1.845022489 seconds)
    (145/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.848087942 seconds)
    (146/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.844093944 seconds)
    (147/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.846114491 seconds)
    (148/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.851990742 seconds)
    (149/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.845395774 seconds)
    (150/596) benchmarking ("mul", "ComplexF64", "Complex{UInt64}")...
    done (took 1.844807906 seconds)
    (151/596) benchmarking ("add", "ComplexF32", "Int64")...
    done (took 1.844875582 seconds)
    (152/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.846965902 seconds)
    (153/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.846663117 seconds)
    (154/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.84536334 seconds)
    (155/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.844947373 seconds)
    (156/596) benchmarking ("add", "Int64", "ComplexF32")...
    done (took 1.845008219 seconds)
    (157/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.845202184 seconds)
    (158/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.845262934 seconds)
    (159/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.847856322 seconds)
    (160/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.845491472 seconds)
    (161/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.845322305 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.846155077 seconds)
    (163/596) benchmarking ("add", "ComplexF32", "UInt64")...
    done (took 1.849804841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.845827652 seconds)
    (165/596) benchmarking ("sub", "Int64", "ComplexF64")...
    done (took 1.845760191 seconds)
    (166/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.845249895 seconds)
    (167/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.84591279 seconds)
    (168/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.846420811 seconds)
    (169/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847325378 seconds)
    (170/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.846072267 seconds)
    (171/596) benchmarking ("add", "ComplexF32", "BigInt")...
    done (took 1.848384074 seconds)
    (172/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.846417849 seconds)
    (173/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.85087624 seconds)
    (174/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.84664368 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.846331488 seconds)
    (176/596) benchmarking ("sub", "ComplexF32", "ComplexF64")...
    done (took 1.846249705 seconds)
    (177/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.846909462 seconds)
    (178/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.845711921 seconds)
    (179/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.849715386 seconds)
    (180/596) benchmarking ("add", "ComplexF64", "Complex{BigInt}")...
    done (took 1.857874146 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.849809528 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.855335066 seconds)
    (183/596) benchmarking ("div", "ComplexF32", "Float32")...
    done (took 1.847022305 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.852945987 seconds)
    (185/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.846419284 seconds)
    (186/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.847499549 seconds)
    (187/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.847550086 seconds)
    (188/596) benchmarking ("add", "ComplexF64", "Float32")...
    done (took 1.847154785 seconds)
    (189/596) benchmarking ("div", "ComplexF64", "Complex{UInt64}")...
    done (took 1.846765862 seconds)
    (190/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.846795241 seconds)
    (191/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF32")...
    done (took 1.84678602 seconds)
    (192/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.850212702 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868288177 seconds)
    (194/596) benchmarking ("add", "BigInt", "ComplexF32")...
    done (took 1.85709913 seconds)
    (195/596) benchmarking ("add", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.848591147 seconds)
    (196/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.848123636 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.851493662 seconds)
    (198/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.852246796 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.852659326 seconds)
    (200/596) benchmarking ("mul", "ComplexF32", "Float32")...
    done (took 1.84771396 seconds)
    (201/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.848012129 seconds)
    (202/596) benchmarking ("mul", "BigFloat", "ComplexF64")...
    done (took 1.849615349 seconds)
    (203/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.8475175 seconds)
    (204/596) benchmarking ("mul", "Float64", "ComplexF64")...
    done (took 1.848249626 seconds)
    (205/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.848401793 seconds)
    (206/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.850572749 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.847349948 seconds)
    (208/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.848063923 seconds)
    (209/596) benchmarking ("mul", "BigInt", "ComplexF64")...
    done (took 1.850892559 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.84761062 seconds)
    (211/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.848010012 seconds)
    (212/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.847922195 seconds)
    (213/596) benchmarking ("sub", "Float32", "ComplexF32")...
    done (took 1.848852765 seconds)
    (214/596) benchmarking ("add", "ComplexF64", "BigFloat")...
    done (took 1.850352061 seconds)
    (215/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.849772935 seconds)
    (216/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.847159496 seconds)
    (217/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.848646161 seconds)
    (218/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.848902237 seconds)
    (219/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.856378421 seconds)
    (220/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.851439237 seconds)
    (221/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.849712756 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.848865797 seconds)
    (223/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.850587286 seconds)
    (224/596) benchmarking ("add", "Complex{Int64}", "ComplexF64")...
    done (took 1.849162576 seconds)
    (225/596) benchmarking ("add", "ComplexF32", "Complex{UInt64}")...
    done (took 1.849827963 seconds)
    (226/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.850311696 seconds)
    (227/596) benchmarking ("mul", "ComplexF64", "BigInt")...
    done (took 1.852239992 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.849273607 seconds)
    (229/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.852252083 seconds)
    (230/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.856438984 seconds)
    (231/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.849236 seconds)
    (232/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.848639314 seconds)
    (233/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.848841544 seconds)
    (234/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.849197243 seconds)
    (235/596) benchmarking ("mul", "ComplexF32", "BigFloat")...
    done (took 1.851207285 seconds)
    (236/596) benchmarking ("mul", "Complex{Int64}", "ComplexF32")...
    done (took 1.850558061 seconds)
    (237/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.852191814 seconds)
    (238/596) benchmarking ("add", "Float32", "ComplexF32")...
    done (took 1.857727556 seconds)
    (239/596) benchmarking ("sub", "ComplexF32", "Complex{BigInt}")...
    done (took 1.851635235 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.849722334 seconds)
    (241/596) benchmarking ("div", "ComplexF64", "BigInt")...
    done (took 1.855573459 seconds)
    (242/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.849294907 seconds)
    (243/596) benchmarking ("add", "ComplexF64", "BigInt")...
    done (took 1.851730155 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.849274632 seconds)
    (245/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.850032672 seconds)
    (246/596) benchmarking ("add", "Float32", "ComplexF64")...
    done (took 1.850289011 seconds)
    (247/596) benchmarking ("sub", "ComplexF32", "BigFloat")...
    done (took 1.85074582 seconds)
    (248/596) benchmarking ("mul", "Float32", "ComplexF64")...
    done (took 1.85007716 seconds)
    (249/596) benchmarking ("sub", "Int64", "ComplexF32")...
    done (took 1.850565365 seconds)
    (250/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.857502623 seconds)
    (251/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.851106554 seconds)
    (252/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.850201429 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.850577662 seconds)
    (254/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.852909188 seconds)
    (255/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.850813264 seconds)
    (256/596) benchmarking ("mul", "BigFloat", "ComplexF32")...
    done (took 1.852491501 seconds)
    (257/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.850170699 seconds)
    (258/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.852785459 seconds)
    (259/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.859069539 seconds)
    (260/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.856868768 seconds)
    (261/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.850401064 seconds)
    (262/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.854488847 seconds)
    (263/596) benchmarking ("mul", "ComplexF64", "BigFloat")...
    done (took 1.852352652 seconds)
    (264/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.851318739 seconds)
    (265/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.855356558 seconds)
    (266/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.851929108 seconds)
    (267/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.864147271 seconds)
    (268/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.860554135 seconds)
    (269/596) benchmarking ("mul", "UInt64", "ComplexF32")...
    done (took 1.851255039 seconds)
    (270/596) benchmarking ("sub", "ComplexF32", "Complex{Int64}")...
    done (took 1.85210367 seconds)
    (271/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.85089975 seconds)
    (272/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.853377642 seconds)
    (273/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.851417326 seconds)
    (274/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.851139607 seconds)
    (275/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.858541551 seconds)
    (276/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.851400977 seconds)
    (277/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.852436373 seconds)
    (278/596) benchmarking ("sub", "ComplexF32", "Complex{UInt64}")...
    done (took 1.856213456 seconds)
    (279/596) benchmarking ("add", "Float64", "ComplexF32")...
    done (took 1.850981536 seconds)
    (280/596) benchmarking ("sub", "Complex{Int64}", "ComplexF64")...
    done (took 1.851927769 seconds)
    (281/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.858517279 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.853303248 seconds)
    (283/596) benchmarking ("add", "ComplexF32", "Complex{BigInt}")...
    done (took 1.855274044 seconds)
    (284/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.852840355 seconds)
    (285/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.853260456 seconds)
    (286/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.852050868 seconds)
    (287/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.852651531 seconds)
    (288/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.854371483 seconds)
    (289/596) benchmarking ("add", "ComplexF64", "ComplexF64")...
    done (took 1.8529318 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.852227977 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.856510631 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.852089562 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.852561726 seconds)
    (294/596) benchmarking ("add", "ComplexF32", "ComplexF32")...
    done (took 1.853637127 seconds)
    (295/596) benchmarking ("div", "ComplexF32", "Complex{BigInt}")...
    done (took 1.861280841 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.85200071 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.852617265 seconds)
    (298/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.859805441 seconds)
    (299/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.854126152 seconds)
    (300/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.852080504 seconds)
    (301/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.854412105 seconds)
    (302/596) benchmarking ("mul", "ComplexF32", "Complex{Int64}")...
    done (took 1.852604115 seconds)
    (303/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.853184965 seconds)
    (304/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.853553787 seconds)
    (305/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.852696844 seconds)
    (306/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.85497495 seconds)
    (307/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.852944225 seconds)
    (308/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.855815418 seconds)
    (309/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.864249456 seconds)
    (310/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.856171303 seconds)
    (311/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.86433741 seconds)
    (312/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.855417616 seconds)
    (313/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.863859654 seconds)
    (314/596) benchmarking ("sub", "Complex{UInt64}", "ComplexF64")...
    done (took 1.853010896 seconds)
    (315/596) benchmarking ("div", "Complex{Int64}", "ComplexF32")...
    done (took 1.854532468 seconds)
    (316/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.85355449 seconds)
    (317/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.85641516 seconds)
    (318/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.861912854 seconds)
    (319/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.85363114 seconds)
    (320/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.852747711 seconds)
    (321/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.861830176 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.854952663 seconds)
    (323/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.856015707 seconds)
    (324/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.858424605 seconds)
    (325/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.85558174 seconds)
    (326/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.855286486 seconds)
    (327/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.85687373 seconds)
    (328/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.856158521 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.86009724 seconds)
    (330/596) benchmarking ("add", "Complex{BigInt}", "ComplexF64")...
    done (took 1.857223814 seconds)
    (331/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.854554002 seconds)
    (332/596) benchmarking ("add", "Int64", "ComplexF64")...
    done (took 1.855399279 seconds)
    (333/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.855557368 seconds)
    (334/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.853378749 seconds)
    (335/596) benchmarking ("add", "Complex{BigInt}", "ComplexF32")...
    done (took 1.857764237 seconds)
    (336/596) benchmarking ("sub", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.856504012 seconds)
    (337/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.855279088 seconds)
    (338/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.854737905 seconds)
    (339/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.855351446 seconds)
    (340/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.855392275 seconds)
    (341/596) benchmarking ("mul", "ComplexF32", "Float64")...
    done (took 1.85538882 seconds)
    (342/596) benchmarking ("add", "ComplexF64", "Float64")...
    done (took 1.854502761 seconds)
    (343/596) benchmarking ("mul", "Complex{Int64}", "ComplexF64")...
    done (took 1.855028968 seconds)
    (344/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.855893002 seconds)
    (345/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.855604608 seconds)
    (346/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.863169051 seconds)
    (347/596) benchmarking ("mul", "ComplexF64", "Int64")...
    done (took 1.85539052 seconds)
    (348/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.856778849 seconds)
    (349/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.859787364 seconds)
    (350/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.855828586 seconds)
    (351/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.864077154 seconds)
    (352/596) benchmarking ("div", "ComplexF32", "ComplexF64")...
    done (took 1.856398785 seconds)
    (353/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.855856564 seconds)
    (354/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.857013869 seconds)
    (355/596) benchmarking ("mul", "Float32", "ComplexF32")...
    done (took 1.856934769 seconds)
    (356/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.858450666 seconds)
    (357/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.856571262 seconds)
    (358/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.856033306 seconds)
    (359/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.856133635 seconds)
    (360/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.856739572 seconds)
    (361/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.857671342 seconds)
    (362/596) benchmarking ("div", "BigFloat", "ComplexF64")...
    done (took 1.86779854 seconds)
    (363/596) benchmarking ("div", "BigInt", "ComplexF32")...
    done (took 1.863364225 seconds)
    (364/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.85942391 seconds)
    (365/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.857889675 seconds)
    (366/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.856324708 seconds)
    (367/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.857252648 seconds)
    (368/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865953709 seconds)
    (369/596) benchmarking ("div", "Complex{UInt64}", "ComplexF32")...
    done (took 1.880334767 seconds)
    (370/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.85648998 seconds)
    (371/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.858075955 seconds)
    (372/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.861200582 seconds)
    (373/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF64")...
    done (took 1.863812976 seconds)
    (374/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.859018501 seconds)
    (375/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.86332846 seconds)
    (376/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.861109855 seconds)
    (377/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.865451277 seconds)
    (378/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.858934233 seconds)
    (379/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.856629809 seconds)
    (380/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.859983171 seconds)
    (381/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.869787707 seconds)
    (382/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857015305 seconds)
    (383/596) benchmarking ("div", "ComplexF32", "Complex{Int64}")...
    done (took 1.856988064 seconds)
    (384/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.857640093 seconds)
    (385/596) benchmarking ("mul", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.862376861 seconds)
    (386/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.858833859 seconds)
    (387/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.857896364 seconds)
    (388/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.859146253 seconds)
    (389/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.859572436 seconds)
    (390/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.859380706 seconds)
    (391/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.870164227 seconds)
    (392/596) benchmarking ("sub", "ComplexF32", "Int64")...
    done (took 1.859405228 seconds)
    (393/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.85866457 seconds)
    (394/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.857655139 seconds)
    (395/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.858288911 seconds)
    (396/596) benchmarking ("sub", "ComplexF64", "Complex{Int64}")...
    done (took 1.858162588 seconds)
    (397/596) benchmarking ("sub", "Complex{Int64}", "ComplexF32")...
    done (took 1.858723216 seconds)
    (398/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.858446588 seconds)
    (399/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.859184731 seconds)
    (400/596) benchmarking ("sub", "ComplexF64", "Float32")...
    done (took 1.858155424 seconds)
    (401/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.858400045 seconds)
    (402/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.859869418 seconds)
    (403/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.862901121 seconds)
    (404/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.857459518 seconds)
    (405/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862210519 seconds)
    (406/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.868171779 seconds)
    (407/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.859763193 seconds)
    (408/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.859244988 seconds)
    (409/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.86099651 seconds)
    (410/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.859162963 seconds)
    (411/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.861064958 seconds)
    (412/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.860046366 seconds)
    (413/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.858347677 seconds)
    (414/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.861071867 seconds)
    (415/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.859728813 seconds)
    (416/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.860800299 seconds)
    (417/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.862243074 seconds)
    (418/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.869188192 seconds)
    (419/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.85949903 seconds)
    (420/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.859434675 seconds)
    (421/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.859976346 seconds)
    (422/596) benchmarking ("mul", "BigInt", "ComplexF32")...
    done (took 1.863266154 seconds)
    (423/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.858722305 seconds)
    (424/596) benchmarking ("mul", "ComplexF32", "ComplexF64")...
    done (took 1.859654323 seconds)
    (425/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.862141177 seconds)
    (426/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.868637055 seconds)
    (427/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.862792671 seconds)
    (428/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.870889936 seconds)
    (429/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.870180983 seconds)
    (430/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.860264101 seconds)
    (431/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.86033918 seconds)
    (432/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867533989 seconds)
    (433/596) benchmarking ("sub", "ComplexF64", "UInt64")...
    done (took 1.869183769 seconds)
    (434/596) benchmarking ("sub", "ComplexF64", "ComplexF64")...
    done (took 1.860650383 seconds)
    (435/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.860628195 seconds)
    (436/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.860951191 seconds)
    (437/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.862846689 seconds)
    (438/596) benchmarking ("add", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.862969414 seconds)
    (439/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.861213901 seconds)
    (440/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.860795105 seconds)
    (441/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.86216318 seconds)
    (442/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866311536 seconds)
    (443/596) benchmarking ("div", "ComplexF32", "Int64")...
    done (took 1.861562543 seconds)
    (444/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.861144409 seconds)
    (445/596) benchmarking ("div", "Float32", "ComplexF64")...
    done (took 1.861553343 seconds)
    (446/596) benchmarking ("add", "UInt64", "ComplexF32")...
    done (took 1.861779063 seconds)
    (447/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.863186955 seconds)
    (448/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.863146443 seconds)
    (449/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.866975816 seconds)
    (450/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.861316654 seconds)
    (451/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.861538592 seconds)
    (452/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.859731481 seconds)
    (453/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.861494595 seconds)
    (454/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.862073911 seconds)
    (455/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.863621193 seconds)
    (456/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.86117572 seconds)
    (457/596) benchmarking ("div", "UInt64", "ComplexF32")...
    done (took 1.862234668 seconds)
    (458/596) benchmarking ("sub", "ComplexF32", "BigInt")...
    done (took 1.863562398 seconds)
    (459/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.863288254 seconds)
    (460/596) benchmarking ("mul", "ComplexF32", "Complex{UInt64}")...
    done (took 1.867300966 seconds)
    (461/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.86202628 seconds)
    (462/596) benchmarking ("mul", "Complex{UInt64}", "ComplexF32")...
    done (took 1.861685986 seconds)
    (463/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.862877488 seconds)
    (464/596) benchmarking ("div", "ComplexF32", "ComplexF32")...
    done (took 1.861960128 seconds)
    (465/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.862652517 seconds)
    (466/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.862312391 seconds)
    (467/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.862449807 seconds)
    (468/596) benchmarking ("div", "ComplexF32", "Complex{UInt64}")...
    done (took 1.861771394 seconds)
    (469/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.866180549 seconds)
    (470/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.86856457 seconds)
    (471/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.861883902 seconds)
    (472/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.863219993 seconds)
    (473/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.862888511 seconds)
    (474/596) benchmarking ("div", "ComplexF64", "BigFloat")...
    done (took 1.86655862 seconds)
    (475/596) benchmarking ("mul", "ComplexF64", "UInt64")...
    done (took 1.862650232 seconds)
    (476/596) benchmarking ("add", "ComplexF64", "ComplexF32")...
    done (took 1.86138319 seconds)
    (477/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.862853544 seconds)
    (478/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.862827362 seconds)
    (479/596) benchmarking ("div", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.870531876 seconds)
    (480/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.863071616 seconds)
    (481/596) benchmarking ("sub", "ComplexF32", "Float64")...
    done (took 1.862450166 seconds)
    (482/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.862558147 seconds)
    (483/596) benchmarking ("add", "ComplexF32", "Complex{Int64}")...
    done (took 1.86361831 seconds)
    (484/596) benchmarking ("div", "ComplexF32", "BigInt")...
    done (took 1.868386656 seconds)
    (485/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.864285293 seconds)
    (486/596) benchmarking ("mul", "ComplexF32", "Complex{BigFloat}")...
    done (took 1.868057791 seconds)
    (487/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.863886572 seconds)
    (488/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.863618194 seconds)
    (489/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.864310373 seconds)
    (490/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.867528897 seconds)
    (491/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.872529533 seconds)
    (492/596) benchmarking ("sub", "Float64", "ComplexF64")...
    done (took 1.86780849 seconds)
    (493/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.86744226 seconds)
    (494/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.87194028 seconds)
    (495/596) benchmarking ("mul", "Complex{BigFloat}", "ComplexF64")...
    done (took 1.868345045 seconds)
    (496/596) benchmarking ("add", "BigFloat", "ComplexF32")...
    done (took 1.865952306 seconds)
    (497/596) benchmarking ("div", "Float32", "ComplexF32")...
    done (took 1.864877824 seconds)
    (498/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.864630709 seconds)
    (499/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.86429724 seconds)
    (500/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.864788231 seconds)
    (501/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.867751892 seconds)
    (502/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.865298402 seconds)
    (503/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.866896842 seconds)
    (504/596) benchmarking ("mul", "ComplexF64", "ComplexF32")...
    done (took 1.864684929 seconds)
    (505/596) benchmarking ("sub", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.865406353 seconds)
    (506/596) benchmarking ("add", "ComplexF32", "Float64")...
    done (took 1.864270905 seconds)
    (507/596) benchmarking ("sub", "ComplexF64", "BigInt")...
    done (took 1.86535551 seconds)
    (508/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.863753435 seconds)
    (509/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.864719894 seconds)
    (510/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.867224684 seconds)
    (511/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.873507004 seconds)
    (512/596) benchmarking ("div", "ComplexF64", "Complex{BigInt}")...
    done (took 1.873548598 seconds)
    (513/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.865114444 seconds)
    (514/596) benchmarking ("sub", "ComplexF64", "BigFloat")...
    done (took 1.86596012 seconds)
    (515/596) benchmarking ("add", "ComplexF64", "Complex{Int64}")...
    done (took 1.864284381 seconds)
    (516/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.868262009 seconds)
    (517/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.876682787 seconds)
    (518/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.86529046 seconds)
    (519/596) benchmarking ("sub", "ComplexF64", "Complex{UInt64}")...
    done (took 1.865136575 seconds)
    (520/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.864539346 seconds)
    (521/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.866319531 seconds)
    (522/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.865670246 seconds)
    (523/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.872265295 seconds)
    (524/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.873997897 seconds)
    (525/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.868850491 seconds)
    (526/596) benchmarking ("add", "UInt64", "ComplexF64")...
    done (took 1.865120221 seconds)
    (527/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.869984699 seconds)
    (528/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.883115322 seconds)
    (529/596) benchmarking ("add", "BigInt", "ComplexF64")...
    done (took 1.867309089 seconds)
    (530/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.874448888 seconds)
    (531/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896978233 seconds)
    (532/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.866538171 seconds)
    (533/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.865027962 seconds)
    (534/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.865249456 seconds)
    (535/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.865727152 seconds)
    (536/596) benchmarking ("sub", "Float32", "ComplexF64")...
    done (took 1.865350246 seconds)
    (537/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.868513876 seconds)
    (538/596) benchmarking ("mul", "ComplexF64", "Complex{Int64}")...
    done (took 1.865547775 seconds)
    (539/596) benchmarking ("mul", "ComplexF32", "Complex{BigInt}")...
    done (took 1.873238506 seconds)
    (540/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.866500532 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.866089793 seconds)
    (542/596) benchmarking ("div", "Complex{BigFloat}", "ComplexF32")...
    done (took 1.874261148 seconds)
    (543/596) benchmarking ("div", "Int64", "ComplexF32")...
    done (took 1.867240031 seconds)
    (544/596) benchmarking ("add", "ComplexF32", "Float32")...
    done (took 1.865879218 seconds)
    (545/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.866377448 seconds)
    (546/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.8675945 seconds)
    (547/596) benchmarking ("add", "BigFloat", "ComplexF64")...
    done (took 1.872344708 seconds)
    (548/596) benchmarking ("add", "ComplexF64", "Int64")...
    done (took 1.866183389 seconds)
    (549/596) benchmarking ("div", "BigInt", "ComplexF64")...
    done (took 1.874371822 seconds)
    (550/596) benchmarking ("div", "Float64", "ComplexF64")...
    done (took 1.866635093 seconds)
    (551/596) benchmarking ("mul", "ComplexF32", "ComplexF32")...
    done (took 1.867211655 seconds)
    (552/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.866954253 seconds)
    (553/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.869102891 seconds)
    (554/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.86750984 seconds)
    (555/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.868434357 seconds)
    (556/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.867034895 seconds)
    (557/596) benchmarking ("add", "ComplexF64", "Complex{BigFloat}")...
    done (took 1.869605837 seconds)
    (558/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.866761715 seconds)
    (559/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.866641099 seconds)
    (560/596) benchmarking ("div", "Complex{BigInt}", "ComplexF32")...
    done (took 1.875550819 seconds)
    (561/596) benchmarking ("div", "ComplexF64", "Int64")...
    done (took 1.867143188 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.86818226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.881209029 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.878868807 seconds)
    (565/596) benchmarking ("div", "ComplexF32", "Float64")...
    done (took 1.867107161 seconds)
    (566/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.867994136 seconds)
    (567/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.866422433 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.872204726 seconds)
    (569/596) benchmarking ("sub", "Complex{BigInt}", "ComplexF64")...
    done (took 1.87145581 seconds)
    (570/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.86719958 seconds)
    (571/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.872339542 seconds)
    (572/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.875349716 seconds)
    (573/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.87070842 seconds)
    (574/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.87647105 seconds)
    (575/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.869186011 seconds)
    (576/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.868135869 seconds)
    (577/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.868964821 seconds)
    (578/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.867890276 seconds)
    (579/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.867944616 seconds)
    (580/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.881335999 seconds)
    (581/596) benchmarking ("sub", "ComplexF64", "Complex{BigInt}")...
    done (took 1.879623143 seconds)
    (582/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.869153724 seconds)
    (583/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.868604341 seconds)
    (584/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.875087906 seconds)
    (585/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.868744587 seconds)
    (586/596) benchmarking ("mul", "Complex{BigInt}", "ComplexF32")...
    done (took 1.875815532 seconds)
    (587/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.875002417 seconds)
    (588/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.869024874 seconds)
    (589/596) benchmarking ("sub", "BigFloat", "ComplexF32")...
    done (took 1.870215355 seconds)
    (590/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.869733119 seconds)
    (591/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.869499662 seconds)
    (592/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.869789115 seconds)
    (593/596) benchmarking ("add", "Complex{Int64}", "ComplexF32")...
    done (took 1.869444408 seconds)
    (594/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.872572452 seconds)
    (595/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.877475032 seconds)
    (596/596) benchmarking ("div", "ComplexF64", "ComplexF64")...
    done (took 1.869918198 seconds)
  done (took 1107.540561216 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.870142639 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.869147441 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.870244046 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.870093357 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871112803 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.870064529 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871588047 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870056211 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.871174459 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.870864076 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871267105 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.870350508 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871102492 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.870591402 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870836849 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.870409644 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.869857811 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.870937398 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.870630055 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871225415 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.870991276 seconds)
  done (took 41.085919389 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.872703667 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.870933372 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.870633302 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.870507908 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.870294212 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.871189192 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.870318493 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.871041031 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.87241741 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.870549354 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.870958272 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.871026433 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.872072255 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.872067943 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.871930904 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.872133965 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.871975409 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.87114998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.870583147 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.871765905 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.872768062 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.872456045 seconds)
  done (took 42.975988087 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.871791089 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.871875739 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.87192685 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.871911717 seconds)
    (5/49) benchmarking ("mul", "Float64")...
    done (took 1.873069012 seconds)
    (6/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.871829211 seconds)
    (7/49) benchmarking ("mul", "Float32")...
    done (took 1.872325791 seconds)
    (8/49) benchmarking ("div", "BigFloat")...
    done (took 1.87346816 seconds)
    (9/49) benchmarking ("add", "BigFloat")...
    done (took 1.871979504 seconds)
    (10/49) benchmarking ("add", "BigInt")...
    done (took 1.873019858 seconds)
    (11/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.88023076 seconds)
    (12/49) benchmarking ("add", "ComplexF32")...
    done (took 1.880541219 seconds)
    (13/49) benchmarking ("sub", "Float64")...
    done (took 1.872308817 seconds)
    (14/49) benchmarking ("div", "BigInt")...
    done (took 1.874729878 seconds)
    (15/49) benchmarking ("add", "Float32")...
    done (took 1.87239151 seconds)
    (16/49) benchmarking ("sub", "ComplexF64")...
    done (took 1.873237479 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.017338077 seconds)
    (18/49) benchmarking ("add", "ComplexF64")...
    done (took 1.872423237 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.872516248 seconds)
    (20/49) benchmarking ("sub", "Int64")...
    done (took 1.873205781 seconds)
    (21/49) benchmarking ("div", "ComplexF64")...
    done (took 1.871947094 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.879892689 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.873031981 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.873671648 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.872006221 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.873656272 seconds)
    (27/49) benchmarking ("add", "UInt64")...
    done (took 1.87312987 seconds)
    (28/49) benchmarking ("div", "ComplexF32")...
    done (took 1.873014199 seconds)
    (29/49) benchmarking ("sub", "ComplexF32")...
    done (took 1.874074982 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.874286441 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.878682807 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.874306002 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.875107831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.87545183 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.872902989 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.874121842 seconds)
    (37/49) benchmarking ("mul", "ComplexF64")...
    done (took 1.877092903 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.872676341 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.873038684 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.872633963 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.883300965 seconds)
    (42/49) benchmarking ("mul", "ComplexF32")...
    done (took 1.897771134 seconds)
    (43/49) benchmarking ("div", "UInt64")...
    done (took 1.875248217 seconds)
    (44/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.873506501 seconds)
    (45/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.880993092 seconds)
    (46/49) benchmarking ("mul", "UInt64")...
    done (took 1.874495845 seconds)
    (47/49) benchmarking ("div", "Float32")...
    done (took 1.874975112 seconds)
    (48/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.877429525 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.88316119 seconds)
  done (took 93.824752925 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.873895109 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.874492044 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.875826319 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.874671091 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.874354171 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.874868534 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.87528957 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.875038342 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875373571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.875708735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.876192676 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.875646842 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.875484925 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.876453927 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.876827518 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.875452708 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.87599066 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876133794 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.875125704 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.875583507 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.876139578 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.875434738 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.876157337 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.875850241 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.876044182 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877423544 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876322829 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.876075923 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.877292099 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.87710047 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.877352027 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.877084233 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.876179375 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.876359712 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876918911 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.876278523 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.877370723 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.877252019 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.876206483 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.87734051 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.877511245 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.877750294 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.877441341 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.876392681 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.876779193 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.877304133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.878332585 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.877570396 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.878138188 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.877687861 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.877113204 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877462374 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.877422291 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.877652886 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.878175871 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.878037478 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.878399973 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.879292642 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.877820861 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.877563058 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.878096386 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.878528346 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.878674335 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.87909424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.879143137 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.87856494 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.877940869 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.879269849 seconds)
  done (took 129.434657605 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.879257583 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.879705221 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.879913564 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.879422803 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.879987751 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.879792858 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.880189397 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.879715116 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.879915347 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.878717837 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.879084039 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878591821 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.87965108 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.879434832 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.878937274 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.879036715 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.878959301 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.879704485 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.879687158 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.87999745 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.881292613 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.879800695 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.879507728 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.87999344 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.880464335 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.879523491 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.880586293 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.879669773 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.88073673 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.880971501 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.880457547 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.880147424 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.880453755 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.879236632 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.880309553 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.881331154 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.881825054 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.880313839 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.87970534 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.880826836 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.880931029 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.88032336 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.8805454 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.881044683 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.880981124 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.880918619 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.881198997 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.881433165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.880880684 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.881284823 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.881492998 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.881747446 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.881400684 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.881779986 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.881683908 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.882041579 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.882231184 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.881888739 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882670519 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.882898407 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883036166 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.882655605 seconds)
  done (took 118.407773484 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.881273194 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.881741537 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.881866168 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.881588661 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.881513579 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.882325378 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.88214797 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.881173108 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.882027199 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.881542875 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882953168 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.881948036 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883001146 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.882340251 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.882221003 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.88329008 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.881719443 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.883191279 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.882504723 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.88347875 seconds)
  done (took 39.459133456 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.883005364 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.882130213 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.883447534 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.882331654 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.882492653 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.882981239 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.883310604 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882758733 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883158338 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883061659 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.882987278 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.883976459 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.883785278 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.882739135 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.882596569 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.883009928 seconds)
  done (took 31.944246238 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.884038349 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.883988922 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.882795044 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.88300518 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.883769277 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.883631433 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.88380784 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.883975885 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.883810013 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.88471818 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.884527423 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.88417952 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.884169886 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.884513689 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.884961029 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.885710949 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.884533407 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.885201562 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.885297336 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.884643751 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.884315346 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.885238709 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.884059868 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.8844026 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.885164229 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.885371753 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.884734197 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885631419 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.884942819 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.884428372 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.884359518 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.884814574 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.88548421 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.885108219 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.885812823 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.885151704 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.88487171 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.885351312 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.885405009 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.883724323 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.884024814 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.884551968 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.884312383 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.88495284 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.883430274 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.884247539 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.88443868 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.883639785 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.885557978 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.88449991 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.884501001 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.884847915 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.88549139 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.884950212 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.886158999 seconds)
  done (took 105.472461991 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.884945041 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.885241389 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.885369616 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.885092871 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.883894052 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.883678032 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.883557785 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.884292837 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887107481 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.88026874 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.881072702 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.880802943 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.880022477 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.880361818 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.882001333 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.879033088 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.879321898 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.879479057 seconds)
  done (took 35.703591512 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.880062243 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.879971007 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.879284179 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.881032839 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.879885241 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.880454172 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.878512005 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.878870461 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.878385607 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.878510418 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.877955625 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.880292651 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.879041981 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.878533094 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.879710633 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.880028546 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.879503851 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.878515012 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.879267046 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.879456769 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.878897617 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.879265222 seconds)
  done (took 43.158557891 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.878463423 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.878084798 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.892998388 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.900620157 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.900124237 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.916967979 seconds)
  done (took 13.178992401 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880043733 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.879898895 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.880524114 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.88077759 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.880337336 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880993251 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880414466 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880941622 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.880487493 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880973344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.880429855 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.881601186 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.884519552 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879299405 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87997218 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879411745 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880566196 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880025716 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880677211 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879090376 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8787812 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.879061543 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878926118 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.880396282 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880277429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877916881 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877797932 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878555244 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.880653741 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.877585452 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87752899 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877047441 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877545637 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877697027 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878009371 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876712695 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877630551 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877417193 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877697373 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.876542895 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.876800519 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877698466 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877230051 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877687562 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87773194 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877282235 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.877527698 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.876857398 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877174518 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87728963 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.879030257 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877283909 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.876858779 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87710088 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.877755064 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878799752 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878158119 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878504981 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878075863 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878333283 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878858787 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878429135 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87855387 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878934207 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878554367 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878397434 seconds)
  done (took 125.815096787 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878101051 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.877825358 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.87820309 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878043036 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.879316207 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878223618 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877403478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87815521 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.8779537 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.87945588 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878321362 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877697463 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878584169 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877738487 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878006291 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87844743 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.877956709 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878341404 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.877682644 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.877835628 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879786777 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878166116 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878455407 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.877885672 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878929293 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878985915 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.878488775 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878005128 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.878776024 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878872366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878891959 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.880321735 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877739093 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.879280821 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.878976102 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878698129 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.879326401 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.878720127 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.87934125 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.878365876 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878631955 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.879516916 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.877755202 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878677855 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87804443 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.878870436 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.878424278 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.878045141 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.874504909 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872818128 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.875915385 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.874267209 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.87432097 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873825716 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.873308501 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.873601603 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.873052132 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.87253027 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872459348 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872138808 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.87199722 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.872295399 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.87202117 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.873273487 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.870535618 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.872113605 seconds)
  done (took 125.69773876 seconds)
done (took 2579.462295687 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.92592105 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.905147525 seconds)
  done (took 15.633928395 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.032613751 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.984700319 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.870830633 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.896336449 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.870400365 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.895529762 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.898361516 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.869171586 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.869221593 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.868839295 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.871745401 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.052363593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.92570921 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.870383412 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.869769315 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.960706571 seconds)
  done (took 52.411772564 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.875393099 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.87380235 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.884766822 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.87475324 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.87497271 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.887168239 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.906103054 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.877757579 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.909764638 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.887992384 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.944383943 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.886136068 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.87439965 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.924549034 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.891798916 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.888161011 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.970611748 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.952996917 seconds)
  done (took 35.988046945 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.951254613 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.878098431 seconds)
  done (took 10.636668091 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.901595409 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.87768764 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.883478959 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.891114297 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.871715149 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.879667377 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.880323263 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.870979172 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.875167483 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.881968409 seconds)
  done (took 70.616055839 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.874490594 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.870077422 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.870780219 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.868247321 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.864375274 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.870836252 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.866180539 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.869668219 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.566836956 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.906508155 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.877898723 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.875210296 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.868619983 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.868381756 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.865729884 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.891753095 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.980407871 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.863652628 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.864008912 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.87303042 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86759227 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.92227335 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.881486789 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.8681255 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.901107797 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.557272358 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.881698059 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.872705372 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.992025709 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.866072002 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.867920214 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 2.080809508 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.872712728 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.329526556 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.137853456 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.873290277 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.8791294 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.875585031 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.865477269 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.995207209 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.868485302 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.873475927 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.78393843 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.10909943 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.95693195 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.913413555 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.202317957 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.870471605 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.867650492 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.901598075 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.870042168 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.869552226 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.883211774 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.378595144 seconds)
  done (took 132.797108745 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.864189559 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.217957191 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.030186544 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.868141584 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152081453 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070106909 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.866367909 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.909692592 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.869346942 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.095061071 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.116801369 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969699866 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865762947 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.867427464 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.866713612 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863345814 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.007610672 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.93252899 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.866082041 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862084218 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.88997147 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.10432279 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.985199407 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.86637271 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.894393568 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.069156693 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985130494 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.966259468 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.651969194 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.863333401 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.926792615 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.86595056 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.863130585 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.864069477 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.018175907 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.956822451 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947977816 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.866232688 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865345673 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865148993 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.609360345 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.064636554 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959213657 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.990130601 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.114960806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.06977704 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645351642 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.865323112 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.613775584 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.026498367 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.092868348 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.097155369 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.987807636 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.867938018 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.205623536 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.865284814 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866191539 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.113398358 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.086256746 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963485434 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.868360539 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866310679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.865064621 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153524028 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.869755369 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960062633 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869381176 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.867246685 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.962388277 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.96339875 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.094066538 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.077053767 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894861152 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.203743102 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.372461958 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.111322394 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.9314394 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115792594 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.869384952 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.86538168 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.943516129 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.700114767 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.117489817 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.145410364 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110110432 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.900035873 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.58864932 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.864695087 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.089815585 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.085638688 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.115505871 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112757049 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.104759887 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.168682532 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.86625431 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.866460837 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.123896229 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.985548258 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.869194101 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20827662 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.095386724 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.41102156 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.89205471 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.169773579 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.994343312 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.873072005 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.499126923 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.865610024 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.08786625 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.904820945 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.869406831 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.865016087 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.083474511 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.837650555 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866929239 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.508586015 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.929313303 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.870007028 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.097616398 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.870883986 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.127049928 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.872856507 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.096661466 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.939404284 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896872376 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.039121836 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.113252402 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.870702204 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.107938328 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.105065887 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981467259 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.0857019 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.493100819 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.866745616 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.153736268 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.870501367 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.870243146 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.034792922 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869606769 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.010010917 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.872077948 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.150285295 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.889936046 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.104972522 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.874336372 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.124275045 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.900318678 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.92000456 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.871550888 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.99833992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.86887172 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.697562225 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.024647626 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871739127 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.87129134 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.433309096 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.870308556 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.017358094 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.09131757 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890306242 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.938168842 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.533303048 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.87034033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946356595 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.890398521 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.256710847 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.871087852 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.121277822 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.872489721 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871698086 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.869321948 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.151983732 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.051007557 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.872672612 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.87004834 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.764473971 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.869304747 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.871131998 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.048086362 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.229506451 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871171857 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070768717 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873149883 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998050201 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.871501939 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.93984808 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.203770929 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870051818 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.871055462 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.872362707 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.869304188 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.8705062 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075098755 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.893233178 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.395825876 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.005745443 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136704843 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.178221468 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.108170445 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.911288086 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.87104008 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122126658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873380386 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.931431143 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872625392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.889396838 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.098466778 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.87217461 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.075823098 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.138962116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.714845282 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917301306 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873614465 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871128964 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.869724183 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.006629686 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.956250728 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873225368 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.872162213 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.983705169 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.989438941 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.077568329 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.872446642 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.989857132 seconds)
  done (took 902.755295642 seconds)
done (took 1222.64421795 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871367404 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870059107 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.872734768 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.874022571 seconds)
  done (took 29.294584305 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.87332951 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.872567445 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.873496167 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.872247422 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.872531038 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.874377491 seconds)
  done (took 13.045601135 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.908697471 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.876063131 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873683995 seconds)
  done (took 21.46421425 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.94891733 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.288588268 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.015347587 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.299851812 seconds)
  done (took 10.359827033 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.873678804 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.874339426 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.874416392 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.874041832 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.874358947 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.876097192 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.874243631 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.874753611 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.876108634 seconds)
  done (took 18.680904366 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.989429128 seconds)
done (took 98.639740816 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.022652258 seconds)
    (2/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.939134997 seconds)
    (3/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.938545813 seconds)
    (4/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.951394482 seconds)
    (5/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.00712597 seconds)
    (6/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.092212086 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.875202919 seconds)
    (8/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.216644145 seconds)
    (9/309) benchmarking ("perf_countnothing", ComplexF64, true)...
    done (took 1.898514483 seconds)
    (10/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.873279944 seconds)
    (11/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.875025839 seconds)
    (12/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.202286018 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.890808338 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.890259061 seconds)
    (15/309) benchmarking ("broadcast", identity, ComplexF64, true)...
    done (took 2.382999736 seconds)
    (16/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.876682454 seconds)
    (17/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.067625618 seconds)
    (18/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.971421237 seconds)
    (19/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.023737281 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.973897732 seconds)
    (21/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.007549276 seconds)
    (22/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.885601566 seconds)
    (23/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.166956757 seconds)
    (24/309) benchmarking ("map", identity, ComplexF64, false)...
    done (took 2.081152628 seconds)
    (25/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.898950496 seconds)
    (26/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974440225 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.875573328 seconds)
    (28/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.018086593 seconds)
    (29/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.120184488 seconds)
    (30/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.96254229 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.877429066 seconds)
    (32/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.591288478 seconds)
    (33/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.90083754 seconds)
    (34/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.132034946 seconds)
    (35/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.000923427 seconds)
    (36/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.976076781 seconds)
    (37/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.664750261 seconds)
    (38/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.127145449 seconds)
    (39/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.878521837 seconds)
    (40/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.974953653 seconds)
    (41/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.059321979 seconds)
    (42/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.458167445 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.179782409 seconds)
    (44/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.976336147 seconds)
    (45/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.875114333 seconds)
    (46/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 8.307030271 seconds)
    (47/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.881289469 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, ComplexF64}, false)...
    done (took 3.271569472 seconds)
    (49/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.10101785 seconds)
    (50/309) benchmarking ("perf_countequals", "ComplexF64")...
    done (took 2.296044349 seconds)
    (51/309) benchmarking ("sort", Bool, false)...
    done (took 2.091950143 seconds)
    (52/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.877629538 seconds)
    (53/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.267459695 seconds)
    (54/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 2.971178143 seconds)
    (55/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.882071818 seconds)
    (56/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.121546624 seconds)
    (57/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.017688399 seconds)
    (58/309) benchmarking ("sort", Float64, false)...
    done (took 5.582727991 seconds)
    (59/309) benchmarking ("sort", Int64, false)...
    done (took 5.537996611 seconds)
    (60/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.130474118 seconds)
    (61/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.027406268 seconds)
    (62/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.897115234 seconds)
    (63/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.964807339 seconds)
    (64/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.164269145 seconds)
    (65/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.196080371 seconds)
    (66/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.879859121 seconds)
    (67/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.302089746 seconds)
    (68/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.884109022 seconds)
    (69/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.893269288 seconds)
    (70/309) benchmarking ("perf_sum3", ComplexF64, true)...
    done (took 2.037891518 seconds)
    (71/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.080526506 seconds)
    (72/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.19535205 seconds)
    (73/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.083475417 seconds)
    (74/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.062774607 seconds)
    (75/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.942616982 seconds)
    (76/309) benchmarking ("broadcast", *, ComplexF64, (true, true))...
    done (took 2.631379207 seconds)
    (77/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.913831416 seconds)
    (78/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.882364113 seconds)
    (79/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.974961112 seconds)
    (80/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.258116238 seconds)
    (81/309) benchmarking ("perf_sum2", ComplexF64, false)...
    done (took 2.010760731 seconds)
    (82/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.183648978 seconds)
    (83/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.050715338 seconds)
    (84/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.740558707 seconds)
    (85/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.340580336 seconds)
    (86/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.879510394 seconds)
    (87/309) benchmarking ("sort", Float32, false)...
    done (took 5.547415614 seconds)
    (88/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.982883685 seconds)
    (89/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.42119566 seconds)
    (90/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.917115299 seconds)
    (91/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.894622847 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, ComplexF64}, true)...
    done (took 2.832753808 seconds)
    (93/309) benchmarking ("sort", Int8, false)...
    done (took 4.849983453 seconds)
    (94/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.630588031 seconds)
    (95/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.899302557 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.989264112 seconds)
    (97/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.06017653 seconds)
    (98/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.903942856 seconds)
    (99/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.091041557 seconds)
    (100/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.056311177 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.907759719 seconds)
    (102/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.034160849 seconds)
    (103/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.885665263 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.879521387 seconds)
    (105/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.323953255 seconds)
    (106/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.187589636 seconds)
    (107/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.902425687 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 6.879808936 seconds)
    (109/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.884384859 seconds)
    (110/309) benchmarking ("perf_sum2", ComplexF64, true)...
    done (took 2.011886169 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.210161883 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.014589276 seconds)
    (113/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, false))...
    done (took 2.503694146 seconds)
    (114/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.517275802 seconds)
    (115/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.187632739 seconds)
    (116/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.15658431 seconds)
    (117/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.132933691 seconds)
    (118/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.912066622 seconds)
    (119/309) benchmarking ("perf_sum4", ComplexF64, true)...
    done (took 2.031225603 seconds)
    (120/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.880814807 seconds)
    (121/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.978428891 seconds)
    (122/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.897369254 seconds)
    (123/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.346850236 seconds)
    (124/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.473535161 seconds)
    (125/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.244258889 seconds)
    (126/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.774888624 seconds)
    (127/309) benchmarking ("map", abs, ComplexF64, true)...
    done (took 3.414262568 seconds)
    (128/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.183753007 seconds)
    (129/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.132553701 seconds)
    (130/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.693744912 seconds)
    (131/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.295217246 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.033182074 seconds)
    (133/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.907416343 seconds)
    (134/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.903201419 seconds)
    (135/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.880667598 seconds)
    (136/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.062814154 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.967801526 seconds)
    (138/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.986162685 seconds)
    (139/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.881077692 seconds)
    (140/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 3.469096877 seconds)
    (141/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.980289598 seconds)
    (142/309) benchmarking ("skipmissing", collect, ComplexF64, false)...
    done (took 2.751842552 seconds)
    (143/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.245015186 seconds)
    (144/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.899783974 seconds)
    (145/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.960817778 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.52988834 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.004829188 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.972226977 seconds)
    (149/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.036408254 seconds)
    (150/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.140317102 seconds)
    (151/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.899784791 seconds)
    (152/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.291064794 seconds)
    (153/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.883756574 seconds)
    (154/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.097549091 seconds)
    (155/309) benchmarking ("skipmissing", sum, ComplexF64, false)...
    done (took 1.927604128 seconds)
    (156/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.961284368 seconds)
    (157/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.353923846 seconds)
    (158/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.889886186 seconds)
    (159/309) benchmarking ("perf_simplecopy", ComplexF64, true)...
    done (took 2.276719659 seconds)
    (160/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.985017763 seconds)
    (161/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.986847018 seconds)
    (162/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.225648846 seconds)
    (163/309) benchmarking ("broadcast", *, ComplexF64, (false, true))...
    done (took 2.633231934 seconds)
    (164/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.024956323 seconds)
    (165/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.988103495 seconds)
    (166/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.905471837 seconds)
    (167/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.958745987 seconds)
    (168/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.037419301 seconds)
    (169/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.179014178 seconds)
    (170/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.948759133 seconds)
    (171/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.960823174 seconds)
    (172/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.004155083 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.751147609 seconds)
    (174/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.889508226 seconds)
    (175/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 3.464147637 seconds)
    (176/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.88403303 seconds)
    (177/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.810534508 seconds)
    (178/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.19116487 seconds)
    (179/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.473236779 seconds)
    (180/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.02687696 seconds)
    (181/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.534727307 seconds)
    (182/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.28345388 seconds)
    (183/309) benchmarking ("perf_simplecopy", ComplexF64, false)...
    done (took 2.273086096 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.099067621 seconds)
    (185/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.198242729 seconds)
    (186/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.141602774 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.88285294 seconds)
    (188/309) benchmarking ("perf_sum4", ComplexF64, false)...
    done (took 1.972547589 seconds)
    (189/309) benchmarking ("skipmissing", sum, Union{Missing, ComplexF64}, true)...
    done (took 2.014596594 seconds)
    (190/309) benchmarking ("perf_sum", ComplexF64, true)...
    done (took 2.009121221 seconds)
    (191/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.880687869 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.838916129 seconds)
    (193/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.992522648 seconds)
    (194/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.022250664 seconds)
    (195/309) benchmarking ("perf_sum", ComplexF64, false)...
    done (took 1.961086618 seconds)
    (196/309) benchmarking ("skipmissing", sum, Union{Nothing, ComplexF64}, false)...
    done (took 2.007259167 seconds)
    (197/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.214564716 seconds)
    (198/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.890381608 seconds)
    (199/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.172140591 seconds)
    (200/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.887775823 seconds)
    (201/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 2.032606725 seconds)
    (202/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.21612951 seconds)
    (203/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.760491797 seconds)
    (204/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 2.001030286 seconds)
    (205/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.007006268 seconds)
    (206/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.934471621 seconds)
    (207/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.212584362 seconds)
    (208/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09264319 seconds)
    (209/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.994704982 seconds)
    (210/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.973969135 seconds)
    (211/309) benchmarking ("map", *, ComplexF64, (false, false))...
    done (took 2.203972994 seconds)
    (212/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.065913487 seconds)
    (213/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.94879352 seconds)
    (214/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.88653465 seconds)
    (215/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.95552105 seconds)
    (216/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.957988951 seconds)
    (217/309) benchmarking ("map", *, ComplexF64, (true, true))...
    done (took 2.643223742 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.632307626 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.189461433 seconds)
    (220/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.120457369 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.889998686 seconds)
    (222/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.969709473 seconds)
    (223/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.279479143 seconds)
    (224/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.191053573 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.271920509 seconds)
    (226/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.275798158 seconds)
    (227/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.747185158 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.91972181 seconds)
    (229/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.140339869 seconds)
    (230/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.096620098 seconds)
    (231/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.199604044 seconds)
    (232/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.153981634 seconds)
    (233/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.18887295 seconds)
    (234/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.21497792 seconds)
    (235/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.89204645 seconds)
    (236/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.083894777 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.23263886 seconds)
    (238/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.547190798 seconds)
    (239/309) benchmarking ("broadcast", *, ComplexF64, (false, false))...
    done (took 2.367877025 seconds)
    (240/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.886220468 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 4.741660084 seconds)
    (242/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.89267142 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.841015768 seconds)
    (244/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.406537924 seconds)
    (245/309) benchmarking ("perf_sum3", ComplexF64, false)...
    done (took 2.155932137 seconds)
    (246/309) benchmarking ("broadcast", abs, ComplexF64, true)...
    done (took 3.336954272 seconds)
    (247/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.599698367 seconds)
    (248/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.334130651 seconds)
    (249/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.887816808 seconds)
    (250/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.758840124 seconds)
    (251/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.03396414 seconds)
    (252/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.065051639 seconds)
    (253/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.932560487 seconds)
    (254/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.965186399 seconds)
    (255/309) benchmarking ("perf_binaryop", *, ComplexF64, (true, true))...
    done (took 2.576649989 seconds)
    (256/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.245267582 seconds)
    (257/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.63445785 seconds)
    (258/309) benchmarking ("perf_countnothing", ComplexF64, false)...
    done (took 2.027346978 seconds)
    (259/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.191424935 seconds)
    (260/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.988070124 seconds)
    (261/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.892900136 seconds)
    (262/309) benchmarking ("map", *, ComplexF64, (false, true))...
    done (took 2.720328653 seconds)
    (263/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.528180055 seconds)
    (264/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.894086746 seconds)
    (265/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.131835397 seconds)
    (266/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.155967957 seconds)
    (267/309) benchmarking ("broadcast", identity, ComplexF64, false)...
    done (took 2.084443985 seconds)
    (268/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.800083861 seconds)
    (269/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.987017789 seconds)
    (270/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.002513882 seconds)
    (271/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.009601414 seconds)
    (272/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.284075442 seconds)
    (273/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.911937949 seconds)
    (274/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.888314412 seconds)
    (275/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.096026084 seconds)
    (276/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.005960394 seconds)
    (277/309) benchmarking ("perf_binaryop", *, ComplexF64, (false, true))...
    done (took 2.579216256 seconds)
    (278/309) benchmarking ("broadcast", abs, ComplexF64, false)...
    done (took 3.327988115 seconds)
    (279/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.916359129 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.887665063 seconds)
    (281/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.482861333 seconds)
    (282/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.000387311 seconds)
    (283/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.013724334 seconds)
    (284/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.887456877 seconds)
    (285/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.022004421 seconds)
    (286/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.299600616 seconds)
    (287/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.670048095 seconds)
    (288/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.917810555 seconds)
    (289/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.996667746 seconds)
    (290/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.867612633 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.886984694 seconds)
    (292/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.922042653 seconds)
    (293/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.375957941 seconds)
    (294/309) benchmarking ("map", identity, ComplexF64, true)...
    done (took 2.350955017 seconds)
    (295/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.285128361 seconds)
    (296/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.189129896 seconds)
    (297/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.924068833 seconds)
    (298/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.891288526 seconds)
    (299/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.630228741 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.892428254 seconds)
    (301/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.391036867 seconds)
    (302/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.145276233 seconds)
    (303/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.105787269 seconds)
    (304/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.15047504 seconds)
    (305/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.968731396 seconds)
    (306/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.101850837 seconds)
    (307/309) benchmarking ("map", abs, ComplexF64, false)...
    done (took 3.355648774 seconds)
    (308/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.192188648 seconds)
    (309/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694228875 seconds)
  done (took 1015.852479698 seconds)
done (took 1017.737394589 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.92422313 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.911160553 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.896662038 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.9171304 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.009072993 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.938485304 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.909228766 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.900643723 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.946200822 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.945933513 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.895393932 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.936411708 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.899075117 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.898115059 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.897289802 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91150276 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.199377284 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.923756984 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.915499014 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.909470178 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.916295544 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.897145293 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.94830809 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.936555676 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.902802692 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.903505665 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.902056547 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.918311259 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.011177907 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.902816084 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.903561772 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.911151258 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.198516531 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923671313 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.896570803 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.917918323 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.910522528 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.910856193 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.903212114 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.931345104 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332625612 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.902917688 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.899761906 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.899913387 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.899242447 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.90665777 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.899926494 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.908389709 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.913472757 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91318648 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.329445128 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.920061248 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.903435941 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.900079957 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.913297091 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.900172574 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.903153308 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.913708598 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.920029792 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.914341354 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.188193439 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.931753602 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.903545011 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.918069555 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.911537695 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364940629 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902092733 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.908102533 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.333438118 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913398559 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.365271329 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.916401115 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.902950186 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.916897109 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.934495374 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.200160081 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922358901 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.900172413 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.910651151 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.898737231 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.913848638 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.91473638 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.906707867 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.903821172 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.915618101 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.942976841 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.914064365 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.901819433 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.91334267 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.921542753 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.910702344 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.914849216 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.905625175 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.900185045 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.915375174 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.907552036 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.905597671 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.906625578 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.906799299 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.915979958 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.331505044 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.921116201 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.900041513 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.89904845 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.902299392 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.917451533 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.332035806 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.907577179 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.924774199 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.951937507 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.904722027 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.189322098 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.928615265 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917317267 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.915515236 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.904846594 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.900966604 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.189133916 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.354913036 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.925661702 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.90316297 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.901428767 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.918145411 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.904407334 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.901001143 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.203646815 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.929535639 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917786002 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.026425258 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.917530061 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.937889343 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.902825651 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.908596572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.947835799 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.919687869 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.938668308 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.906545004 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.918873767 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.921516012 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.900956166 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.917310625 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.918149039 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.905708446 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.912638058 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.902124566 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.949310633 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.917338475 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.917645893 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.925661716 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.027381601 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.901981726 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.190856889 seconds)
done (took 298.773740953 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.975914732 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.898119885 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.989537972 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.899166569 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.985939104 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.970341627 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.899343618 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.899566396 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.899166766 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.398306871 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.900359098 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.904692352 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.899125315 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.900519889 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.967273909 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.899956192 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.900875171 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.180745944 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.900873067 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.978865205 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.897537024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.900682801 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.900062269 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.401237836 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.900087561 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.90040002 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.97969717 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.899767331 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.187981193 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.900328872 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899197493 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.188600114 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.980255357 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.913629968 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.908262892 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.908095812 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.987300704 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.908484995 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.967693405 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.966200864 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.991536978 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.933233803 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900819783 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.901185714 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.903611588 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.901385488 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.90178276 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.934453748 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.902345994 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.90683476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.182431741 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.907050712 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.909596535 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.901894248 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.90226028 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.915205682 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.903045171 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.902085808 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981591511 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.902762155 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.968929873 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.404533015 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.400457094 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.902526111 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.900013986 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.902874326 seconds)
  done (took 186.641706992 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.966136669 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.973590395 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.967011301 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.905983632 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.949650445 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.968771747 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.906187668 seconds)
  done (took 15.470182645 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.909136705 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.903342587 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.953151901 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.953316173 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.902935066 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.079700962 seconds)
    (7/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.913324609 seconds)
    (8/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.910683724 seconds)
    (9/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.930551456 seconds)
    (10/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.90335357 seconds)
    (11/97) benchmarking ("randn!", "MersenneTwister", "ComplexF16")...
    done (took 2.602573393 seconds)
    (12/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.953495969 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.908226952 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.903661043 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.914585434 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "ComplexF32")...
    done (took 1.961943403 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.90582176 seconds)
    (18/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.904922991 seconds)
    (19/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.013176728 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.052599256 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.909136557 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.910738298 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.929450388 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.915367255 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "ComplexF16")...
    done (took 1.904983337 seconds)
    (26/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.905041692 seconds)
    (27/97) benchmarking ("rand", "MersenneTwister", "ComplexF64")...
    done (took 1.903870577 seconds)
    (28/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.910539704 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905303272 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.903998834 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.904185822 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.9546683 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.904075718 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.903284378 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.905264999 seconds)
    (36/97) benchmarking ("randn", "MersenneTwister", "ComplexF16")...
    done (took 1.905091986 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.904211006 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.904567127 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.90434333 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.90414336 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.905308096 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.90480263 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.905005252 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.904718945 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.905257441 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.927468709 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.904839146 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.908154535 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.905111567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.905532851 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.930933888 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.905859944 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.905749883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.910829407 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.94936842 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913053547 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.905749916 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.90522451 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.906312928 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ComplexF32")...
    done (took 1.906323947 seconds)
    (61/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.905585548 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.053972691 seconds)
    (63/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.957445956 seconds)
    (64/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.906194543 seconds)
    (65/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.957090036 seconds)
    (66/97) benchmarking ("rand!", "MersenneTwister", "ComplexF16")...
    done (took 2.057555458 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.906776115 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.907193633 seconds)
    (69/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.906434907 seconds)
    (70/97) benchmarking ("rand!", "MersenneTwister", "ComplexF64")...
    done (took 1.998698128 seconds)
    (71/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.907342912 seconds)
    (72/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.957160665 seconds)
    (73/97) benchmarking ("rand", "MersenneTwister", "ComplexF32")...
    done (took 1.906578993 seconds)
    (74/97) benchmarking ("randn!", "MersenneTwister", "ComplexF32")...
    done (took 2.022205332 seconds)
    (75/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.906871063 seconds)
    (76/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.084391774 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.929584507 seconds)
    (78/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.910154227 seconds)
    (79/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.910163223 seconds)
    (80/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.906264946 seconds)
    (81/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.913452496 seconds)
    (82/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.906519078 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.908647975 seconds)
    (84/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.913326418 seconds)
    (85/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911796045 seconds)
    (86/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.906463493 seconds)
    (87/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.907483291 seconds)
    (88/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.908165332 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.913532272 seconds)
    (90/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.908038415 seconds)
    (91/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.956231362 seconds)
    (92/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.907670718 seconds)
    (93/97) benchmarking ("randn", "MersenneTwister", "ComplexF64")...
    done (took 1.90809294 seconds)
    (94/97) benchmarking ("randn!", "MersenneTwister", "ComplexF64")...
    done (took 2.046476718 seconds)
    (95/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.906873 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.016156371 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.934749611 seconds)
  done (took 209.498378209 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.914634098 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.914777941 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.909759845 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.922297265 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.908638569 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.90949202 seconds)
  done (took 13.317651107 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.910642455 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.910934987 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.908609118 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.90883752 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.909582707 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.90885272 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.910131439 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910338285 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.911923059 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.909549667 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.909723954 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.909817601 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.910495721 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.910007527 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.909125272 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.909058792 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.9101694 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.909796975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.910290056 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.912377102 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.046191555 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.909746011 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.909435895 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.91340345 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.913482861 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.909607698 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.920993279 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.91050318 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.909466194 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.916566121 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.914602408 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.910828492 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.914131761 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.915511563 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.914795408 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.914183564 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.91364699 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.911181391 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.911077072 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.91085617 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.911602986 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.910807918 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.911293442 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.911831968 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.912592998 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.917430826 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.914797758 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.922904239 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.911950391 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.912314527 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.913212438 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.911743662 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.912023879 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.911282238 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.916948594 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917034087 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.915313261 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.912570783 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.91177384 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.915152532 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.914966936 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.912721596 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.91332808 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.915921344 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.919543432 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.913365506 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.916623165 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.915962477 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.911558633 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.912469638 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.912681777 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.912739316 seconds)
  done (took 140.680018049 seconds)
done (took 567.450522362 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.254570641 seconds)
  done (took 9.097245664 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.048364552 seconds)
  done (took 8.895018991 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.521022783 seconds)
  done (took 10.364878524 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.915647931 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.947982268 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.918025534 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.913351518 seconds)
  done (took 29.545532314 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.209772589 seconds)
  done (took 9.05333185 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.921806844 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.910645647 seconds)
  done (took 15.750786354 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.003111012 seconds)
  done (took 8.847164403 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.328969394 seconds)
  done (took 9.182651991 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.930811746 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.944574175 seconds)
  done (took 15.741563661 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.913763522 seconds)
  done (took 8.756306407 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.669014557 seconds)
  done (took 9.611269283 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.919090891 seconds)
  done (took 8.782125477 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.929138645 seconds)
  done (took 8.770379599 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.121835564 seconds)
  done (took 9.963812945 seconds)
done (took 164.205536369 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.916921841 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.914144772 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.915090402 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.915185947 seconds)
  done (took 29.503728456 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("any", "Vector{Int16} generator")...
    done (took 1.949892935 seconds)
    (2/24) benchmarking ("any", "Vector{Int16}")...
    done (took 1.951292688 seconds)
    (3/24) benchmarking ("any", "Vector{Int64} generator")...
    done (took 1.95911028 seconds)
    (4/24) benchmarking ("all", "Vector{Float64} generator")...
    done (took 1.950010545 seconds)
    (5/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.939526955 seconds)
    (6/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.940352545 seconds)
    (7/24) benchmarking ("all", "Vector{Int16} generator")...
    done (took 1.95044966 seconds)
    (8/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.951420358 seconds)
    (9/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.940846457 seconds)
    (10/24) benchmarking ("all", "Vector{Float32}")...
    done (took 1.945629549 seconds)
    (11/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.951147517 seconds)
    (12/24) benchmarking ("any", "Vector{Float32}")...
    done (took 1.948414447 seconds)
    (13/24) benchmarking ("any", "Vector{Float64} generator")...
    done (took 1.949336175 seconds)
    (14/24) benchmarking ("all", "Vector{Int64}")...
    done (took 1.958252197 seconds)
    (15/24) benchmarking ("all", "Vector{Int64} generator")...
    done (took 1.959391401 seconds)
    (16/24) benchmarking ("all", "Vector{Float32} generator")...
    done (took 1.947692739 seconds)
    (17/24) benchmarking ("all", "Vector{Float64}")...
    done (took 1.951522593 seconds)
    (18/24) benchmarking ("all", "Vector{Int16}")...
    done (took 1.951925789 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.940660008 seconds)
    (20/24) benchmarking ("any", "Vector{Int64}")...
    done (took 1.960209202 seconds)
    (21/24) benchmarking ("any", "Vector{Float32} generator")...
    done (took 1.946266471 seconds)
    (22/24) benchmarking ("any", "Vector{Float64}")...
    done (took 1.950674578 seconds)
    (23/24) benchmarking ("any", "BitArray")...
    done (took 1.915929332 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.916689259 seconds)
  done (took 48.57095033 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.102425755 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.980807574 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.067720721 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961186267 seconds)
  done (took 9.955694164 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int64}")...
    done (took 1.915008424 seconds)
    (2/24) benchmarking ("==", "Vector{Float64}")...
    done (took 1.979884399 seconds)
    (3/24) benchmarking ("isequal", "Vector{Int16}")...
    done (took 1.968348952 seconds)
    (4/24) benchmarking ("isequal", "Vector{Int64} isequal UnitRange{Int64}")...
    done (took 1.961281839 seconds)
    (5/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.008880738 seconds)
    (6/24) benchmarking ("isequal", "Vector{Float64}")...
    done (took 2.017684057 seconds)
    (7/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Int16}")...
    done (took 1.968552414 seconds)
    (8/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float64}")...
    done (took 2.125953306 seconds)
    (9/24) benchmarking ("isequal", "BitArray")...
    done (took 2.030618684 seconds)
    (10/24) benchmarking ("==", "Vector{Int64} == Vector{Float32}")...
    done (took 2.041664811 seconds)
    (11/24) benchmarking ("==", "Vector{Int16}")...
    done (took 1.924523666 seconds)
    (12/24) benchmarking ("==", "Vector{Int64} == Vector{Int64}")...
    done (took 1.938173025 seconds)
    (13/24) benchmarking ("==", "Vector{Int64}")...
    done (took 1.940275061 seconds)
    (14/24) benchmarking ("==", "Vector{Int64} == UnitRange{Int64}")...
    done (took 1.963235509 seconds)
    (15/24) benchmarking ("isequal", "Vector{Float32}")...
    done (took 2.01989964 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.916771216 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.916154929 seconds)
    (18/24) benchmarking ("==", "Vector{Int64} == Vector{Float64}")...
    done (took 2.03225961 seconds)
    (19/24) benchmarking ("==", "Vector{Float32}")...
    done (took 1.979628668 seconds)
    (20/24) benchmarking ("isequal", "Vector{Int64} isequal Vector{Float32}")...
    done (took 2.128395849 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.916470869 seconds)
    (22/24) benchmarking ("isequal", "Vector{Int64}")...
    done (took 1.970886844 seconds)
    (23/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.003218695 seconds)
    (24/24) benchmarking ("==", "Vector{Int64} == Vector{Int16}")...
    done (took 1.9708885 seconds)
  done (took 49.484430209 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.917829901 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.927116951 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.925246687 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.919116447 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.917249147 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.91795106 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.924310818 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.920533656 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.939839339 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.919760374 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.918186482 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.918023155 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.925466852 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.919835654 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.91685697 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.931509221 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.932483015 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.919566268 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.922001411 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.925155999 seconds)
  done (took 40.304055269 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.915603418 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.764030473 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.260423236 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.167982129 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.917541723 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.921314227 seconds)
  done (took 31.794319211 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.930966916 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.924439902 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.918185363 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.972208335 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.052219077 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.923488896 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.919504842 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.927419216 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.959080002 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.980072222 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.935640558 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.945161605 seconds)
  done (took 25.236679078 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.93482053 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.919768726 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.917801295 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.929567451 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.926946343 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.924389559 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.929181931 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.917290718 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.934959869 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.934725915 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.925289503 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.930532069 seconds)
  done (took 44.975283208 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.134210974 seconds)
    (2/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.148691348 seconds)
    (3/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.140079521 seconds)
    (4/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.273880897 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.905166977 seconds)
    (6/481) benchmarking ("sumelt", "BitMatrix")...
    done (took 4.817329672 seconds)
    (7/481) benchmarking ("sumlogical", "Matrix{Int32}")...
    done (took 3.695753803 seconds)
    (8/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.716679391 seconds)
    (9/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.218309641 seconds)
    (10/481) benchmarking ("sumelt_boundscheck", "Matrix{Float32}")...
    done (took 3.904404597 seconds)
    (11/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.885091435 seconds)
    (12/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.800853647 seconds)
    (13/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.161114995 seconds)
    (14/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.9189536 seconds)
    (15/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.179053652 seconds)
    (16/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.853063128 seconds)
    (17/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.921266853 seconds)
    (18/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.189846636 seconds)
    (19/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.922335037 seconds)
    (20/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.921490661 seconds)
    (21/481) benchmarking ("sumvector", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.213083205 seconds)
    (22/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.982030273 seconds)
    (23/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.132845244 seconds)
    (24/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.966128567 seconds)
    (25/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.133570585 seconds)
    (26/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.189999092 seconds)
    (27/481) benchmarking ("sumeach", "Matrix{Int32}")...
    done (took 2.155833994 seconds)
    (28/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.178778369 seconds)
    (29/481) benchmarking ("sumvector", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.263831881 seconds)
    (30/481) benchmarking ("sumlinear_view", "Matrix{Float32}")...
    done (took 6.976246593 seconds)
    (31/481) benchmarking ("sumcolon", "Matrix{Int32}")...
    done (took 4.975745658 seconds)
    (32/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.956528462 seconds)
    (33/481) benchmarking ("sumcartesian", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.928831018 seconds)
    (34/481) benchmarking ("sumelt", "Array{Float64, 3}")...
    done (took 1.930645616 seconds)
    (35/481) benchmarking ("sumcartesian", "BitMatrix")...
    done (took 6.92423327 seconds)
    (36/481) benchmarking ("sumrange_view", "BitMatrix")...
    done (took 1.931240887 seconds)
    (37/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.192567895 seconds)
    (38/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.921138132 seconds)
    (39/481) benchmarking ("sumeach_view", "Matrix{Float32}")...
    done (took 6.924502747 seconds)
    (40/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.034558246 seconds)
    (41/481) benchmarking ("sumeach", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.848127989 seconds)
    (42/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.313739172 seconds)
    (43/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.041896613 seconds)
    (44/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.331698047 seconds)
    (45/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.054058564 seconds)
    (46/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.164164562 seconds)
    (47/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.927566962 seconds)
    (48/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.8756948 seconds)
    (49/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.972810016 seconds)
    (50/481) benchmarking ("sumlogical_view", "Matrix{Int32}")...
    done (took 4.239509047 seconds)
    (51/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 7.03558359 seconds)
    (52/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.134924751 seconds)
    (53/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.846645621 seconds)
    (54/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.345766458 seconds)
    (55/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.052739582 seconds)
    (56/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.924669359 seconds)
    (57/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.925533837 seconds)
    (58/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.620042653 seconds)
    (59/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.162132993 seconds)
    (60/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.002872769 seconds)
    (61/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.313957101 seconds)
    (62/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 2.042007785 seconds)
    (63/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.926874196 seconds)
    (64/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.014131008 seconds)
    (65/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.922341094 seconds)
    (66/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.034285308 seconds)
    (67/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 3.111364599 seconds)
    (68/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.927729126 seconds)
    (69/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.921306169 seconds)
    (70/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.930008019 seconds)
    (71/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.021052356 seconds)
    (72/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.1368262 seconds)
    (73/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.922719816 seconds)
    (74/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923356872 seconds)
    (75/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.940653145 seconds)
    (76/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.928320989 seconds)
    (77/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.274988229 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.241074761 seconds)
    (79/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.906642924 seconds)
    (80/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.483536357 seconds)
    (81/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.19582566 seconds)
    (82/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.883975484 seconds)
    (83/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.186742556 seconds)
    (84/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.958474277 seconds)
    (85/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.208821993 seconds)
    (86/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.141041233 seconds)
    (87/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.004481567 seconds)
    (88/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.167832915 seconds)
    (89/481) benchmarking "5d"...
    done (took 3.804627325 seconds)
    (90/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.928174851 seconds)
    (91/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.730113323 seconds)
    (92/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.005234665 seconds)
    (93/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.984589573 seconds)
    (94/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.924901125 seconds)
    (95/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 4.86132237 seconds)
    (96/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.277238693 seconds)
    (97/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.044708439 seconds)
    (98/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.922815312 seconds)
    (99/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.848776816 seconds)
    (100/481) benchmarking ("sumvector_view", "Matrix{Int32}")...
    done (took 1.934531007 seconds)
    (101/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.126328964 seconds)
    (102/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.189983665 seconds)
    (103/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.969628664 seconds)
    (104/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.923006062 seconds)
    (105/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.926736885 seconds)
    (106/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.92627549 seconds)
    (107/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.926562049 seconds)
    (108/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.939779406 seconds)
    (109/481) benchmarking ("sumcolon_view", "BitMatrix")...
    done (took 1.935764485 seconds)
    (110/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.842205056 seconds)
    (111/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.213089191 seconds)
    (112/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.029921011 seconds)
    (113/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.189098746 seconds)
    (114/481) benchmarking ("sumeach", "BitMatrix")...
    done (took 4.920064827 seconds)
    (115/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.606316643 seconds)
    (116/481) benchmarking ("sumvector", "Matrix{Float32}")...
    done (took 2.19855863 seconds)
    (117/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.052957107 seconds)
    (118/481) benchmarking ("sumlogical", "BitMatrix")...
    done (took 3.541739623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.059605731 seconds)
    (120/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.753732429 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.060394169 seconds)
    (122/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.931636349 seconds)
    (123/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.926737158 seconds)
    (124/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.113258647 seconds)
    (125/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.329259611 seconds)
    (126/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.870317344 seconds)
    (127/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.15910378 seconds)
    (128/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.021357189 seconds)
    (129/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.956004394 seconds)
    (130/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.931484382 seconds)
    (131/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.009387365 seconds)
    (132/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.151045016 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.926621329 seconds)
    (134/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.18534802 seconds)
    (135/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.172090065 seconds)
    (136/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.597423149 seconds)
    (137/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.032837928 seconds)
    (138/481) benchmarking ("sumvector_view", "BitMatrix")...
    done (took 1.998993202 seconds)
    (139/481) benchmarking ("sumeach", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.935062107 seconds)
    (140/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.14169134 seconds)
    (141/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.008694217 seconds)
    (142/481) benchmarking ("mapr_access", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.450156538 seconds)
    (143/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.149647837 seconds)
    (144/481) benchmarking ("sumrange", "Matrix{Int32}")...
    done (took 5.265999949 seconds)
    (145/481) benchmarking ("sumcartesian", "Matrix{Float32}")...
    done (took 4.903889425 seconds)
    (146/481) benchmarking ("sumelt", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.429152962 seconds)
    (147/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.24536814 seconds)
    (148/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.314096009 seconds)
    (149/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.942978234 seconds)
    (150/481) benchmarking ("sumcolon", "Matrix{Float32}")...
    done (took 4.863095372 seconds)
    (151/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.951332476 seconds)
    (152/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 5.628910499 seconds)
    (153/481) benchmarking ("sumeach", "Matrix{Float32}")...
    done (took 3.853500275 seconds)
    (154/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.93132125 seconds)
    (155/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.271063123 seconds)
    (156/481) benchmarking ("sumeach_view", "BitMatrix")...
    done (took 6.962458074 seconds)
    (157/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.015716881 seconds)
    (158/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.928882064 seconds)
    (159/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.929455664 seconds)
    (160/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.936242422 seconds)
    (161/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.011433324 seconds)
    (162/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.998076549 seconds)
    (163/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.00234043 seconds)
    (164/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.855211631 seconds)
    (165/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.931347519 seconds)
    (166/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.93214521 seconds)
    (167/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.927898466 seconds)
    (168/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.460476918 seconds)
    (169/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.665520466 seconds)
    (170/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.218197876 seconds)
    (171/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.92972121 seconds)
    (172/481) benchmarking ("sumeach", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.000396331 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.930720728 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.512943973 seconds)
    (175/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.93452741 seconds)
    (176/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.051751717 seconds)
    (177/481) benchmarking ("sumlinear_view", "Matrix{Int32}")...
    done (took 6.93308937 seconds)
    (178/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.859512372 seconds)
    (179/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.956055031 seconds)
    (180/481) benchmarking ("sumlogical_view", "Matrix{Float32}")...
    done (took 4.25111641 seconds)
    (181/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.344452598 seconds)
    (182/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.050118774 seconds)
    (183/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.929281349 seconds)
    (184/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.931089648 seconds)
    (185/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.630293763 seconds)
    (186/481) benchmarking ("sumeach_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.939920737 seconds)
    (187/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.632068985 seconds)
    (188/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.220937233 seconds)
    (189/481) benchmarking ("sumlinear", "BitMatrix")...
    done (took 4.930999831 seconds)
    (190/481) benchmarking ("sumrange", "BitMatrix")...
    done (took 2.391422918 seconds)
    (191/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.997311146 seconds)
    (192/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.010029222 seconds)
    (193/481) benchmarking ("sumelt_boundscheck", "Array{Float64, 3}")...
    done (took 1.943338881 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.931133886 seconds)
    (195/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.933060136 seconds)
    (196/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.931507139 seconds)
    (197/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.132618642 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.463729458 seconds)
    (199/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.331505708 seconds)
    (200/481) benchmarking ("sumelt_boundscheck", "BitMatrix")...
    done (took 5.276475551 seconds)
    (201/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.015258214 seconds)
    (202/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.207235619 seconds)
    (203/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.123365134 seconds)
    (204/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.19545004 seconds)
    (205/481) benchmarking ("sumlinear_view", "Array{Float64, 3}")...
    done (took 2.618336352 seconds)
    (206/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.454693994 seconds)
    (207/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 2.15631455 seconds)
    (208/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.930759395 seconds)
    (209/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.933342431 seconds)
    (210/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.588266225 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.938636171 seconds)
    (212/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 5.1458541 seconds)
    (213/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.135057744 seconds)
    (214/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.209948892 seconds)
    (215/481) benchmarking ("sumvector", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.236172193 seconds)
    (216/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.349421472 seconds)
    (217/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.936633944 seconds)
    (218/481) benchmarking "4d"...
    done (took 2.943479045 seconds)
    (219/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.172412352 seconds)
    (220/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.931957613 seconds)
    (221/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.363105402 seconds)
    (222/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.04823998 seconds)
    (223/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.363292362 seconds)
    (224/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 5.753197319 seconds)
    (225/481) benchmarking ("sumvector", "Matrix{Int32}")...
    done (took 2.200351537 seconds)
    (226/481) benchmarking ("sumlinear", "Array{Float64, 3}")...
    done (took 2.000843706 seconds)
    (227/481) benchmarking ("sumvector_view", "Matrix{Float32}")...
    done (took 1.944808922 seconds)
    (228/481) benchmarking ("sumeach_view", "Array{Float64, 3}")...
    done (took 2.591836049 seconds)
    (229/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.073185702 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.88932047 seconds)
    (231/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.061627531 seconds)
    (232/481) benchmarking ("sumelt", "Matrix{Float32}")...
    done (took 3.860012485 seconds)
    (233/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 3.736500348 seconds)
    (234/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.226481521 seconds)
    (235/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.215977161 seconds)
    (236/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.913500008 seconds)
    (237/481) benchmarking ("sumvector", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.275786819 seconds)
    (238/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.230493331 seconds)
    (239/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.27452958 seconds)
    (240/481) benchmarking ("sumcartesian", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.566083759 seconds)
    (241/481) benchmarking ("sumrange", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.777477514 seconds)
    (242/481) benchmarking ("sumelt", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.978012673 seconds)
    (243/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.014524983 seconds)
    (244/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.934517798 seconds)
    (245/481) benchmarking ("sumrange", "Matrix{Float32}")...
    done (took 5.243980213 seconds)
    (246/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967483737 seconds)
    (247/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.982808837 seconds)
    (248/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.938249497 seconds)
    (249/481) benchmarking ("sumlinear", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.934509645 seconds)
    (250/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.935110986 seconds)
    (251/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.610119169 seconds)
    (252/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.009783449 seconds)
    (253/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.066053349 seconds)
    (254/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.73544771 seconds)
    (255/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.235058875 seconds)
    (256/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.83625296 seconds)
    (257/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.20793438 seconds)
    (258/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 1.993690699 seconds)
    (259/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.402633176 seconds)
    (260/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.980486764 seconds)
    (261/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.146319914 seconds)
    (262/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.938792091 seconds)
    (263/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.261621702 seconds)
    (264/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.975332259 seconds)
    (265/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.209831726 seconds)
    (266/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.89152889 seconds)
    (267/481) benchmarking ("sumcartesian_view", "Matrix{Int32}")...
    done (took 2.148049933 seconds)
    (268/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.142868429 seconds)
    (269/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.957369683 seconds)
    (270/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.940278273 seconds)
    (271/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.86132797 seconds)
    (272/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.78020095 seconds)
    (273/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 1.938305793 seconds)
    (274/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.873323128 seconds)
    (275/481) benchmarking "3d"...
    done (took 2.865694854 seconds)
    (276/481) benchmarking ("sum", "3darray")...
    done (took 1.937942633 seconds)
    (277/481) benchmarking ("sumvector", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.230350596 seconds)
    (278/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.313032527 seconds)
    (279/481) benchmarking ("sumeach", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.967383272 seconds)
    (280/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.937273884 seconds)
    (281/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.331143278 seconds)
    (282/481) benchmarking ("sumlogical_view", "BitMatrix")...
    done (took 4.429412498 seconds)
    (283/481) benchmarking ("mapr_access", "Matrix{Float32}")...
    done (took 3.118962035 seconds)
    (284/481) benchmarking ("sumrange_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.944251247 seconds)
    (285/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.149525368 seconds)
    (286/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.055192952 seconds)
    (287/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.853522417 seconds)
    (288/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.412537001 seconds)
    (289/481) benchmarking ("sumelt", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.516178218 seconds)
    (290/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.635514744 seconds)
    (291/481) benchmarking ("sumeach", "Array{Float64, 3}")...
    done (took 1.946947927 seconds)
    (292/481) benchmarking ("sumlinear", "Matrix{Int32}")...
    done (took 2.138747134 seconds)
    (293/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.325735947 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.993684365 seconds)
    (295/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.966511623 seconds)
    (296/481) benchmarking ("sumlinear", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.013865969 seconds)
    (297/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.211876922 seconds)
    (298/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.918109375 seconds)
    (299/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.936352556 seconds)
    (300/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.458095252 seconds)
    (301/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.033402631 seconds)
    (302/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.176654237 seconds)
    (303/481) benchmarking ("sumvector", "BitMatrix")...
    done (took 2.256331165 seconds)
    (304/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 6.253956044 seconds)
    (305/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.401020682 seconds)
    (306/481) benchmarking ("mapr_access", "Matrix{Int32}")...
    done (took 3.185233275 seconds)
    (307/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.955646834 seconds)
    (308/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.161279592 seconds)
    (309/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.313903251 seconds)
    (310/481) benchmarking ("sumeach", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.182628556 seconds)
    (311/481) benchmarking ("sumelt", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.94042262 seconds)
    (312/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.032495926 seconds)
    (313/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 5.151404939 seconds)
    (314/481) benchmarking ("sumrange", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.222184948 seconds)
    (315/481) benchmarking ("sumlinear_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.815940905 seconds)
    (316/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.648143433 seconds)
    (317/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 2.17955114 seconds)
    (318/481) benchmarking ("sumrange_view", "Matrix{Float32}")...
    done (took 1.943190223 seconds)
    (319/481) benchmarking ("sumeach", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.866599512 seconds)
    (320/481) benchmarking ("sumelt", "Matrix{Int32}")...
    done (took 2.147261425 seconds)
    (321/481) benchmarking ("mapr_access", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.434048124 seconds)
    (322/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.29300914 seconds)
    (323/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.476397035 seconds)
    (324/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 4.87970759 seconds)
    (325/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.96047721 seconds)
    (326/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.416434218 seconds)
    (327/481) benchmarking ("sumvector_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955283627 seconds)
    (328/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.872430536 seconds)
    (329/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.938689838 seconds)
    (330/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.886243764 seconds)
    (331/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.152998553 seconds)
    (332/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 4.874504525 seconds)
    (333/481) benchmarking ("sumcolon_view", "Matrix{Float32}")...
    done (took 1.969790251 seconds)
    (334/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.494630983 seconds)
    (335/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.271464902 seconds)
    (336/481) benchmarking ("sumvector", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.34955108 seconds)
    (337/481) benchmarking ("sumcolon", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.936330286 seconds)
    (338/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.971221289 seconds)
    (339/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.865900501 seconds)
    (340/481) benchmarking ("sumlogical", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.721435898 seconds)
    (341/481) benchmarking ("sumlinear", "Matrix{Float32}")...
    done (took 3.888059911 seconds)
    (342/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 4.052535856 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.981418483 seconds)
    (344/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.00974671 seconds)
    (345/481) benchmarking ("sumcolon_view", "Matrix{Int32}")...
    done (took 1.942976784 seconds)
    (346/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.142921492 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.379185332 seconds)
    (348/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.98586694 seconds)
    (349/481) benchmarking ("mapr_access", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.469240509 seconds)
    (350/481) benchmarking ("sumcolon", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.147947126 seconds)
    (351/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242659503 seconds)
    (352/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.214670007 seconds)
    (353/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.257305795 seconds)
    (354/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.900466759 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210713148 seconds)
    (356/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.884220996 seconds)
    (357/481) benchmarking ("sumrange", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.370127818 seconds)
    (358/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.019075015 seconds)
    (359/481) benchmarking ("sumelt", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.032743099 seconds)
    (360/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.94756229 seconds)
    (361/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.94447405 seconds)
    (362/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.212858862 seconds)
    (363/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.360814532 seconds)
    (364/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.331143291 seconds)
    (365/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 1.972361074 seconds)
    (366/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.3595499 seconds)
    (367/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 7.048724237 seconds)
    (368/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.945027413 seconds)
    (369/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.948442183 seconds)
    (370/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 6.250697318 seconds)
    (371/481) benchmarking ("sumelt_boundscheck", "Matrix{Int32}")...
    done (took 2.171228382 seconds)
    (372/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.156009751 seconds)
    (373/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.019982957 seconds)
    (374/481) benchmarking "sub2ind"...
    done (took 7.148326031 seconds)
    (375/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.018934381 seconds)
    (376/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.457958756 seconds)
    (377/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 1.950395001 seconds)
    (378/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.946697398 seconds)
    (379/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.081824463 seconds)
    (380/481) benchmarking ("sumrange", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.786236433 seconds)
    (381/481) benchmarking ("sumlogical", "Matrix{Float32}")...
    done (took 3.748839337 seconds)
    (382/481) benchmarking ("sumvector", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.249447299 seconds)
    (383/481) benchmarking "6d"...
    done (took 3.695255601 seconds)
    (384/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.145026477 seconds)
    (385/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 5.464636505 seconds)
    (386/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.840686518 seconds)
    (387/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 4.887020127 seconds)
    (388/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.984005825 seconds)
    (389/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 6.948515844 seconds)
    (390/481) benchmarking ("sumeach_view", "Matrix{Int32}")...
    done (took 6.957711301 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 7.061871385 seconds)
    (392/481) benchmarking ("sumcartesian_view", "Matrix{Float32}")...
    done (took 2.187237641 seconds)
    (393/481) benchmarking ("sumvector", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.225416872 seconds)
    (394/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.710538014 seconds)
    (395/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 1.955587903 seconds)
    (396/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.9457442 seconds)
    (397/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.84302457 seconds)
    (398/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 3.718967587 seconds)
    (399/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 5.181925937 seconds)
    (400/481) benchmarking ("sumlinear_view", "BitMatrix")...
    done (took 6.95178307 seconds)
    (401/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.995559963 seconds)
    (402/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 1.948396042 seconds)
    (403/481) benchmarking ("sumcartesian_view", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.062285796 seconds)
    (404/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.955767846 seconds)
    (405/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.215809429 seconds)
    (406/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.003881091 seconds)
    (407/481) benchmarking ("sumlinear", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.945656134 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 6.947934618 seconds)
    (409/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.158969303 seconds)
    (410/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.460035883 seconds)
    (411/481) benchmarking ("sumcartesian_view", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.963306418 seconds)
    (412/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.645061139 seconds)
    (413/481) benchmarking ("sumeach", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.148499375 seconds)
    (414/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.955335704 seconds)
    (415/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.424555665 seconds)
    (416/481) benchmarking ("sumcolon", "BitMatrix")...
    done (took 2.408842445 seconds)
    (417/481) benchmarking ("sumcolon", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.963747438 seconds)
    (418/481) benchmarking ("sumcartesian_view", "Array{Float64, 3}")...
    done (took 1.983634185 seconds)
    (419/481) benchmarking ("sumcolon", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 4.904180607 seconds)
    (420/481) benchmarking ("sumrange", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.192199493 seconds)
    (421/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 3.469047394 seconds)
    (422/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.892528494 seconds)
    (423/481) benchmarking ("sumeach", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.940279325 seconds)
    (424/481) benchmarking ("sumlinear_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 2.172728184 seconds)
    (425/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.94950245 seconds)
    (426/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.218876793 seconds)
    (427/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.220993285 seconds)
    (428/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.948333884 seconds)
    (429/481) benchmarking ("sumcartesian", "Matrix{Int32}")...
    done (took 5.164413003 seconds)
    (430/481) benchmarking ("sumrange", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 6.218125565 seconds)
    (431/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228794417 seconds)
    (432/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 1.958277958 seconds)
    (433/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.813304995 seconds)
    (434/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32, 2}")...
    done (took 6.959157574 seconds)
    (435/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.216733834 seconds)
    (436/481) benchmarking ("mapr_access", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, Array{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 2.005501961 seconds)
    (437/481) benchmarking ("sumlinear", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.948443966 seconds)
    (438/481) benchmarking ("sumcartesian_view", "SubArray{Float64, 3, Array{Float64, 3}, Tuple{UnitRange{Int64}, UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.957365494 seconds)
    (439/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 6.486979873 seconds)
    (440/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 3.719869369 seconds)
    (441/481) benchmarking ("sumlogical_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.424705986 seconds)
    (442/481) benchmarking ("sumvector_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.100190839 seconds)
    (443/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 4.342033868 seconds)
    (444/481) benchmarking ("sumlogical", "SubArray{Int32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.820563986 seconds)
    (445/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.709077546 seconds)
    (446/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.952551943 seconds)
    (447/481) benchmarking ("sumrange_view", "Matrix{Int32}")...
    done (took 1.953843757 seconds)
    (448/481) benchmarking ("sumlogical", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.661919453 seconds)
    (449/481) benchmarking "2d"...
    done (took 2.673419839 seconds)
    (450/481) benchmarking ("sumeach_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 2.163080865 seconds)
    (451/481) benchmarking "7d"...
    done (took 2.235867198 seconds)
    (452/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 4.898909596 seconds)
    (453/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32, 2}")...
    done (took 2.151487628 seconds)
    (454/481) benchmarking ("sumcartesian", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 5.654501437 seconds)
    (455/481) benchmarking ("sumrange", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 6.802281638 seconds)
    (456/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 2.216541344 seconds)
    (457/481) benchmarking ("sumelt", "SubArray{Float32, 2, Matrix{Float32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.877244067 seconds)
    (458/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.951719691 seconds)
    (459/481) benchmarking ("sumrange", "SubArray{Int32, 2, Matrix{Int32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 6.369787727 seconds)
    (460/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 2.214083891 seconds)
    (461/481) benchmarking ("sumelt", "SubArray{Float32, 2, Array{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.886836275 seconds)
    (462/481) benchmarking ("sumcolon_view", "SubArray{Float32, 2, Matrix{Float32}, Tuple{UnitRange{Int64}, UnitRange{Int64}}, false}")...
    done (took 1.956182743 seconds)
    (463/481) benchmarking ("sumcartesian_view", "BitMatrix")...
    done (took 6.566075703 seconds)
    (464/481) benchmarking ("mapr_access", "BitMatrix")...
    done (took 6.949470367 seconds)
    (465/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 2.035108357 seconds)
    (466/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.95012714 seconds)
    (467/481) benchmarking ("sumlinear", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.078615307 seconds)
    (468/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32, 2}")...
    done (took 2.220430893 seconds)
    (469/481) benchmarking ("sumlogical_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 4.378344698 seconds)
    (470/481) benchmarking ("sumcartesian", "Array{Float64, 3}")...
    done (took 2.070334434 seconds)
    (471/481) benchmarking ("sumelt", "SubArray{Int32, 2, Array{Int32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 3.590960706 seconds)
    (472/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}")...
    done (took 3.721199156 seconds)
    (473/481) benchmarking ("sumeach_view", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 3}, Tuple{Int64, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.891488116 seconds)
    (474/481) benchmarking ("sumcolon_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 1.991717678 seconds)
    (475/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 2}")...
    done (took 5.760304325 seconds)
    (476/481) benchmarking ("sumlinear_view", "SubArray{Int32, 2, Base.ReshapedArray{Int32, 2, SubArray{Int32, 3, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}, Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}, Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, false}")...
    done (took 2.513073563 seconds)
    (477/481) benchmarking ("sumlogical", "SubArray{Float32, 2, BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32, 2}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, false}")...
    done (took 3.738579087 seconds)
    (478/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.974617565 seconds)
    (479/481) benchmarking ("sumelt", "SubArray{Float32, 2, Base.ReshapedArray{Float32, 2, SubArray{Float32, 3, Array{Float32, 3}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}, Tuple{}}, Tuple{Base.Slice{Base.OneTo{Int64}}, UnitRange{Int64}}, true}")...
    done (took 1.968825472 seconds)
    (480/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32, 2}")...
    done (took 3.87745652 seconds)
    (481/481) benchmarking ("sumrange_view", "SubArray{Int32, 2, Matrix{Int32}, Tuple{Base.Slice{Base.OneTo{Int64}}, Base.Slice{Base.OneTo{Int64}}}, true}")...
    done (took 1.955572776 seconds)
  done (took 1665.050162389 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("comprehension_indexing", "Vector{Float64}")...
    done (took 7.013481494 seconds)
    (2/8) benchmarking ("comprehension_iteration", "Vector{Float64}")...
    done (took 7.003617038 seconds)
    (3/8) benchmarking ("collect", "Vector{Float64}")...
    done (took 7.006236784 seconds)
    (4/8) benchmarking ("collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 6.992885682 seconds)
    (5/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.041896589 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.065937552 seconds)
    (7/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64, Base.TwicePrecision{Float64}, Base.TwicePrecision{Float64}}")...
    done (took 7.008077004 seconds)
    (8/8) benchmarking ("comprehension_collect", "Vector{Float64}")...
    done (took 6.964329282 seconds)
  done (took 57.974164534 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.959058496 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.969502123 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.962699762 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.955971522 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.959817598 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.959759333 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.11168673 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.961227254 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.958083926 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.961951816 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.957468128 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.955748012 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240908763 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.968538964 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.954710877 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.95328523 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.957920723 seconds)
  done (took 75.654147986 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.994188719 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.043350096 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.016711263 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.959912911 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.402580396 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.962332405 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.774935234 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.998132664 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.968489943 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.183963441 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.249657071 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.007735673 seconds)
  done (took 90.444140848 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.962497492 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.959313303 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.959816376 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.957205145 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.957081336 seconds)
  done (took 11.683508248 seconds)
done (took 2182.506444988 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.20372593 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.016179655 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.052808787 seconds)
  done (took 5.951207155 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "ComplexF64"...
    done (took 2.107694952 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.15218846 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.264460663 seconds)
    (4/4) benchmarking "ComplexF32"...
    done (took 2.024924451 seconds)
  done (took 10.439205956 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.213036996 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.324074156 seconds)
  done (took 6.418158067 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.307684268 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.967399979 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.326227717 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.963690745 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.96181581 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.963515357 seconds)
  done (took 22.779983906 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.961560642 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.963656088 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.962818484 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.959976517 seconds)
  done (took 9.732223867 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.959658542 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.71889388 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.960909181 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.965723866 seconds)
  done (took 21.487615737 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.104656297 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.070999203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.156125683 seconds)
  done (took 8.215545943 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 2.183005752 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.7907406 seconds)
  done (took 6.860215205 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.101249479 seconds)
  done (took 3.985031356 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.988473766 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.232614452 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.435853265 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.477344615 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.546909331 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.675204735 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.251316346 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179907871 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.37876213 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.376734622 seconds)
  done (took 25.428492971 seconds)
done (took 136.988676636 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.291193757 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.968761691 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.158407366 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.308162048 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.179272249 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.158247246 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.176092505 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.303639195 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.976331985 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.971212861 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.308767514 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.178583935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.126214452 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974795 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.129234043 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.971107673 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.179766228 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.305098144 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.991674648 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.234342763 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.186635828 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.964782763 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.158944035 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.968426955 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.182393571 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.109478451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.499684134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.970178525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.144438081 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.511954857 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.106338076 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.378028068 seconds)
  done (took 170.959134778 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.962444314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.961011707 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.962536987 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.961944111 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.221855515 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.961504127 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961886477 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.959989318 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.136634294 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.126771704 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.963832608 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.214955475 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.957552858 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.959296457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966106059 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.961095385 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.279199829 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.960735023 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.961564547 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961734749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.963335924 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.060617697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96206445 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.083200482 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.27112821 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.964234955 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.963259379 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961104877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.962230246 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.959788282 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.962226184 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.961451794 seconds)
  done (took 210.366468122 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.938468146 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.960725858 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.959824227 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.961082791 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.964944649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.966067464 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.961033375 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.963460302 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.670423334 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.66005779 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.964306974 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.964545589 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.96622724 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.964698465 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.966276952 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.962458063 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.962675709 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.962509812 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.968368659 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.964313214 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.963816755 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.630920158 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.962060817 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.636680251 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.963592681 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.962995737 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.965188999 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.966053479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.963742036 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.964861366 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.966546062 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.964907389 seconds)
  done (took 223.455875879 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.207767085 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.969194351 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.968747929 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 3.017643123 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.967520306 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.964922501 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.973352608 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.238762984 seconds)
  done (took 20.201087489 seconds)
done (took 626.876509914 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.285446987 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.667310027 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.10720751 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.988905258 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.202306777 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.025407321 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.982417594 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.045176076 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.806355263 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.049482121 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.384530202 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.988056366 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.747212009 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.003703576 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.107278871 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.037406623 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.337603947 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.679534875 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.118640377 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.634657639 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.142573541 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.899732077 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.055747385 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.841745332 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.400882675 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.937252491 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.980214959 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.340162903 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.988737687 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.148216576 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.564394367 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.240646328 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.993188099 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.987294409 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.03556012 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.014746356 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.181867147 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.988099453 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.102514202 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.697253529 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.635635376 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.685386341 seconds)
  done (took 103.9542079 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.976883188 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.976414941 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.97549492 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.97392943 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.98344939 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.975073038 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.975600983 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.972866602 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.975936472 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.975805222 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.977552196 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.984285171 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.976708734 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.98427271 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.973278656 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.977400321 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.976018442 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.98622392 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.978008165 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.976825924 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.977672183 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.974243209 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.973371683 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.975956411 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.978782863 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.975405317 seconds)
  done (took 53.314756872 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.973149385 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.160617498 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.20618163 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.985114448 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.972396235 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.97484646 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.00038773 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.976871568 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.973698185 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.973231606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.088906338 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.973807235 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.986507036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.212530573 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.982015678 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.973926586 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.975136256 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.97440116 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.16755538 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.984353755 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.00076032 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.978807912 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.001587074 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.986897831 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.979594583 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.975392149 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.976517438 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.412752498 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.980290211 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.090750591 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.013244314 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.001932211 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.297799484 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.222086229 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.019346275 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.981377634 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.975526129 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.096341868 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.977164756 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.973429587 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.002263734 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.978014206 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.21849916 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.486698242 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.983301997 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.975965898 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.406247834 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.105480511 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.0101747 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984160804 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.222150994 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.985432522 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.974821763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.97588393 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.008633776 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.986570325 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.975944439 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.229362131 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.987809035 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.000801908 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.978631654 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.978861525 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.175578639 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.982405112 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.160921757 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.979488221 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.980734808 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.976148734 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.221486352 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.986403038 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.507132595 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.983821889 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.975681595 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.094399945 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.163785422 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.428525469 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.982759866 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.173511171 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.312233564 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.005341949 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.984747879 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.395075943 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.008216425 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.983477127 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.976059114 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.980754475 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.978219387 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.021967875 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.000259318 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.417609535 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.503266891 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.237882715 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.011734499 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.987908862 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.97472534 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.230520303 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.984806302 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.977853289 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.207995701 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.514024684 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.983934678 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.983719592 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.484961624 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.985267246 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.004339137 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.988165706 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.231362321 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.988566981 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.026944564 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.97957515 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.982269988 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.979619874 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.005960041 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.985906673 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.978822812 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.478353753 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.112296322 seconds)
  done (took 244.464312036 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.97653101 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.976573707 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.976830205 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.972599129 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.979457005 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.979176379 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.978413255 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.976809847 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.978678889 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.981016949 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.978640257 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.976271375 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.97986968 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.980408204 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.514308219 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.995147772 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.48726549 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.998436067 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.994077099 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.997408212 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.598563885 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.998304535 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.996888185 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.995829533 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.998964024 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.993300369 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.000838677 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.037367454 seconds)
  done (took 171.20396064 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.998894933 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.077052522 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.007773349 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.045707256 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.00820666 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.998728511 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.172586572 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.016474539 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.005231968 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.998369877 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.998255418 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.029316983 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.004990617 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.096690517 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.030016887 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.103607228 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.097421333 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.002440187 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.000367647 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.998234369 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.045754542 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.008987872 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.033521108 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.063397989 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.011546582 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.057943881 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.008957387 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.000132874 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.999469928 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.132842477 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.015932972 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.03201647 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.032577527 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.020213317 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.116735941 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.111317295 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.10093259 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.10159515 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.001886393 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.001269354 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.001377163 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.001763604 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.056328083 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.010059748 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.001940007 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.115476672 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.019311093 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.004117742 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.000172699 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.000803218 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.012300258 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.019066037 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.035627771 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.121920359 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.047071332 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.02516818 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.095092098 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.118354816 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.002342214 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.096781135 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.008522436 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.117049944 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.022539102 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.002668426 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.002634384 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.006920835 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.05129701 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.109362688 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.104878561 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.007756084 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.09391823 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.055531393 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.016463902 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.000943244 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.004021415 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.058708712 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.107480004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.056737061 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.060283151 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.037934422 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.010603837 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.003551101 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.002321482 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.031311661 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.009929985 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.115551477 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.1165379 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.006203414 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.003211674 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.002806491 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.001119899 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.027650628 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.063822441 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.044209086 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.107654177 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.0378316 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.038086539 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.008470353 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.01604947 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.010095695 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.035800911 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.009826944 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.018218804 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.284584415 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.036706458 seconds)
  done (took 216.266863089 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.369410625 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.049421086 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.075686782 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.274008031 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.382932977 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.89608551 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.043309152 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.051998406 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.060154317 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.177813218 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.112657794 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.092078047 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.040119273 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.024472498 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.048635404 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.063135106 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.07715636 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.348582471 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.239484217 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.530710486 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.043216815 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.308480226 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.381965381 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.423044698 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.101155178 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.4448268 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.629685764 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.147230113 seconds)
  done (took 66.370234578 seconds)
done (took 857.467350379 seconds)
SAVING RESULT...
DONE!
