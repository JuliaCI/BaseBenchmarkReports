cset: moving following pidspec: 6758
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.350110584 seconds)
loading group "string"... done (took 0.546642298 seconds)
loading group "linalg"... done (took 7.252812062 seconds)
loading group "parallel"... done (took 0.162063652 seconds)
loading group "find"... done (took 1.095904616 seconds)
loading group "tuple"... done (took 1.737541702 seconds)
loading group "dates"... done (took 1.282779475 seconds)
loading group "micro"... done (took 0.216321416 seconds)
loading group "io"... done (took 0.913918795 seconds)
loading group "scalar"... done (took 36.16357293 seconds)
loading group "sparse"... done (took 11.45897245 seconds)
loading group "broadcast"... done (took 0.896996456 seconds)
loading group "union"... done (took 11.818732574 seconds)
loading group "simd"... done (took 4.273716609 seconds)
loading group "random"... done (took 8.767155681 seconds)
loading group "problem"... done (took 1.855291731 seconds)
loading group "array"... done (took 20.273828457 seconds)
loading group "misc"... done (took 1.614632533 seconds)
loading group "sort"... done (took 3.190527072 seconds)
loading group "collection"... done (took 16.609563743 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.47684641 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122014833 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.112753664 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117214494 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.142259223 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.113573037 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121833995 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.082998363 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.843789369 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.146012936 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118351603 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.41227199 seconds)
done (took 5.14347004 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.17075506 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082090363 seconds)
    (2/2) benchmarking "String"...
    done (took 0.080073497 seconds)
  done (took 1.326923718 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064332405 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.119491429 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065810241 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066802123 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066552419 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065225908 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065423523 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065489837 seconds)
  done (took 1.680763954 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.072142703 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068411806 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068317897 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069177043 seconds)
  done (took 1.445642627 seconds)
done (took 5.865458895 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.764949141 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.205717209 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184336449 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.397450616 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128456756 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153888536 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.647178074 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.320887936 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186589167 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.081872599 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.104418079 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316567817 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.106869273 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.620128978 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075232039 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.090388837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138890735 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.400189701 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067462215 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081412925 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088523034 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127708373 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085241963 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.074008713 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.141763143 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.06801936 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.135576317 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07946556 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066071793 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206882706 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171847658 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.651411936 seconds)
  done (took 10.173124161 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095249346 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096786669 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068081906 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.136293242 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097031119 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069258404 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070646989 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067063013 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086734141 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.127900204 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089174497 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.101230467 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065235977 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068348236 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08448311 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.204357957 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082369785 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08110275 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.070095017 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075233203 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.118737262 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077800972 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.078108555 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077666684 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.127864919 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179534879 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099162544 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.098817738 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067402471 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.08039535 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114799668 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.126939208 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064941765 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066136972 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123988126 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094087574 seconds)
  done (took 4.636577063 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.297831297 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140044205 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089711714 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13249659 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.064481142 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.106435831 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.065362635 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.080289651 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.200669987 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.357449491 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.572964729 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110735034 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103952423 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067431713 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068265738 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.066822404 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.325164433 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.107903714 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103647966 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080585437 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06949218 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068494793 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342133834 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067280027 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.063223732 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068133896 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057419708 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.123245085 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067886635 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.929189113 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.125793976 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.067054155 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101407499 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.162332084 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.087281871 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140641703 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.196657832 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.064262978 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.150448987 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.069567316 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.066435687 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.082648111 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10329681 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.11313919 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.065578421 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066189448 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.159654404 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064110307 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079020178 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.994798919 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152535788 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093895643 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.063879845 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.248825064 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.08502938 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069325824 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06487364 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.17927567 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.135194035 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067588464 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.065996047 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067670085 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068982726 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.366701968 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065978248 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.993176552 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064386522 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076340736 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067160615 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069890094 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069313855 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072734783 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072181685 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.087407532 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066242688 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.075043997 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.065549569 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065132249 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.066200826 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083736165 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.349349407 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066008731 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.06828543 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064234831 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063838371 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089324842 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085134642 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09620187 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.066533872 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.064684488 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099621603 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06798456 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.167279107 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.10585254 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066686353 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083646305 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.068633446 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.11316479 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.066472914 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064171972 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.107550287 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.070642714 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096532471 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.06970927 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098686761 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080392585 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068516643 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.3938124 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064986735 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064967036 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.068012419 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065544522 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067073127 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.066584507 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080744895 seconds)
  done (took 21.178298113 seconds)
done (took 38.451844611 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.234909862 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.07554494 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.075838286 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076063187 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.075921445 seconds)
  done (took 1.795560859 seconds)
done (took 3.034534435 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119173881 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098086306 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064216997 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094947797 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064040824 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099760041 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099040747 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080458751 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098745612 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064195016 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095620107 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.06393017 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064124944 seconds)
  done (took 2.366723302 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081975843 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082916055 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069643174 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08108665 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063309141 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081453713 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080587634 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08782507 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080579362 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071638289 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064719918 seconds)
  done (took 2.080398841 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081119007 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082719647 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069729809 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081380544 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066347437 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081086131 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08036507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.084924455 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080759392 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073072848 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063315261 seconds)
  done (took 2.073558836 seconds)
done (took 7.749738613 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077614108 seconds)
  done (took 1.300346834 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.592257702 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.10724535 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081289984 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.112698044 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.183281394 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.121203031 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.283669699 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087206992 seconds)
  done (took 8.970858745 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.088115714 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081302595 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070003329 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.0725379 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071431549 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.07167913 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.071516884 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071569347 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.06919131 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069423192 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.068296714 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068127582 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069298052 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068531661 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.071362288 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070354798 seconds)
  done (took 2.445340606 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.0917839 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.090468647 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07307069 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.074706584 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071944056 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071786011 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.073930846 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072937095 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070665241 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071899283 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.074543309 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073410739 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.0717367 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.065103158 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.074594916 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.075638101 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071010584 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073875717 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075043598 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075111129 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.07457229 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064688741 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.07141551 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.073902775 seconds)
  done (took 3.1069323 seconds)
done (took 17.054722006 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.114798342 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071073554 seconds)
  done (took 1.416330434 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081735554 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08367082 seconds)
  done (took 1.401693142 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08438909 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.066396535 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.093541649 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079632175 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.066157816 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066048102 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.090548514 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.066262046 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066004474 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066524044 seconds)
  done (took 1.982603467 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069295605 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079093867 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071380149 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081614909 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074568485 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064312424 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.07317354 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067986116 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078793086 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062850677 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.0717702 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082932674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072351085 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.084534188 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.072739115 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069187689 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.071847728 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.06808564 seconds)
  done (took 2.556161526 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066277597 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.067100753 seconds)
  done (took 1.376384286 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067600217 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063554396 seconds)
    (3/7) benchmarking "month"...
    done (took 0.068004257 seconds)
    (4/7) benchmarking "year"...
    done (took 0.066980686 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.06391199 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062861391 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.063769129 seconds)
  done (took 1.695907367 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.379805394 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109223861 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.290844686 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.070492649 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081231009 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.248793 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065526181 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069978649 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070439443 seconds)
  done (took 2.66782883 seconds)
done (took 14.341359583 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.077932801 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.085225785 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.095220846 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.360307448 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091443345 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.06543211 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.11332206 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.194743995 seconds)
done (took 2.338304619 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212971702 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.612766782 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.388013065 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.195969007 seconds)
  done (took 2.442303539 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.326185781 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.086109335 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.058196245 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066547667 seconds)
  done (took 1.790237912 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066569114 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068051593 seconds)
  done (took 1.387270262 seconds)
done (took 7.086058915 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065953256 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065309786 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.063735937 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08427763 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065131226 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.063278149 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063459306 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063283552 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.06548048 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.065375747 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065780012 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065445022 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065444367 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065423836 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063407782 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063005348 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065616064 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065603107 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064345905 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063347136 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063183767 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065485485 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063107659 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063090267 seconds)
  done (took 2.854488286 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.083071415 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066266293 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072073524 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071781457 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069988767 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.071008699 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071445205 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066449524 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071456982 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067769039 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070384384 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.070139018 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067889863 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.070202617 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067936445 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069938062 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.071449983 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066652414 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068119577 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070904713 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.071054862 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066207694 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069744863 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070587272 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.06945475 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071670787 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067825695 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.066498894 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070824686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.070380329 seconds)
  done (took 3.361593658 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069759418 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.062991353 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.063997395 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.069632143 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063844253 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.065503224 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063299323 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063807008 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064965059 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063362437 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064810752 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063573753 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063416788 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064411918 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.064387089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067017929 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078590487 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.06387864 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.065918467 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.064297303 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066613469 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063549788 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063808984 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063292313 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.170453653 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.062914795 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064093847 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.06342154 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063844664 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063109342 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066084733 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066951318 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063176144 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069638115 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.067051078 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.062939218 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067153884 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063007159 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064048034 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063219772 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.062833445 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063174781 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063149354 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069828622 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063187085 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064986316 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063611116 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064548284 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063558477 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066231653 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062939482 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063228821 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065626556 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064715834 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.06724081 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062868954 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064724578 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062831207 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064344816 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062923422 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.06314776 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062665932 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065281409 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063703585 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077493667 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069553218 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063226312 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064994391 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064188407 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065846998 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065269247 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076291895 seconds)
  done (took 6.06261864 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.090914707 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086617174 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065595682 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.064923468 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061805755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.064242839 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.06765739 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063998068 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065463669 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.070613078 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064418858 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065419498 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065059726 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076262587 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064428697 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065033665 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070651583 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062057304 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064161878 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067460365 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063952319 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06730983 seconds)
  done (took 2.773230663 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157359236 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069821177 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105956302 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073414333 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067628653 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.073276931 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069684465 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070852484 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070158885 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068510569 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068097081 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070873002 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067870277 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067796483 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068494602 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.068606669 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070120611 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068281052 seconds)
  done (took 2.646279684 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.0774783 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065515684 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086591735 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066505498 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065836866 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068779727 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070696827 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074708734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067998759 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.066151565 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.074636728 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067945388 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.06846154 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066173256 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068531156 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.066007002 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068196991 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065804165 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074226104 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070720788 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070656144 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073983748 seconds)
  done (took 2.817656587 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079112413 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067402197 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082845795 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06873203 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062258085 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064048621 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069745311 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.066837821 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.070096459 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067539578 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065982712 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064203713 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069484453 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0661983 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069182162 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066018957 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067567298 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066125446 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067593792 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061776246 seconds)
  done (took 2.636101131 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085972605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067920335 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06775398 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076286781 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067293938 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067343983 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075475081 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067285698 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.06754578 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.087078934 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067688144 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067312469 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.075330041 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072533387 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.06692834 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075644407 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.075234592 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075413062 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067290829 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067960101 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.087448611 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067429511 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.075752731 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067207881 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06715236 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067079497 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067178185 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072326754 seconds)
  done (took 3.287422386 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066407226 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065343579 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063665823 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.0628726 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063584358 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.06354891 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063335354 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.06383846 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065872998 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063669064 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065734163 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.066062863 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065615976 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06566072 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.066939807 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065901264 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065807345 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063766743 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063227862 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063420992 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.06574683 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065790257 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065716261 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.06338379 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06311916 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065565212 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063552588 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063260702 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065818382 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063082779 seconds)
  done (took 3.217338893 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.075123364 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072746019 seconds)
  done (took 1.426339688 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063349183 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08041493 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064041257 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069810051 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070030462 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066234071 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073769347 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070171282 seconds)
  done (took 1.832976526 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.081492918 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077502318 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.067713936 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.080178747 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076524775 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082807775 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.132690697 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.067374802 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072447325 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064280173 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.079549984 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065484879 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.072187095 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066068342 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071577185 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072248381 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.063916417 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.072399103 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068325426 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064673363 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067313838 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074876495 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068285122 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.0615829 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.066939863 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.087922471 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07759051 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065723847 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069068863 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.073584933 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071696853 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060614353 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.066104411 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066818627 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.064226899 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.07545312 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081004949 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069034542 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074257424 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066785858 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.077342329 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061244845 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070998463 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.073016127 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075497261 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066625366 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066732565 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061461199 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063701253 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068115886 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061453279 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065965578 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060702079 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074818224 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069437103 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076757706 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064835576 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067700697 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068557309 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.06928637 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.0728034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06754546 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069438197 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.06581028 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075428816 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069995778 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074771297 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061178543 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060221701 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063804771 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.075321468 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089634266 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072114218 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066796949 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066996296 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063754944 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068932852 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067131201 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.07168191 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072559156 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.066043841 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071863973 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073267919 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066128131 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068468054 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074654441 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064130784 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.068813242 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063867043 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082555837 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065034904 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.063987236 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064039899 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.076347802 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069473896 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065870087 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06395338 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073233523 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060375093 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.067257481 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.067507614 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066476256 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075918227 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070755174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07132662 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.074511736 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073287879 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065856303 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068291509 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062379229 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066163235 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064674803 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.072613477 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05957161 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068167434 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.066440734 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.065923959 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199700119 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064962749 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067252418 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074799142 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.071712149 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064702204 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063164589 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069389595 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066160367 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.07014614 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.075128832 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.065326924 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061844167 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.06189462 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070687408 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.066437121 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070072719 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071488852 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.069161453 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061351054 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064798778 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072726376 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075281765 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.067424489 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067749949 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072957869 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.067725113 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066727085 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073132624 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.06900468 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065707643 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071825789 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067469515 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061996456 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069754046 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.069055572 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064913516 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070593573 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070004859 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068506628 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.067301191 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065235311 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074763498 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067669339 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065660023 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.06635743 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064799512 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.077066489 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068162004 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061404612 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.063652729 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076845647 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063768778 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.066664088 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065738457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068393447 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067257947 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.064739725 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.065705905 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068773719 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.077386944 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071770115 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066878234 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071807479 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077342116 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066127751 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.06897595 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.066331263 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067569006 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067553521 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074808882 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071651437 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070757425 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068715142 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062982373 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071956137 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073657926 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065682188 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06407545 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065081502 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070782572 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071862558 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070816044 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067433225 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064521311 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066981389 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069761847 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068858276 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.06628716 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066690092 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073671558 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064773769 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073784969 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067668168 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.076560108 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069640354 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061691099 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069727557 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064419305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.072564598 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061759181 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064560577 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066016047 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067813693 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065725469 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069192019 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.060738491 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073212029 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.07355196 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066661082 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065672091 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066475659 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072722351 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.0675728 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069151545 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.069049478 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.071633606 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075614907 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.065185256 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069074965 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.075315681 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.194969039 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.061710381 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072742959 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065238543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.066333218 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.06623697 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064933954 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06975053 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.076097882 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073553605 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.06031597 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068848369 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065454839 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065867659 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062468933 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.071100377 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069302461 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068084832 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07372031 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067341292 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067853709 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070536977 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067058033 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067963161 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068759608 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069811901 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.0680528 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068554196 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.06592217 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069579661 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065848478 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064960862 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.06857662 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066886544 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.06716681 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072608813 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.066004394 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066373353 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069212949 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067806718 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067200361 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.06722131 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065527052 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069997234 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067393494 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066381681 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068622676 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061759131 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073611821 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065700153 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073704048 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066865204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063317451 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074808439 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.069059919 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073094181 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067515087 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067174549 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068046169 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066532493 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069938285 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073437822 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.064893474 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.077123439 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074444827 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067751033 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068663997 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066886583 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067807636 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064996473 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067634026 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067561588 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.0668941 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066616459 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.071276875 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068733859 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066422593 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067864577 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067236871 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066286943 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067123581 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.060604477 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066269562 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065344269 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.06593007 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075730835 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.06714119 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065850322 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065602323 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067508517 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.065253624 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063160232 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.075190725 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076738869 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067115777 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07360053 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065807278 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068185148 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077239801 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061213818 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064924821 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.064231066 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064521744 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073646978 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067304287 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075592193 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066686676 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065540832 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063927027 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066696969 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064589634 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060465065 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06394493 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069803351 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065335273 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065143763 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066326335 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068420894 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066420464 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074575121 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.064806134 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.066148605 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.065816891 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.062623224 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.195616727 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066660024 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.069880895 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067184079 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.064805164 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064385769 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066337045 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067901775 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068370523 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.066930527 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067902891 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075965444 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066136829 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.070763656 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069950508 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061792631 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.070200969 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067402232 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.066679782 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065718891 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071376591 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069966553 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068535239 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.076347302 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066632548 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068116 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067283598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.064541835 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067082425 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066921126 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066890546 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066816304 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068733653 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074927447 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065054514 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069584067 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06669774 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067004976 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.073178383 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067808106 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.069983032 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.073363167 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066629037 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.06888414 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074594001 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.07151103 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069905207 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068786634 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068276692 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07226047 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065598024 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073660597 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067159338 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067873734 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06855337 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065303418 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067273535 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066842931 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.0658139 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.072980384 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.06779084 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066350083 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065678332 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064530104 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068064029 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070870174 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074616738 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069603719 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.06983316 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061840482 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063431133 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068058705 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064606891 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068426689 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.06866687 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072230197 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068700133 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.066387938 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065234319 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.074625859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07162304 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.069783392 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064145736 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070186578 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067126454 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068192646 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067154906 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.066518177 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067663932 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.070299665 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067982494 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065487286 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072907629 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.069504343 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067262816 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.067493296 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.066972877 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.066432573 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.061962824 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06688038 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068456732 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071829427 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068563399 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066906096 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.077057688 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064351693 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.067642312 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069985959 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066654734 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.071441843 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061917256 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067987837 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067514955 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067651879 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062060074 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065514907 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.0643598 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068729423 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065413911 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.06145333 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.075798797 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.074256895 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.068100359 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.064602026 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.064374272 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.191871674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062570598 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066761897 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06811405 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068987176 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07680668 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066437406 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.06612443 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062114584 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066992469 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069478744 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069625799 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064585181 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062227557 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.065994132 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070008534 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072976432 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066163558 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067646882 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069795088 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.069364749 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065344193 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070566213 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.06406028 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070551882 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079719323 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.06812572 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067862317 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073150494 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074686864 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067464631 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062597504 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.06759287 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069446585 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.067565084 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067509197 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068857074 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081961986 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069920877 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066422198 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06564393 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069791906 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065920595 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074763272 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067726168 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067242063 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071334297 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068402531 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075697531 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069911175 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073795037 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070340699 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.069358398 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065184724 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068006775 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065204345 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.066047644 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067679051 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068044812 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072010109 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075261637 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066135372 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076858093 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.076056752 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.068182768 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064104807 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066466078 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06646236 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061894031 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067673242 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06500547 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064314637 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.064602548 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.064979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.066941797 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.07190631 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067249187 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.067982454 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066177361 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.060997348 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.068587857 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068833948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067177981 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063081495 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.066383015 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067550776 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.070120605 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069453871 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.063953494 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067578459 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.067777541 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067220098 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062062981 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072794761 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065355884 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.06838321 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06563387 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066394919 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.066965784 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069768791 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071567121 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067582276 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068804213 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070186292 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06887799 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063988359 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06397346 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071808792 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065223527 seconds)
  done (took 42.656695544 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.100082998 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063459599 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.062472721 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.062365543 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074292249 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063208517 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062195814 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063032558 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063498046 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065621287 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.06266797 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062162881 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071324204 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.078418613 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074683313 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067068212 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062653127 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063655815 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062267629 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.06325824 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071301322 seconds)
  done (took 2.783289613 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074664268 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.07045736 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072576498 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.076791171 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067540635 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070809219 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073033194 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070984673 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.077042705 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06777313 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077221084 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070900041 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067374957 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.067276521 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067648232 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.071306855 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076304091 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.067622347 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070845058 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.073180668 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07110116 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073335244 seconds)
  done (took 2.917586458 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.06695909 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065590591 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.068318444 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062074577 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066346895 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.069553561 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069819002 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064021664 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.069625078 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064869381 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064788808 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064991273 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.067309276 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061085809 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065524367 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063665305 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109237882 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.069330188 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.066091938 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066506607 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061550396 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067948986 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061351442 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061693231 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064766859 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069926749 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06650143 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.064282738 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06548471 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065064039 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065874694 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.06375572 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.0669999 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066731363 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.064751564 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06491158 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065604575 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065974302 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061366417 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.063789764 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066229305 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.061805768 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066299341 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.066895256 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.063949211 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063592729 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067183117 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065638879 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.060909455 seconds)
  done (took 4.59015653 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.08097689 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.109235382 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067740169 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088148998 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081080936 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075481003 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.0696026 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.089125875 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063922278 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064336658 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.081978665 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.080322883 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066079177 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070905773 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072569535 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065897977 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066918261 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06550167 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.0701262 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.065610159 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069995634 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.072019201 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080887809 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079336615 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069427092 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064782273 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065119961 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.069867373 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.078951455 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.07079877 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.070096282 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071032804 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.0806412 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071359067 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064839914 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067921554 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.081905661 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065967456 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.067975653 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063255171 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068001912 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069986112 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072424393 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081732947 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065947974 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070597101 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065614488 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.062786955 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07847187 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067876669 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073247815 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080135722 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069414835 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065952308 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070025399 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.080333635 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065353381 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.06391515 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068368222 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.077880264 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063371506 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069610642 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079243081 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067203393 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.072610791 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.079948007 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071051175 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.06944716 seconds)
  done (took 6.389870729 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074724856 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072512601 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082033205 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080447337 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072184086 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.07251739 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072413032 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.072995561 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07232998 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.077237057 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.072693109 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.093754249 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067772932 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07507667 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.072496346 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072545001 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.072731034 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.072643798 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.072424492 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072286749 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.072598738 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.080351047 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.072848437 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.08099904 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098060981 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067892872 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.072849941 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.072387511 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081361686 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.072206275 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079515445 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.07250092 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.072489144 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.080797333 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.079655003 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.0723531 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065408881 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072453053 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.072321874 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072137911 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067530479 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.080696024 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071925213 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067836894 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073078033 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072087566 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.080580092 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.079353423 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074974553 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077557146 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.072264159 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.080331656 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072027138 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072508171 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080118563 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.104485471 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08012771 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080566721 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.072638364 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08043762 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080192781 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.08649411 seconds)
  done (took 6.075277726 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083761263 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074982436 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.076573978 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061832701 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.064149275 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069861652 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.064021518 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064111399 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075093525 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.07476308 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077369599 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069867171 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073000494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.077151423 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070515873 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073494254 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070230951 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069993343 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075249044 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069669169 seconds)
  done (took 2.803353497 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.073893723 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083388376 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067002724 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072820204 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068710723 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071627234 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.067930378 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068682288 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066798404 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068836995 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.076068804 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075990575 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066695699 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0720636 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075909819 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071746818 seconds)
  done (took 2.504387118 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.075334552 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072743422 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080578982 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.066387671 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.064322601 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062499794 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065835248 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.06120014 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062550316 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077437454 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.066062544 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068222361 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.066000098 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064444286 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.062759904 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068641148 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062256916 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063303942 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.065777885 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.078226469 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.076301618 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064451792 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066498549 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066011877 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.066027129 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.07081332 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065675879 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063736453 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063014794 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.066670688 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066391717 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069850027 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.06318215 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063926214 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064531861 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.063964533 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.065683404 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066331746 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068622236 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066159942 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.063751465 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.06590483 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066025353 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067054748 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062513494 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066394588 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.062221532 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068027841 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064061664 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.066401723 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065565312 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068368646 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.066503341 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072656973 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.069714678 seconds)
  done (took 5.034894093 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079949042 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069305328 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061828159 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064661641 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069634672 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.067721771 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.06958762 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067955848 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067879345 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064500167 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068130083 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.068903913 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067907853 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069538027 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067914655 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069421577 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061902033 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067633314 seconds)
  done (took 2.5920763 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071443922 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066254832 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074239217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066160572 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066719561 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068381167 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.062039178 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064653332 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064906237 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.066108644 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066232807 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.06809974 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064860833 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.068218507 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066163536 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065868076 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.068375803 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064938106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065807717 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062309081 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068056258 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064600997 seconds)
  done (took 2.825801732 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.091672087 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.081440407 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137861877 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.078573928 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.082716214 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.071617809 seconds)
  done (took 1.906199625 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090394404 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079840375 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066870808 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088034129 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07441992 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067862891 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067671725 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067961564 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076682777 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076550487 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067874404 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076722596 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076463218 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076073774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074314177 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073805477 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067980525 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068052832 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066299364 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084773585 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068003905 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076138767 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067955478 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067309448 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067650111 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075794568 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07631293 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076267369 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067401716 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075951495 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072996549 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067630881 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076446303 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076123343 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068725173 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076202942 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067783582 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084475416 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073235256 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076268509 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068448553 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073630284 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07653154 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072508374 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076130118 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067829543 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072394418 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067570388 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067962353 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086885747 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073594707 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075937017 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073815761 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076674744 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076356146 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086507258 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076423005 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075868426 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073460032 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078871821 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075685593 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073096105 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075871526 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076366606 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073476165 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075779898 seconds)
  done (took 6.264114938 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.082496028 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085496154 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068243604 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076945271 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075761924 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067895546 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06792509 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067700798 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068082608 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067230109 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108141024 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067824837 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076444211 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076315976 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067920288 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067862623 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068034667 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07618427 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067439762 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086955975 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067893959 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075681069 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076098093 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076185636 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076799084 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073946573 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068068901 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068394661 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067785487 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068031304 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072837523 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067882418 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076102193 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067696953 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076133829 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068331329 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067933212 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072931163 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067794488 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073220692 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076133569 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084348541 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067937814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067749303 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076171652 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067398713 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067408522 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066872319 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067994335 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067202104 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076360281 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07692643 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076473681 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076319543 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068085173 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068078877 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067856819 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068064599 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067650759 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073260014 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07583708 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067638233 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086776547 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067789932 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067899262 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075924564 seconds)
  done (took 6.175033398 seconds)
done (took 129.686193674 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.181890234 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16549924 seconds)
  done (took 1.709987187 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.069111874 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098020612 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07631168 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.12822325 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.0664722 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100298615 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099349655 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077553008 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066104324 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065879292 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066306242 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.06845165 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.131237692 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066109253 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066166201 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.069138775 seconds)
  done (took 2.689813832 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096722517 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.15701982 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099200219 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065285075 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.097277172 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.072847599 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064711326 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.074976785 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070760928 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064837075 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073112615 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.070746122 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.065028498 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070604564 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070986721 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072666246 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065305737 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072713826 seconds)
  done (took 2.80126961 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.100989665 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091884559 seconds)
  done (took 1.572317873 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.155149425 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104840675 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.143588397 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344431288 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.168584222 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.229256144 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.132898133 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.127053215 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.117300343 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123857335 seconds)
  done (took 3.023384506 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.097220386 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.151778766 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.254479006 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115419875 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072142683 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.095555198 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116072225 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07731407 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081118481 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.080736156 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.08063308 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.076884404 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.098679242 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073557663 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073345401 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075706769 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.10210303 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072220133 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.074173938 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076988847 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.099481564 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.065316306 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073801199 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.07252886 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.07797652 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.077692357 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065298858 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065135259 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076763 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074237819 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076998211 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.094294575 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.077387992 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.107743721 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070443278 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.109130935 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076711022 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.073885153 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.074423428 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.07397239 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.078652136 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.078852623 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071899916 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075977402 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064904758 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.076603732 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065131183 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.065332177 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077724014 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.06654306 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078047454 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076994542 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.108170028 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066874556 seconds)
  done (took 5.98401755 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101641123 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103900033 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07170289 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.111003213 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.100149897 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07205583 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100946596 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093509754 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102791598 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069929471 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068194565 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070695359 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082529594 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083480638 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.113401139 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.10576098 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073431824 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070980216 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.103875602 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.102681208 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068783005 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094331189 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089484385 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101547169 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067150995 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070274138 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067839498 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070532429 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077148711 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078727898 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069668755 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081075311 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.085283814 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078698801 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067236313 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067764466 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067999789 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079806659 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079641709 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078733134 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.077779145 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067927295 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067935067 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069686457 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070301434 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067837092 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079422433 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.081853446 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079265746 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069597729 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069711598 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067881099 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069699119 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080854359 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078072687 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081617016 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080465632 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.068339618 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068386813 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072788465 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081492509 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.079932969 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.079945703 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069492078 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.079391467 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.068645936 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080121513 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08485681 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.068258852 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.07003862 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068762108 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069652592 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069408054 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078216618 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.07878665 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069505865 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.069434919 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06831456 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080634874 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078867762 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.068401526 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077507145 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.067182853 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068300757 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069676428 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069502392 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.078448181 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.080685285 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069425501 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068291839 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069660501 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068619913 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067571064 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.077710569 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080842595 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079441668 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079646575 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069606749 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079392188 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078754246 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069543877 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079216228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068056772 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.06950662 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.1980829 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080012687 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078534528 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080475873 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070542246 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068390183 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079245658 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081496855 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068243279 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.079190518 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081123947 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.080285991 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06856486 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082559354 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.06926203 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08046459 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070264221 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080540651 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068982292 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.081222022 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068412622 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.068980266 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068782192 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.080108658 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070999402 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069482109 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069916663 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070218166 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08019108 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.083929589 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070403424 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081856485 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07843742 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070907362 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079407558 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068929926 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081727061 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069945635 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069985201 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067532321 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082626351 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.06929617 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068733231 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069422954 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080854967 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068827727 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080153595 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078789984 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068394592 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081862185 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080535443 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077509196 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081119117 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070854835 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068609728 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068349993 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070027099 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.07808449 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080531635 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06996097 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068090377 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078325807 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080468453 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067464774 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.078380471 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078748305 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078875013 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068750485 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069729377 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080795338 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.080919403 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079252745 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.078283418 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078511662 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068386278 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077868578 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078445913 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068634158 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084909204 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067994237 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.083688113 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079646516 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077755366 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079103661 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.080528718 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.080846367 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080464715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.083411768 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067888062 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.067870564 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080232706 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.068164682 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069304075 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078944653 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069765983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.069571279 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.083556613 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068719347 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079656058 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.067256114 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.07865605 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.066616309 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.06949854 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082927565 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067722099 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069303985 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.211033214 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070784778 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.078895094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081519528 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079016227 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068269156 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070743625 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080755941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080372131 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068509035 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068340251 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070865066 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079527926 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078333726 seconds)
  done (took 18.72755538 seconds)
done (took 37.896591636 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.210144967 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153244013 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.199190399 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.118807192 seconds)
  done (took 2.158962163 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.123140204 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.101048146 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.095159611 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.064728798 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.102638062 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065266084 seconds)
  done (took 1.965108964 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.316165394 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213611749 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.184037646 seconds)
  done (took 2.12724008 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.199818306 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.188359284 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.391506965 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.254041804 seconds)
  done (took 2.552894109 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.144516055 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.090073292 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.066882879 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083201815 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.136499733 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.163888289 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.102598133 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127002292 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.077913755 seconds)
  done (took 2.456858431 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148290631 seconds)
done (took 12.823324064 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.099705905 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.243265705 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.187681721 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.157209597 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.241177671 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.095794205 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.089668119 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.081954175 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.150579815 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.110532016 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.08155086 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.075517533 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077011223 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.196098132 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.216516081 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.072533063 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.115073052 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.074122058 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.127308059 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.181631437 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089679392 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.174487012 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.190015317 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079909063 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.156742844 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087991798 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.105262405 seconds)
    (28/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.117249107 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065074762 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.071739486 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.187061896 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051067703 seconds)
    (33/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.151691673 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164990822 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089470293 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.100289866 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.095999444 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.072125212 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.098308464 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.173357921 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.179708335 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.095288832 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.073376532 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069634388 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150261139 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.157261427 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.087756499 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.078578993 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.193438498 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.145293102 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.06017067 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064802964 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.074600062 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.086282776 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072427071 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.154674006 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.071953013 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.101720021 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.197532961 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171843228 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.209299625 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088915991 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.186117921 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067744493 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.195113139 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.137958595 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073837673 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.208258053 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052164927 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089722131 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.070913841 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.110165811 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088875192 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.157328491 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.050816465 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.109352112 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.066093423 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.076966398 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.173134139 seconds)
    (80/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068299825 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.279999122 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.338508053 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.052794538 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.091355219 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.096196573 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053341075 seconds)
    (87/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052772668 seconds)
    (88/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.062421837 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.099706566 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051661391 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.183674043 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.068674165 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.05385437 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075062814 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.152027216 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.076197893 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.071155023 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05172236 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.075652341 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053302086 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.093553637 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.085916926 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065511542 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065177463 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.07503459 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.165534012 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.176736028 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184946136 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.065650637 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.134912451 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053164793 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052165814 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.100137714 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.052391055 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052757725 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.171353283 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.109857116 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.064944913 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.076749961 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.071861574 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.092289693 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 0.134281195 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074140634 seconds)
    (124/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.052299812 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.075512954 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.067650408 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.050881666 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.106139978 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.071494244 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.061595986 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.070951208 seconds)
    (132/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081787524 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 0.139462232 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.065099771 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.070858782 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.066875171 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070361958 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.05103084 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.051761854 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071723211 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.065168075 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.074278155 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.126822676 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089692614 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.088406939 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092052602 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.157043235 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.092688834 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 0.126459081 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.072112158 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051389623 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.148283385 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.072304534 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.071922425 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089577698 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.073993832 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.07593053 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051087121 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.126054346 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.065836333 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.065282423 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.112534817 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072353144 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.064950274 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.06240293 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085500265 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.080946274 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.076632046 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079052701 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065322191 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.065387985 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066154634 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117880745 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075054674 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.069037129 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.097936237 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065045678 seconds)
    (178/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.067388561 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.053047533 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071915128 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074829649 seconds)
    (182/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.085411898 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.052663816 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.17369941 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.06465351 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.184385306 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.097564715 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.073572097 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.106570384 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.094392788 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070512177 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071510786 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051096848 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.149044524 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.072861835 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.086759392 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.050422089 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.051712933 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.051983306 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.087563788 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.065734634 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.050389571 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.086505171 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.050340466 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.050572559 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.062857476 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.051682626 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.16491974 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.063892972 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.075852424 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050476979 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.063545514 seconds)
    (213/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.071589693 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.070517048 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.106185055 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050405223 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.072632672 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.134532442 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.07066958 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.078007946 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.069063285 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.072680816 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.071601785 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.105419673 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065331314 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.059684583 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.0720108 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.065284672 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.051272072 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.129681625 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.063840313 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.069407344 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.050943707 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063353169 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 0.122869447 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.05097968 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.069886422 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.050686749 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.06740228 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.089553466 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.129621465 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.050349548 seconds)
    (243/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.059790211 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.049995434 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.064082413 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.063776256 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.065981319 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.071257368 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.050360393 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.064102141 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.066767096 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051624178 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.06694165 seconds)
    (254/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.085929932 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.051569786 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.050415886 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.169957083 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.091334624 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.071820828 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.084765604 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.05150524 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063742299 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.105574226 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.050128841 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.06612685 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.072106367 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070554235 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.065716363 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.050587412 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051800649 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.07078738 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.069537956 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063790838 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.063667077 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.063293481 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.133682929 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.063922159 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.063420732 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.064993193 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.132054375 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.181521425 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.05183473 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.063048363 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.061034256 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.146796919 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071211213 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.160290967 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062386853 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.075781747 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.062054311 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.087327037 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.086581848 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071139894 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.064271857 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.068996037 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.050286491 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.076087453 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.049704205 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.050673355 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.069999791 seconds)
    (301/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.060720281 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.083064571 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.050408357 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.063421446 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068186759 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062200462 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.069931169 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.051344555 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.049688119 seconds)
  done (took 30.042856989 seconds)
done (took 31.469161036 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.093465426 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09545533 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077362799 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.095478135 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083514411 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079325083 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075568101 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.082029847 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083292963 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08489958 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081326931 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056878252 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.076784645 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076734052 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077348976 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.094158611 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080581668 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.074852847 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075833927 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066959016 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075600074 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.067949986 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.06955854 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056106302 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080496564 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073859657 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.074998614 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076130273 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067656853 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.067343377 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.07174743 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.075052179 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067068408 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.080009598 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.074242905 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074921343 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.076872053 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.078180501 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.069961856 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.06746608 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075890652 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.067050116 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.074080886 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075409387 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.073066553 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.072541744 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075557629 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.078589863 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093175316 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069746009 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.075889282 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.076715989 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.077949323 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.073283393 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.070503149 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.073771411 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070935316 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.092603779 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.074116552 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069205671 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.07473661 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.074443073 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07167158 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.073621132 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07414125 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.075774916 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.076359107 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.072445594 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.075336774 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072247113 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066372709 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.073910396 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.069894588 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066653583 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.076280198 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077139848 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065447327 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072424494 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073970818 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072343664 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.06600373 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068862679 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.068703683 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072869498 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069109084 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055399541 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070311697 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.072577297 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065496886 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.074530609 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072164435 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07305753 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.067716407 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.07659674 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.065669412 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071451111 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066405824 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066224343 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067420603 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070011265 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.067060825 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068242717 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.075939286 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.06795276 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072513829 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080073278 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066406714 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072417407 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065344239 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065526712 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080216923 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075378403 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.066246796 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068915857 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.065678603 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.073362268 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.065565628 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066061215 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066105613 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066397477 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.071827374 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066000313 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068326932 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.073130048 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.078451354 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.065543926 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.069631821 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.068332257 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.065794426 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.07165695 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.066213889 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.065922242 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.199598219 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.062870555 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069079074 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065877767 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.073161315 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068139096 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.074049588 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068467076 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.074697093 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070960151 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072342548 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071751772 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.06484107 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.05911493 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069112388 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068591021 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.068083975 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066765427 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067783213 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.06619771 seconds)
done (took 12.855194462 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067047788 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.144170923 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.101734314 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.095988203 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.08743782 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.067207075 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.076994865 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.103010131 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.068761228 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.103622032 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088498111 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.085995209 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.113504065 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065412234 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.066481464 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.070368714 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067766073 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082940126 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.102015373 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087131967 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116923708 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066096652 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095483202 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091428152 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.090436168 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.092956066 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067287016 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07012572 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.069790667 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10136538 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.087234585 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070104345 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067308466 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.101085082 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.093496153 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.08422602 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.067018973 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083380372 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067039466 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.066247014 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.068205612 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.099260069 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.080522814 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.081168315 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.070545985 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.069577301 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.067675726 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08457842 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.089638076 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079243108 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.087311136 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.103783705 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069237661 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.066364462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.06513358 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086421984 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065726136 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068946589 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066872669 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068799524 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.066574272 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069719307 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.08203139 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083054576 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.07107692 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.081194606 seconds)
  done (took 6.915634076 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.084088041 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091102364 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.083773223 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084030693 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066387011 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066895726 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067203639 seconds)
  done (took 2.104048183 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067153008 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088481454 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.0894312 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089699777 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085275051 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.08830776 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.076723028 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067803856 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.081578039 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.068743827 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088266592 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.103631625 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068117414 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073537514 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09201958 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066965986 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091296744 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.067052566 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.069981999 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.090668748 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069291742 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.083285416 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070344673 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.067721244 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.081420388 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.067195438 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.114602658 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071736533 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06879034 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070392109 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065337214 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108268177 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081020623 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.076628268 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06698294 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.081675923 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082029483 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06563737 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.085038761 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.072132443 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080900712 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.067534694 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068293253 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.06513754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071587021 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077478499 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.068018609 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067509796 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069592848 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087005035 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067603317 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.080866938 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.070422076 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.069824926 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.068430331 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071038115 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.076647617 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068104877 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.086520669 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.068217428 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.083601672 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.083754271 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.080561617 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.083146252 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068974075 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.080909652 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080921127 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069411662 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068641525 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.069931901 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083385904 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.065242275 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.068383509 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.077358366 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068776434 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090213053 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089963012 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068372216 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.07603442 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.067211943 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066886987 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067157243 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.089702742 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069224461 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067127964 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071076539 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069858361 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.06562311 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.066128215 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070202517 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.065475709 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068414492 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0696053 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.070169186 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06938067 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.083152232 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.069202419 seconds)
  done (took 8.887115958 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069386749 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.067630528 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.070087279 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.067989427 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068056682 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068680748 seconds)
  done (took 1.991746473 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094359276 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.069932699 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081245428 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073042094 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.105963837 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.087697736 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088294915 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079363926 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084315121 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079935123 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087582641 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089586128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094341613 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.073614385 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.087855504 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073006254 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.087860883 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076463653 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.079044193 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074034728 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087491392 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.073568641 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073843255 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082632918 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.076333444 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.072742843 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.068999707 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.079637249 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079801871 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.079673893 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.073186951 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.076515158 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.071701095 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079500727 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087981514 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.071404694 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072676643 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078702056 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.07305992 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076455511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088638582 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073502192 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.07534964 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.078102298 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079531634 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.071468688 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078617693 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077166485 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086726116 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077651899 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.077782552 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.072458925 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075956388 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077994793 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070883781 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079407765 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.07741282 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.08737984 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.073085962 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.071246344 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069389614 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.075850805 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07873213 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.075812585 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079856813 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.077703807 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07110645 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072997366 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073156263 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072290489 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077468407 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.069320114 seconds)
  done (took 7.205231124 seconds)
done (took 28.651938144 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.542840819 seconds)
  done (took 2.090695731 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.608458099 seconds)
  done (took 2.178718015 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.701346719 seconds)
  done (took 8.270744723 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.397702048 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.482877397 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696182606 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131909945 seconds)
  done (took 3.320908311 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.678913456 seconds)
  done (took 2.255868175 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.211330542 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.197016345 seconds)
  done (took 1.993695744 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.376076004 seconds)
  done (took 1.942773279 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.1084712 seconds)
  done (took 2.678449079 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.26648971 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164200802 seconds)
  done (took 2.004789976 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.461052185 seconds)
  done (took 2.032831347 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.821113139 seconds)
  done (took 6.39556674 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.214501595 seconds)
  done (took 1.830779068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.241281302 seconds)
  done (took 1.814683229 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.707730065 seconds)
  done (took 3.281512127 seconds)
done (took 43.66925036 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079209751 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080513154 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.081112929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077925015 seconds)
  done (took 1.882413063 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076592698 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.072435704 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075837262 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072296759 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076774482 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071980175 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073706159 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076630941 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.072096367 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.07264325 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071970107 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072120705 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074726827 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07451708 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070492331 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074658172 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075522674 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071980693 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075872137 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072155899 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070709691 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074627752 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074306076 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071639091 seconds)
  done (took 3.343310825 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077944713 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.073017599 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074317436 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071627098 seconds)
  done (took 1.879736074 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077453272 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.092038949 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089865151 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076972699 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091579845 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086643819 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068872373 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068800297 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072876662 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076674982 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067953027 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.096115087 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08793083 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076687642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078990948 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065756778 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067933229 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.087012322 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077473108 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076958062 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.069546521 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.0765773 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067473433 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087909888 seconds)
  done (took 3.465068462 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.077358114 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102832937 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077296103 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.087598732 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08923201 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.065223716 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.074508344 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088974472 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122571313 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06514523 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069442396 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064978167 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07190065 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064785846 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075787802 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104187909 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107787597 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068279193 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095143057 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065452473 seconds)
  done (took 3.227901295 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072785158 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069139148 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065072401 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.069410568 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076598639 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072022471 seconds)
  done (took 2.014901629 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067749127 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.066960129 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.067045133 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066195762 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.071821841 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.066525738 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065962295 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066909248 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06697521 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066446896 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066259679 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065310313 seconds)
  done (took 2.388976356 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.178774855 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067853602 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069560706 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065536166 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069966369 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066032192 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079509903 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067965012 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.090328675 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.065596916 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.066288883 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.068178179 seconds)
  done (took 2.542218787 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20816076 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075909867 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238734021 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13763942 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111913953 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11571371 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103383161 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113764069 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.144951643 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.102186274 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169098792 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167009081 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107414927 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137585132 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088779027 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097090392 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156880328 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163804501 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10376644 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165944652 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145246131 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124647577 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146460292 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101325395 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.106301478 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122538757 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070954619 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079971369 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171754142 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132579428 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148023799 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111341407 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093825209 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177701055 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172850214 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143723717 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134810235 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.084006671 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102446771 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.134196062 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201374893 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088631094 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166633577 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243721793 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081019952 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133930324 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120070512 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.120691 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107174471 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.089482704 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147025394 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183343561 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.139333108 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086986833 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11210487 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119786495 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117191331 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103572887 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183934391 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161490452 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127400712 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070734676 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09891154 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154658887 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131328791 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108802399 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.127589367 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094448711 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136371928 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.153805115 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1193587 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143396502 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.129261283 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088733371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11909998 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14041918 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129294991 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17040304 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124927641 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072642182 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126060576 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103907951 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081051715 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139788402 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074768811 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17567798 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09900899 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.106602712 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113242616 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109245796 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109586108 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163915091 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146124405 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.241837067 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066051327 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104815579 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.120556136 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149504616 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087783688 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109430058 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118267853 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078434593 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140124709 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074863715 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123449585 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.075081617 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125272899 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13168669 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.076218861 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121494391 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101003983 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099258501 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134677623 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160490314 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088526691 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082644998 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167217813 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123087159 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10463509 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143623747 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.155925269 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098717369 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103242491 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149852428 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181395869 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.089053548 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163409314 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107986721 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.08372526 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087070831 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123922065 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11242479 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.122811735 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081937219 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.11922977 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169321407 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.075038424 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095236622 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133765716 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079098071 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080999096 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10459616 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101864165 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094718478 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.100446324 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.104945806 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138833998 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124078675 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104855791 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.26711589 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098842583 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171995081 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089507155 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099638332 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103016761 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070405711 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.137872598 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159057493 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.079265448 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165147505 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.124193473 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105608663 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119694413 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082385598 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140815795 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078325551 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069593418 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145325913 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110737835 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110651469 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152136603 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105025171 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.128776631 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121064206 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136939155 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1339048 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128681926 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105471888 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.088106964 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110799212 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126235276 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072206701 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091600421 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.080538694 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104311491 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095981122 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082729423 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143676281 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125618757 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099666963 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111896929 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097129592 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146894873 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076195584 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129700706 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.119865076 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094550432 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.15327648 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15310535 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131946445 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.099975076 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146404669 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.070310327 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073980488 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.0897285 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.263739948 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083093266 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083124913 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118116141 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146901438 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130072239 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140025613 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111042288 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121488604 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154680955 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.068774262 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116398185 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149818898 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122132807 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103103521 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089966937 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.099231173 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142326759 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108087845 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183282499 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113964497 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125794177 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153876883 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099098837 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079481438 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10276898 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136223208 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105781973 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145404956 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099001711 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087698175 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110751094 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073624935 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100812935 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129478375 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120608833 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135539359 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.114382327 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134036045 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076849826 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118519201 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121148972 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123833042 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063730787 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121678167 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163597013 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.09364299 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11941308 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154451149 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079417836 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.124152488 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.319420193 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147951352 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085665091 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111100137 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118218138 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128383601 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120628044 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141782043 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109321522 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134868064 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108857125 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085081065 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087035212 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097065559 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104988651 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093787039 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.109277991 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.114954265 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094986602 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13276038 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103653278 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109790704 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118120724 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097112319 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089133451 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096839389 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174062769 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119752226 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172628734 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098054843 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1456737 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165799648 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074089122 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078746977 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07878513 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140390978 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083878234 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131811945 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.097385762 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106015516 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124444911 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142876424 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095182689 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.068334357 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108788354 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135314718 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112133904 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098141202 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105881024 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165027522 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10049832 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079128797 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114229091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104824397 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102636225 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174930431 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061216981 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097552823 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075542201 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.080822742 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127878446 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154185274 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080024863 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102887492 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118846378 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11021029 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.126098687 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099753639 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097489153 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112666701 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149196745 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127202314 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088558336 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109873988 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12641024 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153677613 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103397692 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.093769834 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167766009 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149035392 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157101416 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.086618324 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112159856 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111548038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105624764 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136799228 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081512218 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16098125 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080292705 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133194158 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10211112 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088448064 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127294011 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111841854 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086279434 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144376045 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114824187 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08013152 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.075740161 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115200373 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116855059 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104166801 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.073319341 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133935234 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.070423571 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125035389 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159896267 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077969831 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100113458 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.350687285 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081372261 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110658483 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105334085 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090617227 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.099012131 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177010624 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.089939863 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154588181 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143085499 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115288621 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139325748 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101433124 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.636956307 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.078478277 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153507399 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11723608 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175051443 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098244738 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118581903 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110068009 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125097059 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144780826 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106323265 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175538101 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13290547 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.120154392 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079562817 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102900338 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103428887 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.089455435 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105074195 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113951007 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116740906 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093771993 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116569895 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124334152 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081738101 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.095521377 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157164922 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.117730516 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148753407 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141004375 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085303963 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118594114 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141310726 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080255978 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.122930564 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152931544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106779052 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098281666 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080218663 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.249097175 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171448453 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073342257 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164942262 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120266697 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109352279 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11306138 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114877875 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131386623 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108523802 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121250874 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093834275 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111035305 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11244321 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081738982 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077626361 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104899349 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112909327 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.09700615 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098919986 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096997004 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152379177 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.071526061 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096109741 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103800498 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146792209 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176703491 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088150468 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082389148 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119813379 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113068574 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.114113683 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121191469 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.079123136 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082381965 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081992389 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076501176 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.108216186 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112162927 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104671861 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111596752 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16528562 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.082540162 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.220378121 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095280078 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104558075 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068880213 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078854277 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095747584 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097336817 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109129536 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100526558 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171284261 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.094857558 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.090855954 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09335674 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072309429 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082135062 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.269562553 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112270906 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120325841 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097615172 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062310283 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110906631 seconds)
  done (took 58.964054618 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108315732 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081155001 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.097125431 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149342787 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121919739 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.212409784 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157361502 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.199547471 seconds)
  done (took 2.827479911 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.06757489 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.093592995 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099058396 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082319767 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066620059 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068648314 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.225315353 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080019278 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066099079 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088397613 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078988476 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.069312694 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.423728485 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065639796 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067306534 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062244259 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067016224 seconds)
  done (took 3.465307644 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.366798904 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.605625815 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.372893593 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07267881 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.976308635 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087741249 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.036756473 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.129245574 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.072698367 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.522626156 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.703744507 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.123953861 seconds)
  done (took 18.779456825 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.074445089 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06902446 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083009784 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.082884504 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.071505483 seconds)
  done (took 2.082328709 seconds)
done (took 108.479238367 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.0788569 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404103927 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053125718 seconds)
  done (took 2.18669714 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.081692791 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084580361 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084847021 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082266436 seconds)
  done (took 2.045948099 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.074223709 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.075366308 seconds)
  done (took 1.854005262 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.224023556 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.155177258 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086404142 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081467789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077322041 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077633083 seconds)
  done (took 1.947572372 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071338825 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074320843 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072310349 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075748526 seconds)
  done (took 2.000507706 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.075780461 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052652068 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.054411221 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055745911 seconds)
  done (took 1.946753786 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.084966983 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078194123 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078075144 seconds)
  done (took 1.950345732 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100493471 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084580514 seconds)
  done (took 1.893209969 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.080778581 seconds)
  done (took 1.789569279 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.097594114 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.1134532 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.131635626 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.109571498 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.138891133 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.109485536 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.08634354 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.087369417 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076880908 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0875413 seconds)
  done (took 2.746908486 seconds)
done (took 22.609018289 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078368569 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.455559434 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360547633 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088346072 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.668078623 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.356360167 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.964828022 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091566269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.11293638 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.066928626 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083226357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.650727302 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.987809298 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.408621831 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.978572753 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320103082 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.650066858 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067602394 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067522582 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067409603 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.951868874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066866333 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06758324 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067947602 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.649148 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370547395 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067841088 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.315069781 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067918753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069492096 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354541745 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067686683 seconds)
  done (took 16.337308275 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.070060426 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116520526 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073116286 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083820821 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069980809 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069228748 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070955198 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068593852 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118962676 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068030827 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083912414 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067454945 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071446649 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068501813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08682702 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067610995 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068533179 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068120556 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067638248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067877267 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085984344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067462931 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.06782306 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068150437 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067414655 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079028348 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068735854 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067741093 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.06777284 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069468017 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070578343 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06822904 seconds)
  done (took 4.099258767 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113752746 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.123683985 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074210589 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102275667 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.111206175 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069604144 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142371773 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091725144 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.127196069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067926235 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083955434 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067380321 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099981868 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068775538 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086810408 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068374019 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068647729 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068279988 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068113261 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.06855317 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086945383 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067651458 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068296928 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.0686112 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068538847 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08084418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06801567 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068328618 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067973606 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070397483 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071201628 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06863003 seconds)
  done (took 4.353521201 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.071627819 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07443173 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082471528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.08315106 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069401347 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.071768683 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072002224 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069121053 seconds)
  done (took 2.320577052 seconds)
done (took 28.826465622 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.077803216 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068230085 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072399778 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080278996 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.07273084 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078561225 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066566551 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073792489 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.0714064 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.072138538 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074640263 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067137655 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070481555 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066959706 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073338783 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067476985 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079145295 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072041145 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078654909 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.078628114 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069290008 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.072554547 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073734078 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078268221 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078543319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078874208 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076864607 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072544787 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068748613 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070244974 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.075926844 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083317769 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068196366 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.078775064 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067314806 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067638653 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071381077 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067835881 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078443761 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076153171 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069233913 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075811843 seconds)
  done (took 4.788955181 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.086589383 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.089889219 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084209862 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.060558315 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.065919427 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.063713185 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087429232 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058972114 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059072193 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.087073257 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055365644 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058852203 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.061966578 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054031598 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058971367 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056577748 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061050004 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055357811 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059112257 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058803459 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.087484417 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053970669 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.076436282 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062187419 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.058501636 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061659174 seconds)
  done (took 3.460785462 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.073653586 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083350172 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08760075 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125509579 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103749964 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076298072 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.079257903 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.091812037 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084884597 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.06668872 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071101016 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092552096 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087392105 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073336383 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.068366833 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083918965 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081495951 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068539367 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073508722 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.091823045 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084869622 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.084224761 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091866817 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080341663 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066399037 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069023059 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071173499 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.080679317 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071877924 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075814234 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071412648 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.070509326 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069060024 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078201047 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070779554 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068394254 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089829135 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.076299456 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077121178 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067637911 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070497921 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068200094 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.090708635 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.125178578 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.066680244 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07399463 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074485806 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076285769 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067043565 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.08586575 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078325871 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066664222 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069924763 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066197033 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067108146 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079902984 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068887457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.069478692 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076369808 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070267824 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.088668924 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071289855 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082173314 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.06684084 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074481995 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066418654 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068005048 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065945205 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09169848 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069264848 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.107760453 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068033115 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.06840183 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075649637 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074455835 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072795218 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.067480535 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081837164 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077049688 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070670641 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075151053 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070245208 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070047873 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086804209 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069723111 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069112768 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067991629 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073128514 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069939916 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.0682209 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079624121 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066977285 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069894342 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083399477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066988124 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.06823284 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073501929 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071839556 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06653151 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078135139 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071906875 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068023074 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076087227 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067167159 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069820671 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078677402 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073061074 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066290074 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071577645 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.0728752 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068122497 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068423317 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069683522 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06893151 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075070555 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.08490435 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071793419 seconds)
  done (took 10.609541749 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.159997315 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152683418 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.069477564 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143186209 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.075945596 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079242739 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.147047616 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093668049 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067583441 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.067908771 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.06838949 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109655344 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105663168 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114979159 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078912535 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067876199 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083013968 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113582909 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148576506 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142315217 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083078161 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076518694 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069579536 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068819476 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070699907 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077985598 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08475301 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076513259 seconds)
  done (took 4.458067489 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.080735964 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096553656 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073558553 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088505901 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091317462 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067404253 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069507407 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.06930079 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079760841 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078585654 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067381726 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073076482 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074040697 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.071321798 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068467763 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074207521 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.074365824 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069520321 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070781074 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072618379 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076963668 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.091531243 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.07119263 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066913873 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072110594 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.066906262 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064534278 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084625633 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067346619 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089170792 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065501748 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074597845 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080906217 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067982211 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067166353 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067481975 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067106938 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067150489 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068902377 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066261763 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065882721 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057350532 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066216236 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079660217 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073390802 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056229305 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072162334 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072049568 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072385364 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065689905 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.069774433 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069935597 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070659779 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074006838 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072017033 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.072087631 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068276875 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.073315782 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074588956 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067029252 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063788213 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065631163 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071609924 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065922053 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074813813 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071313819 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066252236 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066827101 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.06872111 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073252872 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.06677471 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070211129 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065041407 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068990081 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.071661474 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068613731 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067838792 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065799283 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.067274367 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.067167765 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055412883 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.066744045 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053241102 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069719193 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065333517 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065695142 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066773168 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073485174 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.080272023 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068188204 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073027182 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.068050516 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066477317 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070313679 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059769411 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.06959136 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082404056 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082292132 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.06717872 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.065358911 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080981322 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071482341 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066336635 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055902031 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074859952 seconds)
  done (took 9.189148025 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087684264 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069892361 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083005888 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.090736602 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.086110456 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07529819 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075703534 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068895601 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.081458803 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073085906 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075624989 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067795649 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076396813 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076190885 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069303364 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076583679 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071733145 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082059869 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081320695 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067863391 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075402419 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079170094 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088412499 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.079807444 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.078200934 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.079328715 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088587376 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.071699579 seconds)
  done (took 3.942778901 seconds)
done (took 38.170873627 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.803799499 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.065557316 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.807951249 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.195135764 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.109890908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.925979469 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.816695908 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.814435012 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.012804406 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.843332427 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.083964217 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.88503112 seconds)
done (took 66.105258872 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.854128884 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.940595114 seconds)
    (2/2) benchmarking "String"...
    done (took 2.07161748 seconds)
  done (took 5.752384806 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.105905572 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.383087274 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.033643349 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.800530615 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.806164488 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.032820929 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.595084206 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.335686224 seconds)
  done (took 30.729442944 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.936578069 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.031160255 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.474126063 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.510775405 seconds)
  done (took 15.747916945 seconds)
done (took 64.011346043 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.820427857 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.806627774 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.825424414 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.783983289 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.857736383 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.818016217 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.899590293 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.035463092 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.80173022 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.792302096 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.800931144 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.222569932 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.800096304 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.950489566 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.800336633 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.805797827 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.835618458 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.216409393 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.957849128 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.810923384 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.811325116 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.827406667 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.803506494 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.810642992 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.802616121 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.799765372 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.22032932 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.801514811 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.41446285 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.803114372 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.827399405 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.107764748 seconds)
  done (took 205.415138933 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.799519095 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.655656523 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.744164853 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.805675126 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.153567597 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.983237672 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.925408573 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.254137574 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.802754065 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.827884776 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.986422854 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.800844626 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.983984802 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.755672279 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.829239386 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.900808176 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.970665259 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.988744107 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.832751688 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.97887821 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.825817411 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.81041435 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.760126225 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.951399238 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.832239498 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.880251519 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.958116268 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.830431995 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.000071154 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.93841886 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.806525803 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.823695031 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.032585057 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.680932787 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.808139499 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.817950564 seconds)
  done (took 170.47957897 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.975024191 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.806380114 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.805357351 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.80583883 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.817684277 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.804876521 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.931872286 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.932887997 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.268845141 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.259458445 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.858184121 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.638148038 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.80576383 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.871731381 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.818842125 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.807209312 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.82136166 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.832096141 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.808544333 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.80592932 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.933486173 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.819283774 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.823494017 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.813599303 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.80632747 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.812204377 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.176529047 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.806770225 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.812352242 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.065206667 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.807369808 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.806367739 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.703404257 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.499858766 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.897858196 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.807980214 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.813184149 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.807895282 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.026634352 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.808136253 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.807255592 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.810821755 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.988223171 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.805766104 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.931658683 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.809466936 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.306489402 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.806526083 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.807583598 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.519654092 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.472082202 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.812668567 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.808050213 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.810794921 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.807010526 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.808394419 seconds)
    (56/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.812764332 seconds)
    (57/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.492285481 seconds)
    (58/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.881504765 seconds)
    (59/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.80975354 seconds)
    (60/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.811886066 seconds)
    (61/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.813973921 seconds)
    (62/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.807904155 seconds)
    (63/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.927791986 seconds)
    (64/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.809213374 seconds)
    (65/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.288293245 seconds)
    (66/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.809607406 seconds)
    (67/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.02589351 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.865039689 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.931566363 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.81150758 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.876477161 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.90252436 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.808868464 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.808242694 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.810172317 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.808341069 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.890082431 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.809561228 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.925784859 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.817340365 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.810828272 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.8598278 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.877864814 seconds)
    (84/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.809476523 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.810553798 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.808446232 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697112816 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.810777842 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.810383434 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.109876259 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.875796776 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.809706518 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.810041341 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.809361584 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.929610594 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.931344819 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.582776946 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.811058172 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.809076421 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.538624374 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.812869674 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.98563526 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.81192031 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.991502223 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.813260018 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.891752126 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.816569159 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.81241402 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.810366912 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.842511389 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.811732422 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.871760408 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.811990044 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.180611043 seconds)
  done (took 406.155069625 seconds)
done (took 785.82415626 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.494799284 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.450314942 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.552519992 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.465777198 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.441726494 seconds)
  done (took 14.157868019 seconds)
done (took 15.908873603 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.89706852 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.901372506 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.834945564 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.899330386 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.832052949 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.899077218 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.880235343 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.835066219 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.868288546 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.83694317 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.86848408 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.836067451 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.822931773 seconds)
  done (took 25.964607161 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.064110264 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.045154789 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.883263444 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.038899511 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.860022117 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.05037548 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.978594046 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.964935283 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.965306227 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.828695895 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825901299 seconds)
  done (took 23.258957579 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.049017697 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.046856097 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.890558421 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.052994964 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.86483565 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.051502614 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.976864901 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.967177958 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.96703247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.830123806 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.825252809 seconds)
  done (took 23.277236582 seconds)
done (took 74.254257092 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.820466664 seconds)
  done (took 3.574459422 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.843894419 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.983353843 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.826821898 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.824065119 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.820244753 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.823364626 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.82446379 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.821188188 seconds)
  done (took 16.523138719 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.818208372 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.821534477 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.818279432 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.820769255 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.821271811 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.821009468 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.820298703 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.822180452 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.819079381 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.818151946 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.819019638 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.818431069 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.819965351 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.8192459 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.822183523 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.821562877 seconds)
  done (took 30.876557649 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.820531459 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.819115148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.818300705 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.819464194 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.818895761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.819235475 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.820827195 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.817925308 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.819300114 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.818684466 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.819614048 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.819137342 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.821153872 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.818922264 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.819990196 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.820204926 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.820166041 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.819986391 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.824262491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.819673897 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.820443116 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.819865631 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.820709557 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.820173389 seconds)
  done (took 45.434873214 seconds)
done (took 98.162481238 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.719155438 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.209166005 seconds)
  done (took 8.686000942 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.824810895 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.823582725 seconds)
  done (took 5.440951307 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.823326677 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.822350354 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.822518218 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.823012385 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.822487288 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.822968957 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.823296079 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.822552971 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.823778969 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.823173214 seconds)
  done (took 19.987384803 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.824646367 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.823109597 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.822068406 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.823357519 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.823360733 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.822224254 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.824982029 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.823562081 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.823925184 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.820798956 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.823601139 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.822757065 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.823804559 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.821838859 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.824387811 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.821436299 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.821072025 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.823542616 seconds)
  done (took 34.57300023 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.824902438 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.824577829 seconds)
  done (took 5.406881993 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.821931628 seconds)
    (2/7) benchmarking "second"...
    done (took 1.822591305 seconds)
    (3/7) benchmarking "month"...
    done (took 1.822128665 seconds)
    (4/7) benchmarking "year"...
    done (took 1.822632245 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.821293729 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.821906352 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.823633264 seconds)
  done (took 14.514546921 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.82516538 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.989748576 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.052636997 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.468103587 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.826382679 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.829157928 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.763199751 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.828658089 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.831046578 seconds)
  done (took 20.172626458 seconds)
done (took 110.537747296 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.614464264 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.821002312 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.16992657 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.911082277 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.837723683 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.116823929 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.820410315 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.057617898 seconds)
done (took 43.106988772 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.819500148 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.361444501 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.603616605 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.13733416 seconds)
  done (took 12.862936966 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.805375559 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.363966571 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.869491532 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.496358348 seconds)
  done (took 20.30941216 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.189974614 seconds)
    (2/2) benchmarking "read"...
    done (took 2.186588005 seconds)
  done (took 6.142023885 seconds)
done (took 47.894332862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.827621999 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.826594807 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.825970884 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.827456949 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.827270907 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.824029081 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.825562799 seconds)
    (8/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.824750542 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.828136238 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.829028228 seconds)
    (11/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.824899953 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.826974207 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.828084307 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828539894 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825706455 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.825922961 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826922241 seconds)
    (18/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.827367436 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.827021382 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825440848 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.825781238 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.827932051 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.825468694 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.825786887 seconds)
  done (took 45.600088927 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.828772372 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.826044894 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.828105799 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.828586774 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.826505761 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.829311749 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.828490368 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.825961538 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.827910548 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.829722994 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.825749402 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.826207087 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.828777631 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.826837145 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828224796 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.827536117 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.829058351 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.826630131 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.829633967 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.82648455 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.831024369 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.826575605 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.826765786 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.829729786 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.827040469 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.827204691 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.829307676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.828136574 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83067395 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.827942435 seconds)
  done (took 56.602387081 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.834903126 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.836350171 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.829880269 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.829591881 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.828915776 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.829887245 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.831106913 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.830131642 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.830311644 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.830002071 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.830077751 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.831944477 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.830637314 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.831146576 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.830146401 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.830300395 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.831022709 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.830924956 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.830509099 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.831004102 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.831170684 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.83032095 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.832668444 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.831093169 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.830726072 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.830891841 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.831228915 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.830849565 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.831807961 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.831439343 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.830979109 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.831646281 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.831013868 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.832230319 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.831764903 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.831316433 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.835846234 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.83882488 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.831985987 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.833312258 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.830677792 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.832537188 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.831078863 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.831779769 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.833091679 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.832296477 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.831218923 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.831914555 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.832091993 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.832264736 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.83263286 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.832339648 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.832523998 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.832392963 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.832427107 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.833635952 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.832414171 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.833355174 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.832872846 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.833109986 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.833166283 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.833179562 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.833830424 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.833143735 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.834595658 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.832832338 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.834200141 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.834084548 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.834290739 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.83326374 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.833560404 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.835257839 seconds)
  done (took 133.678078169 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.832853088 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.831433895 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.830932749 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.830459099 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.831094844 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.833095446 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.831324928 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833050634 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.831414267 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.834061354 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833321287 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.831773195 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.831608668 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.834625005 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833904058 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.831851105 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.83444533 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.831656058 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.833992482 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.835220559 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.835511622 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832088386 seconds)
  done (took 42.087644989 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.834372776 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.835225736 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.832311303 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.835340079 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.831618676 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.834981289 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.835583113 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.835502779 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.837463408 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.832345627 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83189578 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835064317 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.833421511 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.833568258 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.833817358 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.832402649 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.835508322 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.833121883 seconds)
  done (took 34.782288361 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.834518209 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.833475031 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.835895342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.833878657 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.833444669 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.835780844 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.834712484 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.836067764 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.835628254 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.833530219 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.836275591 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836536369 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.836811722 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.833328239 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.835789375 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.833773629 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.837524102 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834745987 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836521411 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.834480038 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.834018369 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.83704967 seconds)
  done (took 42.144461613 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.836716536 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.836138594 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.834228199 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.834136337 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.835419086 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.836920122 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.836672976 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.834459997 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.836932271 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.837637451 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.83423721 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.837124644 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.834537009 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.835065628 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.835765907 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.835296498 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.8376552 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.835654817 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.837599952 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.835054937 seconds)
  done (took 38.489229276 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.838038605 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.838671884 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.838563222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.837699428 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839290997 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.840346323 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839066623 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.838765508 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840182156 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.840003367 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.839144839 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.839895495 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839752157 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.83956653 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.838946278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.839780649 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840452471 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.83958266 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.840151834 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.839898083 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.840477244 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.841262294 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.840229702 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.839601175 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.839664116 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.840835074 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.839406106 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.840638461 seconds)
  done (took 53.28240464 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.839425693 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.838576528 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.836486843 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.837038321 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.836665904 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.83667873 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.837628095 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.838299108 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.840037547 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.83826647 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.839693404 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.840066504 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.840435126 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.839140676 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.841548483 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.839596741 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.840044856 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.837874064 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.8377005 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.837769552 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.84110859 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.839459637 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.840506764 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.838339004 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.836996893 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.841393963 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.838020015 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.838103235 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.841508834 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.838975716 seconds)
  done (took 56.94127416 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.859940767 seconds)
    (2/2) benchmarking "in"...
    done (took 1.859823152 seconds)
  done (took 5.494135079 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.838272184 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.841071655 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.841711284 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.838569043 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.838270509 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.841880458 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.841943931 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.83891835 seconds)
  done (took 16.495158056 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.841577731 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.841508317 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.843073812 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.841688402 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.844130495 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.842693019 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.849127938 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.841846983 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.84310852 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.843731771 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.848650252 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.849779527 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.845381709 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.842415514 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.842661142 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.843816293 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.842729181 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.842928452 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.84280717 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.842806741 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.843683765 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.845038079 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.844122299 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.840633029 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.844119004 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.853156705 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.846910832 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.843735225 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.843405561 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.847586136 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.843338738 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.840357709 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.8437795 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.843840739 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.844227494 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.844234426 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.851520869 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.844123834 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.848976831 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.843832196 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.844021778 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.840821556 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.845450952 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.845676612 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.845187351 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.844559559 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.845255346 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.842100527 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.84317807 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.847295495 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.849507401 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.84419463 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.842278175 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.848699353 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.844931267 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.85122807 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.845832169 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.848171298 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.853828932 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.854272054 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.857560607 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.852428755 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.846604594 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.844760406 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.855405853 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.867836623 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.851956298 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.842569941 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.842151293 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.846400472 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.852178787 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857638829 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.85379822 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.845979962 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.846201641 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.845755665 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.846584767 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.845793041 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.852341829 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.848432372 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.846450988 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.845959276 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.854888301 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.867519674 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.84512195 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.846579122 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.846544511 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.845805531 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.847581357 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.85578478 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.846426617 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.845949607 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.846178571 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.846697749 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.847559402 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.847329287 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.845917323 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.847104323 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.844514978 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.846973101 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.846408158 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.850602709 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.856102969 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.848029613 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.847027627 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.853491039 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.847218809 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.847894559 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.854323781 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.847685935 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.848200866 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.848677084 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.854610967 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.846077764 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.851354476 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.856255059 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.848566416 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.849106802 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.848892277 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.847745207 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.857162013 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.872005297 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.848422617 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.848474627 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.852734445 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.858679009 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.848314339 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.851053452 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.848873002 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.845713521 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.845287886 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.849126039 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.84875982 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.849059394 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.849246662 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.849544089 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.845682494 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.848989708 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.848828752 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.850243873 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.850500695 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.850032289 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.850610341 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.85194751 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.849230114 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.851386525 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.855703 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.849359875 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.851256736 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.850432155 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.84757097 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.849474239 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.851357631 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.850591692 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.850155696 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.850514643 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.850616438 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.85075482 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.850365657 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.851815348 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.850425275 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.850701597 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.853762377 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.850888475 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.854931096 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.850915897 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.848922237 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.850589656 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.850637304 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.850600599 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.851071779 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.849638274 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.85469476 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.85755282 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.85099852 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.851633061 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.85510989 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.852280033 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.851168546 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851541908 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.854283595 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.858793741 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.8524865 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.858148928 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.851695005 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.852702891 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.851715102 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.8513317 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.851419122 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.851888767 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.854823703 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.859446004 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.865185422 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.860207908 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.85356994 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.855156114 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.852462765 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.855280428 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.857243454 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.853312664 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.852398987 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853025405 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.851834405 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.853037068 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.855195172 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.853280869 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.85232226 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.852636421 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.852477998 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.854584414 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.853169325 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.853603193 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.853715349 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.850769468 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.852582768 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.853707338 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.853475229 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.850483781 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.852362382 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.8534657 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.853386524 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.854594109 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.860718389 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.851661579 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854322153 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.854717194 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.853768124 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.852977764 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.852797776 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.855694783 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.854228444 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.860748546 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.854148931 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.854316642 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859173735 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.854353606 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.85407994 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.856689318 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.853628849 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.851580017 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.856926661 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.862240981 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.85431011 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.854708545 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.854768815 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.854992885 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.855413392 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.860821348 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.852486744 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.8543393 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.854664741 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.856131735 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.852969061 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.856080498 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.855364429 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.855164522 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.857317987 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.85517613 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.856286684 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.856843061 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.855469439 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.856365505 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.85579563 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.859181031 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.863523564 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.860972637 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.855965254 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.858985572 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.857204901 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.860496396 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.856784769 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.856793859 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.856290677 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.870310891 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.864592164 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.863307769 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.857729145 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.856727156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.861045161 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.859230862 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.859625652 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.856591377 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.85726332 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.857328808 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.856249285 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.854409149 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.857927837 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.856423091 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.858145902 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.858044242 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.861354647 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.857341152 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.856236285 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.85763745 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.857816899 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.857716047 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.856160892 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.856828035 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.860029159 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.859402651 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.856468545 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.857799818 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.864590215 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.857303963 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.85852446 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.857424577 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.858857562 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.857223416 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.858714873 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.858713212 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.861370402 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.865520698 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.861579968 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.867860509 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.859293967 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.867675247 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.859173126 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.861583281 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.866170544 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.856035042 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.856814612 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.860155364 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.860156512 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.86593617 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.859464539 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.860021186 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.864125455 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.860577049 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.860935645 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.859750866 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.860315386 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.859494822 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.859402588 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.867643954 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.860534035 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.864623766 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.861858075 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.857474387 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.86029989 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.861275157 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.859674498 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.863225578 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.8606674 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.861207713 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.859876355 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.859880553 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.859347529 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.860372575 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.860735921 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.858529664 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.859757823 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.866499383 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.861378471 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865026492 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.861146244 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.868781825 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.861201437 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.867675738 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.86149811 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.862539154 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.862700612 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.861495873 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.862686704 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.861003387 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.86200788 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.862049199 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.862573323 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.864809179 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.862039721 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.86354333 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.862254143 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.863310101 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.861517871 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.87193554 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.884136376 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.863095018 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.866723928 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.859394045 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.864397251 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.867041726 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.863976652 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.861787627 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.865329469 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.872545286 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.869532583 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.862366157 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.86307213 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.864701209 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86320806 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.861926053 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.862784689 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.86404534 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.862540207 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.863702718 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.863013248 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.865614194 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.86234519 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.863594078 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.864837041 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.863575827 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.872778521 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.863547563 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.863892987 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.864153447 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.862203348 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.864058618 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.864598533 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.864353634 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.865543176 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.863760857 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.864909484 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.87057168 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.870197522 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.866875213 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.863637017 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.864738681 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.863928377 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.8651095 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.865421303 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.86485818 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.865020196 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.865455693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.864549712 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.865695258 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.863912191 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.864109199 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.865928985 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.864268628 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.867148013 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.872139679 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.865180403 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.862246185 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.864639676 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.865759738 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.864128202 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.864433801 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.872376835 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.867680443 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.874909607 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.873631577 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.869957266 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.865479859 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.868549558 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.874307694 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.865287547 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.866183896 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.866883896 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.867048158 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.866931054 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.869302371 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.866333596 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.872532207 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.866351 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.865964642 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.873326666 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.867310762 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.867829836 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.867549057 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.870501185 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.865572468 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.864047636 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.866404357 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.866078556 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.873162569 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.868146888 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.866758006 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.868236049 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.864942934 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.867879737 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.871119317 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.867272871 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.868051391 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.863930912 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.868036206 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.866753062 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.867024685 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.864777139 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.867148247 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.867194105 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.870508412 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.873974592 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.864509708 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.869031732 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.868976097 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.868539698 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.868320421 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.868123997 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.865571874 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.866062138 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.868140282 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.868990066 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.868195499 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.870492461 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.867956149 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.869089399 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.868684241 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.86869666 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.871418165 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.878166697 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.875487013 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.865735251 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.868596219 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.870283396 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.871817739 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.871033251 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.870462837 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.870094049 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.870806552 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.869170421 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.870002122 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.869397997 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.871352464 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.883967086 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.86894742 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.869859882 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.87012156 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.87257639 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.869216643 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.867226762 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.869867101 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.872626884 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.873102562 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.876938458 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.870375114 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.875316858 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.869707713 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.871544728 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.873107406 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.87269818 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.877802825 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.871640845 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.871856471 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.871170426 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.875791149 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.88722324 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.870479758 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.881061148 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.899702416 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.870697741 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.87116754 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.871814425 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.870702285 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.871169754 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.873655464 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.871891834 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.870607146 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.871646532 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.872211617 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.872463971 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.87694548 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.87197289 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.870654474 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.871469555 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.871931144 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.873390408 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.868223834 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.872747346 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.871461875 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.872321898 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.871047925 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.872419474 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.872278916 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.883342926 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.882458117 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.87161312 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.872357513 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.869456588 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.876054808 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.875054253 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.88262689 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.879256223 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.872265297 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.872476386 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.874281973 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.872924906 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.86914821 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.87206231 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.872217496 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.873122596 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.869982327 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.886615235 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.881303997 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.878519418 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.873985973 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.873652909 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.873024458 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.87342204 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.873164246 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.87379024 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.874357236 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.873367883 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.877454671 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.873203607 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.872983352 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.876943903 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.881029988 seconds)
  done (took 1110.092500617 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.871080136 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871579758 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.871615334 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.871455642 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.871737721 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871221637 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.871276528 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.870778584 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.870281576 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.871418589 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.871177741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.87127802 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.871023061 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.872499169 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.870987436 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.872001099 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.871567909 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.871618697 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.871525187 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.871753153 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.872410367 seconds)
  done (took 41.107820908 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.874415937 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.872465544 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.871332611 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.875253839 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.871820975 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.874667891 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.871962129 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.874732117 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.874208771 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.873235459 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.874820065 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.875198269 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.872306135 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.872270589 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.874000734 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.874784723 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.87478291 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.872587053 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.875817467 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.873340339 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.87404374 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.872469776 seconds)
  done (took 43.028499702 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.876277179 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.876493205 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.876341636 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.874182668 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.876647907 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.873902917 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.876423682 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.877507834 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.876775266 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.878216767 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.876071546 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.876580875 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.88384368 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.881478167 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.879610891 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.876020896 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.021219488 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.877569975 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.877495608 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.877084934 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.873579693 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.881606404 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.875496105 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.875496725 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.875678062 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.877726373 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.877427293 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.877322945 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.877844495 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.878245553 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.881474133 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.877464755 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.876475128 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.879893586 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.877767613 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.878499519 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.881695534 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.879022645 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.875521093 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.877939394 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.887430484 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.897258465 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.87882613 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.884270568 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.878441686 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.877705955 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.881287579 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.886292172 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.875206635 seconds)
  done (took 94.003400129 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.8784533 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.878506138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.876256346 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.877931561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.878831882 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.878621069 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.878953236 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.878528432 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.875238684 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.876343421 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.878784894 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.876411761 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876200702 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.877942203 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.878835752 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.876427897 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876451779 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.876918746 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.87686669 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.876057008 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.876521908 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.880029925 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.87962853 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.877033928 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.879107815 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.877739822 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.876921745 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8792202 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.877315241 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.877067611 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.879351723 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.880247727 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.879928634 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.877887755 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877004263 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.87996665 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.88074242 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.878358432 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.8802994 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.878449633 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.879820647 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.880356065 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.88117834 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.879796238 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.877253076 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.87785299 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.878086024 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.878735171 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.877816105 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.880431817 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.881566129 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.877798579 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880324413 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.879187879 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.880948988 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.880748426 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.877909583 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.878893475 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.881507923 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.879133838 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.879432789 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.881419468 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.879532918 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.881356224 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.881606226 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.879433731 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.879317208 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.882326001 seconds)
  done (took 129.56935051 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.883090254 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.882821159 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.882399059 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882498907 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.883730047 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.883164646 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.881956436 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.88177343 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.883142239 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.88148805 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.88347945 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.88182722 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.882630924 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.882576655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.882543546 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.883550922 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.883563333 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.882978957 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.883140218 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.882755569 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.883442285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.882608335 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.882617149 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.88380299 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.884269475 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.883412606 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.884257946 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.883450906 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.882892294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.883899992 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.884200374 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.885118473 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.885464133 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.884152675 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.885441074 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.88351711 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.884924509 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.884447014 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.883911161 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.883885001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.884003224 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.884314925 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.883843406 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.884015457 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885361627 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.885231145 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.884420703 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.886770369 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.884718564 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.885845617 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.885397629 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.885550768 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.884961512 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.885987684 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.885419728 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.884041838 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.885122431 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.884910196 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.885187281 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.885214048 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.885137222 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.884085347 seconds)
  done (took 118.621552342 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88484008 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.884965977 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.882322342 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.882483412 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.884672108 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.882320039 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.886529051 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.885707466 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.884617379 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.885481846 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.885373284 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88338632 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883192981 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.885553866 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.883372862 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882968144 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88272074 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.883108896 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.884965803 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.883062536 seconds)
  done (took 39.499250677 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.883269114 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.886833328 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.882505598 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.883896487 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.885457462 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.883885041 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.886669229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.886414532 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.883375534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886918297 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.886370095 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.886546012 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.884060341 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.884457682 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.88722232 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.883746951 seconds)
  done (took 31.980103787 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.884433812 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.887009245 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.887142563 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.887873472 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.88430804 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.885556743 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.887981986 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.884963888 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.884871272 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.887972747 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.887864106 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.887412026 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.887356163 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.887652238 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.885258253 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.887077927 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.885210239 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.885745934 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.888409277 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.887966816 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.886242777 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.885357214 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.887539192 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.887234851 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.885688321 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.885236297 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.885906869 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.885427637 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.885851685 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.887849841 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.885853965 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.886203483 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.886624627 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.886348587 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.889142067 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.885908283 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.88824056 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.888960532 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.888682068 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.888881314 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.888432344 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.886037702 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.88894284 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.88963021 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.886379753 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.890182846 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.88742827 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.887178909 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.887077762 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.886846001 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.889196148 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.89111906 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.890507669 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.890485426 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.889930205 seconds)
  done (took 105.620381591 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.889941788 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.889491532 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.888226375 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.890208688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.889818068 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.88866937 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.889233 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.887183666 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.887081104 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.890147493 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.888143559 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.890115851 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.887469222 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.89041607 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.888137384 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.890399672 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.887342987 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.887495848 seconds)
  done (took 35.821949528 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.887763044 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.888560802 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.890435901 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.888420334 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.888524858 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.89153688 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.888695308 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.890997102 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.891145101 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.890271707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.88851016 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.890856617 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891394108 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.891754551 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.888806751 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890344761 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.891127584 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.891272661 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.889429906 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.889635002 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.891583121 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.891472857 seconds)
  done (took 43.406318534 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.890953358 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.890786521 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.907638879 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.910780839 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.913323739 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.923604981 seconds)
  done (took 13.261673634 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890278815 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892819863 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.889837489 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892752636 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892322738 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889378971 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89052772 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.889202645 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892017013 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890732294 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.88932966 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.892638414 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893155674 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89004677 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.892379962 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892703665 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.889447827 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891153367 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89117228 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893950797 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890472549 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893281568 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890508228 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890918842 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891675906 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890723708 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893078807 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891261481 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890843511 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89397262 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893040893 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890228893 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893878257 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891943489 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895106354 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895261078 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891761647 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89373857 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894566746 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890948614 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.893566672 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894337338 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894232843 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89126357 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894527214 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892396423 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892609811 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.8933349 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892563176 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895507599 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895437291 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892984764 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894575005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895865619 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896345676 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896131804 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892868308 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892770197 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895262128 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893505445 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892279304 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895416524 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893289855 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893600892 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895109031 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893721836 seconds)
  done (took 126.743068156 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.892941827 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893179002 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893604687 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894220899 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.89266706 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893266147 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893227032 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893502323 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893676471 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89352638 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895853939 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893417853 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893023138 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893511298 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893404958 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893573625 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894199554 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894308666 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89433148 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895979957 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893915927 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893647721 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.89366057 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894266311 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894441176 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896513388 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893941557 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894422348 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89474823 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894600366 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894237582 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895229303 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895561769 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.895220886 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895518531 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.89469827 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895920164 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.894837615 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.896070354 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897600695 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895037815 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.898100845 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.896203998 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895897364 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896765417 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89642483 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895107924 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895895836 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894914309 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896514306 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896513436 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895830251 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896141798 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895378704 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895756498 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896106367 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895384781 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895318104 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895134551 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898177486 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896580254 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896094504 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899634412 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896949606 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895570285 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896111293 seconds)
  done (took 126.906173439 seconds)
done (took 2587.01991917 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.972736227 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.991603581 seconds)
  done (took 15.794831518 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.061191788 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.012963484 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.898517946 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.937538221 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.898480615 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.893990575 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.912595578 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.898669681 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.899063557 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.899160998 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.899134552 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.085400726 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.952750621 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.898251243 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.899527523 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.993575616 seconds)
  done (took 52.877827508 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.901816107 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.903022263 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.91369791 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.905413682 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.903438972 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.916284655 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.935099627 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.906094466 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.937259126 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.914742874 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.978176043 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.913636361 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.901598247 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.954294381 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.915256611 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.917044136 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.988037518 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.97947699 seconds)
  done (took 36.517599844 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.981987098 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.906224241 seconds)
  done (took 10.729116672 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.911220737 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.910376712 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.920137888 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.914217592 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.92508979 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.915684426 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.914674352 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.946649995 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.928451206 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.949415129 seconds)
  done (took 71.071625798 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.912715924 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.907342069 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.907532498 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.905035093 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.899257458 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.903071873 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.906924304 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.902826156 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.593642853 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.941657266 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.912496833 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.912632318 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.907473793 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.909234384 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.903767271 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.929903213 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.028536047 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.905468189 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.90399508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.9134341 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.908210616 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.991822764 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.919798899 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.90859024 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.937792406 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.593212977 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.916201454 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.914560657 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.062967441 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.906718135 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.905617654 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.908104804 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.91035626 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.314154926 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.199284907 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.908053944 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.917416583 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.915737344 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.905204279 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.054259437 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.910626633 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.915143279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.846435117 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.18711075 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.018693394 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.951902904 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.283547405 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.911337101 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.9100374 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.93819072 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.91093443 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.908367701 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.923640675 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.417414506 seconds)
  done (took 134.879019564 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.902354838 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.20550972 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.057412304 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.905012691 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.181765236 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.111200309 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852697134 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953798776 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.90520966 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.107292403 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.066365095 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.016531736 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.904991159 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.90457114 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.90796492 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.902924208 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.06416579 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.972840264 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.907177505 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.903141168 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.934315513 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.114578628 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.0347441 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906711687 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.929168482 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.117492879 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.030717831 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.014561851 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.185300099 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.904280629 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.972671645 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.907654871 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.906497919 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.906059975 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.061917662 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.003583169 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998178855 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.908128022 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.905346068 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.90580555 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.568184 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.101352593 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.007006203 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.049773964 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.155545806 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.111973454 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.55485206 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.905125634 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.550845559 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.069598445 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.121308614 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.114174018 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.031919274 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.907723655 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.136846892 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.905798802 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.907560665 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.146428949 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.135741974 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.015865126 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.910731299 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.904864798 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905277906 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150904215 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.909226819 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.006217597 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909116636 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.906383482 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.008077079 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.015982693 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.141268955 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.122706693 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.943573462 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.20993938 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.386067664 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.12326406 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.976588553 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142951848 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.910630311 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.905087962 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.994723619 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.660130593 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.066705868 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.156372092 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.131789996 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.945283086 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.510930668 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.907270328 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.10296415 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.095982105 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.105839027 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.150211739 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.059149625 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.029286438 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.908585691 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.907787848 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.141657198 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.047331868 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.911536507 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.268900494 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.143558281 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.469187574 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.938939552 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.205254778 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.043901759 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.294864959 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.533793804 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.909436661 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.075367012 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.948012959 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.91057288 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.909126341 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.099196485 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.720657762 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.907430071 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.655884183 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.964487022 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.903203054 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106498427 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.902026695 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.114102279 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90619055 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142710577 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.981751446 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.9381278 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.079238273 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.148472042 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.695825817 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159141136 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.147588229 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023638161 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.171507458 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.628965644 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.904163114 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.177945343 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.906339327 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.899373043 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.064135888 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.901464326 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.067511599 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.899840742 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126807193 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.925286697 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.051824209 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.904801116 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.136363052 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.939647388 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.954716931 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.905830816 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.022298206 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.900329134 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.787377271 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.049512204 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.895259485 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.893785862 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.326298255 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.893180392 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.03930283 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.126145201 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.920875113 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.96349527 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.424421721 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.894540033 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.985432061 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.921224568 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.361354819 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.892881021 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.049291256 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.840282672 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.332054068 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.891774721 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.134824847 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.127627814 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.897423023 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.895826807 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.635719865 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.6018554 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.892593821 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.054539396 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.229072685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.553039044 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.099866125 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.897121949 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.022697021 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.900824925 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.983350096 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.242550377 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.895450312 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.893564464 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.894058138 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.893870531 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.893487814 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.103611865 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.925119914 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.40994463 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.030532224 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.114290507 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.205536188 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.119371681 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.942989954 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.903486931 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.164254387 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.897783003 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.960834139 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.896991218 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.920191487 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130734211 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.901459979 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.112141858 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.149809843 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.831125997 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.94739204 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.897595926 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.896164589 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.895602957 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.048429271 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991857635 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899675997 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.895252562 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.008115989 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.024196195 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.094821923 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.492645496 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.990075625 seconds)
  done (took 906.719834617 seconds)
done (took 1230.420463449 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.901679855 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.899102213 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.886047368 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.90231677 seconds)
  done (took 29.424808849 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.908791004 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.906079749 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.910296707 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.905676585 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.910889764 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.909517525 seconds)
  done (took 13.28782793 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.95261752 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.898685568 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.905766868 seconds)
  done (took 21.596511683 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.976585706 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.31542973 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.019207715 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.351105044 seconds)
  done (took 10.500364392 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.911361426 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.911108901 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.90983213 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.909743773 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.910940967 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.913581585 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.910664761 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.913569102 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.908784383 seconds)
  done (took 19.041554789 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.251902588 seconds)
done (took 99.935970725 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.043303024 seconds)
    (2/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.502457588 seconds)
    (3/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.111857113 seconds)
    (4/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.92118261 seconds)
    (5/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.901575444 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.231394853 seconds)
    (7/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.937236647 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.055120174 seconds)
    (9/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.054643812 seconds)
    (10/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.705200161 seconds)
    (11/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.162059188 seconds)
    (12/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.944669706 seconds)
    (13/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.953674924 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.302258068 seconds)
    (15/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.271171234 seconds)
    (16/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.943219402 seconds)
    (17/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.903154882 seconds)
    (18/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.002715589 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.981111114 seconds)
    (20/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.626483443 seconds)
    (21/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.239977728 seconds)
    (22/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.920862775 seconds)
    (23/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.112210141 seconds)
    (24/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.921916775 seconds)
    (25/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.976077145 seconds)
    (26/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.937169745 seconds)
    (27/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.081268136 seconds)
    (28/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.923676309 seconds)
    (29/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.295558432 seconds)
    (30/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.02103778 seconds)
    (31/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.902577504 seconds)
    (32/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 5.584326997 seconds)
    (33/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.044582456 seconds)
    (34/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.915595452 seconds)
    (35/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.816074145 seconds)
    (36/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.484279167 seconds)
    (37/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.060129826 seconds)
    (38/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.120692145 seconds)
    (39/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.076251708 seconds)
    (40/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.916889445 seconds)
    (41/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.513012662 seconds)
    (42/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.975346149 seconds)
    (43/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.939948069 seconds)
    (44/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.994159302 seconds)
    (45/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.192740353 seconds)
    (46/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.421544868 seconds)
    (47/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.66541037 seconds)
    (48/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.673431217 seconds)
    (49/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.910620759 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.028031608 seconds)
    (51/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.082075716 seconds)
    (52/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.217882445 seconds)
    (53/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.922397949 seconds)
    (54/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.127040473 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.028834992 seconds)
    (56/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.212643282 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.175016445 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.060243213 seconds)
    (59/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.499282099 seconds)
    (60/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.006467295 seconds)
    (61/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.425964008 seconds)
    (62/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.222342808 seconds)
    (63/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.90469949 seconds)
    (64/309) benchmarking ("perf_sum", Bool, false)...
    done (took 2.016631453 seconds)
    (65/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.899833424 seconds)
    (66/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 8.381480643 seconds)
    (67/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.047643158 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.117482698 seconds)
    (69/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 7.738482151 seconds)
    (70/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 2.024229903 seconds)
    (71/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.077116478 seconds)
    (72/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.198630806 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.826839044 seconds)
    (74/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.405122056 seconds)
    (75/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.267202843 seconds)
    (76/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.1221024 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.623547664 seconds)
    (78/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.927489216 seconds)
    (79/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.921357557 seconds)
    (80/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.980712396 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.014647961 seconds)
    (82/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.133799206 seconds)
    (83/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.400052563 seconds)
    (84/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.247874054 seconds)
    (85/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.978635931 seconds)
    (86/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.328126415 seconds)
    (87/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.432498483 seconds)
    (88/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.213300774 seconds)
    (89/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.065791733 seconds)
    (90/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.911697436 seconds)
    (91/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.287109908 seconds)
    (92/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.989089309 seconds)
    (93/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.905079069 seconds)
    (94/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.728122821 seconds)
    (95/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.231236478 seconds)
    (96/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.00344485 seconds)
    (97/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.934677491 seconds)
    (98/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.090114911 seconds)
    (99/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.928993592 seconds)
    (100/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.898264669 seconds)
    (101/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.584998497 seconds)
    (102/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.131497718 seconds)
    (103/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.054219189 seconds)
    (104/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.287248466 seconds)
    (105/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.91217903 seconds)
    (106/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.855174731 seconds)
    (107/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.078999332 seconds)
    (108/309) benchmarking ("sort", BigInt, false)...
    done (took 6.913474624 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.581776568 seconds)
    (110/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.911009948 seconds)
    (111/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.900150302 seconds)
    (112/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.595791385 seconds)
    (113/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.053077289 seconds)
    (114/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.906715865 seconds)
    (115/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 8.015279872 seconds)
    (116/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.110400416 seconds)
    (117/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.995995102 seconds)
    (118/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.135043994 seconds)
    (119/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.061465462 seconds)
    (120/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.175072968 seconds)
    (121/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.922300597 seconds)
    (122/309) benchmarking ("sort", Bool, false)...
    done (took 4.138432677 seconds)
    (123/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.940053722 seconds)
    (124/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.286564756 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.251698074 seconds)
    (126/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.015362493 seconds)
    (127/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.086227389 seconds)
    (128/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.90260657 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.221785888 seconds)
    (130/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.207440942 seconds)
    (131/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.317057715 seconds)
    (132/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.827479228 seconds)
    (133/309) benchmarking ("sort", Int8, false)...
    done (took 4.880780673 seconds)
    (134/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.914658893 seconds)
    (135/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.055401511 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.913795772 seconds)
    (137/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 3.710779402 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.070480668 seconds)
    (139/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.408275416 seconds)
    (140/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.181199554 seconds)
    (141/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.913112886 seconds)
    (142/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.738125756 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.153524663 seconds)
    (144/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.925818434 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 2.025270866 seconds)
    (146/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.945911105 seconds)
    (147/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.125262103 seconds)
    (148/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.571982669 seconds)
    (149/309) benchmarking ("sort", Float32, false)...
    done (took 5.719788443 seconds)
    (150/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.062176818 seconds)
    (151/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.226859941 seconds)
    (152/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.012314123 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.956075013 seconds)
    (154/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.284374224 seconds)
    (155/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.618014689 seconds)
    (156/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.025666523 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.950197347 seconds)
    (158/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.37073909 seconds)
    (159/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.049315965 seconds)
    (160/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.024143652 seconds)
    (161/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.144403974 seconds)
    (162/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.115435536 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.04838469 seconds)
    (164/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.244484842 seconds)
    (165/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.470511546 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.848363968 seconds)
    (167/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.745718325 seconds)
    (168/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.927604399 seconds)
    (169/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.67530867 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.533601821 seconds)
    (171/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.925654821 seconds)
    (172/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.969070643 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.03705302 seconds)
    (174/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.949854292 seconds)
    (175/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.011038978 seconds)
    (176/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.002167292 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.168201232 seconds)
    (178/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 8.104689819 seconds)
    (179/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.960823947 seconds)
    (180/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 2.036597271 seconds)
    (181/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.008777598 seconds)
    (182/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.93831536 seconds)
    (183/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.907300388 seconds)
    (184/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.111534633 seconds)
    (185/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.221741721 seconds)
    (186/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.223571062 seconds)
    (187/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.263447362 seconds)
    (188/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.700527869 seconds)
    (189/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.537589984 seconds)
    (190/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.889646766 seconds)
    (191/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.020765302 seconds)
    (192/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.952257443 seconds)
    (193/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.290614359 seconds)
    (194/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.019106286 seconds)
    (195/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.96446793 seconds)
    (196/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.167054708 seconds)
    (197/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.522718322 seconds)
    (198/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.265420894 seconds)
    (199/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.905543769 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 4.591909715 seconds)
    (201/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.92508153 seconds)
    (202/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 3.618985665 seconds)
    (203/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.887618379 seconds)
    (204/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.115648351 seconds)
    (205/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.225439664 seconds)
    (206/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.982929735 seconds)
    (207/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.117637837 seconds)
    (208/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.918544781 seconds)
    (209/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.269580049 seconds)
    (210/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.026495525 seconds)
    (211/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.986159248 seconds)
    (212/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.854765894 seconds)
    (213/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.943247069 seconds)
    (214/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.941785153 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.901907654 seconds)
    (216/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.269884925 seconds)
    (217/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.645963819 seconds)
    (218/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.946300928 seconds)
    (219/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.131477405 seconds)
    (220/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.438972373 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.950102151 seconds)
    (222/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.030653392 seconds)
    (223/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.933444963 seconds)
    (224/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 7.674123055 seconds)
    (225/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.157317332 seconds)
    (226/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.093414504 seconds)
    (227/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.940403285 seconds)
    (228/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.92320268 seconds)
    (229/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.356091233 seconds)
    (230/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.925082914 seconds)
    (231/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.331258312 seconds)
    (232/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.944965419 seconds)
    (233/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.062919712 seconds)
    (234/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.965085906 seconds)
    (235/309) benchmarking ("sort", Float64, false)...
    done (took 5.701683266 seconds)
    (236/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.054286552 seconds)
    (237/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.033772311 seconds)
    (238/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.310146399 seconds)
    (239/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.989139612 seconds)
    (240/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.309064368 seconds)
    (241/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.814130677 seconds)
    (242/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.128897755 seconds)
    (243/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.42404632 seconds)
    (244/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.132498967 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.317377716 seconds)
    (246/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.056550177 seconds)
    (247/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.013011451 seconds)
    (248/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.948858178 seconds)
    (249/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.80651359 seconds)
    (250/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.30953785 seconds)
    (251/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.401533098 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.433090087 seconds)
    (253/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.996832259 seconds)
    (254/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.010106432 seconds)
    (255/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.058463321 seconds)
    (256/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.13543122 seconds)
    (257/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.928359199 seconds)
    (258/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.98945008 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.704403113 seconds)
    (260/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.983418118 seconds)
    (261/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.517654401 seconds)
    (262/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.025067475 seconds)
    (263/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 2.004941554 seconds)
    (264/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.236934583 seconds)
    (265/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.091307104 seconds)
    (266/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.950021025 seconds)
    (267/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.954333205 seconds)
    (268/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.982872213 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.308997317 seconds)
    (270/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.329007039 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.308022783 seconds)
    (272/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.047917472 seconds)
    (273/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.611258974 seconds)
    (274/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 7.029169391 seconds)
    (275/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.227871027 seconds)
    (276/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.929924443 seconds)
    (277/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.20256768 seconds)
    (278/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.202146488 seconds)
    (279/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.03397259 seconds)
    (280/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.926889708 seconds)
    (281/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.331679915 seconds)
    (282/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.675452117 seconds)
    (283/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.046290769 seconds)
    (284/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.135282304 seconds)
    (285/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.044021931 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.026492416 seconds)
    (287/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.925447334 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.01464268 seconds)
    (289/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.436312382 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.07520923 seconds)
    (291/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.575176744 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.205036081 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.713224843 seconds)
    (294/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 7.632704934 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 2.073072858 seconds)
    (296/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.027005423 seconds)
    (297/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.772338409 seconds)
    (298/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.198894448 seconds)
    (299/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.235901398 seconds)
    (300/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.962403179 seconds)
    (301/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.263091128 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.836922848 seconds)
    (303/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.094257378 seconds)
    (304/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.628032572 seconds)
    (305/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 2.058481643 seconds)
    (306/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.01145557 seconds)
    (307/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.954297523 seconds)
    (308/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.91309067 seconds)
    (309/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 3.960262285 seconds)
  done (took 1034.091341978 seconds)
done (took 1036.014808161 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.973263482 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.958178374 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.937900892 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.961716641 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.052400125 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.975410397 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.951208348 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.941559573 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.9874952 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.990016065 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.93948189 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.974079732 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.94133613 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.941188453 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.938124922 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.955151664 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.245921652 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.967434274 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.959608744 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.948971177 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.959259645 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.940243254 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.988284529 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.974324623 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.945022227 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.94272143 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.945557019 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.960589971 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.054131608 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.945391073 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.944713284 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.953343507 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.243377298 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.965688288 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.935477564 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.960419677 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.953456833 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.949663227 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.945272117 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.975710212 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.387378643 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.948156709 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.943628005 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.941291528 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.942198779 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.946562441 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.943760873 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.948909536 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956110257 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.956827447 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.38095229 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.964536776 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.946037852 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.942007617 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.952769731 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.943492255 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.947238786 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.958058149 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.962044698 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.959702845 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.238524048 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.975073277 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.944216277 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.960364124 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.950243629 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.422102011 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.944829532 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.947196348 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.387228531 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.953908706 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.423629039 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.958223839 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.943571962 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.958212076 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.977001886 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.248730168 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.963151789 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.94148484 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.950562768 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.943528632 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.953107751 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.957924143 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.94942841 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.942364623 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.958408475 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.978705077 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.954216029 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.94702143 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.9542649 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.965181493 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.953066945 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.957307898 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.946621342 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.939027056 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.954081808 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.947437696 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.94843117 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.949353875 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.948219139 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.955923977 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.387283638 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.969721183 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.942073124 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.941399389 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.944806831 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.960463192 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.387216724 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.952380473 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.967043337 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.991373317 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.947337367 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.236187281 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.975736142 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.961631129 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.953142863 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.947749911 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.940413459 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.238977782 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.411769503 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.965226951 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.945755258 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.943428551 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.960544848 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.945752908 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.939935264 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.247127032 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.971880431 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.958488478 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.06452434 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.954862616 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.976726063 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.942119186 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.944139804 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.976129075 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958414493 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.973657016 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.944396191 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958422229 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.960006518 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.938374632 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.954962346 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.949055901 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.942883145 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.94380825 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.936787751 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.976225222 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.956012979 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.953071466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.956970706 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.059260163 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.936202598 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.231758214 seconds)
done (took 305.183578804 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.004311073 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.928903164 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.033034485 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.933602038 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.017102457 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.014310276 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.926819974 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.924966245 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.9277358 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.307725901 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.930293218 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.928999963 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.927962547 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.925588267 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.009605029 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.926237947 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.926198894 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.267942034 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.921330535 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.011769127 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.918022814 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.922272859 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.924330206 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.304330326 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.912508928 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.914110004 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.993364883 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.914749477 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.261789164 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.91643602 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.906876539 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.260801382 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.004852707 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.932700079 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.922582375 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.920089798 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.998287403 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.918814556 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.994414171 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.996823649 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.015478034 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.954940905 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.905626145 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.910025396 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.917825457 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.91470023 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.911720157 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.941458516 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.907438241 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.912164476 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.255918335 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.922988455 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.914494052 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.912416648 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.912821704 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.946626122 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.913525516 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.915888822 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.005747309 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.917028227 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.977136992 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.295382311 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.293384496 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.913217092 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.910983636 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.913235086 seconds)
  done (took 187.710394009 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.983537998 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.986645188 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.424731463 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.919697293 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.966287937 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.988698226 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.920307192 seconds)
  done (took 16.035025057 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.925407914 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.914686246 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.965173646 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.96557388 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.91600341 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.090142167 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.910229117 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.923901781 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.908591024 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.964983978 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.912461721 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.911627453 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.920328286 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.911678196 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.958697953 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.922958546 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.02676413 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.913612484 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912524847 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.066194697 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.908875427 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.920139199 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.974055348 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.923037289 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.91218878 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.919431934 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.508032851 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.912721949 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.909369763 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.912618514 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908667051 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.955974415 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.911896373 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.905829198 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.910201702 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.029135999 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.916287227 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.911703907 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.913427601 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.912016936 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.912872352 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.91281806 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.914428997 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.913097409 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.913004318 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.937424529 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.913365573 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.911986134 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.912642979 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.917063416 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.969932946 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.915594571 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.913043709 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.911864141 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.969714686 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.920445672 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.914623461 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.911944625 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.915128628 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.912022328 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.071017204 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.961591802 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.915213342 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.963729736 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.913767998 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.91726231 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.915443184 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.914791761 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.009644313 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.913287485 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.961862192 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.913390105 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.071528676 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.939648944 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.915845086 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.920279771 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.916835485 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.915626044 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.914757974 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.921230689 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.913095834 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.915764586 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.923343708 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.913939008 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.91295609 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.029504479 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.024262776 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.91230911 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.931813507 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.925540853 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.913917128 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.976209656 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.915041719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.916739851 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.97176609 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.031864247 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.977211575 seconds)
  done (took 210.272783748 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.92229063 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.924362673 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.918985103 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.933694954 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.917910636 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.916622496 seconds)
  done (took 13.379539791 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.921068552 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.922724551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.91691791 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.918688926 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.918110181 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.919423843 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.918243724 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918774714 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.923352139 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.918197069 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.918680712 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.921126181 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.918381313 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.925054676 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.920432326 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.919055136 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.921244003 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.915587526 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.918675128 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921623088 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.063870685 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.920315574 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.920838102 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.920836308 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.92617041 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.920630739 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.928838142 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.920696774 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.921626947 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.929788849 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.922658085 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.922388304 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.922684493 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.92588657 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.925442561 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.921308171 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.924491927 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.921764375 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.918543657 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.919152307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.920761248 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.921244577 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.921397163 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.922106302 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.923215009 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.926281958 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.926123976 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.927510905 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.920247332 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.921575042 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.923444511 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.920152219 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.919801504 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.925295443 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.921878654 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.925548015 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.930464036 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.922646277 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.919765685 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.92097602 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.92325282 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.923253974 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.925865373 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.926372368 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.928369664 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.924557596 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.923421357 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.926598356 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922650635 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.920313467 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921477885 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.921432316 seconds)
  done (took 141.390243642 seconds)
done (took 570.666981183 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.180101916 seconds)
  done (took 9.031148939 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.997641813 seconds)
  done (took 8.946005696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.443737652 seconds)
  done (took 10.295365081 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.934622345 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.920945916 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.926926527 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.925641905 seconds)
  done (took 29.573630381 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.945715508 seconds)
  done (took 8.799813591 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.933616207 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.913796082 seconds)
  done (took 15.732340106 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.998551103 seconds)
  done (took 8.850088346 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.383699501 seconds)
  done (took 9.236729394 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.928339397 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.943643542 seconds)
  done (took 15.737580704 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.901317232 seconds)
  done (took 8.751855283 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.478011049 seconds)
  done (took 11.337883142 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.924069695 seconds)
  done (took 8.782100838 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.921983296 seconds)
  done (took 8.773003717 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.074733112 seconds)
  done (took 9.920363434 seconds)
done (took 165.618509213 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.909309615 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.909425633 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.9056193 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.900789054 seconds)
  done (took 29.468661237 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.942846597 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.943647872 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.94596309 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.953908761 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.949409421 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.940069546 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.931905549 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.934272417 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.949825915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.950495987 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.93948525 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.940020673 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.937929827 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.93143137 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.941373277 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.944490231 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.948249761 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.937257273 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.928466833 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.939566862 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.909156233 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.94687984 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.939774594 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.905224289 seconds)
  done (took 48.37641049 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.106130621 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.974805328 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.057084968 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.957099759 seconds)
  done (took 9.927330943 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.956207448 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.955584075 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.965552657 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.003026581 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.030687821 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.965047337 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.928149596 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.921552913 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.907791894 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.952741834 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.033251709 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.966888756 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.035433564 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.89800532 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.082196802 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.898682345 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.895690871 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.947610904 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.997129537 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.019503155 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.903056687 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.944080783 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.949016634 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.960976628 seconds)
  done (took 48.954410598 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.890447018 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.902996189 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.895160621 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.8890993 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.889416775 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.888946522 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.900978907 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.887855411 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.906856649 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.887573642 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.886857741 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.888144233 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.886038275 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.886413462 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.885089158 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.897538481 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.900107168 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.887169252 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.88894826 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.89288404 seconds)
  done (took 39.662696433 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.880509897 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 5.818827549 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.230597479 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.135453333 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.879460813 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.876185244 seconds)
  done (took 32.639626498 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.890905693 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.880413502 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.878111267 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.934258734 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.012449334 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.889380793 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.879962321 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.890910041 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.925542366 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.945428941 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.895445602 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.89592369 seconds)
  done (took 24.737410514 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.866225902 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.86466786 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.870256899 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.881747245 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.880199367 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.87862567 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.875819131 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.863333363 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.882458059 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.886360659 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.8806786 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.883948875 seconds)
  done (took 44.322002197 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.955264915 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.913724634 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.893514604 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.54797094 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.244129558 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.078158285 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.37886277 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.202462973 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.868384132 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.139432156 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.902862784 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.987541869 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.134600613 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.383825826 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.912401748 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.344499465 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180678316 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.085392298 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.898275276 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.596759683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.962818922 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.094992144 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.706811151 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.958830548 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.10788499 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.031087322 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.157946417 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.897118738 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03136016 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936143956 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907254725 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.900046384 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.175217407 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.268185122 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.998526744 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905062877 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.511686192 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.610745338 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.890354395 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.74582428 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.671508786 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.025286286 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.907500123 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897560993 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.830018989 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.055100451 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.277240902 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.901492786 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.608577177 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.896350836 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.906854828 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989655962 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.903835274 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.716570929 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.819031755 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.902178063 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.896572476 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.904822661 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.466457989 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.047449961 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102987921 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.874601445 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.992951162 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654094976 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.296892901 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.051140998 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.902399008 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.90471777 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835455385 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.693253172 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961036266 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.228342908 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.921460426 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.552848196 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.202571123 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.019126595 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.846149743 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172567802 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.437756625 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.877525282 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.131593263 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9036506 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836376191 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.938505966 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.836883946 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.171783864 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.940002787 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.64704271 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.940575919 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.240326837 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.913944552 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920109478 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.927636792 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.128640261 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.786845059 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.902169263 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.753713629 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.047266416 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926869535 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.238650479 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836560055 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.909389283 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.159625854 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.117848391 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.988443655 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.406382923 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.064510058 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.47406247 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.958053409 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.056566632 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.955057987 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.17891366 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.968916316 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.062973926 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96296394 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902995372 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.218363476 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.500538039 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.043617927 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.00100815 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.033163238 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.222965956 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.932401624 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.972771687 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.91235027 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904974833 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.741642412 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.457234906 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.901279262 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.909250348 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986431163 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.947557776 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.903401369 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84589867 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.528735736 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.983864696 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.914553678 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.116939092 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.478261053 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.205477856 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.825250048 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22286974 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.98090007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.112389861 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.535592144 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.967326 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.150591577 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.970181496 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.010264018 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.938263197 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.908177523 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.988205783 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911075686 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.051392109 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.183988069 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.894473497 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.89412941 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.702577544 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.929341202 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.897421541 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.896148979 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644250005 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168467854 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.916097588 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89729442 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.7803395 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.904681504 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956273294 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.895953894 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.899983428 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.430468079 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.617596592 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.898914764 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.47963683 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.115964477 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.901352937 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.61679116 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.006604478 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.974821595 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.167245403 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.953646423 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.825549974 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.602740779 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.586206351 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.893234365 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.827960067 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.892727201 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.903418583 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.903772715 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.090973113 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.171650108 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937993968 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.617718381 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.937852485 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.905353212 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.90053009 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896488532 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.405923279 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.051722645 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.101660861 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.942337132 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.039573088 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.908766754 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.828711675 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.899025066 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.900589698 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.89625119 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.89629016 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.9283114 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.625043895 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.271368648 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.157031164 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.51398579 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.909431757 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.648146119 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.963369595 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.96078276 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.759892152 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.074864585 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.983659344 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.911004137 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.910458425 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.703997567 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.595939694 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.467215912 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.216901396 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.207919789 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.345188927 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.129703866 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.931031784 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.235184767 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.834387689 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.465234283 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.959235186 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.242073617 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.846140116 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985366837 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.547713128 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.245422246 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915006165 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.128108016 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.288672606 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.67414083 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.050744289 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11290415 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934721446 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.068633117 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.863673282 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.423023553 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.042929283 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.63966733 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.110479522 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.233432133 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.625476679 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.03217667 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.900629828 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.583463607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981179632 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.609135735 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.074074649 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.090607436 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.852313415 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.372640824 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.902913999 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.121945721 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.257531221 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060151973 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.019610202 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831423848 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.90847471 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.907334408 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.897177053 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.894840835 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.783718526 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.149935326 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.908008227 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831526611 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.010092759 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194147958 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.81742973 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.902668139 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.896956672 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.209354143 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.446818954 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071107621 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.003253243 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.418440103 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905761737 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.832344007 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.831099572 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.590470047 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904558453 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.872018076 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.104376668 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.999141461 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.816441029 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.987829021 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981777115 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.154955836 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.912764879 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.175324174 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.17577088 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.595537643 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924240181 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.999047374 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.619189856 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.012312688 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.899203858 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.133538041 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.648825682 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.126444319 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.91905007 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.847412351 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.898353544 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114811893 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.900346914 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.819212019 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.136288611 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.621150656 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.993799033 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.222347395 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977874035 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.87354632 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.96009711 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.996087269 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.913588269 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983321511 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915095722 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.91545266 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.914997548 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950600739 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.89113287 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.032536001 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.917855671 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.992854524 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.071131887 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.431388447 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.909481272 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.181191337 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.258384557 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.240005392 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.963236894 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.904968662 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.905765353 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.838425107 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.052756939 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.130037687 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17910063 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.034901919 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.021441625 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929572 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.620211394 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.12695618 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.147980918 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.17971418 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.79984525 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.422777244 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.948426395 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.904118335 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.915635804 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.11525811 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.116486881 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202131972 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.050369519 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.994171028 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.271211655 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180615847 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.905258064 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.907897968 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49451841 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.01129459 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.59531594 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.94747445 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.850067402 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190873567 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.918456155 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287516257 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.927324753 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.063339874 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.423872378 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.644339889 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.200379918 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.892154245 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.969449491 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186851307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.307683914 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.222387231 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.978200194 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.919547725 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.016092551 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055737827 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.793471715 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.911510859 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.90944983 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.957191357 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.620524776 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.917869616 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.194992206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.221550513 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.908507576 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.787881462 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933224296 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.92086352 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.134621755 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.183063493 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.160557588 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.920817919 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.919154425 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.725710632 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.189753616 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.969243056 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.844737372 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.914910041 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.005731888 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.158110694 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.930975907 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.361917317 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.622057115 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.188622181 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.90858806 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933329511 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.084920212 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.289199331 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239744831 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.450223256 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122100455 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.503791605 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.498549634 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.215545228 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.917813044 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.079970775 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.21882437 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.915495478 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.001747306 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953187428 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.185865492 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.224989478 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.02321503 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.654086872 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.88818296 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.259612209 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.479647273 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857378853 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927817662 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.978740788 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.91972262 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.049855596 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.929714293 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.811098518 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.081527515 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.680873809 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.191057907 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.924214424 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.909767217 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.668349943 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.222728883 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.956337577 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062093445 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.926974518 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.623281973 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.278732145 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.175107405 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.012083344 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.929537879 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.923464524 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.9205136 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.905562202 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.117220925 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.116709134 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.189761828 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.034316009 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.960914922 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.923688286 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.136559877 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.13264111 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.870973308 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.06391827 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.010085756 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.9650054 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.824533861 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421623559 seconds)
  done (took 1691.679327999 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.960628967 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.940114517 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.988507183 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.993976655 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.994635123 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.972522043 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.971511339 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019819993 seconds)
  done (took 57.70050359 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.927111048 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.116511499 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.930179334 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.921732027 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.931970758 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.923081813 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.088736877 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.932506025 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.931092321 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.932138032 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.92434084 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.922972966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.23204631 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.946749742 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.923238383 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.909770104 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.932092555 seconds)
  done (took 75.308419884 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.923615703 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.038324809 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.939435298 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.937691334 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.881411368 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.932702278 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.719209092 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.952791424 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.924329932 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.154852265 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.558441326 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.935222606 seconds)
  done (took 90.758514877 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.934986715 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.930714563 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.930460207 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.93054615 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.930116391 seconds)
  done (took 11.521308355 seconds)
done (took 2206.925363535 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.16909683 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137571809 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.161658526 seconds)
  done (took 6.15982473 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.072781553 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.119626432 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.238900255 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.245913977 seconds)
  done (took 10.543207838 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.205242658 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.305173471 seconds)
  done (took 6.371241753 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.312191185 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.930506317 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.305878084 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.925788333 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.924839742 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.9254416 seconds)
  done (took 22.641953869 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.928862966 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.933673785 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.929065977 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.931210487 seconds)
  done (took 9.585362235 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.909440405 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.60854705 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.908541234 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.928730739 seconds)
  done (took 21.216584602 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.679220598 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.689252749 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.672280889 seconds)
  done (took 9.902058165 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.457708578 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.823287712 seconds)
  done (took 9.141242576 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.193391415 seconds)
  done (took 4.053983548 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.060434495 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.233848357 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.438890087 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.447214036 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.536857391 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.63950305 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.249432285 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.175091725 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.351513907 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.366632443 seconds)
  done (took 25.361753328 seconds)
done (took 140.555503943 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.303396744 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.290902281 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.129581993 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.261036216 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.148707132 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.128228097 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.136398508 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.245281128 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.77103239 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.770552722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.304243953 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.148002504 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.295311149 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.287654016 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.296407144 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.162891795 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.147801526 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.313394792 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.961322619 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.195926961 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.140649732 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.901995915 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.148311884 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.915276527 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.150164723 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.079629731 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.480877852 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.16433932 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.117204091 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.490946339 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.114968581 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.349527823 seconds)
  done (took 173.21601889 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.691122891 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.927786041 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.929052209 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.927552349 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.241964683 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.927773702 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929443228 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.928369409 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.99367426 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.980056601 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.926890026 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.223727911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.929895643 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.927508024 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.928455534 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.928446514 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.125508873 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.707668503 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.929679222 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.934193162 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.936143525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.156884645 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.942530334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.199434148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.165320964 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.950178992 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.929169548 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.955540615 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.928602724 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.942910732 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.948898553 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.929901327 seconds)
  done (took 208.889640214 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.927723394 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.929637918 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.930153141 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.929125032 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.935656633 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.937747811 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.929247003 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.930098542 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.513637587 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.511270391 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.942301329 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.939054576 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.935693438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.928922857 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.936705859 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.930485967 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.938148145 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.938188439 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.937123189 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.93964547 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.944875962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.674326432 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.943343599 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.676528695 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.937510594 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.936017798 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.931219435 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.938588025 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.942420951 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.941895304 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.939222624 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.930729062 seconds)
  done (took 222.466657114 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.126542031 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.937621225 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.939167626 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.875805595 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.938924013 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.936892729 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.933908486 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.134783683 seconds)
  done (took 19.710575197 seconds)
done (took 626.155992996 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.391675768 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.231777118 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.11621879 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.962350639 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.19483131 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.99597226 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.958852734 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.019053975 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.687267821 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.02423354 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.610301512 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.975034424 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.694363742 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.981581929 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.086502274 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.014530659 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.530776391 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.624458447 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.136165497 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.010521063 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.13409302 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.890296571 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.031737301 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.701111103 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.710193128 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.930023038 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.121750692 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.535083001 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.972316644 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.123895102 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.66808489 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.33100028 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.968125944 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.955456851 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.009354779 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.991258738 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.29537846 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.96574604 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.083124895 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.694509253 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.014301965 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.56940186 seconds)
  done (took 105.810941311 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.92962129 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.928336135 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.92691422 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.929941672 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.929376046 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.928215196 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.927619277 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.926921402 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.927775274 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.927157318 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.928871894 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.929376582 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.927671256 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.929212073 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.930159148 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.92766403 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.928795455 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.932066777 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.92836376 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.9276706 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.928467633 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.927654585 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.942940409 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.929178436 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.928889175 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.928903961 seconds)
  done (took 52.037673499 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.941290298 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.084649545 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.166016872 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.959100997 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.941063025 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.943797283 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.959316353 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.946272448 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.943947571 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.943948597 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.037980061 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.948162891 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.960127036 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.165558879 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.956427231 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.943063281 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.943456561 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.943045743 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.09060357 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958366097 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.961799431 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.946837969 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.960962907 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.955606651 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.94515965 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.942707744 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.946809115 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.413694795 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.952391004 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.038659449 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.984453232 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.964584451 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.377799907 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.174196751 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.994386039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.950218454 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.944726195 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.041382514 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.94864797 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.944119879 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.961684281 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.9484986 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.167204392 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.448004963 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.955438285 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.943629553 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.420660377 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.051444859 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.984022004 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.955939413 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.170112329 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.959042119 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.946044331 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.945763938 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.981358973 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.956169632 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.944484457 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.3143947 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.956516628 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.961490836 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.950186847 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.946145235 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.099356346 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.95240059 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.08827974 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.953646769 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.951216749 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.947292907 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.170371646 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.960180022 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.455390697 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.956618814 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.944237766 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.040444465 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.091134293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.445915036 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.955348154 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.101632843 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.3931464 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.9670964 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.952510157 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.401096446 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.970434115 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.952315312 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.94759222 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.94517982 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.945803576 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.989849339 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.960252719 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.381710649 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.458848548 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.324387415 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.968898601 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.961089299 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.946109884 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.313415325 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.95325031 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.946409532 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.161906463 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.463198733 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.959282867 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.955258046 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.44415843 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.959090871 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.963438289 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.953549821 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.171479885 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.95908233 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.989856943 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.946037329 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.953783092 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.949770234 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.964200912 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.953148794 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.946295076 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.438663222 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.059274674 seconds)
  done (took 240.894415775 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.942289712 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.941915597 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.939519913 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.941241419 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.941339685 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.945374824 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.939043424 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.940718109 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.946814246 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.940144574 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.939252055 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.943434575 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.941039995 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.944659854 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.460460003 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.948530519 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.551742893 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.942463764 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.941867469 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.942119059 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.619613688 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.946761669 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.942068369 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.952371415 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.945046659 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.94306886 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.952673917 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.977869422 seconds)
  done (took 170.132785218 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.949082069 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.133080822 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.965465684 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.98517489 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.956526104 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.947519496 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.972977093 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.968992955 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.953194634 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.947977464 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.947920007 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.010491419 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.960534612 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.087714827 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.981826187 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.98187895 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.056070158 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.956872354 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.94773146 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.948559991 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978309032 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.944253611 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.011722756 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.077804789 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.967022998 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.068509814 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.954676865 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.950902338 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.94851281 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.06708578 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.965846457 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.010186861 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.97810068 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.968371355 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.07105968 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.068731271 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.057709464 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.980074182 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.95327686 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.948756534 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.949961187 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.939050105 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.066798793 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.967747851 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.94999126 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.059985092 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.968813286 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.952072777 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.959317709 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.94955718 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.964220552 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.967981854 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.018169797 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.085498026 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.984867992 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.975951205 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.976275102 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.236153172 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.96092763 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.052483688 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.943765261 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.068289768 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.97178612 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.939951268 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.951994591 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.957284867 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.980098227 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.982542677 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.058124189 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.95880358 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.054109142 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986601564 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.957798764 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.949555882 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.953149474 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.07120534 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.071802387 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985363852 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.987695913 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.983220421 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.946653907 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.951681044 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.940144321 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.968002253 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.955111202 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.070681096 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.071600828 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.960422982 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.95373985 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.955244382 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.954944847 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.977611149 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.076047793 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.987482652 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.052669214 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.019646119 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.027744691 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.967330262 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.966095188 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.955996471 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.01737367 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.967685312 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.965371179 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.288562551 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.024889111 seconds)
  done (took 211.333355552 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.42934525 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.006967418 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.00793058 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.236600908 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.375285951 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.810680864 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.00051142 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.004136092 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.027270651 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.165151167 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.059425564 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.014740674 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.988023931 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.975882898 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.003541998 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.021519585 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.004426531 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.30294072 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.122455048 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.13227104 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.982796311 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.310590372 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.320676714 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.384431899 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.035824131 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.32271683 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.676626528 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.241827205 seconds)
  done (took 63.854505426 seconds)
done (took 845.92995043 seconds)
SAVING RESULT...
DONE!
