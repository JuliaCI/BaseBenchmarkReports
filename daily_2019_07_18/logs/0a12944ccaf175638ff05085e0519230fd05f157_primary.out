cset: moving following pidspec: 9311
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.326767015 seconds)
loading group "string"... done (took 0.537213135 seconds)
loading group "linalg"... done (took 6.717858383 seconds)
loading group "parallel"... done (took 0.153508066 seconds)
loading group "find"... done (took 1.164501405 seconds)
loading group "tuple"... done (took 1.753724729 seconds)
loading group "dates"... done (took 1.184689148 seconds)
loading group "micro"... done (took 0.220959921 seconds)
loading group "io"... done (took 0.972870545 seconds)
loading group "scalar"... done (took 36.414367464 seconds)
loading group "sparse"... done (took 10.926689466 seconds)
loading group "broadcast"... done (took 0.908387955 seconds)
loading group "union"... done (took 11.790734748 seconds)
loading group "simd"... done (took 4.139945778 seconds)
loading group "random"... done (took 8.500384969 seconds)
loading group "problem"... done (took 1.860207653 seconds)
loading group "array"... done (took 19.908620387 seconds)
loading group "misc"... done (took 1.677658877 seconds)
loading group "sort"... done (took 3.101539195 seconds)
loading group "collection"... done (took 16.612877376 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.480533577 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.122164464 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.114689726 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.11771721 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.13996908 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.114878662 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.121913692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083785321 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.777338392 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.139354038 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118310362 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.408460286 seconds)
done (took 4.899929685 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.172738004 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.082810078 seconds)
    (2/2) benchmarking "String"...
    done (took 0.081055167 seconds)
  done (took 1.285246576 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.064785307 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.120532642 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.066409161 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066527962 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066331334 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.066184533 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.066355702 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065808546 seconds)
  done (took 1.63985907 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075505746 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069100815 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068605883 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067591917 seconds)
  done (took 1.402485518 seconds)
done (took 5.696799537 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.756540636 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.198192472 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181997663 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.390043775 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.129402645 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.161832423 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.636639569 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.300452015 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182014488 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.079887761 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.102463317 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.318669484 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10613081 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.646782499 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076000081 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089910409 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.138548034 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.410065917 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067058452 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082333681 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088690772 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.128380467 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.085372713 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076109245 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145189789 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.068382058 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128622153 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.080199795 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.066236537 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.20571801 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.173174883 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660805796 seconds)
  done (took 10.120604989 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.095470112 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.096757367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.068791976 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.122896343 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095748719 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069783095 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071068832 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066984993 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086411284 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126936471 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087636743 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100151465 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065694794 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.069246989 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.084045511 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203586841 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.080273195 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.081395079 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.07037233 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075031792 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.105273668 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.078168418 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077615428 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077380545 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128082837 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.180545079 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09744014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.097096247 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.067393831 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.080163632 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.115274609 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125419081 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.066088327 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066887529 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.123808375 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.094301476 seconds)
  done (took 4.552597736 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.896947764 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.138509382 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.089765574 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.159850236 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.06765001 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.083335424 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.105583315 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06541784 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083812728 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.19776845 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.045350524 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.427886568 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110685508 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.084720872 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067809632 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.068192603 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.067163601 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.341547877 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109592604 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.112558051 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083867988 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073989002 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.06971944 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.342028617 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066755433 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066942429 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067985298 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.058482499 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.112947878 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067737206 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.967468569 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.08672616 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.06719577 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101053588 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.164888288 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086383217 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.131961677 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.065026544 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065230783 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.145164606 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072714089 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.089122159 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.064781318 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.081758218 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105009976 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.101398731 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.196914964 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067113173 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.160734915 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067129167 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.083323032 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.703230249 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.15375843 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.075885737 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.066646788 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.244679593 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085577518 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.067037546 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.064629274 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.064917015 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.201880479 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.128402409 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068025626 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.06637853 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066403426 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.068262633 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.364689321 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.066723319 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.997286293 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.068623266 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076826009 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069339197 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066881807 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.064440672 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072369794 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072017126 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085823483 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066232014 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.068707217 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066110752 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.066725784 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.068592186 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.083905737 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.188688962 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.066466864 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067130724 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064835333 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085938809 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.101492466 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068907048 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065449361 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100859806 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068071689 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.067157767 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.101070318 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066679128 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083386037 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.06855654 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.113161474 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.06564558 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.123917598 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064801743 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095311517 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070394929 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.099398718 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.170427145 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068058207 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.225149806 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064775416 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065400471 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066556297 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.065421416 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067412207 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.069141788 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079312026 seconds)
  done (took 20.087789911 seconds)
done (took 36.778741146 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.272457558 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.074307224 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.074540547 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.074565477 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074371877 seconds)
  done (took 1.776284958 seconds)
done (took 2.962046694 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119204652 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098417142 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064691529 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094777968 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064219606 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.099199077 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.098741503 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080903141 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099217334 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064058654 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095798192 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.064209072 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064139215 seconds)
  done (took 2.314468591 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082622223 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083370566 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069889973 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.081907748 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.06399719 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081799464 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080517156 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087815326 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.080752574 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.071840572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063786572 seconds)
  done (took 2.030823551 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081070501 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083187222 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069481733 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080766745 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063586262 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081432459 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081336594 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.085235088 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081420684 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073144307 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063547772 seconds)
  done (took 2.020746928 seconds)
done (took 7.542083373 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.07694113 seconds)
  done (took 1.246221252 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.58471807 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.044766211 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081183558 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11110773 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.18238707 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11784297 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.273052337 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.086275292 seconds)
  done (took 8.831626982 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.087631979 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.069286949 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.069538921 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.068431186 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069151375 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.081303352 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070988695 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070649356 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071393517 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.068080107 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.068827438 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.071752327 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068797312 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.071453656 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.071571802 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070790835 seconds)
  done (took 2.392362723 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.0912755 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089699612 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073089852 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.07415665 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.072209649 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071802747 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.074073081 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.073345762 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070731825 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071397081 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073891175 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.073028273 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.071003322 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066139352 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073360662 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074848724 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.070569985 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073538461 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074873469 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074405104 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.074173971 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.064204251 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.071058621 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07343247 seconds)
  done (took 3.047266026 seconds)
done (took 16.694866049 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.112318902 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071073793 seconds)
  done (took 1.361636845 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081056572 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08206437 seconds)
  done (took 1.348439073 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08138176 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.065170467 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.08894418 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.076874239 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065864624 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.066136953 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.08620934 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.06629769 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.065835641 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.066058163 seconds)
  done (took 1.915119097 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068607782 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.077079574 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069984393 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080691719 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.073033822 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.064062491 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.072077526 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.067277246 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.077170986 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063278873 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071076327 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.082377581 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070599081 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082940423 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071636661 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.068209371 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.070189377 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.066879933 seconds)
  done (took 2.485696372 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.065160061 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06720103 seconds)
  done (took 1.323463536 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067488577 seconds)
    (2/7) benchmarking "second"...
    done (took 0.063731848 seconds)
    (3/7) benchmarking "month"...
    done (took 0.06618605 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065738369 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.063245213 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.062485019 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.06323587 seconds)
  done (took 1.639548548 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.370973019 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.110140674 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.291801681 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07028044 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081698216 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249601114 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.065162658 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.070339959 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.070057139 seconds)
  done (took 2.610372946 seconds)
done (took 13.875981607 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.079145742 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084657878 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.094207296 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.338585578 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091563542 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065847623 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116685386 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.184907442 seconds)
done (took 2.255907873 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.207956896 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.559742031 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.36680092 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.193223322 seconds)
  done (took 2.317239348 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.31384571 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091160888 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059557499 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.066914664 seconds)
  done (took 1.733433567 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.065977385 seconds)
    (2/2) benchmarking "read"...
    done (took 0.068624967 seconds)
  done (took 1.334435452 seconds)
done (took 6.7947541 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066712649 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082912792 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065900609 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.066093164 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.066058696 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.063610791 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066080038 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.063573199 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063454615 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065957565 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.066082443 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.068491062 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065882537 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06673644 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063619758 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063466697 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065924872 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06361457 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.063366789 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.063755041 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063436929 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.06570483 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066337355 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063800127 seconds)
  done (took 2.815340865 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.082947562 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.066414914 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.071238916 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.07073431 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.070041302 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072010378 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.071084117 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.066184006 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071213316 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067783607 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069284984 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069714986 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067907387 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069959832 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068016808 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.069763453 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070883759 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066310819 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068362151 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.070052729 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.0708466 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066412107 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069730614 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070716216 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069652031 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069536212 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.068347828 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.06627199 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070759671 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.069411864 seconds)
  done (took 3.300610192 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.069706546 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.063457651 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064084702 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070717604 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063605334 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064561375 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.063543962 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064088258 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.064540365 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.063413373 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064865912 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.063599069 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063398214 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.064394272 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063984066 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067383527 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078438479 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063481189 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.063384293 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063953933 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066733659 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063703388 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.063661161 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063338394 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063176609 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063081342 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.064261064 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.063479749 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.064207185 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.063411747 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066534736 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066878502 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.063137741 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.070163785 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.06671124 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063216479 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.067575379 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.063557772 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.064005337 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.063104906 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063156412 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.063534074 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.063437996 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070385905 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.063517883 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064815999 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.063476495 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064614144 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063924227 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066149951 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063042023 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.063684673 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.065425995 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064890918 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.067451457 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.063214342 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064612327 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063254584 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064893764 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.063501613 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.063325567 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062996104 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065911017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063744655 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077256456 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.070171996 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.063820539 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.064873374 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.064142752 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065669086 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064915409 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.076618986 seconds)
  done (took 5.90842975 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089812686 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.197707675 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065686396 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065021602 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06215382 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065996815 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.067239606 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.064193382 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065239333 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.06916082 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064051166 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.064987052 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065212051 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076491383 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064166783 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065200841 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069757835 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06174492 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063623101 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067236013 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.063978147 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.06695552 seconds)
  done (took 2.829866747 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152247512 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070720633 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.105081398 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07254333 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06711093 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.07229348 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069421517 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069823838 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069518689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067984812 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067673881 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069974141 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067361554 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067898055 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068058254 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067858474 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069549524 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06790041 seconds)
  done (took 2.57842104 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.077491033 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.066511459 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.086041114 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.06619184 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065678092 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06826283 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070224963 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073845409 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.068374198 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065911417 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073520414 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067991214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.067962384 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065645133 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068280123 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065687098 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.068264924 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065776295 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073462884 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070190373 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.070228723 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073883002 seconds)
  done (took 2.756170691 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079885335 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.068517081 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.081554471 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068291368 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061678747 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06426051 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069868046 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.065798044 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069680537 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.067442505 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066171293 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064321917 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.069114785 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065813532 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.069129334 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065970028 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067479489 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066119496 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067814436 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061823507 seconds)
  done (took 2.578796187 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.086333982 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067509332 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06793219 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074977519 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.067396497 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.067657138 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.075093321 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.067235175 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068271249 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.086921848 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067595657 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.067700392 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074790539 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072338831 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.067471537 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.074566929 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074638301 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.07459761 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.067008888 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.067119914 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086342283 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067043577 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073996807 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067190556 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.067113079 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.067293089 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067402956 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071658194 seconds)
  done (took 3.225469355 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.066511455 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065544273 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.063389182 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063602629 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.063601381 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.063353458 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.0633067 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.063707165 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065675493 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.063471231 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065779038 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.065690576 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065779227 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.065641371 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.065688034 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065562309 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065596537 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.063601711 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06334864 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.063442013 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065646817 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065585868 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065750482 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.063340893 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06344975 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.065429594 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.063276371 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.063683629 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065836265 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.063136902 seconds)
  done (took 3.161420517 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074743996 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072565562 seconds)
  done (took 1.371639367 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.063367237 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.079627229 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.06294069 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070363543 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069172874 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.066480688 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072925501 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06957514 seconds)
  done (took 1.774853439 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080823544 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076849922 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.066971388 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079720525 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.076226232 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082374617 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131285935 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.066971871 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.072408258 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.064180908 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.0790788 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.065849783 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071769324 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066369717 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.071698017 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072160376 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.064035262 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071624289 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.068271018 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.064557733 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067264938 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074564785 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068420729 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.06171966 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067052997 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.08765718 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.07646511 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065729252 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068799648 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072632568 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.07126828 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.060404514 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065745107 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.066429057 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.0637604 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.075269445 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08062039 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.068664936 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.074500358 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066515963 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076243151 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.061112231 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.070842623 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072261075 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075881147 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.066407745 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.066593074 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.061650153 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.064540022 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.068530641 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.061654545 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066181559 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060963061 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073033166 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069125701 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078770248 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.064507955 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067782499 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068533368 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.069237394 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.072742474 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.067846491 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068628261 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066006022 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.075446506 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.070351207 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074622081 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.061154457 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.060265375 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.064016815 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.07566624 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088333893 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072273349 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06673346 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067279475 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.0639334 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069211319 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066788874 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071636765 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072155501 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.06645252 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.07121172 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073069555 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066490527 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.068151199 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.074708221 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.064795892 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.069010938 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.063949976 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082345557 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.065239196 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06417183 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.064396174 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075623467 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.069396454 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065821079 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063770749 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072606358 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.060383351 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.066309787 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066656677 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066278947 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075899235 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069313995 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070413751 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.07358592 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.072407316 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065683398 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.06816398 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.062110121 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06598454 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064600313 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.07221684 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.059895859 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.068569027 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065858719 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.19064899 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.075028664 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.065193119 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.067128508 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.07381317 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072577118 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.065482911 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063610401 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.069505837 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066249863 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070119816 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.074233414 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064941951 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.062523529 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061976839 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.070291937 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065934015 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.070232884 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070879949 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068991355 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061146506 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.064349924 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.07199085 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.075262912 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066599304 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.067896157 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.072443014 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.068357135 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065903403 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073333048 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.068987287 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065612981 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.072380198 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.067179519 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.062150089 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070219486 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.06947091 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064767034 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.070222732 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.06932852 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068399745 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066509096 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065064651 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.073852913 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067047066 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.06545053 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066819271 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.065014964 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.076421022 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.068156207 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.061491889 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.064236721 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075573224 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065098064 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065852308 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.065309304 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.068975042 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.067399987 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.065078496 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0656317 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.068456976 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076654345 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070598279 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.06717247 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071586702 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.077340461 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.066091785 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068790839 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.065979481 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.066920017 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.067259403 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074975691 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.071525232 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071001606 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068762185 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062732142 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071708213 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07368654 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.065327967 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.06372153 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.06522312 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.069970713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.07162175 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.070217384 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.067188793 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.064490557 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066970007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069301798 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.069004317 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066411363 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.065514513 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072720844 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.064569395 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073255389 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067407161 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.07655719 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069001225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061639343 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069637305 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06432373 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071660769 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061990939 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.064156073 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.06552733 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.067107346 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.065139899 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.068060336 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059788872 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071783392 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072289343 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065187099 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064386478 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.064882381 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.071445942 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066640939 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069038927 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068570692 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070468788 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074858361 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.064327865 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.068410574 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.204247241 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066979112 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.060906097 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072243965 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065365499 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.065501806 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.065782575 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.064973284 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069653828 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075876955 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.073744493 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061077233 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.069428797 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.065302381 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066447883 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.062527865 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070482252 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.069015648 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067539695 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07283055 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.067424257 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.067937738 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.070288454 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.066117119 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.067483163 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.068199036 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069441006 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.067459255 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068983955 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066209653 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.069606869 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066022261 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064736237 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.068412391 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.066370323 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.066319452 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072258969 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065942666 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066801932 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068962471 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.067168121 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066886626 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066534712 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.06631259 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.069724634 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067213551 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.066650466 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.069042521 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.062120125 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074039177 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.066418581 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073975454 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.066568021 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.063883557 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.073463934 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068675897 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.071823336 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.067675438 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.067543618 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.068496882 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.066819897 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.069518638 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073215105 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.06503632 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.07706914 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073478959 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067840913 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.06927804 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.067120199 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068523803 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.065843836 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.067482273 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.067030686 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066660712 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.066369263 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.070841551 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068960066 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.066756213 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068280851 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.067380361 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.066858082 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.067523594 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06134128 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066410927 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065952841 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.066485125 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075873551 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.066793762 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.066341813 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.065921373 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.067720449 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066347904 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.063929006 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074088808 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.076063469 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.067106795 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073587004 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065737381 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.068135091 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076914368 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.061020725 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.064635223 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06420137 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064631418 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073617452 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.06740723 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075644654 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066516318 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06543866 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.063123137 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.066737294 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.064864184 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.060396862 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.063503014 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.068880136 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.064698863 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.06454482 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.065813566 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068260211 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06600496 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074655492 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065053103 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.06645056 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.198858046 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.064837302 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066690482 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066996541 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.070210221 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.06744138 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065669009 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064535517 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066527834 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067535206 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.068426771 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067113778 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069335612 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073857699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066928164 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.06979295 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.070160542 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.06500539 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069832996 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066730943 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067304421 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.066326073 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.07023762 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070347323 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068061835 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.075438337 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.066382076 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067569096 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067232214 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065034709 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.065920817 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.066257356 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067141779 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066288424 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.068464365 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074948154 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065346005 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.069360382 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067106564 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067534683 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.072930661 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.067233383 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07043023 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072876673 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.06670423 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.068100574 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.075060174 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.070334507 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07021656 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067993636 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.068114297 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072342896 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.066131182 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072050561 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066904079 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067568296 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.068557634 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065126505 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06590141 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066573159 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066065799 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.073414816 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067968027 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.066462414 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066383808 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064685967 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067934054 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070301243 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074614024 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.069314097 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.069655093 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061923042 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063451636 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067560496 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065819291 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068069497 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.069519541 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072365362 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.068890938 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.067027355 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065970413 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.075546253 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072040195 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.070606428 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.064826904 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.070488025 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.067354696 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.068589464 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.067834968 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067215146 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.06846696 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.07059251 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.068611939 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.065933222 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073518197 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.06987535 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067597936 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.068148532 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.067559148 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.067175684 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062306327 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.067299722 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.068721559 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.071916428 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069025986 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067213463 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076570674 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.064509032 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066967836 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068978721 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06552011 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070202347 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061158524 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067812511 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066103307 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06584874 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.060267984 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06513707 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063708003 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067257844 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.06452846 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.060600371 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074890251 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073484545 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.201111495 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066669724 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066023839 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.062653905 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062526308 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.066331955 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068125744 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.068830477 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.0768221 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.066453571 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.066049878 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.062700642 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067242173 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069515185 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070403748 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.064323278 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062721471 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066332238 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.070043515 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.072736526 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065744056 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06622675 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070615249 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068542365 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064998822 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070315021 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.064073428 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.070277971 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079631725 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067613574 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067359942 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.073258294 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074611595 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.066969107 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062872101 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.068088467 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.069635049 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.06699949 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067840058 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067794583 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08085149 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.06992148 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.066434431 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06596518 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.069613296 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.066086634 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.074986925 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067959388 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.067008469 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.071443629 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.068518652 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075727651 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06963985 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074443318 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070420219 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.070086443 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065712668 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067905332 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.064779807 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.065844337 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.067554428 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.067755318 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.072230536 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075362844 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066496063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077368947 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.07569213 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.069242285 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.063713447 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.066246501 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.06654535 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.06224498 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.067685189 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.065053325 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065571148 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065342139 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.065537672 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068186261 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071930282 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.067772565 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06764257 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.066491136 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.06119739 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.06893346 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.068841439 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067348652 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.06341321 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06670711 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.06682176 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.069992358 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069821963 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064492996 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.067776933 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.068396156 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067243942 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.061767717 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.072434737 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065294614 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.068136336 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.065768275 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066533329 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.067278605 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069601155 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070725253 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067294253 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068530014 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.069873913 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068366832 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063649742 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.063193944 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.070671962 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063851114 seconds)
  done (took 42.551284663 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.099519855 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063404118 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06196166 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.061833189 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072941838 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.062757362 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.062123484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.063536354 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063345406 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.065285298 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.062484086 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.061938665 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07041744 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.077813576 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073563636 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066800848 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.062221648 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.063403368 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.062212797 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063365903 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07050553 seconds)
  done (took 2.731551241 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.073847043 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070395787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072297129 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075436239 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067376119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.070449549 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.072105328 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070766878 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07566471 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06710738 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07531351 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070597202 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066819841 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075524584 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066827767 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070458198 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.075523935 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066935776 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.070024247 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.071970115 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070287645 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071853078 seconds)
  done (took 2.863951406 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067259512 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065875959 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.067955498 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.061536818 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.06565854 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.061440677 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069282227 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.063807356 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068932513 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065371094 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064820843 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065321015 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.0674635 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.061201821 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066143492 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063949834 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.106775614 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068946409 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.06536349 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06636691 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061410805 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.067621511 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061975265 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.061761662 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.064952398 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.069054127 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.066550834 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.063963611 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.065429432 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.065032659 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.065806004 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.063747098 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.067795153 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.066936987 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.065119709 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.065052125 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.065416457 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.065716803 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.061728565 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064051523 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.066893242 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.062008379 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.066163932 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067067925 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.064160344 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.063942516 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.067509483 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.065477054 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061149067 seconds)
  done (took 4.535663576 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079351791 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107786954 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067639025 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.08785096 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.079532424 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.072601758 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.06909314 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088486625 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063690866 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.064320886 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08057598 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.08182075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.065789281 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.070040677 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.072372653 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065341903 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066463304 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065118919 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069395434 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064915673 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.069447935 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.071874329 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.079420065 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.077995172 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.069238241 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.064580741 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.064949102 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.070102001 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.07758609 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.069787943 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.069797477 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071149612 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.080049477 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071196726 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.064892662 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.067569291 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.080936714 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.065639697 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.068042568 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.063993161 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.067850198 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.069766211 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.071882355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.081168028 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.065997386 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.070935607 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.065585018 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063187068 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.077792582 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.067928013 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.073170855 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.079252205 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.069115395 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.065700591 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070245969 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.079530352 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.065230414 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.063565507 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.068100113 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.076901386 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.063549598 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068727151 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.078314984 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.067284889 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.071811048 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.078691849 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071084348 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.068973488 seconds)
  done (took 6.314121095 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.074956945 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.072231649 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080047779 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.079106858 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071806191 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071975266 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071727841 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071720392 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07180968 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076613761 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.071520157 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091899469 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.067513391 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074145075 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071603855 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072064082 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071653417 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071665759 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071599081 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071570661 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071550798 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079053746 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071724716 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078778836 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097194255 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067479604 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071473737 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071406267 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079438294 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.07165605 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078632759 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071704363 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.07170902 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.079156555 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078755138 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.071487066 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06492194 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071439025 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071850776 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07146908 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.067477569 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079408751 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071748654 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.067303553 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07146502 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.071592588 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079096019 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078504651 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.074060103 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.075919473 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071526607 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.078880614 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.071122316 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.071673468 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079295749 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.103536338 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07876196 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079004624 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071542534 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.079016803 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.078878369 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.084712012 seconds)
  done (took 5.972727216 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081973897 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074317629 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.075009748 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.061303788 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.063730609 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069107233 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.063902133 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.064200061 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.073475535 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.074166928 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.076206116 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069217763 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.072039494 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.076201117 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.069191713 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.072007987 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069124847 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.069185758 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07375858 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069231769 seconds)
  done (took 2.738053661 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.07382981 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083004891 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.066912702 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.071484265 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.068939202 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071109145 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.068093937 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068724706 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066711699 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068629906 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.075150837 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.075355008 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066690179 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.0714274 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.075258269 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071118018 seconds)
  done (took 2.455459849 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.074100065 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.072472376 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.079528786 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.065858798 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06381257 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.062822844 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.065457706 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.061485299 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062400561 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.077847119 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.06622704 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.068037894 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.065899454 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.064412228 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.06292878 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.068277595 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.062574593 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.063125581 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.06549373 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.077666614 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.075930297 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.064208496 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.066223622 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.065602561 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.065747882 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.070659746 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.065099563 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.063710737 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.063579823 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.065906152 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.066209769 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.069414311 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.062966623 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.063630113 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.064768886 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06358857 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.06562404 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.066121834 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.068129814 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.065321235 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064097269 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.064987644 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.065836835 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.066400734 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.062118751 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.066075074 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.06183172 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.067736235 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.063924379 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.06590853 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.065139758 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.068216497 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.065873939 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.072038838 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.068500473 seconds)
  done (took 4.975334405 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078960896 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070037572 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061854402 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063979617 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.06869024 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.06728395 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069119725 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.067368944 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067730891 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.064236164 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067348806 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06811966 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067327704 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.069330101 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067382537 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069561992 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061841226 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.067569741 seconds)
  done (took 2.543667751 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.071278477 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065966015 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.072534068 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.0655788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.065522431 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.067770916 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061673265 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.064278174 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06431977 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.065607186 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065639316 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.067896581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.064434586 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.06789515 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.065800573 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065947662 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.067971341 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.064514534 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065857679 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061918243 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.067863812 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.064332211 seconds)
  done (took 2.773362452 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072193111 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.091254464 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.137212617 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.083438014 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08083551 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.078398837 seconds)
  done (took 1.863183225 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089735155 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078083641 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066649562 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088615358 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072970789 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067080963 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066977792 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067526511 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075330228 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075981751 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066866471 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07532489 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075705133 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07468844 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072841304 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072899031 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06742399 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067633764 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.066496149 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.083398329 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06756919 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075393644 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067684812 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067047197 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067586735 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074577105 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075210974 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075455434 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067289666 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075080764 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072635173 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067458234 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075449215 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075603367 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068811484 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075024178 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.066916502 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08352156 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072631616 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074230245 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068617424 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.0728319 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075357713 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071582846 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075305923 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067372515 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0719519 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067101384 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067289496 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084855412 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073378375 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074284489 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073084025 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075624999 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075828238 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085230579 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076011877 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075241258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073363718 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07602696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074730292 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072462706 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074659561 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075401011 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072977387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07713909 seconds)
  done (took 6.170545413 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081449125 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.085531554 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067408608 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075835787 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075161569 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067438088 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067502586 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067826382 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067504223 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067213821 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106870746 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067731275 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075280293 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074857294 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0676583 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066969762 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067499435 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074518809 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067614668 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085057611 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067659537 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075089467 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074618148 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074464414 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.075927989 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073012509 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067212856 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067162935 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068042431 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067283417 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072194149 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067369317 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074744576 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066847505 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074750391 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06747838 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067110499 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071943912 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067276417 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072772791 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075154619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082970135 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067323395 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.066991718 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076113691 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067389559 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067182596 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067260243 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.067432315 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.066989965 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075491969 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075698674 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075700064 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074986645 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.06781443 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.067618196 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06748272 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.067344851 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068053428 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0732337 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074804352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.067267276 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.085708311 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067493814 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068042295 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075265573 seconds)
  done (took 6.088840705 seconds)
done (took 128.075616903 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.183189642 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.16964092 seconds)
  done (took 1.672458046 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.067734792 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.095506006 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.077421358 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.128173461 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066877864 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100142422 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098535109 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.07801637 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066605045 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.06659041 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.066132414 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.067782158 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130852539 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.067140089 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066419432 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.06834468 seconds)
  done (took 2.644638784 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.096797397 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.172292812 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098973441 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.065056523 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.096994578 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073164034 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.064839312 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.075020132 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.07100699 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065534078 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072764031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.07026889 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064905693 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.070599865 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.070983876 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072627334 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.065254409 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.072853719 seconds)
  done (took 2.77449372 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.099723512 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.090002444 seconds)
  done (took 1.527055896 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.154744903 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104317183 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.147869453 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.332683919 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.160227094 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.22952136 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.127277721 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.125704233 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115886326 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.12241632 seconds)
  done (took 2.953510727 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.096776329 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.145733002 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.255345585 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114834635 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.072170865 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.090974457 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.116093904 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.07832738 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.077522591 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.077316373 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.077328978 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075943675 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.095947406 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.073327039 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.073688889 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075882766 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.098908897 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.072515438 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.075207595 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.073736527 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.096262118 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.066270314 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.073557663 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.072388027 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.075175133 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.074829366 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.065384357 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065772542 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.073680817 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.073447521 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076504823 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.089589958 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.07408492 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.103720412 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.070512228 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105030775 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.076065134 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.071315337 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.073791857 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.071276241 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.075730721 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.075040078 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071584714 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075558357 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065367852 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075865837 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065464116 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06586358 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077993437 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066639005 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077906223 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076870624 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.103978743 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.066757101 seconds)
  done (took 5.8687552 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.662090199 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.102709854 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070002059 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107510669 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.09613551 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072366366 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.685447814 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090226833 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.173869236 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091565634 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088234232 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070427451 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.08085212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083070254 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108822336 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100992376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.093371668 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071202188 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100135033 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.097920851 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.06813437 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093304792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089683374 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.375899449 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067428976 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069686999 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.06811929 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.069764334 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.109643649 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.078241119 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070057396 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.119709405 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08391337 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.119985514 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067464011 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06825465 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06809419 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079211211 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.177354643 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.131865019 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.129193919 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067141087 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067681942 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068676638 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.08895765 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067323651 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109952703 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080049622 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117954351 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.06946867 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069709839 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.067639223 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.068845266 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079284973 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.077268656 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.080565649 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.223740708 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067790121 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067830566 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070903067 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.176473626 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077707238 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078014586 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091214545 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.128693668 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067207171 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.692111533 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083758917 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.067478544 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.068321825 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.067283811 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.06882861 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.195489253 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.118626985 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.35775789 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070094313 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071282675 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068709449 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.14830074 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078222738 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.06869282 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111256625 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068132593 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069082666 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070072518 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070948255 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.116135274 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079713791 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070221047 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067917797 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070483403 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068422783 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.067562627 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.161712715 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080688737 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079670358 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.156082513 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069601037 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.110620382 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080115598 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070613085 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080544188 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068334981 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070634006 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069658255 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.07866319 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.094544165 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080013109 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070731951 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068456062 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.097441732 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081125186 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068693231 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.077891762 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.398482627 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.07994455 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.067640758 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080472688 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069291949 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.110780244 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069902271 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.18048625 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068860817 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078969677 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068797448 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067161228 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068461698 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.109635532 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069623019 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068528309 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069065395 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069960315 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.079483226 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.132062036 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070353937 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.157908931 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.133067918 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.070045701 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.118176248 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068276673 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.115745981 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069760624 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071118893 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070100958 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.687059442 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067741875 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068498887 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069646342 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136045198 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067868664 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078228299 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.075365474 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.065851673 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.721833595 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.077687045 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.207385047 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.080429215 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071238143 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069402991 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068257482 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071054531 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.109447795 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.144036772 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071166994 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068529645 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07788388 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.110325187 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.067768192 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.077935577 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078052308 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.078981998 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069507494 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069694929 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080698389 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.117149598 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078358389 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.134100216 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.507419929 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069282114 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.077345195 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.14189105 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068832012 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.085192993 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068760006 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.082469203 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.111379123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.077916272 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.227516007 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.113383593 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.137788283 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.079592192 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.0828067 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.067925375 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068298685 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.079221033 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.067951523 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069968517 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078107406 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.069681216 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070104071 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.08369537 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068355033 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.173977918 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.073338508 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.078487056 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.067470291 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069577434 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083225011 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068528288 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.06959116 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079083416 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.06999863 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077505723 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.789089402 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.077865597 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068217425 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069755465 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.134843486 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.11193013 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.068322324 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068265356 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070428011 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.108954385 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.157452656 seconds)
  done (took 28.175883978 seconds)
done (took 46.960850959 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.207918194 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.150388869 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.200692889 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117238364 seconds)
  done (took 2.112545844 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.121374641 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.100754919 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.094551088 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.065457898 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.101645403 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.065525062 seconds)
  done (took 1.921537704 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.306424048 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.207967053 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181003146 seconds)
  done (took 2.063763695 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.198429401 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.18665811 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.394802587 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253259522 seconds)
  done (took 2.507096568 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.142351066 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.088853979 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.067540067 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.083754935 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.133171614 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.159362202 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.100707431 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124917057 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.078590309 seconds)
  done (took 2.401304587 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.143848704 seconds)
done (took 12.540178469 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.225083765 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.113236584 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.206125428 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.207584886 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.102046581 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.112314165 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.077577916 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.112213969 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07436168 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.147072457 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073871334 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.149198244 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.076652485 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071156338 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.190545235 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079166303 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088434136 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.073143384 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.183050759 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.091265166 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.191447871 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.0983728 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.06559348 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.190941466 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.159912708 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.078239004 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.075823418 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.115255361 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073326082 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.091439672 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07217584 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.094647227 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.163922107 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.06580373 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.138440714 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.077406403 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08195704 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.179184854 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.180647753 seconds)
    (40/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.132343188 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.065924783 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.143483501 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.183486567 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.206552037 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.071172544 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.181590692 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15309297 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.092153636 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.17161879 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.166409395 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.072407959 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073804995 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.090293615 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.092274429 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.069416439 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.065920475 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.184629861 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.089439519 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.076025927 seconds)
    (60/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.0998496 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.073127587 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.170376416 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.067715913 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.086272033 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.149903571 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.050904271 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137588574 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070885157 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070878729 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134108893 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068970457 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.145020644 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072378379 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.191861159 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.063649983 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.135720566 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073591731 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.096408599 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.13994453 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.179316044 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.293022552 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.118460142 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078443852 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.139613622 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069906672 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 0.066520528 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074714116 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.077198536 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.110679113 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.069287997 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.165282123 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090559117 seconds)
    (93/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.099737373 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.139405416 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.052076526 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.077856288 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.070240425 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.075110346 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.06886676 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.089757608 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.053461534 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.179907803 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.051776729 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.07643309 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067387036 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.141340521 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 0.139213578 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.170979516 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.09577977 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082438316 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.075085073 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.100200278 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.066163317 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.303269885 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.073844393 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.079957006 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.090887415 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.101824322 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.067439483 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.06664562 seconds)
    (121/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.118747244 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.066057539 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05304659 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.148035325 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143414931 seconds)
    (126/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.107084319 seconds)
    (127/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.109010459 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.137906958 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.118703167 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.077700025 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.053954948 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086623644 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 0.132487774 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.073370981 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.109098611 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.073028084 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076247837 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.09016843 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051356198 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.050787349 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.101028151 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.145796333 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.088945658 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.070817912 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087439611 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.071695568 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.17415166 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.065106464 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088662244 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.05417421 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.076027662 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.071897742 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07291568 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.073104619 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.135856023 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.091441271 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.107734315 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053374027 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.051826816 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.06493634 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.072532923 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067088651 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.065265045 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.088364326 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.100792459 seconds)
    (166/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.096019992 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.074436346 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.089615688 seconds)
    (169/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099443021 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.061876284 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.073412039 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.075201932 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.051778578 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 0.127081939 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066656277 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.065160191 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.050917169 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.07544851 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.070242347 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.074207006 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.050874357 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.064973139 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.171960687 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.069526457 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.065828754 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.086493886 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.165353479 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.071594031 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.070700822 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.064369365 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.223357097 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.067858316 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.07532339 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.053928922 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.072691003 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076749937 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.052054502 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064756835 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.053382345 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.081867264 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091590472 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068164608 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056146977 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052695205 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.064919448 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.066547728 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.051706376 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.072576986 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075145023 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.066231046 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069737088 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.05324373 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.051603228 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079474238 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071651987 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.065688039 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.051565424 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069934605 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184057204 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.052760164 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088639641 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.065126168 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.051766346 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.055218838 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.108750138 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.067201134 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065992932 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.053353893 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.052484041 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.051550439 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.086063963 seconds)
    (232/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061509027 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137993412 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.051844432 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.071832623 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06300731 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073019873 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.136330299 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053504889 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.072302358 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092770429 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.096998826 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061225658 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.065633846 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.09307278 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.051217275 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.105646123 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.065499488 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.071819865 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.061669323 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.052392862 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.117707507 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.164798918 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.052810785 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051961954 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.169338873 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.051320053 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.052714901 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.052694489 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.073199868 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.071591967 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.065258812 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.10417928 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.064443362 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.06317831 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.070745724 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.061918125 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.072389074 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 0.124389114 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089774578 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066116663 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.070459872 seconds)
    (273/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.05259829 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.06465102 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.063104465 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.066782845 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068072997 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.065426209 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053459645 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.175014635 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.169549041 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.133069492 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.072639959 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.064301596 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.052360455 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050942635 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.051328267 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.050795754 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063657055 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.061406818 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.109818171 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.05120284 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07254582 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.06107216 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.051095844 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.065332132 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.066849327 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066304004 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.095096328 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070619251 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.070792539 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.062831312 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089147083 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051349666 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099172661 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.0653925 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.070815709 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.061178367 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054690954 seconds)
  done (took 30.270668892 seconds)
done (took 31.652715794 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.083994761 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091862279 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.075288 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.092225822 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.079715084 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.076047496 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073680349 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.078001982 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.079365175 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.081201829 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.077558689 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.055057914 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.073904004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.074350175 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.07372776 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090359278 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.077885439 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.072353468 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.072937827 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.064769257 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.072916001 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.065259857 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.066873136 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.054958052 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.077411121 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.071256583 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.071870811 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.073092511 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.065642087 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.065955162 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.068516155 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.072618759 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.065490458 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078200431 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.071591391 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.072138036 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.074044156 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.075442183 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.067254254 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.065758924 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.07392179 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065620096 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.072466125 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.07307066 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.071534882 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070758719 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.072792405 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.077227219 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090506131 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067955352 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.07409123 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.075728147 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.075998042 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.07181871 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.069387741 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.072628321 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.070727264 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090506228 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.073140211 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068108162 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073778527 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073301709 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.070599182 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07268954 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.072665978 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.074753327 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.074630712 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.070832139 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.074295012 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.070649644 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.065218926 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.072572105 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.068709918 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.065548208 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.075536047 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.076798076 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.064831683 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.07180831 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.072022424 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.071146621 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065277868 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.06717735 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06752082 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071409227 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067256732 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055208779 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.068867902 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.071032818 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.06477641 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.072764862 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.071286304 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.071923236 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.066901076 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.075006591 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.064825193 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.070507836 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.065439977 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.065489918 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.067183815 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.069393883 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.064971627 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067741736 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.07425023 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.066874269 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.071004692 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.078405007 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.065043315 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.071457436 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.06414194 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.064746686 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.0788313 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.073746164 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06496153 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067099384 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063849268 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071633577 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063961731 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.064387764 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.064603044 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.064383013 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.069971247 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.064549975 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.066349488 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071359359 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076392831 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063869033 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067540472 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.066017712 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.064150286 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.069597833 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064492528 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.199842602 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.06744859 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06245434 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.068073721 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.06599621 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.072545753 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067427495 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.072616528 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.067483434 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073984513 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070475604 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.071961466 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.071248435 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.064927677 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.059971662 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069399747 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067498625 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.067161349 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.065299414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.067383642 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065431637 seconds)
done (took 12.379164769 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.066683828 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.141002057 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.09708786 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.093899566 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085111214 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065794178 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075793744 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100843133 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.067220559 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.101194588 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.085983349 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.084349794 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111408941 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.064892157 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.065546091 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.069396934 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.067088117 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.086485475 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.100382954 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086226816 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.107930397 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064621988 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.093183719 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088744164 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.086576751 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.100739085 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066411273 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.069754103 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.06941061 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.090065472 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085981888 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.069417052 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.066087817 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.097059164 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.091584265 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082134496 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065695596 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081622877 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065611001 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065834042 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086704179 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09692334 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.079260417 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.079994836 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.071712874 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068697745 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.066841905 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082691751 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.088227006 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.078090661 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085960702 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.101911244 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.069128179 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.079744456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.064599216 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.084837391 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.079886472 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.068157219 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.066442391 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.068622263 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.065769318 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.069090548 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.086145637 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.088210497 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.069639172 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079623348 seconds)
  done (took 6.791931648 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08264939 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.089107278 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.082686269 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.083502971 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.06595705 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.066441989 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.066909238 seconds)
  done (took 2.011705656 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067245568 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.087187816 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.088647719 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.088931719 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083962211 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.086446582 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075241645 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.066332559 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.080596148 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.067290952 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086765265 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.100295194 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.067274247 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.072675582 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.090003604 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.066659168 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089623797 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066294042 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.068954127 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.089194059 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068460704 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.081978954 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068548371 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.066162096 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.080443269 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.066785452 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.111689835 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071018766 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067409383 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.069229945 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.064450139 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.105150322 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.079734481 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075446485 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.065866846 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080500468 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.081071989 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06409665 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.082326486 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.071912178 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.080575206 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.066815451 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.067533446 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.064667088 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.071019533 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.077180244 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.067717842 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.067206425 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.069288917 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085643432 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.067336281 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.07997771 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.066882617 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.068960833 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.067914452 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.070548356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.07576854 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.067679657 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.08610867 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067777628 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.082847438 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.081616357 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.079567703 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.082131515 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068470962 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.079099678 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.080539338 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.069171774 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068429547 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.06948753 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.081833578 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.064015022 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.067464261 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.076736997 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.068277815 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.088748348 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.089350357 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.067643689 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.075501652 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.066928483 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.066802277 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.067007369 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.088925097 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.068848354 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.066693431 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.07061886 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069467475 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064426669 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.065780104 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.070103862 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.064420527 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.068077819 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.06898334 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.067326105 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.06885474 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.082452918 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067689777 seconds)
  done (took 8.706251461 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.068864991 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068153437 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.068934217 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068041195 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.06745777 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.067406804 seconds)
  done (took 1.909461716 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.092541037 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.06859515 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079863407 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071889513 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.103881664 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.080679463 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.080953302 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077943638 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.083179611 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.079096442 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.080491 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.081392958 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.086168637 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.072857549 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.080494634 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071585681 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.080889848 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075534085 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077755774 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073035332 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.08565092 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.072392143 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072363192 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.080795549 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.069812669 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.07166331 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075725266 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.078085848 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.078267267 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.078401035 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.072081578 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.070027122 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.070278623 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.078049335 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.080867192 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.070134339 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072034902 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.070675321 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.075558334 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.06995401 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.081098925 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.073129419 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074132645 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.070719107 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077916495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070364751 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.070498 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075936057 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.080318285 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.070703209 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.070783789 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.071547948 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.069684882 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.070823599 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070034241 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078096032 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.070994597 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.081028776 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.072160712 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069907665 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.069248222 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.069923542 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.077612312 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.069860317 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.078671563 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.07081011 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069675149 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.072534985 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072710264 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.072081029 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.071205691 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.068714541 seconds)
  done (took 6.902285178 seconds)
done (took 27.781584491 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545141818 seconds)
  done (took 2.008717954 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.613823399 seconds)
  done (took 2.100998218 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.878611393 seconds)
  done (took 8.361294002 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.388385314 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.502028832 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.704486141 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.129403839 seconds)
  done (took 3.250475497 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.669794846 seconds)
  done (took 2.164930791 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.209370181 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195502571 seconds)
  done (took 1.912689023 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.368033667 seconds)
  done (took 1.85600711 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.083200175 seconds)
  done (took 2.56937452 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.25755775 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.147946897 seconds)
  done (took 1.897062837 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.456898583 seconds)
  done (took 1.946604765 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.827179689 seconds)
  done (took 6.319139358 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205191307 seconds)
  done (took 1.744513669 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.237093368 seconds)
  done (took 1.732897591 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.718553012 seconds)
  done (took 3.211132779 seconds)
done (took 42.568708336 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.079009231 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.080170007 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.08039273 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077331952 seconds)
  done (took 1.792892375 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.076343098 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.071954681 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.075922656 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07199686 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.075687088 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071842099 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073466866 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076153117 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071781318 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072624756 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072127882 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071949763 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074258739 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.0735544 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070443744 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074748393 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075187735 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072141038 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07501492 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071827826 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070586663 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.074173083 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074079083 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.071612266 seconds)
  done (took 3.250395574 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.077699684 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071859441 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.073711135 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.07130001 seconds)
  done (took 1.789017749 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.077523621 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09046044 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088205244 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.07703811 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.090857915 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085072018 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068292661 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068568152 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.069865464 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076852342 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067343727 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094648814 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086772864 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076089131 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078034734 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065621191 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067695577 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085990977 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.076218236 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.0766583 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.071861847 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076277184 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067253507 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087046678 seconds)
  done (took 3.361589021 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.076158765 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.102412345 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076762484 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.085998551 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089041675 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064629351 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073722838 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087843592 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121308238 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064967614 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069316964 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065332452 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071719207 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064809299 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.07610117 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.103531593 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107007708 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068129287 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094702011 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06535007 seconds)
  done (took 3.127285073 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.072755364 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.068978834 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.066048697 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06872893 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.076729993 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.072246684 seconds)
  done (took 1.925593803 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.067822407 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.06694721 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.066846066 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066581952 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07110085 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067158034 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065200689 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066905981 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.066820321 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066690357 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.066256401 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065847439 seconds)
  done (took 2.299578785 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.332534286 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.068162753 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068361479 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065268225 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069911989 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065989701 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079182125 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067709491 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089841179 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.066320567 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.0663541 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067992085 seconds)
  done (took 2.606169356 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202080581 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075862794 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232110989 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134972606 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110254867 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114255888 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102646588 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111260987 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140217421 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100819966 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164286441 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162132255 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105375203 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134795032 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088344406 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097327414 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152474353 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.15934961 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102281739 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163173508 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141581441 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122975686 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.145057684 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1000183 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10435712 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119669294 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.07059682 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079151851 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166477113 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129126111 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143183911 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109038639 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092557195 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173112369 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168014129 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139635902 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131654208 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08319059 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100611634 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13061523 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193509858 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087207556 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158928681 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.243943986 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080896304 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138205439 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119429592 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118205685 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.105942407 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088289089 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143607082 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.179937282 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.135735841 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08650358 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111560717 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113620997 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115630172 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102273145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178134575 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158418525 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124702947 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.071070324 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09747146 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150244698 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12862277 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106683322 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.124263682 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.09206507 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131746182 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151492889 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116356541 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139657355 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.126852133 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087570691 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116861651 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137661377 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125528211 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16763363 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122317296 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071927944 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123041922 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102129382 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080409914 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141119337 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074858114 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17181468 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097169335 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.10477644 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111627447 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106788464 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107208303 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156889355 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.280223419 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103128228 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.066022507 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102941713 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119662948 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145271008 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086830261 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107432518 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114687342 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076937497 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136499693 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074482378 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12236242 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074571767 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122993748 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12733004 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074859943 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.122287652 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099472056 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098682499 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130469661 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156096268 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08922087 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082009945 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163395639 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12041188 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103331445 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140811651 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153262361 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.097249992 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100778167 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147318604 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175703383 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088300579 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159852896 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106064861 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082912423 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087027955 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121371915 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112519799 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120245539 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081034171 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116917859 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165285532 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074394427 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094234536 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131323889 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078214041 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079244466 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101049875 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098970019 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093188892 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098574468 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101835494 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135624338 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120177274 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.246241014 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124682605 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097273384 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166935574 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.08800246 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099563214 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10245132 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069066861 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.133864477 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154073921 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078654472 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160721099 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121454732 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103837435 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116781494 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082191323 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137602031 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079039903 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.069472861 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141931898 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.108952595 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10819888 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.147621279 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102434049 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124714231 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.117070657 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132053806 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130012187 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.127133102 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104349353 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.086907104 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108919282 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123685159 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072428605 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.089989641 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079299019 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102097122 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094342345 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08281429 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140276149 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122680572 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099380943 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110336893 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095301298 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145823177 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0758554 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12680956 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.11708027 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09261799 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.148684884 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148939857 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127997558 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097339398 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141120437 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069436283 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.214922673 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.090606288 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122388452 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082743539 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08271136 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116682656 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144539261 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127271371 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137266356 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110894235 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119030285 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.151918944 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069508326 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.113645415 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145391534 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120092214 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.10410896 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088771843 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.097637899 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139979003 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106146599 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178548476 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11200974 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120231081 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150794043 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.098182187 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079055521 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103295961 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132713634 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103713764 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14194102 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098154111 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087193633 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107782721 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073794025 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098520162 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129496132 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117754759 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132789813 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113226381 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131215136 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076177177 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115283107 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11950507 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119912182 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.063755887 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116773504 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157656656 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.092559112 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115660413 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149326609 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078279108 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.122283562 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.315724061 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143936555 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083561673 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108995711 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117308031 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.125691161 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11947141 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137565838 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108973573 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133663621 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107650617 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084429589 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086957588 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096327786 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104278184 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093292135 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106345909 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.111986362 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093743487 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129364837 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101463801 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108455279 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116108196 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.09572558 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089020398 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096213218 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171832098 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117562332 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1675364 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097767604 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.141955733 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161076372 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074139822 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077904971 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07775397 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137676196 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083450165 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128533763 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096967267 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104565743 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122143835 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139995841 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094008979 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.06848506 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10748495 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132417412 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110904229 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096553777 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.10220709 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159202651 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.100699268 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.07861293 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111781022 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102573221 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100411927 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.311478378 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.061575678 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097298138 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075424494 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081093581 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126244788 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152626609 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080270375 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102417045 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117493107 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109215597 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125742819 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100482342 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097987404 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.112957756 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147187237 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127105529 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089213602 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110965786 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.126955499 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15423961 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103235072 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094463378 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168225466 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165426882 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.157855024 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088104209 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112020576 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112111625 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106660588 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136050357 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082728258 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160535693 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080825106 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133604233 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102589827 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088930616 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127956064 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097790249 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087410389 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146336871 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115827615 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081613108 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076773486 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11603515 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118843014 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104633226 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.07458722 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13644899 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.072609485 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129705278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.164061573 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224043203 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103957871 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095369865 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079478606 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107429463 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101370095 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086621103 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.09748981 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169669874 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.086672504 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147182532 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139721949 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111827577 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133946109 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098345856 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.634827617 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.076504615 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152653906 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114617813 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170056113 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096275017 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115648266 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107019933 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1219718 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142843521 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103130114 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.175241683 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.128852165 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114489145 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078771398 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100393444 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10074651 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.087688473 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103435762 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11150729 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113912482 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.09268174 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114276869 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121263388 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081379057 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094170287 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1537905 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115172055 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14168746 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13836478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083750746 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114914702 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135238788 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078963465 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.118874352 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147888442 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.246792997 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098403059 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.080986525 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.101507599 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167543233 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.072839538 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159401027 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118265528 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107209148 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111785486 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.112794787 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129863178 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106821238 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119925925 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092070698 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.108371533 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111238448 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081213859 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076308347 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10309848 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111642624 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096381827 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097729766 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097207139 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149182087 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07094298 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09444993 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101725982 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142697482 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.17082492 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.0872068 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082029941 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11637447 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111126175 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111543413 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118647371 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078100762 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081390501 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080721391 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076686255 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107107635 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110484393 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102927477 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108947007 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161516661 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081951815 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.221674231 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094631512 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103599056 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.06936691 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.078106123 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09508223 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095884238 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106024983 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098629687 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16514786 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.092520004 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.087932128 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089901661 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.215612587 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083108601 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126846878 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109367579 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117505966 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096483717 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.06238298 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107707182 seconds)
  done (took 58.001604612 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.108700087 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082123758 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.096165724 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148855823 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.12103247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210373342 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.156411142 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19806762 seconds)
  done (took 2.725401022 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.067740993 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.092826411 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.099153108 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082372278 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.066080665 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.067893317 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.219214065 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079528457 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065879175 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087421922 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.077476025 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.067914126 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.396151736 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065591468 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067264961 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.061156457 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.0680639 seconds)
  done (took 3.327799458 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.370355142 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.367826238 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.367488865 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072703033 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.643347212 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087899955 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.072103639 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.09554781 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.070946304 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.280147685 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.699820812 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.094240628 seconds)
  done (took 13.828071814 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076147543 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.06998001 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083814179 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.083510528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.072094743 seconds)
  done (took 2.060315043 seconds)
done (took 101.626512375 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080377111 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.293636485 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053532816 seconds)
  done (took 1.978830085 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.082936069 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084774899 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084561321 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08268243 seconds)
  done (took 1.945987256 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074775721 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.075846809 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084136657 seconds)
  done (took 1.841083314 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.222294467 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.139455804 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086623583 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.081925071 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.078622965 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.079188443 seconds)
  done (took 1.848348636 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.071812743 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074810136 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07297884 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.07669886 seconds)
  done (took 1.90110044 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076296715 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053033709 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055035037 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056265645 seconds)
  done (took 1.845718608 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086539082 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.07851203 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.078602327 seconds)
  done (took 1.849422546 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.106830859 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084708704 seconds)
  done (took 1.797407619 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.08160932 seconds)
  done (took 1.688974314 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098370823 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.113499864 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.127748683 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.108329219 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135627701 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107965723 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085100406 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086134188 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076869074 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086449436 seconds)
  done (took 2.631237498 seconds)
done (took 21.458238 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078384222 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.456766886 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361075557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091097038 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.666833185 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357014335 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.994113403 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092007837 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.120320652 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067790673 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084244939 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649187275 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.98797167 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.414489043 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.973958956 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320165962 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649369685 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068460616 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067955301 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068027174 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.982674498 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067851275 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068026707 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068599148 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.648956977 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371500453 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068928788 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.320402212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068364445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070073992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355846398 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068738256 seconds)
  done (took 16.324659198 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07070328 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.117039178 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073717886 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.084050274 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.071455286 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.0703142 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071913047 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069217708 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.124510725 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068144078 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.084669627 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068223567 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072268607 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069091195 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.087779005 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068506833 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069202828 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068952622 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068760966 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068695255 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086487669 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068106096 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069347871 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068989114 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068429804 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080476354 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.069139475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068566198 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069188656 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.07066491 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071306956 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069461963 seconds)
  done (took 4.028666547 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.114419509 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125108661 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074377314 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.103542842 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.112035445 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.070938596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.142774939 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092521903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126845864 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06879734 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08480498 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068637287 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.101433818 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069092116 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08811133 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068839928 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.069619626 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.069255758 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068677291 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069100051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087299508 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.06828604 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068692572 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069167864 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069081523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.08178757 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068735916 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069004631 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068800649 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070917957 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.072277564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.070193778 seconds)
  done (took 4.274246618 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072472877 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.075003535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082759499 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.083949341 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.069408104 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072167674 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073018477 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.069974788 seconds)
  done (took 2.222994599 seconds)
done (took 28.463936893 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.07898039 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069904474 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.072888138 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.08074141 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073246694 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078532175 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.067789067 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.075216874 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072220908 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073384441 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.075287421 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.068261716 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.071662667 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.06760956 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.074205286 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068263221 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.079458144 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.072129614 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.07936555 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079227821 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.070109249 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073449457 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075294288 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.079516815 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079425942 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.079316261 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077128607 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072815229 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.06913836 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.070771493 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076961405 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.084065036 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.068833432 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079156397 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067949299 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067501266 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071451541 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.068178715 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.079121137 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076171088 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069282415 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.076432754 seconds)
  done (took 4.713874812 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.088154737 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091489971 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.085347921 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062443884 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067850284 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.065730963 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.089093513 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.060175831 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060159709 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088132779 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056086537 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06006565 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063035432 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.054543784 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.059998668 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057368226 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062037039 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.056564223 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.059903302 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.06001628 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058708551 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05462776 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.060907622 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.062868652 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056916903 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062308425 seconds)
  done (took 3.339501443 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.074772911 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08424032 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087972767 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126998688 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.103471622 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.077656718 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.078194924 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.087789128 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.085655797 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067136251 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.071370153 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.093906018 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088360811 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073723792 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.06996291 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083628089 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.082034418 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068914494 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.073287148 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090425652 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084103031 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.077950935 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09255391 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.081044815 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066762276 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069758374 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071159547 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081139523 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.072226871 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076459205 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.07113773 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.071043082 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069266944 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078988233 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071287597 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.069343525 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089789442 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077765286 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.078648088 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.068341119 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.071123387 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.068759674 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.089468241 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.123151895 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067248206 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.074298529 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075510858 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.077477736 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067940207 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086453249 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07880835 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.067476467 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071043837 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.067431481 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.068176651 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.080711152 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.081401881 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.070309102 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076853908 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070912992 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080499461 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071990828 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082844668 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.067655654 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.07519661 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066971047 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.068687957 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066780086 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092608302 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.069315129 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.10868857 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.068925319 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.068834484 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.076513311 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.075065555 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073886481 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068367194 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.082871757 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077717461 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.071224947 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076255976 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070953111 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.072511387 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.08871101 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.070298286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.0695503 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.06868595 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073860663 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.070479393 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069249781 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.080461385 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.068143171 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.070855283 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.084142023 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.06750492 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068819135 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073614135 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.072476231 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.067487099 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078864863 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07267134 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.068408712 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.077276003 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.068274028 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.070794715 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.078336732 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.07390574 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066918678 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.072575793 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073834794 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068737261 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.069383611 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.070899473 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069360763 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.077259776 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.074421717 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.072193602 seconds)
  done (took 10.561082576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160188548 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.152559887 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071279326 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.144170447 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.076989896 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079241313 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.148684025 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.094576412 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.068223541 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068850608 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068939582 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115144318 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105894074 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.121922559 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.078691273 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.068167848 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.083998993 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116688013 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.148434783 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14215794 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.08442495 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076944071 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.070556323 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.069378171 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07502385 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.082920267 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.090793647 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.076707981 seconds)
  done (took 4.411732303 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081028656 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.101115035 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074057073 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.090153369 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090709535 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.068025181 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.070284981 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070022267 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081010008 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078484332 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067900231 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.074143688 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074836716 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.074302869 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069138504 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075148307 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075651994 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069837909 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071546773 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.076319516 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.077950335 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080427398 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072466509 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.067674412 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074247149 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067847323 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064574798 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084258976 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.069050649 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090328913 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065983783 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.075618887 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.082160631 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.069525222 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068519981 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068411465 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06829642 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.06822204 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070163797 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.066947651 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067085331 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.058140188 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.067243681 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079525784 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.074481565 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057087556 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072757396 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073343794 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.073449692 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066000909 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.071222023 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071138789 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.071916466 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.075391318 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073152225 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073411344 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069491136 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.066272498 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.075705216 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067865448 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.065038421 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.067030754 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.072732049 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.066118507 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.076022576 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.072720643 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.066737902 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.067953038 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070279861 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.074295963 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068178055 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071252575 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.065763563 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069989189 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072735261 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069933978 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.069395566 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067160982 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.068109631 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.068762066 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056171314 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067932882 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.054627958 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.071303525 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.066295195 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.066545486 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.068522481 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.072536617 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079793282 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.069425217 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073571213 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.069054604 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.067520904 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071289269 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.061269153 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070943715 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083371015 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.082946063 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068319232 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.066273013 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082727912 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.07252116 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067745628 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.056885794 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.075478596 seconds)
  done (took 9.182911948 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096028985 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.088217793 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.070298593 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083737934 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.091972745 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.087664718 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075249304 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077287242 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069729883 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082340608 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.074030994 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076659123 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.068583123 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077728655 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.095484648 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.077471739 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070576062 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.077719986 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.07226875 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101977379 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.083797866 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.082746286 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.075748278 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.068720631 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076404351 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.080550323 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.090455854 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.082089484 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.07937473 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075989448 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.081201598 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.090511074 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.074739092 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072638323 seconds)
  done (took 4.406854293 seconds)
done (took 38.233102043 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.717909918 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.891504858 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.70781274 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.07101495 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.856143455 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.704944453 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.761206355 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.700275843 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.877949902 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.744682465 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.928234777 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.728824527 seconds)
done (took 64.335171631 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.798493396 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.83800823 seconds)
    (2/2) benchmarking "String"...
    done (took 1.974429388 seconds)
  done (took 5.44733556 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.045579949 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.235613222 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.938843292 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.691308285 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.699656458 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.996960851 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.509843761 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.224179437 seconds)
  done (took 29.933939729 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.980019456 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.906416437 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.410386217 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.465400166 seconds)
  done (took 15.457934614 seconds)
done (took 62.411460618 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.709364455 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.743668621 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.703023478 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.67693786 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.7526561 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.71191265 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.806666182 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.918432896 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.691680819 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.682613792 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.692608935 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.116820917 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.692062391 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.785129579 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.688668157 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.695370986 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.701349729 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.143689977 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.844715178 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.70930879 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.710550157 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.703477715 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.686669453 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.804532378 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.738610035 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.684432038 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.111649616 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.692372944 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.290961368 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.683698466 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.716356629 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.054801683 seconds)
  done (took 201.981598173 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.68193955 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.56485014 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.627694202 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.693549431 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.107802176 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.877747932 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.817605841 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.162223237 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.685128668 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.688682377 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.865608406 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.683055136 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.889167114 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.633669017 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.690907358 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.685293735 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.853835747 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.901230506 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.685320559 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.960319015 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.699892162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.676182571 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.636271223 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.850809728 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.692497721 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.695188476 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.686557873 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.707753847 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.889418429 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.818644659 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.683182442 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.699848755 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.891112094 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.55694689 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.699213622 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.698018199 seconds)
  done (took 165.966442095 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.07246287 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.682109006 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.680516432 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.681108747 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.688074031 seconds)
    (5/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.681583876 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.681387368 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.807551458 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.80812471 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.132154768 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.968590016 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.731755989 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.498781828 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.680924114 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.747811461 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.695956151 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.681623595 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.695688816 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.706544731 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.680837318 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.681992605 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.826843868 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.693380775 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.6686475 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.686877587 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.680612404 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.688079724 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.051129569 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.680867087 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.68630674 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.925334097 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.688283679 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.683430574 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.598512946 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.568221084 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.76786445 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.682221502 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.686226472 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.681724666 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.899657756 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.681194375 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.680388622 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.682508582 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.684396502 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.864156799 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.680107479 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.806396608 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.680866845 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.174522825 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.680279157 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.681079855 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.734749766 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.577425779 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.685585994 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.685776632 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.689813865 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.685655917 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.687513801 seconds)
    (58/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.68590249 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.701757898 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.681141975 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.763172086 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.688627217 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.688901331 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.691988705 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.687016509 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.709490705 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.687117125 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.685819783 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.742351372 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.801299889 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.811345531 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.690540966 seconds)
    (73/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.687094989 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.753817552 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.780943688 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.687581838 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.685668487 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.686319758 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.687255288 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.767859992 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.686172471 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.834432814 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.694185148 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.687743771 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.73843942 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.756207556 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.686045521 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.578002981 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.68948883 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.686250472 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.984837289 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.754434514 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.688486014 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.685745543 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.686819833 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.816679702 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.811772632 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.443894279 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.689485511 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.551242671 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.688825418 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.829119995 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.807285238 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.865889222 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.689178569 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.769917179 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.693398125 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.690714761 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.688090844 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.719427127 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.688482886 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.746306225 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.690247052 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.060789833 seconds)
  done (took 390.36806984 seconds)
done (took 762.088711057 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.371428293 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.338426349 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.451233642 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.367035728 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.340307835 seconds)
  done (took 13.499755794 seconds)
done (took 15.133399767 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.780491633 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.780686558 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.715771288 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.777729644 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.708306063 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.778608405 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.760048732 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.717060883 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.74542251 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.71511223 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.747910105 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.716557839 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.700373517 seconds)
  done (took 24.276465522 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.92093629 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927352792 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.761753389 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.922152374 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.737282088 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.928282851 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.854946691 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.842322884 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84224833 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.70589058 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.70353032 seconds)
  done (took 21.780223062 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.928583047 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.933653085 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.766628791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.938676203 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.74105599 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.925261838 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.860937139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.846608075 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.84325547 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.705898966 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.704107173 seconds)
  done (took 21.828592978 seconds)
done (took 69.516917795 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.700389486 seconds)
  done (took 3.335896455 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.720552722 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.8604364 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.70563636 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.702989047 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.700566813 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.700828402 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.703861935 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.698130656 seconds)
  done (took 15.430438522 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.696137805 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.696485802 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.698069822 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.698090952 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.697351846 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.698266375 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.698961705 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.699744229 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.699409445 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.697568199 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.696603663 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.700720205 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.696857296 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.701582575 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.700132572 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.699477567 seconds)
  done (took 28.811884369 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.698586616 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.697023984 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.698182455 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.697673793 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.696750712 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.698221919 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.698216786 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.696595669 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.69811877 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.698941379 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.697774308 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.696623615 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.698529996 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.698240394 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.698173644 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.698164075 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.697664488 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.697696493 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.702848505 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.698713612 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.698249281 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.699020852 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.697773107 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.698563114 seconds)
  done (took 42.394229551 seconds)
done (took 91.606876152 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.424938001 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.193506332 seconds)
  done (took 8.256770171 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.703474173 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.701202125 seconds)
  done (took 5.083813579 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.700472294 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.700673229 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.701804986 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.701018687 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.700415555 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.701996555 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.701014938 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.701930608 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.703341536 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.702883232 seconds)
  done (took 18.652884596 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.703221499 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.700836839 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.699661853 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.703243284 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.703614196 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.697917369 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.702792959 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.702363964 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.701570052 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.70063344 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.704768014 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.700748143 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.70204399 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.700485902 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.702832843 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.700496831 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.702351185 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.701764487 seconds)
  done (took 32.269532649 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.703491112 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.704332207 seconds)
  done (took 5.047836429 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.702564835 seconds)
    (2/7) benchmarking "second"...
    done (took 1.700708879 seconds)
    (3/7) benchmarking "month"...
    done (took 1.701207676 seconds)
    (4/7) benchmarking "year"...
    done (took 1.700845096 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.699674969 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.701352405 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.702378745 seconds)
  done (took 13.550210789 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.704156097 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.86116055 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.928435927 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.385962304 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.704009937 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.707497866 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.631425741 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.707702655 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.709769775 seconds)
  done (took 18.980133043 seconds)
done (took 103.478180289 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.530227582 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.700262894 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.056108678 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.758414227 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.760850246 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.040583153 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.727028623 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.925914154 seconds)
done (took 42.139103998 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.799949231 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.190190852 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.173468037 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 5.467591499 seconds)
  done (took 11.471177082 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.683257358 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.228195293 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.732033054 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.297410716 seconds)
  done (took 19.590989006 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.066202625 seconds)
    (2/2) benchmarking "read"...
    done (took 2.051693089 seconds)
  done (took 5.761561135 seconds)
done (took 45.26232801 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.704370093 seconds)
    (2/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.701451795 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.706056218 seconds)
    (4/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.704744421 seconds)
    (5/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.704023039 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.702864831 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.705659826 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.703091937 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.70278608 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.704149458 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.704861264 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.704148102 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.706255938 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705086006 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.701814048 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.702301932 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.705498497 seconds)
    (18/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.702257463 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.704597539 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.703708956 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.704044693 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.705420453 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.702876415 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.703183297 seconds)
  done (took 42.535272127 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.70587663 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.702808742 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.704834218 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.70544619 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.704109056 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.705629677 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.705801768 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.704343628 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.705422774 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.705338657 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.704634571 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.703760758 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.705572763 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.702101249 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.705227286 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.704123283 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.707924513 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.705072495 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.706338368 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.703924876 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.707222764 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.704197101 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.704277076 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.708168431 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.705752511 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.705228345 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.707198393 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.704777613 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.707567672 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.702875719 seconds)
  done (took 52.798335355 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.714612051 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.716072487 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.707558781 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.707031822 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.708664116 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.707392407 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.708416753 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.709000305 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.706997856 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.70684338 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.707734317 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.707479399 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.708700865 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.708411396 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.70738731 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.707256912 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.708742035 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.707940238 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.708077794 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.708243885 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.710524762 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.708991293 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.710209823 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.70990936 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.710961128 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.70998254 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.709432391 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.707233343 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.709606521 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.708210052 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.708612373 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.708724959 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.709412316 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.709783106 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.707631438 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.711106309 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.714249097 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.718467521 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.709269955 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.707794694 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.70942727 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.709473457 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.710644416 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.708209641 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.709573404 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.709400407 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.709291644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.708730578 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.71032725 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.71046469 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.71002689 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.71088353 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.712143311 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.709577481 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.710789853 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.711698095 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.709997833 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.710315797 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.709517278 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.710429626 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.710493213 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.70951213 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.709582183 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.709889082 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.711024335 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.711397324 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.711349803 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.711029258 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.710336834 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.712160501 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.710466245 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.712105865 seconds)
  done (took 124.748060309 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.711680612 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.709578896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.708137549 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.710475571 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.709014526 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.712192034 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.709233518 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.713189508 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.708881303 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.711722902 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.710500993 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.70948189 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.708208609 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.711863967 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712457681 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.709645351 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.711492219 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.709075023 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.710876928 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.711359297 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.710964038 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.709017817 seconds)
  done (took 39.275975379 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.712336663 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.711058911 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.709091544 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.711441316 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.708279112 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.712669101 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.711473506 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71267688 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.711733481 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.710041684 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.710216256 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.712288248 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.708802303 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.711028971 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.709152188 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.708821196 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.712313526 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.710240094 seconds)
  done (took 32.441518896 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.70960305 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.709581934 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.7122229 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.709506078 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.710386548 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.713150453 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.710048446 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.713014144 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.712534789 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.710993108 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.71462148 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.712936462 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.713029273 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.71096166 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.715559175 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.712807729 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.71312689 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.710269212 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.712873749 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.711151714 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.711546564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.715398427 seconds)
  done (took 39.314158288 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.713723518 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.714480259 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.711914063 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.712722117 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.71081858 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.715089964 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.713402681 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.711334264 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.713583131 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.71303073 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.711392059 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.713931391 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.71118817 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.713756426 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.713478731 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.71264542 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.714371985 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.713350125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.715829772 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.712416962 seconds)
  done (took 35.911603441 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.714918006 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715818274 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.716758274 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.715407447 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.716668649 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.716155784 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716001747 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.715917504 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.717614672 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.716558264 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.71534762 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.717072887 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.715162881 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.717030352 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.716008733 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.715569046 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.717319425 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.71733238 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.716716521 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.71507555 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.71697241 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.71681433 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.717805575 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.716537302 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.717892032 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.716789077 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.716520922 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.718331223 seconds)
  done (took 49.713382274 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.716183091 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.717174949 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.713193293 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.715472137 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.715690023 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.715960888 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.714098977 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.714103039 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.716436463 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.715034638 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.716387413 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.716971288 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.717005364 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.717250289 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.71555201 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.717464864 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.718377095 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.71522366 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.715161649 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.717220286 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.718258596 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.71839463 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.71845496 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.717019734 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.716127101 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.717925131 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.717383039 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.716551304 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.718589304 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.715267969 seconds)
  done (took 53.145731037 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.73767306 seconds)
    (2/2) benchmarking "in"...
    done (took 1.736805102 seconds)
  done (took 5.127220255 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.713467226 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.719162995 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.720032674 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.71655347 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.715116847 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.717697412 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.719960201 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.716252762 seconds)
  done (took 15.391942691 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.719261935 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.720355186 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.717678885 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.718709754 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.720930039 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.720509072 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.727204785 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.718172656 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.720133047 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.718393653 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.725299393 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.728990879 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.72625886 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.719954622 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.71959025 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.721470161 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.720869146 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.723116706 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.721731716 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.719497166 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.719293141 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.721950714 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.722111436 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.718874508 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.721397204 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.732465509 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.725456285 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.720381459 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.721672204 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.725445173 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.720023019 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.716632045 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.722013399 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.720784007 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.72053614 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.721423496 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.730364786 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.722646013 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.727681035 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.720355968 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.720625101 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.717756529 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.721574706 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.723275895 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.721477063 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.721481466 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.720702171 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.716826743 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.720506187 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.722207342 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.726537787 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.721967921 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.718570154 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.727858988 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.722235 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.728498759 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.722817444 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.725188826 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.731288541 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.731526883 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.735619369 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.727291672 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.72244369 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.722067581 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.730316548 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.745201045 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.729147918 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.719080188 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.719858209 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.722289545 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.730402216 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.736130005 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.731988724 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.723172493 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722154542 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.720840296 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.723863015 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.722378138 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.73014476 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.725970454 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.724488291 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.722966884 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.731848399 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.74455431 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.721409002 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.721806732 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.725459375 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.724381571 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.723641233 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.732722172 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.722418709 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.72147946 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.722484763 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.722747151 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.726238843 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.724167815 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.722740661 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.725438724 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.719652179 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.723889474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.723290167 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.728044816 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.732995372 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.725319041 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.724496481 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.732295777 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.722996143 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.723098655 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.734453005 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.724542504 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.724065219 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.724210225 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.732992824 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.72169594 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.726871886 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.735085118 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.726787899 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.725482362 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.726380145 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.723943937 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734497991 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.749855365 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.725133824 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.723832528 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.729650535 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.737968411 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.726641765 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.728337201 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.725673122 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.721726576 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.723764522 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.727371858 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.726410433 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.727365667 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.727242556 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.728498519 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.722804424 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.725541781 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.727070583 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.727339751 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.728181187 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.725229148 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.726558192 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.729207225 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.726800616 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.727046265 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.733069642 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.727266327 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.726511856 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.726702578 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.725000208 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.726428936 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.728540486 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.726790915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.728393614 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.726715792 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.724951688 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.726505227 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.726606694 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.725516833 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.726081253 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.72603348 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.728784122 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.726784653 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.731511291 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.726078721 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.723609579 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.727131926 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.72605166 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.726990337 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.728594066 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.726379522 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.731189952 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.736366123 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.726643478 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.727589074 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.731075068 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.728022828 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.727956394 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.727180219 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.729265244 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.736399146 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.728240809 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.735226842 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.728017703 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730256159 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.728950703 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.728223307 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.727844355 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.728597722 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.729825608 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.7369861 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.741607829 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.737802862 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.728852838 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.732134515 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.72929191 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.733338906 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.733693952 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.730261035 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.729501477 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729511609 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.728352199 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.730448805 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.731456142 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.72885864 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.730155988 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.728352401 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.728906688 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.728747975 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.729159912 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.730020269 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.730448509 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.725980334 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.730491083 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.729924074 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.728210768 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.726605196 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.72829664 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.728989942 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.729015135 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.730332564 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.739345194 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.727759147 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.730716658 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730553586 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.730444145 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.729672238 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.728937708 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.731882323 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.730309665 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.738204788 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.730843943 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.73177559 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.738032844 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.730536235 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.729511106 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.733169839 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.730634427 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.727159932 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.731873663 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.738809483 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.73095195 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.730632413 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.732569553 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.731092104 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.73138456 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.739084685 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.72936998 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.731617581 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.731150605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.734010164 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.72952302 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.732763887 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.733562763 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.73248047 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.73369685 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.731998276 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.731537375 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.733467829 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.732523023 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.73145193 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.731932247 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.734108801 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.742392017 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.73803035 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.733089034 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.734775919 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.733189536 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.735607352 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.732843394 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.731462351 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.731222315 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.748016423 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.741148836 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.740588157 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.73526553 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.73209791 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.738144631 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.733154619 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.738264818 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.730776292 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.734258752 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.733193451 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.730176965 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.730936483 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.734482947 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.732622897 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.734681384 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.734368902 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.736196751 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.733639823 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.731672677 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.733235668 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.732842848 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.733433966 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.733006209 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.732921827 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.738273436 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.735757506 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.734236855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.734235817 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.740743422 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.733777839 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.736025269 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.733854574 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.734209858 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.734123915 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.735294473 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.733605262 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.73759682 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.744180324 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.736505158 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.743235196 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.735594586 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.744885623 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.733892844 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.737712882 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.74448588 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.732053744 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.734211654 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.735945293 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.736256974 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.742072518 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.735528082 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.734115209 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.738616119 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.736626544 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.735182808 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.734489613 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.736160535 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.735096021 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.735473755 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.745156138 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.736367869 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.741936435 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.737608528 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.732840644 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.734883832 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.7344361 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.734799011 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743173724 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.737746035 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.737448289 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.734794574 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.736694469 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.734708832 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.736528616 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.736017959 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.73305959 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.736363766 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.743894837 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.73709699 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.742433573 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.736767295 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.74884351 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.738963931 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.743446522 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.737496723 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.738897374 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.738951033 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.736795608 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.739743321 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.7376446 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.739203918 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.737351576 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.738500705 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.740970842 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.736967715 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.741426058 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.737179352 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.737955401 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.73762642 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.746882478 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.759993782 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.738098357 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.741170583 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.735144081 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.739357433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.742425611 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.739336491 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.736333431 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.740440577 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.748968707 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.748598004 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.738832913 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.738300096 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.740073672 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739463398 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.738061159 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.737938967 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.738472598 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.739420154 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.741652456 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.738843756 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.74494578 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.737092166 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.738972787 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.740830125 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.74018487 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.751406349 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.739567167 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.739501182 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.739427366 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.738257167 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.73964238 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.739995545 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.740653402 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.740206076 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.738817485 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.740354796 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.745310993 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.746005546 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.741205553 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.738029718 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.739884547 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.739997814 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.741941085 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.741164405 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.739802658 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.740815589 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.740991002 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.741765825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.741867771 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.738596079 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.74013049 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.740677606 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.739642574 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.743658307 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.747989107 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.741607825 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.737615789 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.740429156 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.740464825 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.739214182 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.741989745 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.752774837 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744883906 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.750767689 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.74979625 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.745659505 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.742241261 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.744726269 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.749024643 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.740090427 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.741372112 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.740721143 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.742884226 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.742474959 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.744477248 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743211277 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.750814707 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.741744498 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.74104055 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.749269154 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.742955631 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.741003593 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.743399758 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.745206229 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.743275097 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.738843553 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.741717727 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.741434017 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.749643663 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.744386695 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.744024101 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.743537195 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.742123946 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.743870104 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.748059814 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743458849 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.743999025 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.740639134 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.742410701 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.743181107 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.742107372 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.73883171 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.741708751 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.743461538 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.746618353 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.753587599 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.739207285 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.746934504 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.744711364 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.743330667 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.744853707 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.743160897 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.741562269 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.740504973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.743292412 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.744211155 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.743722294 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.746231764 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.743613957 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.743785339 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.744420806 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.743968381 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.747195903 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.754229756 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.751626026 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.741086845 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.743743774 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.74518865 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.74880768 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.744739968 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.744941333 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.745941374 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.746874535 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.743667864 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.745286886 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.744634869 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.746577924 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.762295034 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.746217643 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.744534717 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.745141399 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751456185 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.744900691 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.742216058 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.746376389 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.750431249 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.748303618 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.755487208 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.745139153 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.753205488 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.745450289 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.746484305 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.749060738 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.748755007 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.755400578 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.749110712 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.747370483 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.747977029 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.750417516 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.763473391 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.746216391 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.755160053 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.774788383 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.747214582 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.747231148 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.747945081 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.745059265 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.747076073 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.750733528 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.74780844 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.746182877 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.746427542 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.748813887 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.74771793 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.752957882 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.749908826 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.747401112 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.747468068 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.748010611 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.750730194 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.744509376 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.748531249 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.746992379 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.74858389 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.748667274 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.748180462 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.748881872 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.763130542 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.759465916 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.748644182 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.747242058 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.745383358 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.752178933 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.750716931 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.759472303 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.756325752 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.748856389 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.748877883 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.749129217 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.74854607 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.744879128 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.748361403 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.74869647 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.747598524 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.74452824 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.762074473 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.756885722 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.754827068 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.749211088 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.748703408 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.748084626 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.751962087 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.749512794 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.749655118 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.750430068 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.750495772 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.752412929 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.749462887 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.749698327 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.751578923 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.756940681 seconds)
  done (took 1036.285092735 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.746512631 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747585844 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.745780133 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.746581217 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.747890563 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.746303616 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.746913026 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.747841841 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.74784102 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.746403723 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.74888904 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.746598303 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.746565171 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.749787819 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.747354061 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.747223448 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.7475516 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.747377756 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.747849304 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.747060891 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.746519079 seconds)
  done (took 38.376954363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.749748619 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.748833139 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.749720067 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.749574302 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.747631947 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.750419314 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.748452315 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.749996713 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.750279376 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.748604591 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.750652996 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.751160571 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.74761884 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.74884269 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.748037079 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.750192696 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.752031432 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.749043952 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.749840449 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.747574371 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.75122625 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.749686159 seconds)
  done (took 40.175405711 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.752348787 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.752564104 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.750201538 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.748850871 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.751124206 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.748657936 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.753410736 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.751240794 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.75196564 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.755366757 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.75026371 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.753282554 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.758236149 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.758502291 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.755138423 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.75183052 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.894878463 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.752413314 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.752141947 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.752628955 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.749427424 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.758048005 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.749494521 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.748390516 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.752099099 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.751773425 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.75214339 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.752109789 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.753651692 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.753681085 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.756681276 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.752921074 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.75159535 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.754607861 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.754048334 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.753412629 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.755740504 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.753718714 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.749742117 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.752678651 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.762636425 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.771594818 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.753517561 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.76329803 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.753573203 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.75377435 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.756475713 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.763116546 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.750540166 seconds)
  done (took 87.767329146 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.753248309 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.753013759 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.751941141 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.755333873 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.754206004 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.755077802 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.753768724 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.753515325 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.750402835 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.751030892 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.753835789 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.75116095 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.75097554 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.753979189 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.753760116 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.750933777 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.751379829 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.751373303 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.752199163 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.752652163 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.751434753 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.754087959 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.756408814 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.753552549 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.75460358 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.75346208 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.752848284 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.754393672 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.752782356 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.751740208 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.75472885 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.755238188 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.755274106 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.753140597 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752652779 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.754641298 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.755501512 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.753086874 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.75483945 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.752452398 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.755637128 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.755150733 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.755457057 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.756016898 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.752831373 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.753281421 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.752541054 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.753199514 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.753392442 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.755493464 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.754906198 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.753144032 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755222769 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.753216989 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.755927003 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.755557632 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.75279058 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.753766781 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.755972065 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.75350082 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.754180508 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.75557883 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.754039341 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.755771723 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.756458649 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.753969271 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.753844412 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.756250329 seconds)
  done (took 120.948529931 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.75761259 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.756909091 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.758313489 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757548721 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.757752786 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.758385176 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.757934512 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.758668038 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.757716757 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.758918074 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.7572038 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758903873 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.758838305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.75775414 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.756974851 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.758494031 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.758245279 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758583153 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.758591704 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.757974282 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.758951205 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.758843621 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.759125624 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760040761 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.759864144 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.759648815 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.760409366 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.758924507 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759843879 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.760035626 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.75942385 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.758904533 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759197838 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.758867306 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.7590453 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.7586463 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.758466645 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759158599 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.759735896 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.760112893 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.759524605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.758681008 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.760113275 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.759907782 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.759646138 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.760261079 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.760262322 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.761610659 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.760266502 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.760640326 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.760581196 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.760089797 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.759691481 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.760164183 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.759900998 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.760523752 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.759891 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.761436811 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.759996898 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.761292866 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.759837362 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.760835787 seconds)
  done (took 110.767530795 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.760663819 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.760048906 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.758564908 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.757889235 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.761519011 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.758842649 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.761181631 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.761412882 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.761273863 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.761360289 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761828168 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.759702481 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.757715905 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.761603112 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.759467247 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759088141 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.759646569 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.759210849 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.762095909 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.759135037 seconds)
  done (took 36.896847142 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.759349318 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.761491557 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.758726409 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.759553797 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.762206158 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.758880013 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.76247301 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.761578988 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.76100534 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.762091208 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.763462877 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.763105381 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.759981408 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.760163638 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.761846234 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.759652645 seconds)
  done (took 29.871926131 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.759796499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.763408461 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.761942024 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.762268285 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.759768373 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.760142443 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.762735089 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.760659949 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.760776776 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.763710841 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.763786499 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.763991485 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.76273074 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.762428037 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.761138829 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.76459198 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.761459459 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.762331144 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.763479353 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.765282696 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.762369366 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.760507692 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.764425918 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.764613129 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.762960828 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.763289972 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.762227036 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.761263982 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.761925429 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.764901203 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.762117609 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.763483667 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.762323106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.76256551 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.765030819 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.762194232 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.764208678 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.764605198 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.764426886 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.76394951 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.765278551 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.76334087 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.765397054 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.765842779 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.762418132 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.76481854 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.761931271 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.762863346 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.763607591 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.762319286 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.764590238 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.76490926 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.766066561 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.765721127 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.765599808 seconds)
  done (took 98.672891775 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.765287436 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.76524375 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.762616732 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.764970305 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.765114236 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.763166535 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.765102351 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.763118179 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.76300351 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.765484817 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.764140612 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.765205991 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.763753718 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.766284522 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.764846017 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.766115539 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.763982893 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.763942343 seconds)
  done (took 33.461731687 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.764338196 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.764642354 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.766994726 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.764506077 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.763949372 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.76766581 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.764515485 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.766958243 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.766405417 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.764039569 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.764162316 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.766963619 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.765578033 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.767340792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.765470549 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.764166678 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.768477083 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.767273615 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.7647077 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.765034463 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.768244564 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.76778619 seconds)
  done (took 40.550743522 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.766250878 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.765362588 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.783662712 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.809917812 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.796643783 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.766124916 seconds)
  done (took 12.388734965 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764974247 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.766753554 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.763685391 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768020164 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.766541958 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764191066 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764321042 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764021163 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767583235 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.765295499 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.764164207 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.766857497 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.76779364 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.764758788 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.76634922 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767993322 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765258312 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.763882249 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766535742 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767294691 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766162287 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.768260846 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765563075 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.764647481 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.764463793 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765560975 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767429907 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.765897794 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.765726065 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768053412 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.767848854 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.765608839 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767944555 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766424116 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769392702 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769142371 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.76649211 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769044341 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769614656 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767351478 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.768415117 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769010992 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769313492 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766339617 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769273308 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768007792 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.766837975 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.766426311 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.765803722 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769517792 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.768693973 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.766382236 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769000944 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.76941815 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769133884 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769302558 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.767247257 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.767154798 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.769976993 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768228287 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768197287 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77093531 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767031641 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767831986 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770181387 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767612517 seconds)
  done (took 118.336383394 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.767797583 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.769114694 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.767782485 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769120164 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.768007117 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7681564 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.76855585 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.767760755 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.767521408 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768579261 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771358168 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768990036 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768948618 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768171764 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768485457 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.76750035 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.768935832 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.768886449 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.768676799 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.773538715 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769008448 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.770285527 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769667905 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768340406 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.769644833 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.771807122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769335666 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769654469 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770061225 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.769250881 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.768941503 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.768979277 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769335244 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.770161495 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.769643551 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769217153 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.7690831 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770098855 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770313778 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772891415 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769904214 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.772018208 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.769483417 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.770861842 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771065775 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.770436343 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.769836028 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.769471312 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.77004517 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.769275002 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770753351 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.771167261 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.770603999 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.771444241 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.770727216 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.770102867 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.77126657 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.770015419 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.771453337 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773210793 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.771137039 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.77201704 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.773882193 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770549584 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.770379465 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.771179282 seconds)
  done (took 118.52168218 seconds)
done (took 2415.065536717 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.793660248 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.80486875 seconds)
  done (took 15.306926469 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.93329036 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.887557313 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.772639107 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.789452051 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.772394964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.788024675 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.791494607 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.77293087 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.771858516 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.773574174 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.7723281 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.961064659 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.772093682 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.772638204 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.773599704 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.86601402 seconds)
  done (took 50.681301953 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.77570291 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.776819559 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.799514487 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.777893561 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.776899452 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.803068733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.818292229 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.780175798 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.888483317 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.793946126 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.031877031 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.776173529 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.776260298 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.949016175 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.797617936 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.805789921 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.961528963 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.02976363 seconds)
  done (took 34.828446813 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.052932582 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.789806729 seconds)
  done (took 10.551523397 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.787104297 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.787817964 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.801115212 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.81433596 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.805275356 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.797548652 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.798001829 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.784985208 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.793409818 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.804712238 seconds)
  done (took 69.683970168 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.781870809 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.777524829 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.778543061 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.775620334 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.769084375 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.769549697 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.775748114 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.774236185 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.068088489 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.853016858 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.799679081 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.782570448 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.776890254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.778524405 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.77556509 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.800052646 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.913949179 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.775552742 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.774904819 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.782517735 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.778419646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.864213512 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.806226771 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.776775322 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.852699473 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.068535826 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.780012781 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.78300136 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.911016286 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.776036988 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.77714383 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.778949389 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.780095665 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.291893888 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.219917968 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.787399241 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.784879721 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.784722098 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.775940581 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.898894482 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.779336011 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.783565124 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.771519437 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.202342021 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.897572113 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.851854682 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.614427337 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.781396111 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.77968171 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.829442709 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.781115494 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.780343089 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.791229576 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.421104987 seconds)
  done (took 132.137893201 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.790755647 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.257788557 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928449379 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.792647337 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.189660771 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.130069905 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.773134251 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.946325582 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.826771443 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.147352176 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.062665183 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.015030976 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.772873889 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.77383318 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.774162125 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.773436466 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.987069766 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.965830612 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.774255397 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.77314745 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810034222 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.182581548 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.961493098 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.927847093 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.79823965 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.123434876 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.961058601 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.014279166 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.776301436 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.774144416 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.965273535 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.780743746 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.773407426 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.774211122 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.002772953 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.002064016 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.992272822 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.773576315 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.803031038 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.775230252 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.802965811 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.121610057 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.008578338 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.974251364 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.088935574 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.128126597 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.776791865 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.774684141 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.782318917 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.969247232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.009694685 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.178784052 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.964273606 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.775974586 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.129394353 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.775098108 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.815491679 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154491695 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.069474983 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.011824346 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.80527545 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.775181849 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.775021074 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.218972395 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.777339658 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.009194511 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.891107857 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.775536793 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.011659941 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.014825844 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.070029365 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.141266399 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.806759376 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.780458188 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.837266031 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.19117664 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.974700344 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.15561251 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.786858649 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.777154738 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.998437923 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.778953207 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.051557006 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.220277849 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.168448414 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.816204351 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.801810878 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.776127006 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.155239948 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.153038988 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.050017163 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.103137155 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.004026856 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.779788427 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.776426246 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.777685221 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.789663817 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.97328779 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.778110288 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.139253838 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.152893493 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.551864366 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.809281663 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.222972424 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.976804238 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.777900446 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.779255813 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.778219601 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.983419793 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.840044325 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.800529616 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.779418078 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.154723748 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.735527863 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.913087291 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.516521575 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.972757626 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.781980763 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.175614805 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.780287416 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.157701109 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.834873284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.220033629 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.121293574 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.823814217 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.990196279 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.105737442 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.778999529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.200698718 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.216587568 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.96409591 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.154057186 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.629534655 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.778241246 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.196195557 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.788397857 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.815193015 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.948237522 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.801435278 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.007634262 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.784224805 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.215062523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.801746057 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.014436393 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.817629329 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.180713161 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.821963746 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.976135036 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.811722785 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.905785089 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.80065911 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.779721738 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.963633706 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.154628988 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.781338574 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.335310497 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.781570273 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.928244183 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.223786634 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802914047 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.977899494 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.781329424 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.785396813 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.999005517 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.805763599 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.450940895 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.78083145 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.070550579 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.739590579 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.234140066 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.781349515 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.217344287 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.993691014 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.801284853 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.780704277 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.589783754 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.781189231 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.845338978 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.941107191 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.65639088 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.786602295 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124661735 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.7815221 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.977214763 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.781476305 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.784390827 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.132843209 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.833146632 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.785830294 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.792711306 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.782524142 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.782282599 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134157683 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.809242203 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.502762886 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.921348257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.176221313 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.092606922 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.172350004 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.830035675 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.802981545 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.214562965 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.843693246 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.97912097 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.783373821 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.807717258 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.152364392 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.786521137 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.179266316 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.19369875 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.85106457 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958374925 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.783528094 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 7.131009645 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.783246943 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.988063545 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.002366458 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.783863257 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.789716667 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.96544503 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.971294638 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.975289479 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.803820569 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.818009334 seconds)
  done (took 944.372272768 seconds)
done (took 1259.270416653 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.784080942 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.784255416 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.772127014 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.78751557 seconds)
  done (took 28.853671151 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.793715351 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.790839412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.792704718 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.791687179 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.792644032 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.79105874 seconds)
  done (took 12.47767555 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.853280521 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.786538338 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.78629638 seconds)
  done (took 21.151692624 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.939938997 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.708800137 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.03873676 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.24247551 seconds)
  done (took 11.656536532 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.793369698 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.793481485 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.792998363 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.794374518 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.795240443 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.797250927 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.794326889 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.795197012 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.79675803 seconds)
  done (took 17.879560301 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.61455866 seconds)
done (took 98.357208067 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.816323062 seconds)
    (2/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.810859454 seconds)
    (3/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.707851481 seconds)
    (4/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.70771164 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.007391909 seconds)
    (6/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.401582517 seconds)
    (7/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.82789481 seconds)
    (8/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.442061111 seconds)
    (9/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.812150924 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.409057277 seconds)
    (11/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.38905225 seconds)
    (12/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 4.015948142 seconds)
    (13/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.871668886 seconds)
    (14/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.804181495 seconds)
    (15/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.383602343 seconds)
    (16/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.309040984 seconds)
    (17/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.884669614 seconds)
    (18/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.871150262 seconds)
    (19/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.984002726 seconds)
    (20/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.54849874 seconds)
    (21/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.789601385 seconds)
    (22/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.790364073 seconds)
    (23/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.501228791 seconds)
    (24/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.457587551 seconds)
    (25/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.984555747 seconds)
    (26/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.788651269 seconds)
    (27/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.802527251 seconds)
    (28/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.776142518 seconds)
    (29/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.906661648 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.959477228 seconds)
    (31/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.89446002 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.093544908 seconds)
    (33/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.076340108 seconds)
    (34/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.298344914 seconds)
    (35/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.051022039 seconds)
    (36/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.884038442 seconds)
    (37/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.473670571 seconds)
    (38/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.819510566 seconds)
    (39/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.292222597 seconds)
    (40/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.294251863 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.447708607 seconds)
    (42/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.153979744 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.989480221 seconds)
    (44/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.261088256 seconds)
    (45/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.096431888 seconds)
    (46/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.695992092 seconds)
    (47/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.596547919 seconds)
    (48/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 4.932432854 seconds)
    (49/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.789874898 seconds)
    (50/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.886641675 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.898910243 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.867985336 seconds)
    (53/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.049908611 seconds)
    (54/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.397020238 seconds)
    (55/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.588743884 seconds)
    (56/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.786664847 seconds)
    (57/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.787627197 seconds)
    (58/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.814699673 seconds)
    (59/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.088171265 seconds)
    (60/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.974329407 seconds)
    (61/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.869685343 seconds)
    (62/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.788347722 seconds)
    (63/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.844768532 seconds)
    (64/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.802645402 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.808936174 seconds)
    (66/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.579385368 seconds)
    (67/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.7864773 seconds)
    (68/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.945663001 seconds)
    (69/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.29528211 seconds)
    (70/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.790504541 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.852133643 seconds)
    (72/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.787172817 seconds)
    (73/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.311707889 seconds)
    (74/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.263944981 seconds)
    (75/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.89325949 seconds)
    (76/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.627383837 seconds)
    (77/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.800975643 seconds)
    (78/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.998532085 seconds)
    (79/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.90718367 seconds)
    (80/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.773787825 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.790054372 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.89043995 seconds)
    (83/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.813452407 seconds)
    (84/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.307092884 seconds)
    (85/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.833464867 seconds)
    (86/309) benchmarking ("sort", Int64, false)...
    done (took 5.746149257 seconds)
    (87/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.81482096 seconds)
    (88/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.848244852 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.870871651 seconds)
    (90/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.853055886 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.227635618 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.961835494 seconds)
    (93/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.049034905 seconds)
    (94/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.03140019 seconds)
    (95/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.147856525 seconds)
    (96/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.899301185 seconds)
    (97/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.924666788 seconds)
    (98/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.806557679 seconds)
    (99/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.853298344 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.560245627 seconds)
    (101/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.036740601 seconds)
    (102/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.77592973 seconds)
    (103/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.926572426 seconds)
    (104/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.799598294 seconds)
    (105/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.78946374 seconds)
    (106/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.891228278 seconds)
    (107/309) benchmarking ("sort", Int8, false)...
    done (took 4.785203682 seconds)
    (108/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.392487998 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.282545895 seconds)
    (110/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.788593901 seconds)
    (111/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.816892465 seconds)
    (112/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.790425349 seconds)
    (113/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.99879949 seconds)
    (114/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.80734878 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.005795002 seconds)
    (116/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.937996026 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.41817252 seconds)
    (118/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.866455286 seconds)
    (119/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.788824524 seconds)
    (120/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.790465628 seconds)
    (121/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.791251529 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.00328538 seconds)
    (123/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.086845617 seconds)
    (124/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.428393632 seconds)
    (125/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.790435083 seconds)
    (126/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.054992265 seconds)
    (127/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.953970284 seconds)
    (128/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.452422604 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.79155967 seconds)
    (130/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.900851982 seconds)
    (131/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.781396771 seconds)
    (132/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.560958775 seconds)
    (133/309) benchmarking ("sort", Bool, false)...
    done (took 2.271681436 seconds)
    (134/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.815252162 seconds)
    (135/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.632743241 seconds)
    (136/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.817438723 seconds)
    (137/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.800512444 seconds)
    (138/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.071723153 seconds)
    (139/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.383289098 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.143912174 seconds)
    (141/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.864464845 seconds)
    (142/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.031896093 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.55619602 seconds)
    (144/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.297826297 seconds)
    (145/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.999324362 seconds)
    (146/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.05272444 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.792142059 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.930681045 seconds)
    (149/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 3.000624028 seconds)
    (150/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.778428778 seconds)
    (151/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.408684458 seconds)
    (152/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.894388246 seconds)
    (153/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.818457696 seconds)
    (154/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.801223014 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.903761994 seconds)
    (156/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.557159167 seconds)
    (157/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.620507372 seconds)
    (158/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.777599951 seconds)
    (159/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.767728319 seconds)
    (160/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.319129353 seconds)
    (161/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.818789435 seconds)
    (162/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.855787989 seconds)
    (163/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.235485424 seconds)
    (164/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.550618668 seconds)
    (165/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.199019725 seconds)
    (166/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.950772214 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.835019316 seconds)
    (168/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.927760222 seconds)
    (169/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.197508341 seconds)
    (170/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.494005942 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.836324603 seconds)
    (172/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.812241859 seconds)
    (173/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.701923875 seconds)
    (174/309) benchmarking ("sort", Float32, false)...
    done (took 5.672275409 seconds)
    (175/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.898607151 seconds)
    (176/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.15415135 seconds)
    (177/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.704930444 seconds)
    (178/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.878505714 seconds)
    (179/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.91053735 seconds)
    (180/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.803166831 seconds)
    (181/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.978025824 seconds)
    (182/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.131751586 seconds)
    (183/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.152365189 seconds)
    (184/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.920965381 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.920506263 seconds)
    (186/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.879119651 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.793347402 seconds)
    (188/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.820462869 seconds)
    (189/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.820032069 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.151014051 seconds)
    (191/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.881670264 seconds)
    (192/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.793720552 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.836896364 seconds)
    (194/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.779214968 seconds)
    (195/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.882694619 seconds)
    (196/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.880610005 seconds)
    (197/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.991715563 seconds)
    (198/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.853369862 seconds)
    (199/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.225215831 seconds)
    (200/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.486179808 seconds)
    (201/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.443842064 seconds)
    (202/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.794335142 seconds)
    (203/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.238815062 seconds)
    (204/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.597677996 seconds)
    (205/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.264358621 seconds)
    (206/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.844759677 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.88686099 seconds)
    (208/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.032983073 seconds)
    (209/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.513771689 seconds)
    (210/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.397520481 seconds)
    (211/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.926964566 seconds)
    (212/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.738849088 seconds)
    (213/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.095541547 seconds)
    (214/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.324892598 seconds)
    (215/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.818031635 seconds)
    (216/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.156842126 seconds)
    (217/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.379190384 seconds)
    (218/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.926245146 seconds)
    (219/309) benchmarking ("sort", BigInt, false)...
    done (took 6.794653632 seconds)
    (220/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.782114739 seconds)
    (221/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.89683772 seconds)
    (222/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.837943498 seconds)
    (223/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.191619339 seconds)
    (224/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.83163273 seconds)
    (225/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.783319927 seconds)
    (226/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.972497207 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.157671359 seconds)
    (228/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.923488396 seconds)
    (229/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.056834428 seconds)
    (230/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.241500708 seconds)
    (231/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.814738067 seconds)
    (232/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.060295002 seconds)
    (233/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.796104317 seconds)
    (234/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.077865447 seconds)
    (235/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.749968756 seconds)
    (236/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.626997259 seconds)
    (237/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.822797827 seconds)
    (238/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.151254383 seconds)
    (239/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.823712553 seconds)
    (240/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.842946875 seconds)
    (241/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.533075652 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.848069648 seconds)
    (243/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.801204024 seconds)
    (244/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.766550942 seconds)
    (245/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.846398531 seconds)
    (246/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.300091155 seconds)
    (247/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.80034648 seconds)
    (248/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.959670275 seconds)
    (249/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.824349589 seconds)
    (250/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.085360338 seconds)
    (251/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.961002006 seconds)
    (252/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.822050605 seconds)
    (253/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.815456536 seconds)
    (254/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.786445503 seconds)
    (255/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.813834499 seconds)
    (256/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.903686158 seconds)
    (257/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172256625 seconds)
    (258/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.925651743 seconds)
    (259/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.066205631 seconds)
    (260/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.82257819 seconds)
    (261/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.825321387 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.464158668 seconds)
    (263/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.524574104 seconds)
    (264/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.937150088 seconds)
    (265/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.797985893 seconds)
    (266/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.928907181 seconds)
    (267/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.297476471 seconds)
    (268/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.180206104 seconds)
    (269/309) benchmarking ("sort", Float64, false)...
    done (took 5.878702882 seconds)
    (270/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.839729565 seconds)
    (271/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.894427779 seconds)
    (272/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.810161836 seconds)
    (273/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.23037825 seconds)
    (274/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.30447282 seconds)
    (275/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.815743451 seconds)
    (276/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.82549834 seconds)
    (277/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.8642994 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.476614527 seconds)
    (279/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.815879482 seconds)
    (280/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.799962631 seconds)
    (281/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.798600813 seconds)
    (282/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.815387426 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.89660987 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.881606323 seconds)
    (285/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.205435551 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.41594205 seconds)
    (287/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.412530849 seconds)
    (288/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.650174412 seconds)
    (289/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.91173453 seconds)
    (290/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.629925917 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.875897208 seconds)
    (292/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.201052657 seconds)
    (293/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.003301319 seconds)
    (294/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.071558498 seconds)
    (295/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.742555613 seconds)
    (296/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.325289847 seconds)
    (297/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.859670445 seconds)
    (298/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.825756817 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.786365357 seconds)
    (300/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.844827667 seconds)
    (301/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.826007925 seconds)
    (302/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.397386056 seconds)
    (303/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.476648603 seconds)
    (304/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.70832776 seconds)
    (305/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.390761572 seconds)
    (306/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.800025086 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.844097269 seconds)
    (308/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.81306724 seconds)
    (309/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.870935162 seconds)
  done (took 1025.034236678 seconds)
done (took 1026.763462799 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.836458544 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.830736058 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.813598589 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.835810762 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.927753801 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.84953158 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.82514629 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.817290268 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.863225331 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.863924218 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.814096544 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.852297462 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.817396296 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.816002924 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.814533772 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.828642788 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.513438759 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.815795583 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.832312367 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.824575868 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.83301307 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.81505267 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.865276653 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.850057594 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.819072822 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.817286922 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.819141473 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.836024867 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.928702674 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.8197312 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.818715792 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.827626917 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.515005093 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.814693775 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.810891326 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.837261396 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.828356123 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.82604187 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.820869306 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.849026967 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.775811068 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.816707196 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.819288535 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.817676356 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.817537484 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.821438327 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.81951238 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.822307501 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833445943 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.833471566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.768193185 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.833951297 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.821676049 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.818670529 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.828410102 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.817648301 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.820875966 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.83380126 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.836816564 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833656199 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.507002705 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.821800536 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.819692671 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.835272144 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.82594652 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.807369541 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.814413201 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.82196663 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.777459753 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.823587073 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.807608208 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.828477312 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.81911507 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.833342926 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.851151737 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.519203905 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.813939379 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.81839221 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.82663164 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.8182664 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.828382402 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.833105711 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.824440208 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.820195651 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.833561023 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.854071027 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.829855192 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.82042992 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.829269315 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.839294112 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.827234238 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.83017307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.823232944 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.815128905 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.828665296 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.823115496 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.822813019 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.823915432 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.824762543 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.831204202 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.778095241 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.836020641 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.81752358 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.816668529 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.820556302 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.833332397 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.777766266 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.821415596 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.84209985 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.868406008 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.822708377 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.510140145 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.824213811 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.836824546 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.829558764 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.823561786 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.815575201 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.511278241 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.776176992 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.837954497 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.822722976 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.820094922 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.837693706 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.822670996 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.818092103 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.522555561 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.822722444 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.835363775 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.943636341 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.833270379 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.853611374 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.820309754 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.825647474 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.85501943 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838685998 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.855116359 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.82474105 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.838515521 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.83899391 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.819315342 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.834537415 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.833606886 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.824554973 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.828050977 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.81689587 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.852737439 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.839102729 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.834990781 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.843864156 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.943470522 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.819511294 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.512274152 seconds)
done (took 293.272517894 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.881160088 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.815010179 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.914522117 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.818563398 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.902594614 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.91979246 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.815651218 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.815945949 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.816403963 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.194473423 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.816736253 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.817229541 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.818066201 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.817186176 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.900994524 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.81961096 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.816147498 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.156515221 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.821210427 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.88963489 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.818733778 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.817811958 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.819496161 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.200705252 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.812664856 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.818211543 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.890697661 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.819792462 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.203570373 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.812205436 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.820866258 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.165234736 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.910286731 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.838481423 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.829743546 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.826846764 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.903940093 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.838842382 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.902143487 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.901891372 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.915589625 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.860974254 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.819066198 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.813867754 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.822199879 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.822887091 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.818235936 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.848891539 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.813376513 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.819540028 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.159448903 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.830012761 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.828468106 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.818194372 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.818893865 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.843895621 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.819178329 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.822766504 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.911535783 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.823866774 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.884235476 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.201840955 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.197357276 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.821697791 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.822059003 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.81933503 seconds)
  done (took 181.050562545 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.886144361 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.895340387 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.906261139 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.822953338 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.870341634 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.910506136 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.823297927 seconds)
  done (took 14.869910657 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.828182156 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.822925977 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.87182681 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.87233474 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.824157819 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.973387929 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.822234774 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.834510501 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.82045924 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.874934254 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.823170698 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.822924776 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.830150995 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.823938865 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.872329996 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.834366979 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.937462272 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.824245414 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.823896983 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.9793016 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.820791888 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.829898944 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.874668066 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.834522805 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.825151551 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.829938687 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.404691548 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.824309973 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821069423 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.824305258 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.820803297 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.864069837 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.825106539 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.817757057 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821137165 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.939046946 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.82525397 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.821986683 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.823866309 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.820068752 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.82423911 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.824549642 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.824858958 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.821638132 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.824461532 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.848626708 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.824777424 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.825187724 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.824059862 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.82513832 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.874503018 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.825184715 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.822465785 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.82306878 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.881489971 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.832065962 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.827177318 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.822260321 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.82616225 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.822258483 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.981391185 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.873067909 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.825345525 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.872949633 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.82555875 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.826235017 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.82553979 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.82512657 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.880107912 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.824642309 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.873831574 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.823038953 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.98295362 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.849768807 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.82762367 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.829097501 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.828683757 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.827552438 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.819578158 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.831915475 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.823609926 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.827365948 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.83175602 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.824396889 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.82431528 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.934342519 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.935294551 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.824210865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.839757154 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.834170885 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.823940778 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.880455192 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.826768608 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.823903031 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.879208069 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.94262106 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.880102218 seconds)
  done (took 201.377704404 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.831905657 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.83432877 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.828229246 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.842703111 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 2.259095965 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.827112128 seconds)
  done (took 13.183202457 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.829648842 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.828850459 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.827544729 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.827699651 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.828088107 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.827411311 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.829319402 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.829085429 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.831243827 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.827975314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.828626895 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.829011926 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.82977233 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.829535578 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.830185472 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.828085697 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.829203695 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.825664666 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.828330945 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.82909898 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.974247458 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.829467624 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.828849847 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.82940037 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.833864776 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.827972837 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.837078183 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.828308374 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.82964765 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.837032642 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.832852477 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.830441389 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.829657997 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.834820915 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.833606226 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.831475167 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.833361636 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.830716208 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.827924238 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.83076439 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.830866111 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.830637905 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.83027297 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.830415303 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.831276963 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.835286677 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.834984004 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.837991391 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.829919524 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.83086909 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.831723206 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.829799006 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.830178751 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.831419798 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.833232243 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.835337412 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.835020585 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.832123002 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.832033778 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.831977706 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.831481894 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.831895924 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.832617793 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.835189708 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.838244543 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.831105401 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.831336883 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.834555722 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.831060837 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.830825904 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.832005683 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.828328872 seconds)
  done (took 134.742763779 seconds)
done (took 546.974668191 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.890740086 seconds)
  done (took 8.654042817 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.967145567 seconds)
  done (took 8.732344546 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.969519051 seconds)
  done (took 16.730009668 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.835429293 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.886967408 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.827630199 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.827204511 seconds)
  done (took 29.138965424 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.242037855 seconds)
  done (took 9.003056399 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.821802269 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.832180832 seconds)
  done (took 15.416240793 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.295759338 seconds)
  done (took 9.055761843 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.395986082 seconds)
  done (took 9.157690912 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.843371346 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.843365832 seconds)
  done (took 15.453682376 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.808612097 seconds)
  done (took 8.570954838 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 11.677810888 seconds)
  done (took 13.43874527 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.82926359 seconds)
  done (took 8.590937306 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.893490675 seconds)
  done (took 8.65444412 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.989967955 seconds)
  done (took 10.751302605 seconds)
done (took 173.111173429 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.822615484 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.822726248 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.822109829 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.821951573 seconds)
  done (took 29.050682372 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.863545876 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.86220009 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.863960254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.874348091 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.867286272 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.864416676 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.855219226 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.855687763 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.874317282 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.86747973 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.868786629 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.867571146 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.881171666 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.862776872 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.86908577 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.865710855 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.874252805 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.864858567 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.856551561 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.867787839 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.832534197 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.875752332 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.867363844 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.831262224 seconds)
  done (took 46.496298385 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.027644519 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.901612336 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.984682872 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.88326708 seconds)
  done (took 9.561468219 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.882518131 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.88439094 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.896537812 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.93467138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.966611326 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.893360224 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.858615087 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.852127521 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.838997853 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.884807925 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.960032144 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.901834578 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.96878112 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.832431649 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.022082879 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.831433516 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.830577971 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.883719649 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.935082788 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.948370853 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.8330723 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.883773004 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.889780009 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.901191234 seconds)
  done (took 47.278655081 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.830402451 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.838719661 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.83834323 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.832322295 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.831865898 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.833330091 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.837685444 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.832767539 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.853541868 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.833931011 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.831338573 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.83189317 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.83175503 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.833558916 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.831522495 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.845517175 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.845273529 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.832768929 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.836292371 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.839519275 seconds)
  done (took 38.487663277 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.825554475 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.680043975 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.178946465 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.082323851 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.827102717 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.828698914 seconds)
  done (took 31.188433985 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.880201987 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.959443756 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.833864842 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.051270394 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.126475465 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.834028825 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.832368546 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.986238804 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.184657906 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.164982704 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.882911865 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.873784365 seconds)
  done (took 25.376205635 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.827720832 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.829500196 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.830382216 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.844106911 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.860383406 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.838347625 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.841637763 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.826522543 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.863692279 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.868197919 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.83951438 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.862953675 seconds)
  done (took 43.90012313 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.915743664 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.874054958 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.321475018 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.547608492 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.205120254 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.040044717 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.515816243 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.222643157 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.832993739 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.103764014 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.358641549 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.922001738 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.08556171 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.841868116 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.830099396 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.517621579 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.058425856 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.192622362 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831108613 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.885959977 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859471221 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845699746 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.968463423 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.848068223 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.042503088 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.959237933 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.203736841 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.831114695 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.046187167 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.844938001 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.839928585 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.830352294 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.104267441 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.336273224 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923428048 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840697809 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.533575804 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.540655073 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.821828627 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.971082841 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.144748686 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.834083377 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.841680978 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.831525218 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.765644569 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.839874612 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.229413817 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.836700246 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.54360754 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.832269085 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.842611315 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.926419377 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.835233302 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.648469817 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835119541 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.832450387 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.829761626 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.837765848 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.399410888 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.365926672 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.839228098 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.767243305 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.922050897 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.983705922 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.368415964 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.934302122 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.836442215 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836408211 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.766815933 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.961029105 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.853430285 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.180993434 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.854155568 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.483063247 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.4221202 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.371158161 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.765708392 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.256377519 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.846973961 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.768287995 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.061464265 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.83353644 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.769083715 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.773903409 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.768104129 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.328676596 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.840046567 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.9233031 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.840290395 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.227188863 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.844437899 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.852179319 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.857045091 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.058165837 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.716999907 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.833041586 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.110855359 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.974910752 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.85571523 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.228264082 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.768864058 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.837943597 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.091593061 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.046223323 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.844293955 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.525624691 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.985947277 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835075924 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.853134434 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.845219747 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.846016045 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.329981853 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.847740182 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.37563519 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855415967 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.835624983 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.36656326 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835026262 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.954052027 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.375279722 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.01754361 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.389002764 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.835585154 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.918061491 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.838884307 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.836184326 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.013268572 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.354169616 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.836871098 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.838243853 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.836524955 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.864139341 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.835793107 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786351781 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.833116771 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.382183805 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.840765707 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.059218829 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.836337291 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.11427651 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.770575588 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.166315591 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929563717 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.059570494 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.813867471 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.836861024 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.098054572 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852815064 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.854927288 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.84742372 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.855516904 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.935870107 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.859193404 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.850977464 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.09367656 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.841644521 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.841183379 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.015842754 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.843094878 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.845785356 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.842972061 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675552333 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.331781442 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.814960703 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.845499758 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.727826484 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.851678215 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901503122 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.843114124 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.847204797 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.105903601 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.632778731 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.842498544 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.834718634 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062620819 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.849169871 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.915087589 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.919844464 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.982759652 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.337207551 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.852307638 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.772441002 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.549700162 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.53096534 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.839821686 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.773671085 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.837952005 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848034125 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.849461188 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.055780296 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335885624 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.840583917 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.91212038 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.848287313 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.850252787 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.843255689 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.838802852 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.082875211 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.377647131 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.859250304 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.850336678 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98401132 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.853226386 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.77499642 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.842615853 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.844029568 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.840235312 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.839993532 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87262391 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.919060958 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253764053 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.104843099 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.703641846 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.851728241 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.069593399 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.859793675 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.841954675 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.148037438 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855106887 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.853381134 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.848987799 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.852066986 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.900764394 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.513497472 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.4078808 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.444113562 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.276742331 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541412312 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.856422013 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.841741177 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.242564657 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.7749154 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.399309665 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.965451997 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.2408572 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786283172 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.98942867 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.806667635 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.384520434 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.852174209 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.069569853 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.53824947 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.150224217 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.856548418 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.053635468 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87731039 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.857617405 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.772504782 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.128364658 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.048555347 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.19853857 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.925334219 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.23810237 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.147509038 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.8456989 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.841268467 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.867358878 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953015332 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.555740646 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.015280305 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.84295843 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.40468631 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.253750603 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.85030721 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.071711819 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.375426717 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.844248898 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.990115085 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.778758286 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.8546565 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.854035658 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.845847621 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.578960192 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 5.403193703 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.097026695 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.854998566 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.777484755 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845141915 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.282270179 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.698708304 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.84942715 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.843957216 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.376627998 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.856485562 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.063255408 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.86310872 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.066245369 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.849492415 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.778984671 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.779118855 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.536695767 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850624498 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.821593748 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.206229703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.914750319 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.875258581 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.845732301 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.897106939 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.102946531 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.859247077 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.343130424 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.0742671 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.629666432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.867786958 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.946639507 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.187008783 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.834272695 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.845328508 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.081260028 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.686993843 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.069525194 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.34941493 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.751462064 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.844819155 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.057245885 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.845877465 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.405087284 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027817087 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.556659717 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.855580985 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.441975559 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.869590988 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.415709364 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.763648277 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.937263061 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.854072957 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.924595599 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.856201343 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.856962339 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.857080775 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955743361 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.417654412 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850918994 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.860492474 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.941561795 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.401582226 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.075383572 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.850496326 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.349844636 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.456075792 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.348056917 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.860838148 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.847404446 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.846782668 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.781667991 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996202777 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.076034559 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.121939756 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.97752508 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.984909597 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.871157445 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.191491353 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.855849161 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.061092861 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.12388787 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.746403503 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.84792722 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.861780054 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.848727752 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.859472052 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.06090696 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.214739119 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.277879107 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.968199445 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.849591215 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.245740009 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.123223173 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.848630428 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.848937191 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.439003258 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.866473723 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.870915233 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.85362141 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.440782068 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.999569917 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860337758 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.358464968 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.860285711 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.009073171 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.623646492 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.019565339 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.110041617 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.105370401 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.862397278 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.35021352 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.462223525 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114855207 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.917344536 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.860794451 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.954023683 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997894212 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 5.431559331 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.850778665 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.850069236 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.13371441 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.563081822 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.859997657 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.353777808 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.114370441 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.847907596 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 5.434870848 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874508514 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.861591306 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.07603409 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.354704362 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.074727893 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862063161 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.8584237 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.670511431 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.355684201 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.863692237 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.785855792 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.855474892 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.034912605 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.087371177 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872441522 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.30435039 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.562676589 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.281645984 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.823154547 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.874223472 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.85200367 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.464771255 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.353413175 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.081616819 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.215208323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.417174183 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.861791534 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.126795113 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.857134562 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.855496642 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127499164 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.856489145 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.859902097 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.864381339 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.351409757 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.400145517 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.853730914 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.914245983 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.793517432 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.197121349 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.497453039 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.789200466 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.86257456 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.977032151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.853263444 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.981989437 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.864691477 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 5.445836257 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.852863565 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.586411327 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.132933045 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.858583723 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.840997434 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.208109626 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.862690993 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.860384534 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062531076 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.862234327 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.53047981 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.204738199 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.112301748 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.860767046 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.839765016 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.857618797 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.855332439 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.842088593 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.05014132 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.069421842 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287287005 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.861531968 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.865754456 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.857976997 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.071050833 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066174448 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.436662411 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.868416315 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.860477399 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.870666267 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.76100354 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.363508214 seconds)
  done (took 1773.77256895 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.871762138 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.873499779 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.871719315 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.897346706 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.859680125 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.932821071 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.878031867 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.864881209 seconds)
  done (took 56.842109206 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.857090185 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.071875567 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.889556647 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.854936036 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.865200031 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.856860227 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.176736878 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.871509402 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.864704669 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.865622934 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.855288918 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.854190556 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.355750128 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.86602413 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.857478064 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.853010473 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.86364483 seconds)
  done (took 74.472512713 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.859376797 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.301224568 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.861868514 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.860568485 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 9.047316379 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.857652181 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.275454823 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.894953847 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.874249313 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.859099653 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.506914656 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.86426106 seconds)
  done (took 89.858194863 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.863730399 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.863246412 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.863714335 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.863150234 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.864251276 seconds)
  done (took 11.113077433 seconds)
done (took 2279.161091865 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.112064501 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.329140757 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.279355813 seconds)
  done (took 6.402647887 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.007212968 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.055889846 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.176960911 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.182082038 seconds)
  done (took 10.220239712 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.145355834 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.230788213 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.064489561 seconds)
  done (took 8.237490738 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.84055819 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.874596948 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.952805434 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.860055912 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.862289849 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.863673727 seconds)
  done (took 22.384285054 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.864656245 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.86649795 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.864787981 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.867342839 seconds)
  done (took 9.260891014 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.845646518 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.59974475 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.847473787 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.862545771 seconds)
  done (took 20.953577541 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.611965591 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.623031805 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.608178921 seconds)
  done (took 9.641259198 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.708041456 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.723708191 seconds)
  done (took 11.230294874 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.140804657 seconds)
  done (took 3.938849033 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.996041243 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.127183971 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.760376412 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.596308148 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.769709455 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.379450698 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.924582418 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.651755777 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.587597097 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.256490345 seconds)
  done (took 29.848566766 seconds)
done (took 147.692008641 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.622078718 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.260487929 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.070091323 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.582539944 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.109128729 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.067968025 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.067292562 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.560416354 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.120362512 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.112591672 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.652421138 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.108486187 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.013749157 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.242304649 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.01303548 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.864676225 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.088576988 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.665993509 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.301127844 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.499592195 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.087730577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.231794656 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.48845154 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.272941603 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.110448401 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.020733098 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.813531209 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.889143985 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.444370535 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 4.850233527 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.040315485 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.643245141 seconds)
  done (took 190.716752028 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863187537 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.862579766 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.863167202 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.861791109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.853066009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.884568574 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866169733 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.864793925 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.419348465 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.410516058 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.888155172 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.833114174 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.884777601 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.863633309 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.864106858 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.863876165 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.566400806 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.884951945 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.864965009 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.879631042 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.864300245 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.75312116 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.886400954 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.774519232 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.525796846 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.896311928 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.864402145 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.880974455 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.875595465 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.863492799 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.878772006 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.863912084 seconds)
  done (took 219.872186774 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.863509177 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.864589731 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.881616023 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.86463942 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.864861746 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.866496512 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.866709321 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.882443832 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.892610515 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.870039265 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.864939014 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.865435852 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.865990648 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.865230714 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.865249112 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.866161734 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.865891136 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.882531369 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.865224929 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.86664023 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.868526185 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.865442579 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.865976204 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.867694588 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.880117178 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.8669192 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.865506055 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.865822792 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.865753753 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.865714437 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.867834396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.866626029 seconds)
  done (took 221.60628456 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.06884555 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.874246231 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.875081557 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.827984119 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.874219435 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.873252691 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.867614453 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.064017083 seconds)
  done (took 19.129784075 seconds)
done (took 653.123479052 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.787367965 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.528459739 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.047708891 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.895107566 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.416743081 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.894321745 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.893596656 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.008054486 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 3.243245006 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.996700304 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.902924042 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.891010185 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.027190309 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.891316272 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.090353613 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.963089781 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.602038875 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.697427838 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.146374256 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.198739825 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.091035161 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.174462997 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.009370736 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 3.297137643 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.025876458 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.203642831 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.354218145 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.598921646 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.893377275 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.143573578 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.107776816 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.580763179 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.906429767 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.907595509 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.96153809 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.944495528 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.580451008 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.904707341 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.053405558 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.964864692 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.217482136 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 3.065421911 seconds)
  done (took 110.913945526 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.864296335 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.863574469 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.863870266 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.863673599 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.864827025 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.865523431 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.863715441 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.863422897 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.864622748 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.864656552 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.863890735 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.866066792 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.863883442 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.864775492 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.863841652 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.864541139 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.86511267 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.86631148 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.864282578 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.864628699 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.864375997 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.864691504 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.865557178 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.86448216 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.8658561 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.865639101 seconds)
  done (took 50.287947269 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.876904353 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.071811911 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.197910548 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.882574286 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.877404411 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.880612932 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.93074919 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.879871086 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.879272995 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.880380705 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.004194828 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.880367194 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.89627881 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.202301986 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.880512695 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.878193967 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.879020912 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.878138623 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.080755368 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.886747682 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.932326789 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.878941909 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.931468655 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.88634918 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.879824862 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.878994473 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.882169889 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.38398048 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.879605515 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.005285069 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.387355802 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.928929839 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.346157074 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.207324154 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.388821039 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.87982111 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.880024242 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.010768389 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.880948858 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.879249104 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.931237579 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.880488077 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.206583449 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.42620848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.898650428 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.879590584 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.393141806 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.010348062 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.035541633 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.886527314 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.209239474 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.882304108 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.881388065 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.879818831 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.03654632 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.885746002 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.890346891 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.264493356 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.883641674 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.932001366 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.882292669 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.880423984 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.086124464 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.88084012 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.076543991 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.881214896 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.887839905 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.881440159 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.206298712 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.884120546 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.440985588 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.899416768 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.881495447 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.007276373 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.077454074 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.426779497 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.882904965 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.091155603 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.358122889 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.931441682 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.885014132 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.375325972 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.935746301 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.885399198 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.88412124 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.884183286 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.886175583 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.925091463 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.930992027 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.380891593 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.442836941 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.27990961 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.935442233 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.894759486 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.882051416 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.262066464 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.88278625 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.882506474 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.204101162 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.444832072 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.902272996 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.889575939 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.428520781 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.902700607 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.935513971 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.887678019 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.211412912 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.885226641 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.926479927 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.883662445 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.888773755 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.885687801 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.935828353 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.886420941 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.883197385 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.422064255 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.03334554 seconds)
  done (took 236.675215229 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.878920617 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.877041789 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.876364829 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.877649913 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.877466163 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.882352787 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.877083423 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.877456505 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.883450116 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.876375778 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.877861473 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.884028436 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.877642709 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.888066649 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.886896865 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.884251839 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.489204438 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.880853112 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.877754043 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.89409094 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.615337213 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.880254834 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.876772242 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.894896291 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.878051242 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.880679719 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.877308895 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.880156937 seconds)
  done (took 167.823929029 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.88473208 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.258907942 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.88673375 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.96229503 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.908316609 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.883423592 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.962432129 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.91660833 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.88803663 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.883054177 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.883450409 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.085558966 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.88729838 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.218792587 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.997819593 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.963351009 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.2207549 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.886921344 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.884404621 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.884719341 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.964206426 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.898417797 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.086230548 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.260913762 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.888853722 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.260530995 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.87489723 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.886983712 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.886052738 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.2629294 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.884162014 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.086917912 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.937253872 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.917500188 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.263585184 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.220437799 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.21965464 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.963897457 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.888702321 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.884694673 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.884001057 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.874903308 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.260558627 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.887940619 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.887647186 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.255589297 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.888164436 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.888585493 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.896030454 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.884819202 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.918108143 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.919963285 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.095641324 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.277311574 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.94031711 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.908756688 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.965959533 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.225341075 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.889702138 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.220838245 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.875911672 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.266198054 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.891018174 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.876071036 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.887620677 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.891899134 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.985997754 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.965410389 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.224958135 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.889669574 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.221838791 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.986084363 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.885986612 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.886436922 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.88904833 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.264541558 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.224164861 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.985287535 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.967095603 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.022644135 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.878497358 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.887614299 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.877684063 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.939591558 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.888209319 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.275511216 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.22630963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.890145534 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.890286771 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.889560531 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.889673252 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.00077712 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.275970322 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.943880467 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.217493852 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.096498823 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.100022011 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.892040273 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.920058702 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.89001371 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.09761483 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.894043618 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.918866583 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.268187924 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.096502525 seconds)
  done (took 211.907153348 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.064478081 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.71065887 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.949517381 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.977240849 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.322184221 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.393934149 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.856173219 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.93497596 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.95509008 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.979631921 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.372660976 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.982666256 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.020165978 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.936824877 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.452361633 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.92802259 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.953938543 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.976089317 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.973405976 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.752590232 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392019256 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.124432966 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.987296414 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.469318939 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.919547532 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.456881927 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.551800499 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.355560649 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.016391689 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.67482007 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.342343218 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.840420748 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.40653343 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.364171454 seconds)
  done (took 79.216820449 seconds)
done (took 858.629021468 seconds)
SAVING RESULT...
DONE!
