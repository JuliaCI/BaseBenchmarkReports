cset: moving following pidspec: 12936
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.315571414 seconds)
loading group "string"... done (took 0.481048432 seconds)
loading group "linalg"... done (took 7.754834459 seconds)
loading group "parallel"... done (took 0.170997124 seconds)
loading group "find"... done (took 1.181850101 seconds)
loading group "tuple"... done (took 2.121478412 seconds)
loading group "dates"... done (took 1.341232164 seconds)
loading group "micro"... done (took 0.248913231 seconds)
loading group "io"... done (took 0.67147795 seconds)
loading group "scalar"... done (took 41.244616975 seconds)
loading group "sparse"... done (took 12.746656789 seconds)
loading group "broadcast"... done (took 1.126438897 seconds)
loading group "union"... done (took 14.039969925 seconds)
loading group "simd"... done (took 4.826163152 seconds)
loading group "random"... done (took 9.68743238 seconds)
loading group "problem"... done (took 1.992174925 seconds)
loading group "array"... done (took 22.818132761 seconds)
loading group "misc"... done (took 1.446788035 seconds)
loading group "sort"... done (took 3.63851419 seconds)
loading group "collection"... done (took 19.639170454 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.522459074 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144820816 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.137416205 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.162344645 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.232918205 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158149046 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.160091275 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100431899 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.271588584 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.186230283 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.156485625 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.531341628 seconds)
done (took 5.513634188 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.226557587 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.096086307 seconds)
    (2/2) benchmarking "String"...
    done (took 0.106997732 seconds)
  done (took 0.880495044 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.078272702 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147373902 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.095166848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.079510963 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.095291076 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.096267911 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.081180212 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.093707986 seconds)
  done (took 1.37003817 seconds)
done (took 3.239780843 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746075522 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.293194418 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.210706761 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.503514432 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.179394687 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.214779707 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.678772143 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.355357568 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.266168544 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100592366 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14911693 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.389567237 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.136565578 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.680222996 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.090663974 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127659653 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179228313 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.459164507 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084150325 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110683169 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117397679 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.142631873 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.128984358 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.091796872 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.186352536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.085327782 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.199020623 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108950823 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082374943 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.287453307 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202048574 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690034963 seconds)
  done (took 10.994717473 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.116907103 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.138859593 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098268194 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139604398 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.138164143 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100696538 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084959817 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.098680949 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.123444159 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.178447171 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.132538068 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.125924827 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09706553 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.099561912 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.104836542 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24645652 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.122832664 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.121069726 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.086779348 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.106304454 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122374162 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.114453168 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.111502085 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110309072 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166383715 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208734573 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.115104014 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.127110508 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.098337276 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.113436794 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.145657735 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.144997952 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096818459 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082188638 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.174295202 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.125858838 seconds)
  done (took 5.211685788 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.193830167 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121832378 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174009653 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.165579936 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.158915692 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.151192421 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.164118351 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119222459 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.249807284 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.120718986 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.181727596 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146089542 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.115999319 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083103563 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.102224254 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080767542 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.658226546 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.165175012 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.118525319 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.119982896 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106224435 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087572012 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.367061191 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.104682506 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096456045 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084628375 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08691343 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.164767066 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082238577 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.204094068 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102268525 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.102867576 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.13379437 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.193144422 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127539555 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.079463781 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.139605127 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.095188229 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.081159508 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.181934312 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.106057914 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.080208587 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.12671603 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135127674 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.138889128 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.098126635 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.085227265 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.21050222 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.09864541 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.115494834 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.974423356 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182810061 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.094296586 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09710744 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.333455546 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.098477895 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099465054 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.077748723 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.282322924 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.134121109 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.083101142 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097501629 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080864418 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.100348335 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.385733822 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081126321 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.75599835 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084893074 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106710853 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.08368408 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097919405 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10401086 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088582927 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.115831285 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.079168768 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.098481631 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.082368255 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.098917283 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.094597182 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.084857569 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094748804 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.092943983 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.103761722 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097595322 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.150319477 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.081212733 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.117205784 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127560764 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.085028989 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.09704561 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134165856 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100640992 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083182346 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.13736065 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.081865924 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110908169 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.100538903 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.144068157 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082899256 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.189941211 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096066957 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125896462 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100125217 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115541824 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109450502 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100530303 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085288511 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.097480747 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.079310285 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.166366462 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081767236 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.098304315 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099524638 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095656345 seconds)
  done (took 22.88714662 seconds)
done (took 39.772412472 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.348576136 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.105138335 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.104291499 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104989026 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102710726 seconds)
  done (took 1.516102415 seconds)
done (took 2.243729557 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.284124512 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.17683164 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097140761 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.169625848 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094570664 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.177925258 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162314027 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112919633 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.185055411 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094643918 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164380951 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078688211 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095173842 seconds)
  done (took 2.642570301 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096225082 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117014914 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08340833 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113587813 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.077469932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112632631 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.11159864 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.102259831 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112718592 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086818757 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09547318 seconds)
  done (took 1.832567768 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095423515 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115161919 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08371187 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112620305 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078775535 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.11166288 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09410944 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118027026 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112357892 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.086566328 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.09487304 seconds)
  done (took 1.824242259 seconds)
done (took 7.015659363 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.095961124 seconds)
  done (took 0.814117915 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.029636421 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 12.116240918 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.117418351 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.157349777 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.308974095 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.202302887 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.556622602 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.12959942 seconds)
  done (took 15.555890771 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.151020476 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.085156793 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.106612126 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084273855 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.10552736 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.100979277 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.08696587 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101935673 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.086831755 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.104240932 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.102247752 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083431412 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.101186003 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.087715017 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102529376 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101183369 seconds)
  done (took 2.376900877 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120923119 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.119882415 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.109082307 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110351203 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106365998 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.088911872 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.108057074 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106324547 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087350414 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.106178006 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108672754 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.092452458 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.105867771 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.09775655 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.090522519 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.110282851 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.104176731 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091009599 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.10994223 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108468124 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.092911788 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.097262145 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105487436 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092515989 seconds)
  done (took 3.298311873 seconds)
done (took 22.768553775 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.164574844 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.111342903 seconds)
  done (took 1.006545115 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.103502166 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.121022092 seconds)
  done (took 0.961645293 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.109520894 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096606767 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137676942 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.116156455 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081718955 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.098017868 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.133103259 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.099043148 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.081271073 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.098929174 seconds)
  done (took 1.790742263 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.088754911 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116896876 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107890656 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.104157739 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110578538 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.103547871 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.097605917 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104598621 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.119497771 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083308014 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.108507908 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.118424673 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108154299 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102397318 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113776785 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.106212649 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.093162909 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.105733066 seconds)
  done (took 2.630729113 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.081096278 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102113371 seconds)
  done (took 0.924287092 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.085901412 seconds)
    (2/7) benchmarking "second"...
    done (took 0.098802274 seconds)
    (3/7) benchmarking "month"...
    done (took 0.085780486 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101443094 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.099323498 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.081765671 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.099471624 seconds)
  done (took 1.390814723 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.48033888 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.13920646 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.259444443 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.086336991 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123573719 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.309289527 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098391551 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104396317 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.086809291 seconds)
  done (took 2.481985465 seconds)
done (took 11.924840857 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094995438 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.119144693 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.117843048 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.494688669 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123690876 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.0814026 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.163371713 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.255339646 seconds)
done (took 2.197229638 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153252703 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.32957252 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.117644055 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.067322786 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.096759136 seconds)
  done (took 1.355944609 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081227482 seconds)
    (2/2) benchmarking "read"...
    done (took 0.101766106 seconds)
  done (took 0.92517685 seconds)
done (took 3.182284756 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081850898 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.098223616 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.079113994 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.098495555 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.078430854 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097203539 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.130400495 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08153547 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100473212 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.080827983 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.099743108 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081940704 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.095858862 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079502395 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098042675 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.079448699 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.096833365 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079608869 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.098290049 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.082614936 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.09605622 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081483444 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095173195 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079650497 seconds)
  done (took 2.946075424 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.109893009 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099841672 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.105714599 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089488998 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103766505 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.103184069 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.087624702 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.099263982 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088163937 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100272627 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102468655 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085658329 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100374562 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.102026314 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083712861 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.103140287 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088221161 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099094694 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10149944 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.086759098 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.105102996 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082687432 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.102823982 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104350066 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085151721 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101618128 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.101509964 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082525982 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103855879 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086602008 seconds)
  done (took 3.643737066 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.08618717 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.09638184 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079848876 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103398548 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078672842 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.102064281 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.07956679 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097113612 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.080807245 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096393505 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.080846082 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096783845 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.096060974 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.080264014 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.09785518 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.081837997 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.110290448 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.080176931 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.097080244 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.08008054 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100046996 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080628712 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.098701643 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080012677 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096325449 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078236546 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096470228 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096272976 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.08039146 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.097536289 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.082748672 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.101148076 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080089964 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103611284 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.083878498 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096953658 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.083961619 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.096832973 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.080322816 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.095897363 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079512924 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096930909 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.080261039 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102825082 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.100881097 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.081041715 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.097382892 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.080481852 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.098490091 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.082635167 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.095834653 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.079823231 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.098593276 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.080949991 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100091957 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096434106 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080054012 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096284606 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.081148411 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.096980532 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.078404859 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.09687717 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.081451886 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.098248859 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.09544212 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103316786 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.079684977 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.098408363 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100941265 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080896362 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.099361499 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.09414226 seconds)
  done (took 7.276360734 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084336159 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107992534 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.081657872 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.099657664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.078559971 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097782748 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100994041 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080567346 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099446138 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087623897 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097707953 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.098579847 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082203652 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109793537 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080096861 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.099006631 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087399212 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.09447935 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.097925856 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083421981 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.098299359 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084180451 seconds)
  done (took 2.788291067 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223573265 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10646397 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144172649 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123437023 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099269352 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.1135966 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.104466874 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088860299 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104048086 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.102483956 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084264321 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104302377 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090051482 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101444398 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.103008436 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087071612 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10422768 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.105118043 seconds)
  done (took 2.746446921 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.095453038 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.100785049 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.122842228 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082924189 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.101735387 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.085900216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.106099199 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.121960688 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085566139 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.100899743 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.110051029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085743253 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.103519915 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083673875 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102573355 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083617525 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102194794 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100435588 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092133759 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10613935 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.10673561 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093839999 seconds)
  done (took 2.930587477 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099446797 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102272692 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.119973505 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085808473 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096979347 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.081351271 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106869325 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.082241152 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108981568 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104100602 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082939965 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.098919296 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089568875 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100151289 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.106964693 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083064692 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.1021141 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083528584 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102190896 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096947436 seconds)
  done (took 2.694783821 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108451805 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101536248 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102622226 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.095072694 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102046164 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101715512 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.094824819 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.10160571 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101536393 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111978601 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.102227875 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102906541 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094984283 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107972349 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101830114 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095203122 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.220812804 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111402644 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102302854 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084664079 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12806778 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102552999 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.094679839 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101842986 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.1023511 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.08477845 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103027735 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.108769391 seconds)
  done (took 3.730529511 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082979144 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.100971461 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080646933 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.099099013 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.080860468 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.098398723 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.08005668 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.097783016 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084031319 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.098684417 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083018418 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.100730952 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083683481 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100049029 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083021024 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.09963154 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.085742516 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097716835 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080514156 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096950858 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.082966247 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099658005 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.101508123 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.079648237 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097965266 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.082661818 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097559612 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.080513213 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.09992529 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.08062956 seconds)
  done (took 3.478746306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093575533 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107965675 seconds)
  done (took 0.966972192 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.080732661 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.11767395 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.080013172 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104540527 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106335892 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083101863 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109829691 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087324318 seconds)
  done (took 1.533686724 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.10090805 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115856002 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085034025 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114191804 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.115293939 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.099701246 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.161589081 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.1019991 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.089111447 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099047901 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.11851932 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082429599 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.10682451 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083587382 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106957199 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090460087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.099904111 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107534218 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.08654887 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099740342 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085193582 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112015472 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103512338 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.081043001 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.103134836 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.0929958 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.109553673 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102928985 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086296571 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.11033744 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089111745 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094862344 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.083530636 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102976612 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.098890994 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097678199 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114120143 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.086609059 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109824434 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103348887 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.112228591 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.09667465 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.107178494 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091701586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.111100727 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084893192 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.102689375 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.07916415 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098600058 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.103642384 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.079290192 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100964011 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.078532368 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109210535 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.087679635 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114871054 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100741735 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084629425 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104416886 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.086416988 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.108201149 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.085652306 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102680616 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.10103683 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090692857 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105433488 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090811674 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096027776 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078154214 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.098455011 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109304132 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106664914 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.109650616 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.103097349 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.085708131 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099454074 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.087706082 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103400722 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090979619 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.111232527 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103512465 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109263234 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109336767 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.10100484 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.086374557 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110926519 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083037647 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.103759786 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.09893755 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098125311 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.100334463 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082508768 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099166172 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093031794 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104524932 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.102463046 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081507681 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109270521 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.077146282 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102696236 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.084652043 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.102622459 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.11113164 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.090146699 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108215445 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.109502566 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.094566499 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102032172 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086811785 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.097908428 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085763077 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104100159 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.108437938 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.077788856 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105318272 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.085808783 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102922754 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.091295192 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099979845 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101977297 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091518448 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.108411945 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.082520311 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098843732 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.087450845 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.102459041 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.106693343 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091021396 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100380452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.079068388 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097460464 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088392586 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.10098846 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.106369394 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090858328 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104806466 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.078515259 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.100262527 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.106797785 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.092490858 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101831118 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085066963 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106065743 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085922529 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101880847 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.106454235 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086398787 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101043972 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.088494416 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.104185337 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080269708 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106430504 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.10521985 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.083264545 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.106866524 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.088931129 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.104920669 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.103927642 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.082974794 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108650711 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.085566192 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.102091304 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083989285 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100965804 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.111566213 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086070229 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.098380237 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.082049669 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110522637 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.082130379 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101811485 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.101129088 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.086297844 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.103500808 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.083482151 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101958934 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.085836512 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132954732 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.109056861 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086169761 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108244357 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.111278708 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084617105 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.104509446 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.084502373 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104149503 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.085557822 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.110095753 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.107844388 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.090148652 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104207343 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.080129944 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.108256651 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.110100027 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.083421393 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.100386189 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08296092 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106142355 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091081807 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.106928782 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.103873848 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082224953 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.10323861 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.08920811 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104644705 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.084535972 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101903026 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.106964281 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.083841887 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.11039542 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.103130599 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094025926 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.10586368 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.079254394 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107517473 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.082743777 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108947037 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.097653414 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082221343 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.101335695 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.086473129 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.101489904 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.086514499 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096726561 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.091914104 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109646817 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.102242368 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083937148 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.103512821 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093053506 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.103852992 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088172593 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105653198 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.107623393 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097847389 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102224996 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.0867793 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.111246516 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.10278273 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.078524714 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.10860877 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083628303 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.101749945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082233384 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100585599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105367231 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094629461 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.106954215 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077997894 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.105319078 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.099972723 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.082428332 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.098380083 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091734032 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.106381094 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.08631575 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111842216 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.103734775 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.085562334 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.106103819 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.08373576 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.103770741 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.085826129 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.106107082 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.104312904 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.087187356 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.10208657 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.087092574 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10250578 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.082576726 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.104528956 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.103404116 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.084447011 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108343913 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.087172154 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103944518 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.086522141 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.103917281 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103272555 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.085245329 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.102406025 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.08830201 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102781489 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.084425674 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105436966 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.079715124 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110254199 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.103050191 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.092602548 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.102955143 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.081444138 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.109030635 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087493548 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108774381 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.103416752 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.086138121 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104677097 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.084394411 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105128017 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111333146 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.082309973 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.112181768 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090731694 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103132687 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.105265159 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083977848 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.104750363 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.083577949 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.104899096 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.086238081 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.104120209 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.084475727 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108427434 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.106094598 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.085097635 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.105280477 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.086859062 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.103009291 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.086262288 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.096605208 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083775945 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102787789 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.103664152 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091491842 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.104071623 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.087862934 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101570983 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104686187 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084151683 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.100311794 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093150338 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113702231 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.105785693 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.09299683 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.10211638 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.087375553 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.112824788 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.097178487 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.084093016 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.101329981 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082470801 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.111956684 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.087175312 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.112112564 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085786989 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.102265342 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100541644 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086428404 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.102390083 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079612711 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.101734665 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088090443 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.105736002 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084045953 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.103776023 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.115096875 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.086280643 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110999088 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.084926314 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.105608801 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086114074 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.100186828 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.083031419 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.101949412 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.10611137 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086133808 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.100921462 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.082414474 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.102916577 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.085753515 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.105422981 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.084063878 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.104453786 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110241151 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084907572 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.105911149 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.089621909 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098085089 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.106710557 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.085302154 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.103089149 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.083795416 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.106707562 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088236578 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106000283 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111198388 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.085002077 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104398855 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084738095 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.101185955 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084644351 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103301235 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.104112859 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.084778296 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.105489497 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093344533 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101736575 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.086982866 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.103735502 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.085177982 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108894046 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.104416384 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.088009035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111815325 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.087938335 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105576603 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.110284016 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089987095 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106804943 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087358374 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105160953 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.109567537 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084286586 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.113491889 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.085333582 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104947538 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.086909387 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.101074559 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10338973 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.08473215 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.103124369 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.090492641 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104964655 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084661042 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.10315218 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.084392694 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106308198 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.108065139 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092617978 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106026736 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088495716 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.099035351 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.081671857 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105871378 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.101222406 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.087681814 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.106749616 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091056926 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.106822137 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084988447 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.103366048 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.111577666 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092086048 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.109364032 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082621915 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.108594269 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105062778 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.087448886 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.104817474 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.085819854 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.105235105 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.091570369 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.106616058 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103504017 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094332739 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.107817652 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087186786 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.10589726 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.086145474 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.103964538 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.100079529 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.08715399 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.105821676 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.092042765 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.106850901 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085283806 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.11372592 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.102911311 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085182877 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108887258 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085729693 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.112232634 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.081185358 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.105447171 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106024362 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086319189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099677905 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.08535924 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.101635205 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.087439887 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.104326691 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.079835033 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.114018896 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112405652 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.087749161 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103408164 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084592191 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.100723398 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.080207668 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104235954 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106222676 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.08694371 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.113656441 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.084206506 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.103440568 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.080776912 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104715889 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107328733 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.089197007 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.101880865 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.08089692 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.10243061 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.087131362 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.111454306 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084165353 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104837375 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106949155 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.08805259 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102277102 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.090771446 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100824607 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.107980227 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096527469 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.105475305 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086547674 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110769292 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112785418 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.086464448 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.100171249 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.087873177 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106228671 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.086076535 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105917626 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.105661568 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.100699853 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108426226 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.084492414 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.104121908 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.088395945 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.103736908 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.111605454 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.087787553 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104968796 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.090134022 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106440375 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114074189 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.088774863 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.110403599 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.087733555 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107090357 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.103857037 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086490247 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.10242905 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.083945815 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.106025239 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086478585 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.110865269 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.112892391 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085041694 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113728633 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093403292 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109676519 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10082586 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.084887163 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.103557765 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081556231 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.106226875 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.083694605 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.102869358 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.083669683 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.103582726 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.085776543 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11100713 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.106987288 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.087338158 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.104482855 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080123638 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105718478 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.088481057 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.10615818 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.082194168 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.106589261 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.106396159 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.091719737 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.112122817 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085886599 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.107247518 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086701303 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.105380141 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.100157551 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.092826343 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.10403216 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089413837 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.104548711 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08697443 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.106829012 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109298544 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.093253769 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1069457 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.088498856 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.117769337 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.108543923 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.08468775 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.102069705 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092099363 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.103175352 seconds)
  done (took 58.961808251 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.151689466 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094218389 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10035614 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.081686241 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.119606322 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102452932 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081662853 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101968783 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.082268665 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.107811634 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081141143 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101178761 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.11508992 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128583843 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.098401257 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110514089 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100206797 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082904745 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.100373673 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082899158 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115442666 seconds)
  done (took 2.955399786 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.106880882 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119853165 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116705751 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.122537797 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091475413 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.118010026 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116767863 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118336971 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102114859 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112734421 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.121121825 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.117932922 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.093093008 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112464887 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113418941 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.095424009 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120448486 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110227186 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.118223767 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097575103 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.115591943 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.116949456 seconds)
  done (took 3.272802281 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099560295 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10383629 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090888584 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.100569065 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.085341173 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099896287 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09018218 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.103336868 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.108638161 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.084270289 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.10371586 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.084404614 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.110247961 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080401835 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.105435864 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.083270582 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.157196196 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.110047664 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.105878132 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088404754 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101175174 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.086990652 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.100316891 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.081559164 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.104355598 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.122169398 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.086507157 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.103295541 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085721657 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.103269578 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087311248 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.102850813 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088259912 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.105544353 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.08471055 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.104115475 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085501193 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106407817 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.100659603 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.084008424 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.105464189 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081714632 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.105570786 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.08687323 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10442888 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.084348719 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.106609518 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.085984141 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.100303992 seconds)
  done (took 5.598648888 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107544738 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.164257864 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.088211164 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.14584994 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.123948976 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.116646201 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.090793345 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124752839 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.104801102 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.085524024 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12447409 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123047019 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105288857 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092350688 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110155256 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106597488 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.089059578 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.105091627 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.110803803 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086592583 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.110860835 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.112548778 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.103312316 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.12081077 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.11086854 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.086024038 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105773174 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.111620326 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.120425234 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.092159848 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112002826 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.113420293 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104553408 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107711171 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106434951 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089443159 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.125119427 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.106366702 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090171504 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103879626 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.108508295 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091983033 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.112843312 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125150742 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.086611666 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110904527 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106553733 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083759898 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.120579028 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108421601 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.096101935 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.122595187 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.110979712 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.106371479 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.092868097 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122641471 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.106245301 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.085948398 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.110550935 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.119493289 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084842168 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.111058424 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.121385585 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.089058174 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114888966 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.122623452 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.111505497 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.092909806 seconds)
  done (took 8.299232914 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.096475037 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.113846976 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123564567 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123360128 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093342345 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.113607796 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.113912423 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.113449892 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092783241 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.119553712 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.114040666 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.141218222 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.088743417 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117911273 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.114901745 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094340756 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114324788 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113451352 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113387216 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093859045 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114123812 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.124588234 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.113406429 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.10381397 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.145323997 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.109074977 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.113426442 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.095108242 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.123801933 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.113597581 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.127540864 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.11307607 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.095079782 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.124500601 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.128877118 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.113904622 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.085569486 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.114526896 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.114374495 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093426124 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.108414912 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.124771462 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.112025883 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.088708999 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.114009497 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.1143208 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10499632 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.126764784 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.117928011 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.120626438 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11448806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.104005465 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.114513147 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.114586603 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.123248615 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.151083365 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123154906 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104661637 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.114136137 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.124904986 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.124283935 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.133250153 seconds)
  done (took 7.888768131 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.116906212 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.121363298 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.127507614 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.102642341 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.085290822 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.114618431 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.085307113 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104892955 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.119334939 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.099527881 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123615577 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113365614 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.117538807 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103380366 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.114872111 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.117861888 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.114407143 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093626966 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120835062 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.115097292 seconds)
  done (took 3.04576125 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.095949161 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.127347337 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087281864 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.114553247 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.11112485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093264517 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.109775642 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.110068971 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.088040397 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109996252 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.118551652 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.098727297 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107257311 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.113913489 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.099527972 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.114020305 seconds)
  done (took 2.531244407 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.099007403 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119945929 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.126380262 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086454116 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.106666496 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.103521022 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086222305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.102556795 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.083877021 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122775577 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.108061842 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.090251154 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.107425878 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.08555805 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.103976245 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.090181119 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.103396357 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.105421485 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.087914302 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.127694881 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.118221852 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.085980305 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108421569 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089530675 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.107530717 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.112559046 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.08750268 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.105364601 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.084731683 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.107798648 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.106690457 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.095817419 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.103752486 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084987175 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.105621859 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.104546044 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.086963294 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107898255 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.090231605 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.107138302 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085974723 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.107526974 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.106895923 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.089561969 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.103584526 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086797923 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.103372622 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.113175969 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.0854757 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.107150593 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.086810265 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.111421783 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107634347 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099305627 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.1113952 seconds)
  done (took 6.388222161 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102121179 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.111749263 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082411014 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105951378 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.090437464 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.110678538 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.111547782 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090785981 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.108499276 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086283112 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.110391376 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.111423439 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088931426 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.111110127 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.090314497 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.111456187 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.081830404 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.109199247 seconds)
  done (took 2.652792704 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.092988643 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.107518896 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095623311 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.108595541 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.086306738 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.110728786 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.103386809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.086070989 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105848606 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.087927378 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106863899 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.090063919 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.106575513 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.089508773 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107040666 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.107319606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.089504937 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.106129465 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.087767842 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.103449217 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.089856903 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.107528521 seconds)
  done (took 3.015535104 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.123864902 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.127248842 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.09484543 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.237920992 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.106780503 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.134896676 seconds)
  done (took 1.665423074 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114023696 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124816027 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109053198 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10981513 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117391876 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109470415 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09106281 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109603477 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120477332 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125147133 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090507752 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12075805 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121062034 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120746344 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097887093 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116987411 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110598069 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089656901 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107983293 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131827781 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110665339 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100904894 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111100653 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109330826 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090132795 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121776613 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12030986 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12577813 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089420402 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120718476 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116372607 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109452282 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101311164 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124491179 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111612949 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121503974 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090165505 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131498368 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11673778 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120590711 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090558826 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117724169 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122009591 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116055453 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.100272791 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110949566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.116290633 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090632916 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110870823 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.139154497 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117620685 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119913551 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09773858 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121971848 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120993224 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.138099753 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.12684484 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120763793 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097350018 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125814495 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121514352 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11780146 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121015782 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12539985 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09762066 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120583439 seconds)
  done (took 8.331986973 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105210309 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.129009914 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110504292 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127032525 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.099987218 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.11128214 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110442003 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090695657 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110848655 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109084684 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.156456604 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090658464 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121368399 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120217198 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110662925 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.090917308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111076836 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121117061 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089828683 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.140355987 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110941722 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.121533704 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120752675 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120717389 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.105309561 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117914729 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110561066 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08995316 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110954407 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110597425 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116688653 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090379588 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121197418 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.109680334 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099873723 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111437614 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111114303 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116737531 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091254611 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.11785246 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121977934 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132119556 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.090798688 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.111534096 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.127367311 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109457382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091036619 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109907425 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.090371145 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.110472987 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.126823996 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125818097 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.126341155 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100873971 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111206472 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111578661 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090015521 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.111235557 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111227641 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.118136393 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099611571 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.112428933 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.141450728 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11128891 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.090217328 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121275656 seconds)
  done (took 8.215439865 seconds)
done (took 158.301214457 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.103173484 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.1423192 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100144281 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.170868819 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.108639136 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.122462061 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.140293048 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.102291627 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109376007 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087914983 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.109646678 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.111555125 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.15320194 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.107845798 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.088158472 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109977251 seconds)
  done (took 2.714323092 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.204124 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.272648411 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.104374598 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107843492 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.113060337 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087930635 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.107318808 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096096232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.109148723 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.087074096 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.108851819 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.088351899 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.108304123 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.088368131 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.11126135 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.108224144 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.08755421 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.10771739 seconds)
  done (took 2.95117572 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.116608251 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.154888589 seconds)
  done (took 1.12449025 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.122303747 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.185599429 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30257888 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.156542023 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122210322 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.130556615 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157539397 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.133923012 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.214256186 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.127350896 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.125737148 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.120283495 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.123471591 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.118984927 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.117844085 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099669952 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.146619386 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.11535115 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097337984 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119660143 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.140355261 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.087213667 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11832019 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.116266061 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.197239238 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.102042558 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.108506832 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086472469 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120471824 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.117824222 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.094220004 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.129153062 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.122190179 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.175421489 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.125957507 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.162573493 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.121630481 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.114098176 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.096816451 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113681594 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121692631 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.100573852 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.12835032 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120277733 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.089406661 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120951486 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087031701 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108557461 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.116094459 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.101292415 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.116933646 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.114809771 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.162064478 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.121175859 seconds)
  done (took 7.752953628 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.830666327 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.155878535 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.114060722 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.909963638 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.141525072 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.127157493 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.800796631 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.137290414 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.236495037 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.803131279 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133313669 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.100194293 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.238925701 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.262589633 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.937843955 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.292844894 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.705809315 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.104691022 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.142166832 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.158268265 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118855936 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.137702482 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109715306 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.432230626 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.118527763 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112738663 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096215473 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.123022568 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.164338507 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.114041163 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.093675583 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.203525388 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.251978242 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.210008137 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094613173 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.113705164 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111928969 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.178972525 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.273804952 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.220389725 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180617936 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.08842071 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110796824 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.10046046 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.13225493 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.109588716 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168908765 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.177807498 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.199256885 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.092518905 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12162985 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.120388071 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099901736 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.191995754 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.101318151 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.316142722 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.325161386 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.114235777 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119707166 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106176113 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.27035427 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127026336 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.230083843 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.136469137 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196936189 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112638867 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806706903 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.173969707 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090140083 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120638763 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119478507 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095274892 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.12179475 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.170378731 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.397365507 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12537048 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.094160351 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.11374808 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235974133 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.091878072 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.111824967 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166826665 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117063897 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.098701304 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124983652 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122865372 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.174388468 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.230981962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.124658921 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120649948 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094925859 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.12502367 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.116725428 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.216140661 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.227556485 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.167739185 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.234848317 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.101004509 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.189434355 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.173426827 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121185425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.177096917 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.118673475 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105566993 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124111587 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.224159605 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.150468631 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.125211217 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094361643 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.119539182 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.151434964 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.115329257 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.098022986 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195354065 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.470064072 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.173029317 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.111355171 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.095063686 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121057711 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16421081 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.119499713 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263264192 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.098580491 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.197465337 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.0965688 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.111708034 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.12020412 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.170739053 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.123245686 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.098292222 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123814083 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121256963 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.24181238 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.222784362 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.124064313 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.22390329 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.185840883 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121009975 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17558043 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121053841 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.171104614 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121942553 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.121902659 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094727213 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.801733629 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.125296566 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.097869502 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.118145381 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.190981433 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.113295841 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104328806 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.114117673 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.08673982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.803052016 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.116497999 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.101524531 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.12673331 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120427906 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117575944 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097957326 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116886317 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.168564839 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.238494513 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123075303 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097685617 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.114760057 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.163872702 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117651388 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.091183243 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.115019578 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.090830502 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122083005 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.116378747 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.104600921 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.196880358 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.167894033 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227731818 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.567548342 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.09113801 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.114468857 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.237402563 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091315949 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.296628987 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119880494 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232996027 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.170108314 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122496594 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.32029138 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.170622649 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.192499435 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.114715967 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.18060685 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.087651302 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.120397507 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.168799438 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.11428609 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118728642 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.168821203 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.125614758 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.102127552 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.982869295 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113233658 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.22931357 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.109412204 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.176358785 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117565326 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.10106601 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.295174027 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.113100745 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.107111793 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.192157122 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093247134 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.115812046 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.703702736 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.114148698 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121388664 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097887786 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.229526966 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.188412867 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.099946873 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.120632171 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122297633 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.168088628 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210808392 seconds)
  done (took 44.517209716 seconds)
done (took 59.911949544 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.3028105 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.217850782 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.263122711 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.173427384 seconds)
  done (took 1.913574075 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.180630569 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.151062569 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.125150061 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109976984 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.15503596 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.086246766 seconds)
  done (took 1.691349026 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.393447846 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.278785612 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.244534467 seconds)
  done (took 1.807208074 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.253060881 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.272737183 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.331208652 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.42019531 seconds)
  done (took 2.258559488 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.28423087 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.147559309 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139879966 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.170645635 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.206455571 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.299296569 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.169144901 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.249406213 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.161762863 seconds)
  done (took 2.756172147 seconds)
done (took 11.315244388 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.248569824 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.236299822 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.177993102 seconds)
    (4/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.229737558 seconds)
    (5/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.161847799 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.124145983 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.2244515 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.206818509 seconds)
    (9/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.119680162 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.129588919 seconds)
    (11/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.093059782 seconds)
    (12/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.140380889 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.1263052 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.160912854 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.152478262 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.118174543 seconds)
    (17/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.096410597 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.215816166 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.197081833 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.230476635 seconds)
    (21/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.180380776 seconds)
    (22/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.183412055 seconds)
    (23/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091281793 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.111155178 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.188841217 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.130419572 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.231520466 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.155354624 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.126556612 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 0.231008654 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.114164852 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.158445866 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.091337165 seconds)
    (34/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.104863226 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.121593396 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.171513071 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.078225721 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138989915 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.212100463 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.089431579 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.111110274 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.156120664 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114509379 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.140483446 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.195435459 seconds)
    (46/286) benchmarking ("sort", Int8, false)...
    done (took 0.209331671 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.126752728 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.1197916 seconds)
    (49/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.140660896 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111195387 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.111920693 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.190984661 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.218782114 seconds)
    (54/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.164855051 seconds)
    (55/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.17589954 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.113569322 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.145382537 seconds)
    (58/286) benchmarking ("sort", Float32, true)...
    done (took 0.239526999 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.129029563 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134835323 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.193541904 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.203715954 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.135412906 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.134773446 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.117055931 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.127719836 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.12198311 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.162788202 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.219673327 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13965284 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.189095693 seconds)
    (72/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.070265928 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.175852767 seconds)
    (74/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.124514755 seconds)
    (75/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101532077 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.070026883 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.128198558 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.219897478 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 0.08891706 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.091950658 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.068026107 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.086970663 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129228543 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.201966152 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.124939917 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.069054434 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.125265042 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.068402062 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09229495 seconds)
    (90/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.124871049 seconds)
    (91/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.157750648 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.084144534 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.138688569 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.188161448 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.088690726 seconds)
    (96/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.116575861 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.0988481 seconds)
    (98/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.101112824 seconds)
    (99/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.093190157 seconds)
    (100/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.173712886 seconds)
    (101/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.134667282 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.111677434 seconds)
    (103/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.097233994 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112222142 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.119546165 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.125131577 seconds)
    (107/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.156847474 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.138638762 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.197352626 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.114847558 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.096447229 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.186684562 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.180405721 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.099223376 seconds)
    (115/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.155441907 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 0.189479821 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.11054707 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.098287916 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.112442498 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.095346176 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.136347562 seconds)
    (122/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.1413159 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.095706141 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119428303 seconds)
    (125/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.099938541 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.101792757 seconds)
    (127/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.135445788 seconds)
    (128/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12250177 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.120534376 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.18309499 seconds)
    (131/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.102847285 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.069801444 seconds)
    (133/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.078445884 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.112434539 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.119352797 seconds)
    (136/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.094601026 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 0.238770273 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.118291151 seconds)
    (139/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.099880212 seconds)
    (140/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.157862873 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.098866109 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.123638259 seconds)
    (143/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.069301852 seconds)
    (144/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.110585274 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.136984607 seconds)
    (146/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068557638 seconds)
    (147/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.096648892 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175948365 seconds)
    (149/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.102790402 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.088534573 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.1211115 seconds)
    (152/286) benchmarking ("sort", BigInt, true)...
    done (took 0.240172449 seconds)
    (153/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.148658515 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.092904092 seconds)
    (155/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.095268586 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.128167828 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.068062703 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.123906461 seconds)
    (159/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.090576171 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.095937841 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.089645315 seconds)
    (162/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.117432246 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089535016 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.114335306 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069490225 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.102094491 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.069008162 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.094608737 seconds)
    (169/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.18756851 seconds)
    (170/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090313523 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.100690259 seconds)
    (172/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.091428179 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.068854662 seconds)
    (174/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.165810039 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.103212715 seconds)
    (176/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.146672056 seconds)
    (177/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.115019385 seconds)
    (178/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.092524256 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 0.232383773 seconds)
    (180/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.101453954 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.111854509 seconds)
    (182/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.094935821 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.184509479 seconds)
    (184/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.091144341 seconds)
    (185/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.091256066 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.140315284 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068876615 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.121946909 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.089901718 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.111904037 seconds)
    (191/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.096472566 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.113113071 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068962692 seconds)
    (194/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118339256 seconds)
    (195/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.070001814 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.121988074 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.098032573 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.117295091 seconds)
    (199/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.085267403 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.067283423 seconds)
    (201/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.113017966 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.067943652 seconds)
    (203/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120142314 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.137564447 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.12030217 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.125807777 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.069930544 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.118638903 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.091429864 seconds)
    (210/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.125846681 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.124293174 seconds)
    (212/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107033856 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.111175896 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.069292204 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.067729664 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.337992942 seconds)
    (217/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.096987315 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091877762 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.068212959 seconds)
    (220/286) benchmarking ("sort", Float64, false)...
    done (took 0.180037174 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.088427339 seconds)
    (222/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.09147534 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.088109052 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113416209 seconds)
    (225/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.239054478 seconds)
    (226/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06862796 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.18907522 seconds)
    (228/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.07813312 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.112683167 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.088721233 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.091687597 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.095990059 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.155017784 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.068512941 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.11281866 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.097398543 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.119225024 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.095404188 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.1755585 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.119391267 seconds)
    (241/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.069142766 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.097769801 seconds)
    (243/286) benchmarking ("sort", BigInt, false)...
    done (took 0.247936933 seconds)
    (244/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.069427786 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.186943482 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.069264885 seconds)
    (247/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069841774 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.158926098 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.113206355 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089101675 seconds)
    (251/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.11215883 seconds)
    (252/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.068726944 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111854346 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.095197244 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119347178 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 0.228308587 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.069649606 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.11076337 seconds)
    (259/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.068907804 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.159459821 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.088304609 seconds)
    (262/286) benchmarking ("sort", Float32, false)...
    done (took 0.181352222 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086898333 seconds)
    (264/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.112933023 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.098369424 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.091693132 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.09768416 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.0917862 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.088450118 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.091969886 seconds)
    (271/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.068216158 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.094297055 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.107616437 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.088565144 seconds)
    (275/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091834925 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.095098703 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138457923 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068944802 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.112059552 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09486191 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.092050623 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.08891137 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.093227765 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.096651291 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.113247633 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.089639127 seconds)
  done (took 36.961192386 seconds)
done (took 37.853173691 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.103216169 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.154043285 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.098234634 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.142934729 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.125952976 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.093715161 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.120713742 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.124431884 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103133796 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.127981093 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.100660351 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.095174347 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.10031058 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.123189299 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.12269444 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.120748096 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.126019774 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094708224 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.122415471 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.111834782 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.097931253 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.111155563 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.091388739 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.09370461 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.100360568 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.119020594 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.098546541 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.121666576 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087981332 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.112245593 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.094747097 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.119911428 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.087245215 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.126596341 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.118778393 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.097316729 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.123059022 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098965476 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.115017471 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.087732408 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.120261799 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087469402 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.119337706 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.120311117 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.095478097 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.116967284 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.097869896 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.125441662 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.144240338 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093857912 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.120097404 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.100437534 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.122439948 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.095996628 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.116215903 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.097426466 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.118252515 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.143912999 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.099219836 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116517832 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.096694573 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.120397732 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.093951504 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.121963442 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120862624 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.100247057 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.122795037 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.094187824 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.123094296 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.093986099 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.112601762 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119693916 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092550563 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111088069 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.098324954 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.12262531 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.088095752 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118311071 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096526377 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117713912 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.088556373 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114812448 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.090253124 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.118602587 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.090463759 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094863013 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.092944754 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118674346 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.088129026 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.121743124 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.118320729 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.09599565 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.114282712 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.100493442 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.111564816 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095257207 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.11249568 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.089517728 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113910009 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.093370864 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.112259621 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091899734 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.121561977 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.090337459 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118574753 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.124845843 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.088853942 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.118369536 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.088846449 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.111514783 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.103894545 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.123206191 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.089295335 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117651703 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.087242108 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.121306019 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.111467829 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.088987805 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.111899167 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.089407511 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117655847 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.089856349 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114833922 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096872898 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.127140692 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089158429 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.116152343 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091929892 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112405468 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.094802649 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.112552918 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088705256 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.115198497 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078971829 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.11552186 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.088947122 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.120476111 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091743264 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.122265848 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.113539178 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.09931243 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.117861513 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095196977 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.117077863 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.088853432 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.100472446 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.094985881 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.114909791 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091881877 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.112679728 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.091205237 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.111771042 seconds)
done (took 17.294857954 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.089988367 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.187390932 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.157114588 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.148050817 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.109919663 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.114286403 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123543612 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.145714253 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092054292 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.145360054 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.137004477 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.110253363 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.153216473 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.088182484 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11346367 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.093116344 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.115196477 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.129676437 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.128784734 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.135586146 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.168233119 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.113414731 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.14924374 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.113731384 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.123121597 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.132765089 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.091250208 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.117081658 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093601438 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.138242126 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.109621001 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.11766032 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089178181 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136257188 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.130868149 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.09833623 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.113093298 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.096159336 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.11338164 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112590038 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.119777238 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.137121657 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.119813349 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.095168191 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.118151237 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.09241516 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.115120777 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.098984611 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.12530851 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.117751202 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.105022843 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158166084 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.117560729 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.123515314 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.088736025 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124595401 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.099116136 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.115940867 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.089921115 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.116445703 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.08889098 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.116999599 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128781062 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.144369591 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.093841378 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.124099325 seconds)
  done (took 8.79464713 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.107543538 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.143256718 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.132594297 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.108841745 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.113575591 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.091476688 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.115937274 seconds)
  done (took 1.770769064 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.090722292 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.140309116 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.117233484 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.142088035 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.138847775 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.116607252 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.125645563 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.091006077 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.136413327 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.116457072 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.116017109 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.157004099 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.116313422 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.098649757 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.143222975 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.09104684 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.143083019 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.114832951 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.09469685 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.14237404 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.094276271 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13765807 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.117352401 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.089893421 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.134329554 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.091384072 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.167913264 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.121244863 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.092694021 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.136749738 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089690447 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.153935484 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.133642658 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.102733976 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115564962 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.109378941 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.13416515 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.088935281 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.133019454 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.122989622 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.107981815 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119022152 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.091776611 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.115672191 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.095937202 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.129749586 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.12025286 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.092397703 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.118969737 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.115641174 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.115991617 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.108809895 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.116073761 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095103504 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.118319203 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.122370199 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.101780093 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.117232942 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115386373 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.116855643 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.110499112 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.135988336 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.133876782 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.111223557 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.11912232 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111079831 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.134229747 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118781582 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.093574676 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.11976266 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.110386055 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.114993842 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.09338832 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.129551766 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092497836 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.143656502 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.142950085 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.09325325 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.12760543 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.091183186 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.117457091 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.091261002 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.1426578 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120053907 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.092212208 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120252573 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094275243 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114273618 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.090440355 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119663072 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.08985587 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.117209278 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.096032982 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115945383 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.118020751 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.111872697 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.117400145 seconds)
  done (took 12.192241046 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.092280732 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.116839697 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.094376781 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.117860527 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092578876 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.118194793 seconds)
  done (took 1.601054744 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.119077602 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119841801 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.131462471 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.100611474 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.158677723 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.13582315 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.110647793 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126107886 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.136353096 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.105462452 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.135591391 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.110915544 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.142488159 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.12342712 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.109824733 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.123178512 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.135906052 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102918184 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.128995507 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123934947 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113602719 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.123895226 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099268145 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.137359754 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.119936824 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.098063583 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.129288781 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.129598253 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.105376578 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.125671682 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.12354593 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.097841799 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.123664411 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.100978622 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.135716374 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.124132984 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097151899 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.121610333 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127172647 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.096054667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.136115729 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.099488599 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.130193633 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.121523188 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.100767675 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.123851314 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.121164537 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.103481024 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.134671318 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.122062412 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.095862663 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.122005914 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.094720908 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.122892152 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.123414925 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.101190708 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.121920497 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.111274994 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123757343 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123936053 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.095712006 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120879029 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.125868102 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095741439 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.132627433 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096735755 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.124169439 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.1242227 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.099344811 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.12369472 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096531983 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.12097806 seconds)
  done (took 9.473672332 seconds)
done (took 34.784282152 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.697429228 seconds)
  done (took 1.6643207 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.850004391 seconds)
  done (took 1.819465969 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.705875011 seconds)
  done (took 18.705885546 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.50935537 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.600992482 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.999739253 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.174064654 seconds)
  done (took 3.253525655 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.938526214 seconds)
  done (took 1.927732957 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286597491 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.237261636 seconds)
  done (took 1.495639922 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.774148834 seconds)
  done (took 1.756669815 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.446018335 seconds)
  done (took 2.422359706 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33694913 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.18617463 seconds)
  done (took 1.514194481 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.562548749 seconds)
  done (took 1.543831582 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.120058444 seconds)
  done (took 11.106222593 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.272790404 seconds)
  done (took 1.26728091 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.307042785 seconds)
  done (took 1.29363336 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.607642235 seconds)
  done (took 4.592943231 seconds)
done (took 55.343330964 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.101197633 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.128659441 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.104661371 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.126810691 seconds)
  done (took 1.439843183 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.107297417 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.12313703 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106578291 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.122241397 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.132140648 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.099248974 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.125780404 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.103513871 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.123137402 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.123662422 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.09873433 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.121875805 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.101256788 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.125953999 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.094497608 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.126371719 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.127622934 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.098032787 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.128042138 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098472741 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.120635958 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.125910078 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.101750476 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.121337423 seconds)
  done (took 3.744515784 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.102028746 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.121223404 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.098949589 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.120084252 seconds)
  done (took 1.43338542 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.102300367 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.135025464 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.109779353 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.129892953 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.134564171 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.108978843 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.120731747 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.095197841 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.121691269 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101762305 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11764384 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.142210932 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107990078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.127885146 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.103182088 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.116220751 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118447173 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.108371923 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.126703015 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102351673 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.120767157 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.101770082 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.118517147 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.135249757 seconds)
  done (took 3.800202392 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.174825882 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.130050941 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.141223811 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.097040952 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.163413296 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.142622373 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08990996 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.143860319 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.089625769 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132510106 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.120082628 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135246729 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.130930085 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.08962583 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116434122 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.115210315 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.103543198 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.129016867 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.093608711 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.129659609 seconds)
  done (took 3.459527876 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.100146145 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.119724431 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090246358 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.118300199 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.102059892 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122861969 seconds)
  done (took 1.650196131 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.099100579 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.116339281 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.095395025 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.118497605 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.097541584 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.116232795 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.090616966 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.118010616 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091207804 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.115366298 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.09262549 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115341791 seconds)
  done (took 2.262675205 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.515494599 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12263552 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.121665587 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.091124864 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.127714626 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091145987 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133837648 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.094867807 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.144488135 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.090233736 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117614682 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11940587 seconds)
  done (took 2.767570101 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245159007 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126715718 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.288483848 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.395643495 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185851084 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.171395729 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.307718387 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168834375 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.237134842 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167226854 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230722209 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18090177 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157568885 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219285413 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.143421213 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.121834314 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223510676 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.311621864 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1542808 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222531085 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173844465 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.170741182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186593899 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156182721 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141700524 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.199587039 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.122961241 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105752984 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.217321645 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182941658 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191454972 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165026354 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164582881 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237667018 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295953059 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198207888 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.285190973 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137723921 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.145188952 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.169217645 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.274964217 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144882809 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.214493428 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165517478 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133279531 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.236472299 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161529646 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.2028942 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.149133318 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.118553931 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232177835 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199518667 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.246102416 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141963787 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.309047451 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154584041 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.17641221 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195299809 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255684643 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207422617 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.224054992 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.096749983 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.217411457 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201115303 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191530829 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.172206395 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.195766333 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148115767 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183235699 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.226179491 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193766074 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175427814 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.211584348 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113347935 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173309009 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176660214 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199649653 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238667403 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218070055 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.097862139 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1715565 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153801725 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135099105 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.199307919 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10073239 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.250788644 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147013248 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.167694916 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.214894768 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.163600478 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164758338 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190733686 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179076514 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152994668 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113700279 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128909842 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.157337036 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17541335 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143222306 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16146061 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153536886 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.133210185 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17378838 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.099301461 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216281052 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.093590242 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171562966 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214092847 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.102431862 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.170084568 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154607334 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154377897 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198318546 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202340942 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144364499 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138136756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.213320912 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21135778 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.119030172 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.181279068 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.237449846 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.146914233 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124945043 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233448522 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245749496 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118686035 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234269488 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151455365 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110955875 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.136170934 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18600442 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159972153 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.166161815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135603595 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.185126722 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232441708 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101470879 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140781763 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203175917 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136971596 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134302226 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149458363 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123432555 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140224821 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.146947152 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.149464105 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180714612 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182217123 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157917578 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170014305 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150852871 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244597921 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143021617 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.129359095 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.15275892 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.124050749 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.220021828 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202462204 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133112295 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231555135 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172796958 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202993067 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171894511 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138348035 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181774426 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133328803 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.095980272 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.223837149 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167802281 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.165010426 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.199718793 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225920625 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.195216128 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.187621898 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171029775 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17838629 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.169392844 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157079542 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.142013817 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164895028 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161811837 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.099003987 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144001766 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.138067912 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15369796 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145217549 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109863879 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227981079 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176759013 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.194621797 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.162992714 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15272453 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.18601279 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.132811434 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177509496 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.178583932 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149831916 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.22705247 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198334755 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19412163 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148670817 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232376696 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.096237634 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128528254 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.146099891 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.171084877 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110069317 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138938038 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165381444 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.186962362 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179610668 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203512482 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21245843 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19089853 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.223508583 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09812839 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.172237949 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180644382 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180723531 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.184670765 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144468545 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.153355899 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.180548996 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124497546 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244108846 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170943245 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.179909581 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232607582 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.153241098 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106336397 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152934838 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175235789 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157653348 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175944721 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149269865 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140772742 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158398508 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.105399223 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192185597 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184898088 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165081654 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.183191577 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.152673375 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19211089 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.131198675 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165995726 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.164452518 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166817848 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082981135 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199603135 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200248072 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146325937 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16410044 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186614216 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134338034 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.312524348 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204313036 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220195685 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.11315892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159729532 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164439852 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166115476 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168525647 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182035841 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162692341 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191030019 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161355443 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.139107787 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141074124 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151226442 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128691502 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.136653125 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150791016 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17894349 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.142217752 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185787485 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150669725 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162903542 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176482807 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.154057742 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147733711 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125729344 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249886229 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186608373 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222951286 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.125083697 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.206527422 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20690125 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100631074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135280824 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.136690626 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183663104 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13802476 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198820371 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.192886202 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232136899 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186487164 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175501793 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.14277655 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.122283118 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161347096 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170698542 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207968432 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.149463436 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.153787531 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20016565 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.140680897 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133674989 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141071879 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.321923871 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148031206 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19211242 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080507644 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.28379672 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127382315 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136214886 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165408856 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187344234 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.138353824 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.15620674 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169933739 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155151543 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16699691 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152409525 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.22188038 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216620699 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20385915 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214644986 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.107949318 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.162783279 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171267836 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219640971 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160600874 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.113044168 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188900985 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.226779203 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.198119273 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.14555383 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172372889 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171609766 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161566985 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192643706 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138703022 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235784896 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110022544 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224740021 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157644228 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.141594339 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17692619 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.191798435 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144408656 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185531299 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186004245 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138386418 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137746568 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165713037 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183256885 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152190789 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.101832777 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209713671 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.099144085 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227583031 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269735232 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108749517 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159099205 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150464328 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13737594 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158431026 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161990413 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113135539 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.168812777 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198289993 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.138810879 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18836513 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236365269 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174215486 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169545237 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.148877264 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.752331492 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.133332863 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197980968 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150886441 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18701871 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15227318 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177058995 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16250945 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170698837 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202120962 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161029773 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.236888975 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222619421 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.18535555 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106772318 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190251706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123156888 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.146470061 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15789927 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172126109 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162280662 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.14921226 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.183467428 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158615882 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136895675 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11416332 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.232723092 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.150768303 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18686479 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184221399 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141046694 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176381699 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19451371 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137410222 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.194870022 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216091135 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.11648964 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152975419 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.137951048 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154562382 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.268241772 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.099299322 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186285114 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218847968 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16373341 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172066795 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.151045262 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19811343 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161304194 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217986839 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.11810053 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160038144 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160920207 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14150517 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.134372159 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.157759018 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170862518 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.12403896 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.192442135 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141593911 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196593793 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.127353719 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148672122 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.294825679 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176930227 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.246737206 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.110276851 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139403272 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164849999 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150742406 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.181545413 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182609983 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.139220197 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136536843 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.109851704 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.158942381 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.115041309 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160660169 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194693971 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161945179 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236397567 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.110859018 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282819626 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14390829 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157573133 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.0900807 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.136042306 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153598204 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149114259 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151702333 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.196261342 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270396384 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.148831513 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.109230485 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153105748 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.129297058 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137990402 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139605411 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163860747 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211121555 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118097235 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110515611 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160219298 seconds)
  done (took 83.973849475 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.18126136 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.138046903 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.151131399 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.204433201 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179274982 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.295828877 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211686719 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.257601826 seconds)
  done (took 2.706833888 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.095600908 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.153939921 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159125538 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.135675145 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.094032059 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.122716258 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.370717362 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135701552 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118258645 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.123384527 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.173847775 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095618932 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.584907005 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.092547085 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.121714508 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109297369 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.094569049 seconds)
  done (took 3.863205818 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.266389156 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.482776374 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.050996711 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.199091473 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.180863779 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.122428398 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.698669911 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119743603 seconds)
  done (took 12.214000877 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.12600535 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.147249419 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137400035 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.166161227 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.151660547 seconds)
  done (took 1.827537666 seconds)
done (took 126.125779416 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.099110159 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.130874639 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099849392 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.132639029 seconds)
  done (took 1.545103371 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.098961409 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.071561947 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.105416171 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.076462446 seconds)
  done (took 1.445562073 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.195636705 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.171063492 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.394213171 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.072676928 seconds)
  done (took 1.591638455 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.117529208 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.135228765 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10653202 seconds)
  done (took 1.459244163 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.109169685 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.132304026 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.105165665 seconds)
  done (took 1.445769316 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.109102333 seconds)
  done (took 1.207297314 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.112748549 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.142082434 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.113240312 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.142660284 seconds)
  done (took 1.60818644 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.100174111 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.129050927 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.113762525 seconds)
  done (took 1.438384796 seconds)
done (took 13.203390369 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.108048678 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.428730034 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418614029 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111754592 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.736074405 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382311231 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.074505862 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.148251262 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.171021197 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095134484 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.142386355 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673395532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.028316001 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.375815586 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.982811238 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378566705 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703043065 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093841386 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12091768 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096137039 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.055602301 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.093658295 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123717079 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093082049 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703241549 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.429010797 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095680199 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.378335821 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093332653 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.132333287 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382144576 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124280246 seconds)
  done (took 17.059181946 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.099633096 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.183435274 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.133744215 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.097382719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.130632069 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095794677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.126539333 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094911076 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.18514114 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.124614311 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112735203 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.123760505 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.12762751 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096759787 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.143876878 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.094523494 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.127947784 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093756187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.123299664 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.124159534 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113786033 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.122619697 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096132278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.123083696 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.095573362 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137998845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.124781152 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093958235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.123730852 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102401293 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.127443874 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096763184 seconds)
  done (took 4.902167809 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.145323562 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.191444433 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.135680671 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.128958008 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176498838 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.126117023 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.202950456 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.149512446 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.190044186 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.096175797 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.141958017 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.095194968 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.159958438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.12483985 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.11701122 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.12379319 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096102804 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123728416 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122121745 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095730378 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.142938355 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094578162 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.125096944 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093871364 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.125286358 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.138102668 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096985581 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123926056 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09417745 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.133342346 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.098259154 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.126031364 seconds)
  done (took 5.240708266 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.099504031 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.128638742 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.111040872 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.141486572 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.097361015 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127871657 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098892603 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.126519123 seconds)
  done (took 2.038130945 seconds)
done (took 30.34170223 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.113609671 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.128592242 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.11012428 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.138450455 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105675585 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.137098411 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093992504 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.136890045 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.135886807 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103999408 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.140186648 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.093673517 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.125471071 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.093801756 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.13765136 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.099774644 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.137406575 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.131941928 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.109341213 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.137101158 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095479868 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.136494659 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103823264 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.13791785 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.137289889 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108747852 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.14182377 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.102183554 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.124342476 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095209973 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.129350181 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.107057266 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.126020195 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.138233279 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.09958681 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.127674532 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096712497 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.128309662 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.108077934 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.135321482 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100498295 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.135934013 seconds)
  done (took 6.12270018 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.112642506 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.144788424 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.108940416 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.08225663 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118196621 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082356475 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.141833343 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080512976 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.112780963 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111887409 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.104645078 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.078470163 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079119918 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.103328839 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078450926 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.076203444 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.110879194 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.077169736 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.07719833 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.107522433 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.081733682 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.10241502 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.08174249 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.07923116 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.105399282 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.082894656 seconds)
  done (took 3.635065579 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.102710948 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.143391201 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114833087 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.178026758 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.159367581 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102349774 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.137464758 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.143338421 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.111824616 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.123208859 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.098441301 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.152993594 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111038875 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.131511175 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.126072276 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109072324 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.138564231 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.096408426 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.135437309 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114114561 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.141284655 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.134491166 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.113614014 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.13628049 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093645521 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.126159805 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100620717 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.145217443 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.130578186 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.10470272 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129755539 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097735894 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.125640868 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105792172 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.130423017 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125848619 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115534589 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.138625549 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.104439785 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.126547995 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.101951263 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.127930717 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144240773 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134076378 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125290289 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.101567592 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.127846614 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.134136274 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.097059714 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.14129579 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.10537889 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.123948814 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.098306047 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.125693957 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.09629051 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.139759949 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.096049309 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.134709629 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.132172415 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100773809 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.136434514 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.099074835 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.140796171 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.095549983 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.132717396 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095716743 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.125004532 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122342397 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.119656088 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130416961 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.165141604 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.096540214 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.125155394 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.104776251 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.132459695 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.101223133 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.125724277 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.110136493 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.134201086 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.127336745 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.106956944 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12624039 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.098052838 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.143908618 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.098431616 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.126282815 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095417731 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.131855862 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096923744 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.126019549 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139330928 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.095097784 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.127330133 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108411585 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.125038186 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095320073 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132308741 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.12895198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.094844644 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.137546038 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100362968 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.125319474 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.104879718 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.125809603 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09717969 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.135578271 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.128161143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.095447091 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.129150417 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.10194087 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.126021616 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098246914 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127795982 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.09678676 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.134789106 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.131370599 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.10082779 seconds)
  done (took 15.179119635 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.23443626 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.22191027 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.1908844 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.30213852 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.137300655 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119246648 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.21783484 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.161854478 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.125332142 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.16330114 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173836498 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.187322418 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.144159591 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.185454978 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.173641338 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.126158153 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.144573419 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139325037 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.251877467 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.265145285 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14641646 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.103682728 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.164670605 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.163356359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.13956869 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.133783816 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.112013737 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138627999 seconds)
  done (took 5.892543399 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.111909577 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158160063 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.100436044 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.148318066 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.152426354 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.094952953 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129344738 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.125907389 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.109689083 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.139639272 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09469117 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.132488619 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.132291674 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.105231702 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.125576046 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.105273172 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.134386316 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.095850615 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.128655892 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099589797 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.135314271 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134404007 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.098634578 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.124206485 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.10518135 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.12593029 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087967401 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.145257472 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.12574562 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.117991171 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.123874469 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.102917362 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.138932229 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.124925108 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.095267786 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.126989583 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.097595868 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.126907119 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096727184 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.124138265 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.094530565 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.109127104 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.094709451 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.140276412 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101361612 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.11204167 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.102149375 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.132332616 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096091318 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.123329429 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.098001432 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.127941654 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12736767 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.104389794 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.127414742 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.097096053 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.129209134 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.087979137 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.131327845 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.097944061 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.116168138 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.094731242 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.131489787 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.090908969 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.134856237 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.10097649 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.124368248 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097573099 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.129991828 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101734859 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.128297767 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101943694 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.124270134 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.127442462 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.098571292 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.1302229 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.099178953 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122882994 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.094898677 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125946583 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.077256761 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.124462873 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.076653413 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.098035109 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.123492566 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123326082 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.097818408 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.131286282 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.11255381 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.126740367 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133563833 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.096511584 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.124450565 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.098545418 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.113851865 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.099755526 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.141418113 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.113922024 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.126748171 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.124307658 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.110534554 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127624377 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.094834628 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.107531046 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104582684 seconds)
  done (took 13.233722919 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.133269342 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.157445922 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.128206312 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.113747838 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.159314776 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15983701 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102744547 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.133384839 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097048347 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.144589512 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.095707022 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.135850128 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09573889 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.140705581 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.158577549 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.106375311 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.129266382 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.110843382 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.130319086 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.173104401 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114061343 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.144844257 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143446059 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096835635 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.132274066 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112461854 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.164152685 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139725335 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108873283 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.145536357 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109528381 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.164545322 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.146615277 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.099691791 seconds)
  done (took 5.568628465 seconds)
done (took 50.742057012 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.203885534 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.425531704 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.201166524 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.060015533 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.227895611 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.21572472 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.234729451 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.200770537 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.968181025 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.203240896 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.451746483 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.771774177 seconds)
done (took 59.294606775 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.227246564 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.358460196 seconds)
    (2/2) benchmarking "String"...
    done (took 1.490704817 seconds)
  done (took 3.975996952 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.757895204 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.265543486 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.460315856 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.202079976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.202678574 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.490628225 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.90943598 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.578610193 seconds)
  done (took 28.236388806 seconds)
done (took 42.328538802 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.214435069 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.249761524 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.242235152 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183332942 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.315877505 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.228433288 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.514171654 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.222558817 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.227965295 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.188865644 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.235599995 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.214699607 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214794878 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.507844865 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.207587288 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.203153135 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.294169965 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.68042214 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.6113241 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.21855867 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.221354073 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.24499744 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.22563318 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.221607051 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.276102472 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.203088897 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.20534171 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.218423993 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.78721853 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.206376455 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.217440564 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.726640666 seconds)
  done (took 190.85850723 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.204684023 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.242864027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.337758507 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.24232375 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.666174018 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.408012456 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.354436517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.746734125 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.225309853 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.226233918 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.522482077 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.205794824 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.594917503 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.177731861 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.235393007 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.269155554 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.51888383 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.58077047 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.24147475 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.366140585 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.219026683 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.443795085 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.356328527 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.457846312 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.246697402 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.323714446 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.232534474 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.23676424 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.399263541 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.438633174 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.214737727 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.253076873 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.841132688 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.059093996 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.222481647 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.248161835 seconds)
  done (took 150.690482009 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.206830744 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.205729978 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.207288939 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.240102411 seconds)
    (5/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.206692246 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.207342912 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.777394161 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.798134555 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.721106514 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.434776643 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.628703417 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.530976381 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.210358895 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.302010922 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.222185511 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.210707188 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.222534913 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.251934548 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.207280872 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20807289 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.799268437 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.222611994 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.399846495 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.384082162 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.224401767 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241184211 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.598390537 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.206871314 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.241832845 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.542310436 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.257895059 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.208988007 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.607516982 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.385502527 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.32415951 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.208613309 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.210759077 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.240745436 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.208221607 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.489696795 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20972283 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.208680022 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.211212882 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.907881838 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.211442532 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.795300791 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.21261731 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.18287766 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.207383097 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.208044686 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.538229622 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.909228789 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.226839388 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.207663651 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.210111038 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.2083136 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207694671 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.240842187 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.585774116 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.305698115 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.227034514 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.211555675 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.241476693 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.208877495 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.442088294 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.208849136 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.625404284 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.28273143 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.32119591 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.802280068 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.21239105 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.309470479 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.331682932 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.209932374 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.209145485 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.209402514 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.209879578 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.209157922 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.320899222 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.209366602 seconds)
    (81/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.209155176 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.62603296 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386765298 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.227837839 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.636439035 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.311714765 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.210779874 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.639662064 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.213899178 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.209878819 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.023607018 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.307811943 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.210246275 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.210512187 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210232745 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.623909212 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.806020038 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.491283045 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.214272646 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.838444701 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.215352744 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.644635073 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.773857156 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.907097589 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.214745499 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.325220945 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.388476874 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.228169305 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.212279683 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.633638233 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.213466481 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.266537955 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.21210841 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.609047482 seconds)
  done (took 367.592724914 seconds)
done (took 710.272993901 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.822388848 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.805649272 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.917810757 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.795457279 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.76033521 seconds)
  done (took 10.236286784 seconds)
done (took 11.372437334 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.395646368 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394286616 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.27045743 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.396421572 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.240740772 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.414096286 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.374770419 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228542058 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.310233813 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.289895501 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.307755643 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.260424926 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.243356245 seconds)
  done (took 18.260046054 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.527572806 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.532392447 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.272454859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.530798963 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248376501 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.537358847 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410153839 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.4332851 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.417705756 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242439473 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22329488 seconds)
  done (took 16.50953722 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.526826184 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527735375 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.274908075 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.525606389 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.249025133 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.539753262 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.41126045 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.425825514 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.42569929 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.241741324 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221306346 seconds)
  done (took 16.502313539 seconds)
done (took 52.406893411 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.217218722 seconds)
  done (took 2.349779268 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.253206395 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.418517836 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.235094161 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.223367391 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.216892559 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.222030158 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223810802 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217641486 seconds)
  done (took 11.142512728 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.216797239 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.214949171 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216481369 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.213826405 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.217832532 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.214520476 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.216603168 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.214271144 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.216666866 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.21718647 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.216626331 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214639023 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213697396 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.217011595 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.215435929 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.21456461 seconds)
  done (took 20.584709632 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.216953105 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.214155784 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.213953986 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.216004367 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215202868 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215094764 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.21598114 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215267667 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.214627237 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215278184 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216199605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.214615843 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.215840331 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.214283854 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.21579634 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.216544251 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.21521003 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.215820851 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.22068129 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.217493431 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.216794761 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.21720366 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.215673013 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.21579899 seconds)
  done (took 30.315726424 seconds)
done (took 65.52834013 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.833515964 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.878728981 seconds)
  done (took 6.846276309 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.278666176 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.278912953 seconds)
  done (took 3.696648836 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.218006688 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.218251239 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.218973885 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.218698103 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.21808303 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.218021514 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.218708775 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.218545488 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.218653371 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.2190181 seconds)
  done (took 13.320260975 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219022018 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.219765899 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217808173 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.219434688 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.219777573 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216036292 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220559757 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219444631 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.221262397 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.217226931 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.220476818 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217195852 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.219991464 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.219022571 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220715384 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.218938133 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.220204571 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.218786449 seconds)
  done (took 23.081238944 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.220679329 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.241772476 seconds)
  done (took 3.59908822 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.34813099 seconds)
    (2/7) benchmarking "second"...
    done (took 1.260558567 seconds)
    (3/7) benchmarking "month"...
    done (took 1.328042713 seconds)
    (4/7) benchmarking "year"...
    done (took 1.316839774 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.260070464 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.239922245 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.259644849 seconds)
  done (took 10.149998636 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222553445 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.396185239 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.496417513 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.80381626 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222345925 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.22670209 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.139117504 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.226459335 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228281434 seconds)
  done (took 14.099425315 seconds)
done (took 75.929158952 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.233837726 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.231892378 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.504124842 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.218756026 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.230214322 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.514169254 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.250235396 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.337357836 seconds)
done (took 37.660526256 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.232500378 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.197192789 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.973686841 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.225900316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.278089099 seconds)
  done (took 18.813183311 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.260323682 seconds)
    (2/2) benchmarking "read"...
    done (took 1.569959545 seconds)
  done (took 4.968279451 seconds)
done (took 31.154493464 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.224804951 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222798217 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.219710232 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.222735024 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.22038578 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.2219057 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220534542 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.224519314 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.225106809 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.223767934 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.222689355 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224458865 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.221231701 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220660268 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.225295146 seconds)
    (16/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.221183437 seconds)
    (17/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222761008 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.221829143 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.223548281 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.225237727 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.222086545 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.224809449 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221335393 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221538899 seconds)
  done (took 30.483909184 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.224224316 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.223685201 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.225100256 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.225787957 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.222780011 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.224296338 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.224288328 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.223473103 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.22365704 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.224363205 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.222172896 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221290698 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224501073 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.221590659 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.224767422 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221888108 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.226102378 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.220817969 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224508599 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221855439 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224624565 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.221559629 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.223224762 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.223375884 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.223977289 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.221536964 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224433075 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222286612 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.224593652 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.221826449 seconds)
  done (took 37.845368716 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230231011 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231885566 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.223676145 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.224926877 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.224613588 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224677182 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225460359 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.224726586 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.225919758 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.22588487 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.224089537 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.224507512 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225007656 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225478017 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.224539688 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225092322 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.226660825 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.225940044 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.225098803 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.22453571 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.225711629 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.225097984 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.224035826 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.224677343 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.225380952 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.224015272 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.225560714 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.224352717 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.224691827 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.225560191 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.225397157 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226124082 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.225996124 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.225876268 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226080506 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.225407715 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.230304335 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.232333371 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.22481118 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.226052828 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.226024515 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.226676055 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.225854973 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.226028474 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.225536815 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.225639422 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.225241209 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226030605 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.22503719 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.225540242 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.226725109 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.22491111 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.226211151 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.226426346 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.22617325 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.226441227 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.226342337 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.226184205 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.226010237 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.226276496 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.226102374 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.22631854 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.227066422 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.225603257 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.226964019 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227211607 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.227684961 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.226513894 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.226957229 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.22703937 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.226852731 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.227549905 seconds)
  done (took 89.414248281 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228019887 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.224647006 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.225291757 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225174862 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229585195 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.227032593 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.224905665 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226525037 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225195975 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.227274204 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228562983 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226070996 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225385525 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.22777731 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.228230039 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.225648323 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228191622 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22584748 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229196536 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.229183167 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228827396 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226257437 seconds)
  done (took 28.136347907 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228443355 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.230764796 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.225688446 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231497939 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227202729 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.228930028 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.228261681 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230112699 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.228821048 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225226563 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226676427 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230462165 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.226027515 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225859718 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.224732953 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.227050597 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228200967 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.227228038 seconds)
  done (took 23.244838101 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.227726861 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.225158204 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.229072324 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.225795421 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.22637161 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.227281345 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226710094 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.229308525 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.228415378 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.226193203 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.229072206 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.227760215 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.228749601 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.225632707 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228032723 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.22586212 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.22814249 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225994268 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227845487 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226420399 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.226227268 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228691306 seconds)
  done (took 28.146852024 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228729722 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.227851506 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.225926128 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.22548954 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.223914333 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.227342824 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.227771397 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.225940279 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.229724828 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.22757446 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.225599977 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.227869842 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.226690242 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.225671031 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.225445667 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.226298861 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.228627692 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.226290057 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.228613208 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.226109272 seconds)
  done (took 25.680498663 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.228733861 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.229309784 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.229802677 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.230652348 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.229405506 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.23053341 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.230420794 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.229203265 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.230209462 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.230174938 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.229267934 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.229756452 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.229308632 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.230599102 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.22968753 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.230894172 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.229839937 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.23075047 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.231273808 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.230424463 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.231590022 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.23058108 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.231124709 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.231052174 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.230061075 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.230610475 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.231030757 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.230692487 seconds)
  done (took 35.591897227 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.233405485 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229934452 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.22708439 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.228186523 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.228297437 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.228431097 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.22855737 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.229384078 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.231320472 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.228611746 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.230945274 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.231072406 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.230929955 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.230460116 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.230743791 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.230719167 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.232267082 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.229341195 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.228577274 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22916753 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.230888668 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.231931194 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.232164112 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228908119 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.229143695 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.231892526 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228348656 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.229650253 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232324912 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228464706 seconds)
  done (took 38.048432728 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.249610202 seconds)
    (2/2) benchmarking "in"...
    done (took 1.250145051 seconds)
  done (took 3.646073344 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.229544849 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231750601 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.230800826 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229265935 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.229794995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.232707286 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.232092458 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229824481 seconds)
  done (took 10.992824117 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.231161703 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.231473021 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.23143726 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.231563635 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.231442666 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.23159091 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.240517326 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.251435488 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.231605418 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.232875187 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.238541726 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.23844945 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.234267098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.231839047 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.232089356 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.234097345 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.230913292 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.231920432 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.232416893 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.232199606 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.231835408 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.234220085 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.233274484 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.231044605 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.232467122 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.241289641 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.252659675 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.230357518 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.230926976 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.234541059 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.232647414 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.230241865 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.231280481 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.232410796 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23210213 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.232275674 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.241268718 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.252087024 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.237878153 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.253312938 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.232726263 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.229600715 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.233115428 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.232450978 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.232612355 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.232265739 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.231949252 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.230371185 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.230995216 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.235823865 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.237847062 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.232092202 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.229835548 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.235149746 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.233456756 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.238644279 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.250871182 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.236079438 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.241934478 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.243022059 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.262733764 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.256941341 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.235104607 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.232014128 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.243313717 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.256265622 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.239561511 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.248424731 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.231095996 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.233731234 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.239717487 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.264850643 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.257317302 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.233174437 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234832467 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.23414004 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.23326413 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.23401415 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.241471674 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.255808578 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.233940839 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.234527145 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.243821763 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.254840723 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.23431667 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.234139428 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.234717629 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.235181739 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.235904597 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.245199602 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.25270951 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.2366256 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.233204556 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.234051172 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.234839615 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.234879406 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.234782893 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.234865206 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.232280735 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.234821186 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.235619319 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.238765327 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.243962994 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.235615913 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.236008717 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.242104638 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.254186467 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.235418529 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.240406527 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.236479318 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237077969 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.237362716 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.241089177 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.233621784 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.239380648 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.24449339 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.237124714 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.237478456 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.236983904 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.238041178 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.246607831 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.262415264 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.237069332 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.236818516 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.240864232 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.247992039 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.237604504 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.239654873 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.237803581 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.234016057 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.235399023 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.239558748 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.237316127 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.238837822 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.237796286 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.238845936 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.235007602 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.237725392 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.23855824 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.238619994 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.238766395 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.238758987 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.23937897 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.24143376 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.239110359 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.240204151 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.243186363 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.257177066 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.239940715 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.238496452 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.235112911 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.240134184 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.239240842 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.238611923 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.237777801 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.23934435 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.238975988 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.240208657 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.239835877 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.23897998 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.240811931 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.242775887 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.245042932 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.240258206 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.244276892 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.239873407 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.238253036 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.239754249 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.240418314 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.23927641 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.240095989 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.238791774 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.242342782 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.247629264 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.241124003 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.241264395 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.243021322 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.239751088 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.240806531 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.240257518 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.244439015 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.249479406 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.240949271 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.247135851 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.259603662 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.24169233 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.242509537 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.240256199 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.240781289 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242100935 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.243063442 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.249316799 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.253429315 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264164342 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.241741261 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.246192808 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.2424154 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.247058519 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.245448812 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.242392126 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.242972117 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.242583976 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.242288873 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.243105426 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.243900875 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.242624229 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.241558249 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.242705484 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.243129833 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.242231245 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.243418761 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.243767294 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.243998413 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.24030672 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.242392046 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.243265062 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.242065886 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.240045625 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.242092326 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.242031668 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.243667238 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.243691525 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.248952098 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.24157794 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245185726 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.244503402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.243010367 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.242182621 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.244490611 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.245932326 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.243566119 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.251300908 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.26205889 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.245228266 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.249593263 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.260677225 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.242988256 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.245997355 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.244671273 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.241082864 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.247346389 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.252682588 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.24440112 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.244425904 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.244956437 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.245191668 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244753722 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.250276639 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.260874596 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.244306918 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.245736548 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.246409787 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.242414671 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.245822039 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.245055278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.246279285 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.247394668 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.245358075 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.246157094 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.246149003 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.245488893 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.246239484 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.245524268 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.248497318 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.253891396 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.251900502 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.246344428 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.247357647 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.247348838 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.250483535 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.247262808 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.246703609 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.247391998 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.258697514 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.2698579 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.253087708 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.265296426 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.248174402 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25187514 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.266697434 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.25062053 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247708887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.248091449 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.24706846 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.247810585 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.246106724 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.248771451 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.248945195 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.249634402 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.248949557 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.252370898 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.248687824 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.247833507 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.248426209 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.249278771 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.2485285 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.248895561 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.249796425 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.249635408 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.25016997 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.248093858 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.248849449 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.254664111 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.266714005 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.249674075 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.249606342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.248311149 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.248118891 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.249725695 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.249474265 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.25204169 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.257052887 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.25324611 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.257757451 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.249858001 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258658604 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.250181239 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.252555741 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.257276088 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.247584278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.248892438 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.249242999 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.249309307 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.255459047 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.268786607 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.251377234 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.25508123 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.250091367 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.251475271 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.25159519 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.250198054 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.251084715 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.251413532 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.258508327 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.271459767 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.254680809 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251355987 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.248104509 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.25081616 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.251529367 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.251741738 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254490692 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.250446198 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.251802224 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.252045646 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.251650016 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.250814909 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.25111862 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.251683565 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.249721708 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.25199592 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258311421 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.271570933 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.256178602 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.251732529 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.258071699 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.27088724 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.25787817 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.271557062 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.252217142 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.253140488 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.252574276 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.253547125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.253047134 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.253857227 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.25242379 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.253206936 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.257081358 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256457598 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.255936632 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.253857459 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.253751932 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.25283649 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.263970364 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.275977836 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.254438918 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.258199915 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.251472879 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.25422778 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.25785265 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.254277481 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.252222151 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.256690379 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.265650212 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.262616208 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.254900177 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.254033393 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.253942657 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2543965 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.254719743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.253764489 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.254508835 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.256066551 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.255994618 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.254514391 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257110468 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.255184344 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.255823572 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.255869275 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.256444522 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.264910184 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.273317837 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.255287885 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.256217296 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.2569613 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.255370182 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.256200453 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.256808311 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.255681533 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.256414822 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.256816134 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.262378885 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.261689797 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.258317809 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.256658031 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.257762985 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.255888426 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.256682346 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25755515 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.256462329 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.257072453 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.257204573 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.256784721 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.256793712 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.256872908 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.257366201 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.257387325 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257160855 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.259406229 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.264657388 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257290034 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.254661581 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.257265106 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.257982768 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.256773412 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.257290866 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.263788798 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.280079456 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.267357228 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.267215748 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.264474837 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.260546139 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.261006274 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.265903371 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.257415877 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.258535305 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.25933705 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.260419282 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.259639435 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.262609055 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.25872824 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.264948985 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.278221041 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.259181993 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.267479754 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.280194702 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.259083726 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.260831063 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.26418176 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.259264796 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.257452147 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.259297859 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.258842413 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.265599331 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.27950689 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261212686 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.261546102 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.258840353 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.261089095 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.263957399 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.260245801 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.261098882 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.257268586 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.260109446 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.260586412 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.260776253 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.257907264 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.26025891 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.260440118 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.263884497 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.266633039 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.258295946 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.262134025 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.260426694 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.261250663 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262163675 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.259841478 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.257657555 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.258784836 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.261045336 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.261544578 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.260840156 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.264128519 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.260805396 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.263031103 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263692751 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261885789 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.264259022 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.270992875 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269690856 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.26034998 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.260682346 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.262082102 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.264539989 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263064483 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.261932228 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262271544 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.262702903 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.261509464 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.261929846 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263249947 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266057967 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.277678247 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284851367 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.262618865 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.262790175 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.264554694 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.262925667 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.260931699 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.262950138 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.265257289 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.266022006 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.27080811 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.263736003 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.269782158 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.281025753 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.265020645 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268358631 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.26704928 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.270751234 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.266850988 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.264214097 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264968185 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269119034 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.2784328 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.264910295 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.274078048 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.293251996 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.283016585 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.265724858 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.264836719 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.264106097 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265483839 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.265664718 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.266186909 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.265159307 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.266055404 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.264413335 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.265915486 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.270700147 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.265638474 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.266634692 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265802532 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.264189739 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.265268796 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263163886 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.265542106 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.26523826 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.265655679 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265896559 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265978153 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266533275 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.277973107 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.290066201 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.266854511 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266510031 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.26443481 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.268703533 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.268715002 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.27613376 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274462711 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26768706 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266592138 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.268047394 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.26646771 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.265891051 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.26709908 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.265920915 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.26752884 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.263490389 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.278630833 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.292157547 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.271678426 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.26808755 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.268350124 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267402893 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26857556 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.268371043 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267473675 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.268152542 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.269034808 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.271585496 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267982586 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268586845 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.270987984 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275437804 seconds)
  done (took 747.08701192 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.271862468 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.2652538 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.266263895 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266063949 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266848424 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.265831046 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266051033 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.266959563 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.265999561 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.267199428 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.268237822 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.267067251 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266594292 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266713795 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266573755 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266796097 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266738863 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.267616722 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.266763772 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266954992 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.266603534 seconds)
  done (took 27.785225081 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269457108 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267326362 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.268079893 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.270255724 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267908359 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269102304 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.267079347 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.270347558 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.271522406 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.26718389 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.270606535 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.271322169 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.267592906 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.268202705 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.267799095 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.270865917 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.26993644 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.268382643 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.270329722 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.269514118 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.271471765 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.268006539 seconds)
  done (took 29.104136836 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.271442689 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.271002033 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.270254424 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268070672 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.272083808 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.268260675 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.2715866 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.271678404 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.271687754 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.273000042 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.27147576 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.272368651 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.278255442 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.276410294 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.27353682 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.271985635 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.415739135 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.272290511 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.27241592 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.272942797 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.269791241 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.276664588 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.288295774 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.269230251 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.271269371 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.272172284 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271940555 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.273026057 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.273418396 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.272804661 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.277266578 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.273163525 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272407347 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.274571154 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.27130302 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.274209215 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.277069566 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.272799847 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270469881 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.273101982 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.283261481 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.293875906 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.273240377 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.279949207 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.293582036 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.274093266 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.277112418 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.282416953 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.271116581 seconds)
  done (took 63.773990818 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.274194615 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.274172928 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.271691804 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274953399 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.274517357 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.274104706 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.273766087 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275010761 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.271843893 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.272159337 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.274639753 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.272108205 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271750184 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.275783806 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.274664832 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.272510547 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.272911079 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.271918371 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.272855627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.273440149 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.271969208 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.276224912 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.275296982 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.273909545 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274537785 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.272597707 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.273160733 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.276381351 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.272968331 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.272842509 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.276377437 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.27608475 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.275661437 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.2743535 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.272760093 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.275316614 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.276495823 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.273756489 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.276178823 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.274685919 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.275948314 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.276336687 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.277187564 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.277755789 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.274103653 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.273708051 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.273310711 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.274114329 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.274989772 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.277343247 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.27702154 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.274877564 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277337975 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.274621657 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.277799302 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.278053362 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.275259367 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.27469432 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.278331387 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.275277319 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.274698946 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.277219012 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.275292399 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.277396295 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.277339912 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.277046171 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.276390625 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.279334548 seconds)
  done (took 87.881022961 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278611203 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.277703537 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.277931962 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.278443713 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.278136294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.278617265 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.277280635 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.278089477 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279014455 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.278573301 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278499799 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.278734276 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.278966242 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.279360563 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278582565 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.278206508 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.279409889 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279037675 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.279206739 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.279272034 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.280626624 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279449229 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.27893314 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279355333 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.279837821 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.27888823 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.280052496 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280000161 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.278823202 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.279175459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.279733448 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.28026008 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280196115 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.279325 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.280890657 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.280491669 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279679021 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.280189276 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.279710934 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.279195965 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.280157837 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.281378138 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.280910985 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.280495595 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279701015 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.280339838 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.280414451 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.281157575 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.280990814 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.280539837 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.280341715 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.281148225 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.281529368 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.281019349 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.280240379 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.281790493 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.281097355 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.281243907 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.281851195 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.281097519 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.280750299 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.282174602 seconds)
  done (took 80.538103347 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.282482036 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.282599599 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.281160493 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.279911288 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.282522515 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.281050121 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.282268996 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.28191117 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.283789458 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.283624759 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.283794831 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.281027912 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282297325 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.28416147 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.281075689 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.282505504 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.282643146 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.281341641 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.282598791 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.282908322 seconds)
  done (took 26.839200694 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.280897918 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.283877169 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.281832667 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.282721059 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.283675643 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281315254 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.283314102 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284730146 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.281976496 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283974359 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.283877273 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283105432 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281907781 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.281371388 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.285420425 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281687144 seconds)
  done (took 21.719874329 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.280870595 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.283223114 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.283406261 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.2830535 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.281320338 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.281549678 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.283533117 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.281940661 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.281877224 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.284980962 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.284869104 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.283703663 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.28453292 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.284487948 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.282413932 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.285085545 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.282098845 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.282459158 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.28442041 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.284479023 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.282743615 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.282323531 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.285984925 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.285482383 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.28235671 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.283237085 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.281748426 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.283169114 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.283909969 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.286502357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.283104738 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.284103373 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.283161515 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.283533581 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.286328727 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.283950852 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.286690018 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.285792775 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.286226512 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.286131155 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.287851269 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.283164311 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.286352557 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.28772333 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.28372755 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.286730742 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.28476405 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.284399171 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.284355644 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.284228271 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.287449698 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.288500599 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.287354567 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.287293736 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.288439712 seconds)
  done (took 71.839012504 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.287691717 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.288884947 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.285555304 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.288776028 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.288135447 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.285853108 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.287455986 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.286987738 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.286441385 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.289000729 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.286687417 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.290534907 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.286522149 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.289282495 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.288273987 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.289482001 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.285985811 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.285565861 seconds)
  done (took 24.374976577 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.288057844 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.287055574 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.289246412 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.287365167 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.286953978 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.289391878 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.28604961 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.289401884 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.289442748 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.28618826 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.286936415 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.289622269 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.290304817 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.290313141 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.288143995 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.286419707 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.289607015 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.289725292 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.287037403 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.287195076 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.289951796 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.289916346 seconds)
  done (took 29.543189914 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.289560303 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.288639778 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.288508717 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.305101521 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.307694109 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.312128129 seconds)
  done (took 8.99195123 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296526139 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290364149 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.287021785 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291212589 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291263252 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288406984 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288655611 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.288408675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.29191481 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.28939796 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.28924534 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290659756 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.290762544 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28848962 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291220417 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292242265 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.288523783 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289318101 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289937049 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291499445 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.288531106 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291613714 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.289525762 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289062436 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289702443 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290082014 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292120931 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.290625881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.2894256 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.292034477 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29199287 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.289817217 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.291829798 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290337407 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.292033849 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293477374 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.289908944 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293362158 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292022035 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.290600248 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293453412 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293201692 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293107814 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.29006218 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293471008 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.289722262 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292658623 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.291372658 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29080281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.294359027 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294784342 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291243628 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293863925 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294499109 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294038717 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.294233055 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291475957 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.290939136 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.293633473 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292522257 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.291312561 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29421808 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291057494 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.293329152 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295159693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.291383687 seconds)
  done (took 86.457258512 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.291003828 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292155078 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291567783 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293083456 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292139044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292485629 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292230622 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.292816569 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292322106 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.291524346 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295497124 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292609133 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.292329603 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294499387 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.292824983 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.291936602 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.29370233 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293138672 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.292898232 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297189638 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29287046 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.292441875 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.291963761 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293464256 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.294501706 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297061491 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293560527 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294625278 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.294517473 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.293928391 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293960846 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.29474419 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.293612349 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.294102362 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.293234326 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.293983872 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293725687 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.293955241 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294885667 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.297604919 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.294505622 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.298450608 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.294917072 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.295511574 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295800643 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295652948 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.294164941 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.29515252 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.294839194 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295394839 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295563865 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.296128376 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296186878 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.297982756 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.296272431 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.295130379 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.295902649 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.296682499 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.295676859 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.298352627 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.295888809 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.29599871 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.299990536 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.295977046 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.296617734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.296809404 seconds)
  done (took 86.646880451 seconds)
done (took 1744.954248237 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.461080951 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.415816432 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.297963917 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.295003601 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.297465922 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.322870853 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.296933437 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.297749056 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.297074199 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.297934369 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.297849856 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.484385103 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.298416282 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.297418714 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.297207227 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.391200776 seconds)
  done (took 42.555466721 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.326523881 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.303659892 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.415357695 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.323192092 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.326123969 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.482679211 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.357864811 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.302821854 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.470878737 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.348289036 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.817743407 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.32600782 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.30432244 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.380356965 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.321513749 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.484335442 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.544337414 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.825833409 seconds)
  done (took 29.871119791 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.742123678 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.318201723 seconds)
  done (took 9.270395892 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.322275342 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.303422335 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.304456756 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.300932807 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.295010059 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.294756359 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.301359838 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.297749562 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.870176864 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.428020856 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307772849 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.314684651 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.322389369 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.304723102 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.302667327 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.341823357 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.456844506 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.301937854 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.300907954 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.308486361 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.304186401 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.425058741 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.343627463 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.302551404 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.425914627 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.859619869 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.307503565 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.312174116 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.457387118 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.301978455 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.302951269 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.304000024 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.305529547 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.207036155 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.754839769 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.298703602 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.327632348 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.313036404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.300708733 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.493647076 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.305312984 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.312653003 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.297703256 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.733721215 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.458523222 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.418113114 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.525008622 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.322357496 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.305187204 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.362896827 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.30614049 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.30464852 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.346462275 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.093410671 seconds)
  done (took 109.943018901 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.322988433 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.684657662 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.463142089 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.320623974 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.973977322 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.967759626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.318415049 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.570268725 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.35128764 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.293281894 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.582975706 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.783318172 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.31954596 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.300188324 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.944997577 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.294452431 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.29583207 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.006846747 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3143881 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.297614729 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.782738652 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.295545243 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297877176 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.516219266 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.331579005 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.731966959 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.626351397 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.720510018 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.314770943 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.294291636 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.741751111 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.310785312 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.355991164 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.294330997 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.548156876 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.643199428 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.638844595 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.325163184 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.334239275 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.30108846 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.319491699 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.733451406 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.646962131 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.31546398 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.30155553 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.736893008 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.31410562 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.297292051 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.295714979 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.494541678 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.177440037 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.297549414 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.625971049 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.298478522 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.661422951 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.313008596 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.376147809 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.76586605 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315384145 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.359494868 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.346152255 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.29820928 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.303714555 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.297827666 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.315628 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.624807912 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.696213769 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.297823281 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.62409113 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.75225718 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.312359371 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.800675579 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.078828016 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.301837905 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.349368942 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.297275049 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.818559167 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.768724758 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.344746938 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.29744039 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.61466184 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.315149256 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.568851733 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.311683369 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.314778505 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.810907154 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.307603223 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.328892991 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.298131691 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.314768582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.910989456 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.299023733 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.554947573 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.367578923 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.297862889 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.297637963 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.304156713 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.299590641 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.315169181 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.299428168 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.80245664 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.317101579 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.403569636 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.313227094 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.298605822 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.300838709 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.301605113 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.298353247 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.514032407 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.750823953 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.31961783 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.299875479 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.30137213 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.3011568 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.461488421 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.30199868 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.588549892 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.315431209 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.299364729 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.301336311 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.916792291 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.339015283 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.300862573 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.319835262 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.156630784 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.506557806 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.318094919 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.300213956 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302607025 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.314601522 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.481288137 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.319728885 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.331409457 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.305171195 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.983973234 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.32940439 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.32009406 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.809547342 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.306023547 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.142608437 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.320774705 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.302426655 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.596704405 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.560478578 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.596861109 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.301222233 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.317595444 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.95553402 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.323813545 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.438110869 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.321121237 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.34909653 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.499247982 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.432906862 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.302153778 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.919556578 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.304952833 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.513509566 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.305021207 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.593607253 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.771909762 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.319060823 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304863206 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.982289129 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.023921029 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.018725368 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.305413319 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.569744251 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.268618648 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.773081731 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.303866364 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.303855877 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.722971085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.30435887 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.310455582 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.304375901 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.303820057 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.367161103 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.474836423 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.91687645 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.304000665 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.73526156 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342378405 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.313819939 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.308745303 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.305390919 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.650956748 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.371129456 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.305416882 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.3495644 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.304412323 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.307875722 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.760470594 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.103934478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.305528445 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.453598105 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.913808897 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.322733627 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.305922901 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.998472774 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.608368167 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795550712 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.354123351 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.594237001 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.331218475 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.34188869 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.856789816 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.36285609 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.758038121 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.323480762 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.305360241 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.877754155 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.321725737 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.372732984 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.305368566 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.305552451 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.812859416 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.321325513 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.307062036 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.531883771 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.328718326 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.569819319 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.306129702 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.318456323 seconds)
  done (took 1102.614006479 seconds)
done (took 1295.463870097 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.307151341 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.306412667 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.288318048 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306297169 seconds)
  done (took 26.430083146 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.315046128 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.311002228 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.311307687 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.310313939 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.313824772 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.310180573 seconds)
  done (took 9.092433297 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.502705016 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.305086888 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.306975109 seconds)
  done (took 19.334677512 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.505189229 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.536128188 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.626429177 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.400099535 seconds)
  done (took 10.289331999 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.31380126 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.313355276 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.312661349 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.314278203 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.316746899 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.318271941 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.316089487 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.315657332 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.317979345 seconds)
  done (took 13.060725405 seconds)
done (took 79.431632604 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179598792 seconds)
    (2/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.287379085 seconds)
    (3/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.330210541 seconds)
    (4/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.474307294 seconds)
    (5/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.432314084 seconds)
    (6/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.388775473 seconds)
    (7/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.288125397 seconds)
    (8/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.093050704 seconds)
    (9/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.423530315 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.556927743 seconds)
    (11/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.387181542 seconds)
    (12/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.312483894 seconds)
    (13/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.350565665 seconds)
    (14/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.678212641 seconds)
    (15/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.958350676 seconds)
    (16/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.336580672 seconds)
    (17/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.307476681 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.145833367 seconds)
    (19/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.287875708 seconds)
    (20/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.290807432 seconds)
    (21/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.099906848 seconds)
    (22/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.496742018 seconds)
    (23/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.39076092 seconds)
    (24/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.424140831 seconds)
    (25/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.636271517 seconds)
    (26/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.323459041 seconds)
    (27/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.301977451 seconds)
    (28/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.714479413 seconds)
    (29/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.335179453 seconds)
    (30/286) benchmarking ("sort", Int64, true)...
    done (took 6.310144378 seconds)
    (31/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.653640013 seconds)
    (32/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.310794056 seconds)
    (33/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.693649522 seconds)
    (34/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.393745938 seconds)
    (35/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.438219089 seconds)
    (36/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.299111739 seconds)
    (37/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.405573357 seconds)
    (38/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.354178794 seconds)
    (39/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.020757398 seconds)
    (40/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.343381403 seconds)
    (41/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.202915617 seconds)
    (42/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.289086776 seconds)
    (43/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.373676289 seconds)
    (44/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.309493239 seconds)
    (45/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.28994314 seconds)
    (46/286) benchmarking ("sort", Int8, false)...
    done (took 4.375119119 seconds)
    (47/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.907532589 seconds)
    (48/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.421220065 seconds)
    (49/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.319350587 seconds)
    (50/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.568046338 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.70420308 seconds)
    (52/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.305260466 seconds)
    (53/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.290338065 seconds)
    (54/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.289917085 seconds)
    (55/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.305033166 seconds)
    (56/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.387669333 seconds)
    (57/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.340831129 seconds)
    (58/286) benchmarking ("sort", Float32, true)...
    done (took 6.31600505 seconds)
    (59/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.60329716 seconds)
    (60/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.707045196 seconds)
    (61/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.305117373 seconds)
    (62/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.792274456 seconds)
    (63/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.806465178 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.656985346 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.857640669 seconds)
    (66/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.456328455 seconds)
    (67/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.310866945 seconds)
    (68/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.423005801 seconds)
    (69/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.29053301 seconds)
    (70/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.412781277 seconds)
    (71/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.290991577 seconds)
    (72/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.305414122 seconds)
    (73/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.312287343 seconds)
    (74/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.910054144 seconds)
    (75/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.529491957 seconds)
    (76/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.292276207 seconds)
    (77/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.373820086 seconds)
    (78/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.564879759 seconds)
    (79/286) benchmarking ("sort", Int64, false)...
    done (took 5.471578772 seconds)
    (80/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.292756632 seconds)
    (81/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.52335692 seconds)
    (82/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.712934559 seconds)
    (83/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.029083403 seconds)
    (84/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.311883064 seconds)
    (85/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.366897414 seconds)
    (86/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.149345239 seconds)
    (87/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.317957086 seconds)
    (88/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.090171426 seconds)
    (89/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.34927934 seconds)
    (90/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.442870075 seconds)
    (91/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.522123771 seconds)
    (92/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.814205217 seconds)
    (93/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.329288568 seconds)
    (94/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.299653317 seconds)
    (95/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.716639918 seconds)
    (96/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.596638638 seconds)
    (97/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.428241206 seconds)
    (98/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.527403528 seconds)
    (99/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.37674551 seconds)
    (100/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.294056273 seconds)
    (101/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.593928914 seconds)
    (102/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.516396415 seconds)
    (103/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.411091803 seconds)
    (104/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.313837631 seconds)
    (105/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.528505211 seconds)
    (106/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.292589585 seconds)
    (107/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.716348592 seconds)
    (108/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.502252939 seconds)
    (109/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.294017502 seconds)
    (110/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.131673106 seconds)
    (111/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.358385242 seconds)
    (112/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.131791167 seconds)
    (113/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.3123577 seconds)
    (114/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.415426294 seconds)
    (115/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.153551458 seconds)
    (116/286) benchmarking ("sort", Bool, false)...
    done (took 1.849918067 seconds)
    (117/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.742866566 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.351836061 seconds)
    (119/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.371969072 seconds)
    (120/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.112041525 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.572713704 seconds)
    (122/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.763106228 seconds)
    (123/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.038460318 seconds)
    (124/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.571354101 seconds)
    (125/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.421566782 seconds)
    (126/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.512610665 seconds)
    (127/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.294718169 seconds)
    (128/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.433139104 seconds)
    (129/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.426065613 seconds)
    (130/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.982264962 seconds)
    (131/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.350770416 seconds)
    (132/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.314626211 seconds)
    (133/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.511049675 seconds)
    (134/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.06154696 seconds)
    (135/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.342112937 seconds)
    (136/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.775936034 seconds)
    (137/286) benchmarking ("sort", Float64, true)...
    done (took 6.319663878 seconds)
    (138/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.041212268 seconds)
    (139/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.341098622 seconds)
    (140/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.656169515 seconds)
    (141/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.316695956 seconds)
    (142/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.358972132 seconds)
    (143/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.293043456 seconds)
    (144/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.414434155 seconds)
    (145/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.33173947 seconds)
    (146/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.794151941 seconds)
    (147/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.401625276 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.302421035 seconds)
    (149/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.065168932 seconds)
    (150/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.05988998 seconds)
    (151/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.324776114 seconds)
    (152/286) benchmarking ("sort", BigInt, true)...
    done (took 6.322586536 seconds)
    (153/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.296197346 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.578355923 seconds)
    (155/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.675421618 seconds)
    (156/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.490566453 seconds)
    (157/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.271271997 seconds)
    (158/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.404997162 seconds)
    (159/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.430863141 seconds)
    (160/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.888659863 seconds)
    (161/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.361273603 seconds)
    (162/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.445207783 seconds)
    (163/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.14403259 seconds)
    (164/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.464419447 seconds)
    (165/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.805491036 seconds)
    (166/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.302220596 seconds)
    (167/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.300696969 seconds)
    (168/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.343493562 seconds)
    (169/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.753673372 seconds)
    (170/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.107700749 seconds)
    (171/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.35967171 seconds)
    (172/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.298252516 seconds)
    (173/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.921797107 seconds)
    (174/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.322004201 seconds)
    (175/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.037865641 seconds)
    (176/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.54079685 seconds)
    (177/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.630156249 seconds)
    (178/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.101565089 seconds)
    (179/286) benchmarking ("sort", Bool, true)...
    done (took 5.393768407 seconds)
    (180/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.443818312 seconds)
    (181/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.375773834 seconds)
    (182/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404573371 seconds)
    (183/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.432737296 seconds)
    (184/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.55886176 seconds)
    (185/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.426822743 seconds)
    (186/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.160352395 seconds)
    (187/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.318181507 seconds)
    (188/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.169376298 seconds)
    (189/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.32551529 seconds)
    (190/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.89354194 seconds)
    (191/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.346910561 seconds)
    (192/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.405562691 seconds)
    (193/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.496820788 seconds)
    (194/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.363126421 seconds)
    (195/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.303626115 seconds)
    (196/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.016245042 seconds)
    (197/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.536851509 seconds)
    (198/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.335488561 seconds)
    (199/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.799006559 seconds)
    (200/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.415003834 seconds)
    (201/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.352961692 seconds)
    (202/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.313074856 seconds)
    (203/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.346549871 seconds)
    (204/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.731926116 seconds)
    (205/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.284692552 seconds)
    (206/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.647752486 seconds)
    (207/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.306250589 seconds)
    (208/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.343022387 seconds)
    (209/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.381671938 seconds)
    (210/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.337535873 seconds)
    (211/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.330504827 seconds)
    (212/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.634688575 seconds)
    (213/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.362093831 seconds)
    (214/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.312248855 seconds)
    (215/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.70551405 seconds)
    (216/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.991989608 seconds)
    (217/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.362882261 seconds)
    (218/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.300615984 seconds)
    (219/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.329124678 seconds)
    (220/286) benchmarking ("sort", Float64, false)...
    done (took 5.612554985 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.961617633 seconds)
    (222/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.10088579 seconds)
    (223/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.775823912 seconds)
    (224/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.372859927 seconds)
    (225/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.322246755 seconds)
    (226/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.904650038 seconds)
    (227/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.420222391 seconds)
    (228/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.689652172 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.950460135 seconds)
    (230/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.526668441 seconds)
    (231/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.317495597 seconds)
    (232/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.133419852 seconds)
    (233/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.67765237 seconds)
    (234/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.278167261 seconds)
    (235/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.3804817 seconds)
    (236/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.337527697 seconds)
    (237/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.34837503 seconds)
    (238/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.34898599 seconds)
    (239/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.341003668 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.408194917 seconds)
    (241/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.822046286 seconds)
    (242/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.707408244 seconds)
    (243/286) benchmarking ("sort", BigInt, false)...
    done (took 6.322312378 seconds)
    (244/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.320129782 seconds)
    (245/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.339087094 seconds)
    (246/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.8059337 seconds)
    (247/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.308883601 seconds)
    (248/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.094175996 seconds)
    (249/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.381386083 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.103376547 seconds)
    (251/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.338552725 seconds)
    (252/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.30630527 seconds)
    (253/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.347158438 seconds)
    (254/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.35035281 seconds)
    (255/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.415569389 seconds)
    (256/286) benchmarking ("sort", Int8, true)...
    done (took 6.323613089 seconds)
    (257/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.76343251 seconds)
    (258/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.422911947 seconds)
    (259/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.302166013 seconds)
    (260/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.416387486 seconds)
    (261/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.045560423 seconds)
    (262/286) benchmarking ("sort", Float32, false)...
    done (took 5.297781261 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.454725999 seconds)
    (264/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.704059973 seconds)
    (265/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.349919449 seconds)
    (266/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.66433605 seconds)
    (267/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.154557553 seconds)
    (268/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.304303934 seconds)
    (269/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.97067659 seconds)
    (270/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.305452065 seconds)
    (271/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.022991735 seconds)
    (272/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.386180931 seconds)
    (273/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.302937077 seconds)
    (274/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.229086678 seconds)
    (275/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.684505386 seconds)
    (276/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.369563164 seconds)
    (277/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.617297283 seconds)
    (278/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.681129914 seconds)
    (279/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.348156466 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.350281875 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.503086527 seconds)
    (282/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.256468359 seconds)
    (283/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.308631276 seconds)
    (284/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.352360063 seconds)
    (285/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.389419506 seconds)
    (286/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.324671582 seconds)
  done (took 930.03278266 seconds)
done (took 931.257281307 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.358221647 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.35424543 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.335619361 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.358057572 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.447509274 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.381913001 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.346879311 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.338714793 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.38402341 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.386088692 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.335002208 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.380862864 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.338942533 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.336952199 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.336755581 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.351150396 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.373179516 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.342039452 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.353933979 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.346206933 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.353246125 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.335488203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.387023338 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.380711851 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.340373935 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.341279586 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.340896583 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.356954129 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.449607645 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.339621255 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.341545169 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.349677582 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.36562346 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.339047299 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.335081253 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.357717668 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.349279476 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.347248596 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.342097146 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.370325065 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.770120675 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.35566584 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.339859855 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.339662438 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.339237572 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.343509688 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.340004842 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.345872959 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.35281495 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.354582566 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.776647408 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.373156198 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.343339038 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.340025627 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.351485763 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.339781789 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.343476864 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.358308215 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.359086325 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.358051652 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.368901438 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.346214783 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.342764981 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.356739239 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.347450477 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.77518409 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.351436167 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.346205491 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.768964058 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.363649335 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.814930938 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.367819894 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.34217173 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.35559473 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.371646486 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.377338947 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.339211626 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.341044865 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.348743135 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.339298902 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.351636183 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.355918551 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.346137532 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.341992813 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.357638289 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.387551036 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.351931936 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.343038356 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.35106213 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.361437106 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.349951125 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.352376998 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.344451093 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.337643143 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.352116865 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.346050534 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.344787423 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.345170457 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.347399665 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.35307256 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.760092613 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.380104541 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.339406484 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.340061506 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.342524628 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.356123742 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.749961817 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.359215424 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.363989815 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.391944859 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.346337045 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.36673026 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.349786441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.362325788 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.35265751 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.346714548 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.338765475 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.373353958 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.744480271 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.373714539 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.345507832 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.343351653 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.362719516 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.346646396 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.341995537 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.364116957 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.347434801 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.3603659 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.465087386 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.3558606 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.375523346 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.3432956 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.346945819 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.390624115 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.362592847 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.377164047 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.349689755 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.361989516 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.360761479 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.342541992 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.356335701 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.356518663 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.347396044 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.352224163 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.340260228 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.391776288 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.360122911 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.3593818 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.367163138 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.466659414 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.343373325 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.37362262 seconds)
done (took 226.794462632 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.405622145 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.34012272 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.427878069 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.343326809 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.442310134 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.442724034 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.340558129 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.340741943 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.33953643 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.723116565 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.341218139 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.341325388 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.342998837 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.341242615 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.426516056 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.343562587 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.340398447 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.685470695 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.344462964 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.413095323 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.342943665 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.341785452 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.342419518 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.732619354 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.345327375 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.346341496 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.413988991 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.345250334 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.694087102 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.347186343 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.339901624 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.694627149 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.433788522 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.363372468 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.355850064 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.352075819 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.444962887 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.362408557 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.426930286 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.426909637 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.431487685 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.383959987 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.346704396 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.343342333 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.346667269 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.345701157 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.343678853 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.372498547 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.345969701 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.343671277 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.69082132 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.355810344 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.353638143 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.344188772 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.344318082 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.366528642 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.3449741 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.346497994 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.434806096 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.346911663 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.408811551 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.733079528 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.727428969 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.348028624 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.341774653 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.345553405 seconds)
  done (took 149.206228967 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.414581476 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.419215927 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.45770158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.364010314 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.39805166 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.461733447 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.36464562 seconds)
  done (took 11.132460477 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.35277521 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.349239821 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.396943607 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.396042602 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.349488497 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.525638005 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.348867842 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.360643518 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.34672294 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.4006011 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.349888277 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.348194 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.355302054 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.343526334 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.395854576 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.359947378 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.461807593 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.349239835 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.35003786 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.499093975 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.34690055 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.354785918 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.413565074 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.359090811 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.350060542 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.353825417 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.151717903 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.350389039 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.346447749 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.349545307 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.347053494 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.422689523 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.350204642 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.348279172 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.348229574 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.464440812 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.349801903 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.347257074 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.351592271 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.347943127 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.35041337 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.349901156 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.351314079 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.346767754 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.350356931 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.372604469 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.350285723 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.351410031 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.34908447 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.350682635 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.400338883 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.351881858 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.348861267 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.349172824 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.405864247 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.358270756 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.350867893 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.348193046 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.351565636 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.348609047 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.502433915 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.39959839 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.353044972 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.398445481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.352257903 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.352119061 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.351937222 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.352461447 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.406086675 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.353020216 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.400647584 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.349919372 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.538243385 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.376554234 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.354506308 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.35508143 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.353966739 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353317576 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.353296531 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.358106773 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.349050547 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.352898824 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.358704055 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.35084899 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.350294686 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.517664982 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.460012928 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.350815785 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.365705665 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.359350991 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.351568308 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.406945463 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.353782136 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.351762003 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.404855072 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.46847646 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.425358822 seconds)
  done (took 155.280270436 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.357569646 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.360874701 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.356472687 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.37572605 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.3718871 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.354390336 seconds)
  done (took 9.435087204 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.355128835 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.354992551 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.355927371 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.354384982 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.3565571 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.356408645 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.3548339 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.354938009 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.359279106 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.354606539 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.356336165 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.356782719 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.356227944 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.354060138 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.355044702 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.35613874 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.356211292 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.353275407 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.356418749 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.356811906 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.459947465 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.35689755 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.355263397 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.356730213 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.360487133 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.356561889 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.364112882 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.356878439 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.357397372 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.363811523 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.374460638 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.358192339 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.356782154 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.361958171 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.359509468 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.355746972 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.361804709 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.358518503 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.354331808 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.357602409 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.357443303 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.357160995 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.356644926 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.358072635 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.358181144 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.361031197 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.361813497 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.364651581 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.358078162 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.358457911 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.358887818 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.358101696 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.35749858 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.358260469 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.359947755 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.378169611 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.363730061 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.358209244 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.35800852 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.358202952 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.360479666 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.359876774 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.359760783 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.362755351 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.355126336 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.359869327 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.358586997 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.362801143 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.358736002 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.360934794 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.361033807 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.356884792 seconds)
  done (took 100.180196377 seconds)
done (took 426.485467815 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.67482769 seconds)
  done (took 7.938472724 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.431601623 seconds)
  done (took 7.696841002 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.772618463 seconds)
  done (took 22.044376944 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.395655215 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.382339315 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.373660226 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.360909942 seconds)
  done (took 26.775782763 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.487494408 seconds)
  done (took 7.752113519 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.36136223 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.355811563 seconds)
  done (took 13.98248778 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.966274947 seconds)
  done (took 8.23043283 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.375057864 seconds)
  done (took 7.64527182 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.359015892 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.371131715 seconds)
  done (took 14.009739647 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.331772869 seconds)
  done (took 7.59595343 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.450393089 seconds)
  done (took 11.714789814 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.361826273 seconds)
  done (took 7.628284676 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.367266587 seconds)
  done (took 7.632043654 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.307752571 seconds)
  done (took 9.572385137 seconds)
done (took 161.485050315 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.353342011 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.358018125 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.356893592 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.356699038 seconds)
  done (took 26.690255896 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.394304888 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.395872454 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.399655969 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.405484692 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.397741914 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.393407619 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.387775707 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.387357817 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.405916924 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.398555525 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.40340974 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.398122817 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.39429766 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.3883164 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.397023009 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.396796071 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.405169253 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.397211322 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.387548503 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.398964159 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.362574758 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.406353045 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.398969468 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.362926639 seconds)
  done (took 34.729143507 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.883748219 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.434084426 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.516033598 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.414510237 seconds)
  done (took 7.515273014 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.415325242 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.414169777 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.427617477 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.466485047 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.492412854 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.426617219 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.390532746 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.385107946 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.370271058 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.417239114 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.491206779 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.431417131 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.499797532 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.363166857 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.569798064 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.363104943 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.364258501 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.415092609 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.467857946 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.480641419 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.364004219 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.414518924 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.418344779 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.432496244 seconds)
  done (took 35.549982317 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.363808664 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.381785228 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.362548023 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.362354354 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.37235186 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.362089507 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.363809339 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.365006177 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.36332695 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.3698135 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.362502066 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.37638983 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.363299981 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.363669058 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.370322217 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.36580302 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.370085733 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.364898132 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.363831231 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.369918413 seconds)
  done (took 28.606669022 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.358743093 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.211076649 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.710008897 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.613355915 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.357590559 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.357651944 seconds)
  done (took 27.879405693 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.434162434 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.586251204 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.365637799 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.714959926 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.810988706 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.386588311 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.367229747 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.607943281 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.918616489 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.90197312 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.424884194 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.433006958 seconds)
  done (took 20.222886086 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.366423392 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.362386417 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.364372465 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.378999331 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.420533238 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.384854262 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.373072129 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.359495838 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.421891564 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.440950825 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.387405588 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.422468775 seconds)
  done (took 37.954885689 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.44806096 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.405105827 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.293388691 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.393142672 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.08953012 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.572277061 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.373646394 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.081066984 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.386404431 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.634419757 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374161576 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.449493836 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.616810778 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.365676996 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.366052482 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.327145933 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.608167424 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.825267759 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363241396 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.375455982 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389784225 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.373582162 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.447268217 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.590847265 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.594924455 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.341674438 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.622433004 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.139057586 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643683874 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.379141168 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.373437196 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.363158345 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.637355472 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01261187 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480775105 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.573118668 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383837216 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.908964888 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.34816191 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.374524087 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.370459611 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.364835588 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.374767475 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.363549203 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.298506288 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.36888923 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.086574574 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.390321024 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.076571255 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.365422567 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.619602166 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.463415638 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.368525927 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.970064399 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.375531074 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.371557899 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.368172618 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.456798237 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956302778 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.639983831 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.382320189 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.301687377 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.376930148 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379218986 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968294519 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.387493212 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.368189844 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.36778303 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.300734898 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.385065411 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.382567201 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.513649928 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.391293157 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.017017611 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.051526755 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.393638596 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.296818181 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893245536 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.381425522 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.303955244 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.595147398 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.14451531 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.30234939 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.306728128 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.301864195 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047519197 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.375001187 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.885114993 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.387706731 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.104157606 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.600439786 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.405115588 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389472637 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.591321102 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.244720736 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.368155693 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.383123888 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.494817528 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.3895358 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.086009576 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.323970605 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.370750046 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622533012 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.579510319 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376801404 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.331671673 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.867445013 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.39933517 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.386404017 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.367735174 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.583758325 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.958193429 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402867998 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.650959354 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389244414 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.145033721 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.0838505 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.370475168 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.375306929 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.372869596 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64116857 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.100832882 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.253249677 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.437236677 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.372184501 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.369538793 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.421751168 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.220097658 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.26814441 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.564266697 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.396083327 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.383547558 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.36980103 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.320275485 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.367693304 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373068466 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.14796184 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.594747558 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376386759 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.64939828 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305315404 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.51728125 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.379442415 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.593834535 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56214544 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.395595881 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.630131075 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.383978077 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.373134639 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.385706035 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.389331642 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.470466182 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.392936039 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.370412297 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.646951933 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.375921065 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.374686494 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.536113007 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.149715467 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.375061374 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.376767645 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.373996147 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.958383392 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.370610888 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.378489893 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.261196261 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.386499295 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439258747 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.377723144 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.584010434 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.582070883 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392755648 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.39390956 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.379716477 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.598134584 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.382931817 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.400370358 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.455807864 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.847937736 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.962162876 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.405188527 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.308113949 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.083190772 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.065818161 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.372568983 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.562690437 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.373556574 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.584649981 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.408446004 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.374719511 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.946550896 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.392541551 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.392492121 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.37919744 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.38551062 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.379525615 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.374985018 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.582366265 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.673669605 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391011756 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.388406296 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.518872735 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.388138977 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.309314477 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.891817495 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.379491902 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.375012987 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.150560148 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409180437 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.408243879 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.167322255 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652817476 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.389231639 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.631845755 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.483895546 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.406987649 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.374802002 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.376043627 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.376224637 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.416339446 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.386220791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.387057339 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.395043434 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.813964007 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.944482282 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.093666947 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.913407863 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.663468088 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.394882535 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.279933376 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.082256598 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.329515349 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.033386971 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.612556005 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.106623692 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.34117304 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.855964786 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.597483765 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.152788569 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.6351131 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.608506808 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.644199953 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.395559794 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.637261608 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592917838 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411669778 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.389830924 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.308197946 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.157295516 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.928684767 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.410064616 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.456723878 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.085741193 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.396672892 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.157469404 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.421771849 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.065545607 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.782535192 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.944972759 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.765623938 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.388831848 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.380681696 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.171402622 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.40478765 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.904548299 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.984152283 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.40822608 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.85300222 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.334241287 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.5919669 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.411107512 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.375932736 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.905451684 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.393654773 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.632151771 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.637026635 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318411836 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.380154839 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.901167675 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.254664056 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.385758888 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.380696297 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.098956277 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.383485287 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.6654791 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.391345577 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.600879465 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399779367 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.315440511 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.315272416 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.073502699 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.383676987 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.35457098 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.853318527 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.385127935 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.410619874 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.384269322 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226314943 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.63673634 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.394655479 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.953318956 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.626012656 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38025057 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.421641691 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.384233081 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394880006 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.362936091 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.277466578 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.618230579 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.394894562 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.60463376 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.326522374 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.282286726 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478914888 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.596449452 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.263920597 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.390836764 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.624921749 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.111923435 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.401625764 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.09783246 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42633625 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.382185368 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.396498696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.382792241 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4211918 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471405796 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.596544211 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.414924408 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.39344582 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.789765498 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.405046623 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.386172682 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.396911326 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.476373243 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.709802904 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.603545835 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.176014245 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.961008824 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.12562263 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.983009511 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661797204 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.388313292 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393023898 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318270156 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.53233298 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.910952887 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.658254404 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.513896972 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.402565929 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.407223399 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39124844 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.389095864 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.599371967 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660921298 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.709566206 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.386572882 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.04817553 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.268216507 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.398285846 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.595786487 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.861330359 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.928013638 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.503949307 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.385428526 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.115485711 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.681256613 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.476298042 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385976664 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.977201042 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.392321922 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.094058355 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.392207534 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390542548 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.534505808 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64325728 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.04806674 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.417926614 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.541750485 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.158881581 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.443775446 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.641090347 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.859149402 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.604269633 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.98512123 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.095291243 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6534168 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457860854 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.60141965 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.511786953 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.535304234 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.398708025 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.283779896 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.388569761 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.230826684 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.097125848 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.397666128 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.969673158 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.667866759 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.392148074 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.385542599 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413537917 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.398280738 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.611488998 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.089649626 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611496923 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.397895106 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.391826403 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.379243751 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967201629 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.667380385 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.327098565 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.392617145 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.628034635 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.642873018 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413364618 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.842123281 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.100019902 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.923585935 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.363197903 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410219019 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.399945986 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.085850922 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968494914 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.635642397 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.879800882 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.050209021 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.405354049 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.666538812 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.394195016 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.38887221 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.668590417 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.392867356 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390704459 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.610649008 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.981828839 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.170954949 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.40605018 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.470524542 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.327554065 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619001542 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40612636 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.325924749 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399501058 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.804018333 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.414472214 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.520894058 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.402073226 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.388494945 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394173777 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.15365973 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.673466921 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.396822557 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.390713248 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.372149653 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.393328574 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.489963009 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952021869 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.416842325 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.066408359 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.741984452 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.646954431 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.3916756 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.374227924 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.397322078 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393019411 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.109140784 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.361551698 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390480548 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.93664727 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.395533027 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.406151074 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.396991769 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.607889034 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603357879 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.396572822 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.611265213 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41821231 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.410530342 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.293032088 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.160881177 seconds)
  done (took 1678.538863067 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.42161073 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.401216071 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.434075757 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.415220205 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.439489142 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.41536932 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.431203971 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.492364041 seconds)
  done (took 52.75282609 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.395800393 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.552305492 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.424402719 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.403861307 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.405183146 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.406815357 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.86357579 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.415267274 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.404550651 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.404190341 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.394512293 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.399515109 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.062121741 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.424068373 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.399234746 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.386420822 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.402738698 seconds)
  done (took 66.453568527 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.408121999 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.738074684 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.258379515 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.459232232 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.435474734 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.397552791 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.956288417 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.424463144 seconds)
  done (took 59.381826558 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.405833483 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.406492442 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.407506134 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.407169335 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.408113093 seconds)
  done (took 8.339618232 seconds)
done (took 2085.884814534 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.400771699 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.402681951 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.400559098 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.402945963 seconds)
  done (took 6.911279836 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.375767774 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.112643193 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.375501701 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.392959122 seconds)
  done (took 18.561297532 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.409142254 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.419837556 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.08945106 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.03019207 seconds)
  done (took 5.425629404 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.157542654 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.159847177 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.143233651 seconds)
  done (took 7.764491042 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.397371276 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.399109156 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.400174078 seconds)
  done (took 20.501702016 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.685856731 seconds)
  done (took 2.991262115 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.544926997 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.593682937 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.715297307 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.719496222 seconds)
  done (took 7.87908201 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.791265194 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.770556457 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.602993751 seconds)
  done (took 6.470082311 seconds)
done (took 90.639873136 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.175018885 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.40005145 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.604640829 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.148045921 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.630963631 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.605014588 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.813991676 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.115779504 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.658192278 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.646544683 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.147956829 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.627767136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.546995118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.399879816 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.548142666 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.643283794 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.628189321 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.216608751 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.871176192 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.031498355 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.822265943 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.786729854 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.980759957 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.808036165 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.62765946 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.554663385 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.366956786 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.645020365 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.040968655 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.384569737 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.556705674 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.204925322 seconds)
  done (took 193.546648964 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.400811051 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.405261146 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.399122502 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.415399884 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.402547812 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.398552739 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.416087224 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416140619 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416777641 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.409232522 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.399654715 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.399036713 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.417472815 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416267719 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.401065751 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416275744 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.412762575 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.399794505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.416886731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.41742281 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.402029635 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.400488216 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.399370047 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.407710447 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.402434273 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.400147193 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.401178407 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418246567 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.399976392 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.400150497 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.400872945 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.411127368 seconds)
  done (took 206.329620563 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.401325149 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.400958373 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.40345794 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.40164908 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.400936076 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416007583 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.404027794 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.425625243 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.405789757 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.400632249 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.401411548 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.428097826 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.403878552 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.402497933 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.403877712 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.412622125 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.40227048 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.418617141 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.428424368 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.403080983 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.403964441 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.418916613 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.402384935 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.418173079 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.403434802 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.422386199 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.418694614 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.418094235 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.405732411 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.402653364 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.417400876 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.419665578 seconds)
  done (took 206.427893853 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.606337466 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.409525914 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.410844937 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.364564133 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.410789426 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.410315069 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.408276864 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.600138767 seconds)
  done (took 14.932746622 seconds)
done (took 622.545224922 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.715076604 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.424469543 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.607667835 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.431415451 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.165553205 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.450153445 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.430986732 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.601090858 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.334764961 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.60604327 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.673125103 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.446026997 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.819989948 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.431524869 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.688819533 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.53483538 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.278728212 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.39594821 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.754217186 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.955513097 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.688259488 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.867576128 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.619356064 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.328975814 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.831818174 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.867354709 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.14036793 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.262081219 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.448130274 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.753944204 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.093831556 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.395048645 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.472144887 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.491362932 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.549617099 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.532351122 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.368885818 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.489034104 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.629239952 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.626568772 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.942104942 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.15302211 seconds)
  done (took 94.609791187 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.394912672 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.396116556 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.394468741 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.396797361 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.397735027 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.395551921 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.394614165 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.395382883 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.396785283 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.394790336 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.395591547 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.396513778 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.394995072 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.398093773 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.395711769 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.395817767 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.396740448 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.397829714 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.396780866 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.396018052 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.397739943 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.396394102 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.398543317 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.396865413 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.397597735 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.396747983 seconds)
  done (took 37.620461007 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.415627947 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.656831655 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.824479206 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.422242328 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.415815217 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.420516739 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.493313323 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.419018297 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.419309093 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.420539306 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.582381554 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.419999231 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.452498356 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.848967635 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.419290039 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.417040824 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.417772773 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.415177916 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.666379874 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.42683996 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.517066689 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.418898419 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.495293954 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.42791702 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.44209292 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.418863699 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.42295097 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.979549607 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.43916469 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.584848113 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.204161699 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.495836412 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.92243459 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.853980927 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.209012675 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.421737744 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.41831013 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.588382268 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.420923568 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.419513719 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.496949632 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.41954418 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.840456778 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.072830029 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.43752556 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.420724446 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.997142581 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.607462802 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.661408467 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.427458279 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.861995344 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.422754716 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.421742101 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.42117532 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.661410493 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.425587837 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.419728511 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.979508465 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.442709125 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.498362125 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.421246475 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.419220573 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.674922403 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.420884594 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.663913754 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.422496782 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.428045058 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.439494579 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.843307031 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.425706521 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.096948027 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.437022936 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.421440374 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.586222914 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.664349332 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.030940399 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.442882228 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.679666355 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.9381936 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.514373879 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.424761692 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.969272032 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.519515834 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.425239689 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.423492686 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.4235845 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.421545709 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.467213156 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.495305893 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.038761873 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.111568267 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.01151111 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.521806942 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.42990357 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.422452419 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.984973716 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.442667079 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.423353673 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.83822 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098736 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.442268003 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.430076657 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.101035224 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.44510499 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.501175501 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.428375529 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.851801628 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.426722657 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.470097568 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.423064419 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.430511372 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.44621614 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.500563259 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.42900931 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.423605032 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.072704151 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.618223099 seconds)
  done (took 186.638065933 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.419629937 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.434089766 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.417571315 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.435270657 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.418800547 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.425792312 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.418553401 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.417500987 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.422684957 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.417057549 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.418811689 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.415807851 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.419856618 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.421393771 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.449160776 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.426185386 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.031472349 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.419106293 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.419330632 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434649018 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.215486354 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.421880485 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.417861505 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.434801797 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.418366495 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.419132706 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.424157061 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.440641602 seconds)
  done (took 154.600148666 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.426012824 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.979207225 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.445019187 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.555492784 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.450603542 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.42440091 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.553345558 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.483595011 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.446549634 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.424503156 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.42438938 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.722823993 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.428122832 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.933108895 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.614824786 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.576267864 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.931078679 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.443744349 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.424349702 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.424628763 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.558808542 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.429563955 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.725060983 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.982529928 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.445104645 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.980695521 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.410502448 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.428382506 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.425602017 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.982610944 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.442393978 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.725123089 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.505078273 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.487089648 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.99918899 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.949871187 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.951630818 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.574234371 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.428892174 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.425309578 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.425315131 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.40996147 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.984757527 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.445811176 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.427524283 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.971915835 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.447561515 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.428994976 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.432421988 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.425565434 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.485670678 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.505331514 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.745969357 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.98970931 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.522293409 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.442799367 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.55890111 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.807832615 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.431966759 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.936186092 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.411035849 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.989454134 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.447334453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.410928743 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.428632001 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.435842475 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.576940162 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.563125702 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.938266503 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.446461971 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.935607229 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.595193155 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.430769861 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.428210187 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.430251908 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.989520056 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.955585432 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.596101005 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.565552786 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.625262356 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.416605773 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.429782791 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.41316991 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.508604797 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.433219586 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.991440457 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.9558329 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.446889084 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.432204848 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.432492315 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.432643339 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.604359889 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.012870088 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.525422757 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.927228753 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.747759924 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.732917387 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.432250853 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.488102592 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.445821878 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.734341939 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.433681558 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.487827003 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.870379543 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.734846991 seconds)
  done (took 169.396268494 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.679827848 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.613163397 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.524382913 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.577868215 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.026509069 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.006475096 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.745142315 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.584893676 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.542336514 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.696499198 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.579092745 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.527070809 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.651033208 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.514060752 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.184279602 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.523180846 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.540608375 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.581637629 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.591980575 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.442666029 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.109164036 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.717001402 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.624471447 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.31932303 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.528480522 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.186787027 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.997078442 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.963109556 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.603973308 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.728009041 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.969643548 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.547315176 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.396030179 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.135090734 seconds)
  done (took 68.291534855 seconds)
done (took 712.469804949 seconds)
SAVING RESULT...
DONE!
