cset: moving following pidspec: 21254
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.341936748 seconds)
loading group "string"... done (took 0.48677448 seconds)
loading group "linalg"... done (took 8.036577265 seconds)
loading group "parallel"... done (took 0.175796085 seconds)
loading group "find"... done (took 1.297363415 seconds)
loading group "tuple"... done (took 1.995654257 seconds)
loading group "dates"... done (took 1.342148526 seconds)
loading group "micro"... done (took 0.248413854 seconds)
loading group "io"... done (took 0.68389917 seconds)
loading group "scalar"... done (took 42.551953652 seconds)
loading group "sparse"... done (took 13.179128743 seconds)
loading group "broadcast"... done (took 1.179881912 seconds)
loading group "union"... done (took 14.690122234 seconds)
loading group "simd"... done (took 5.165505429 seconds)
loading group "random"... done (took 10.375132764 seconds)
loading group "problem"... done (took 2.057992095 seconds)
loading group "array"... done (took 24.243089813 seconds)
loading group "misc"... done (took 1.449089687 seconds)
loading group "sort"... done (took 3.618152192 seconds)
loading group "collection"... done (took 19.766413703 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.52669976 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.147717198 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.138521875 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.163245246 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.233037108 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154711279 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.161738353 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.100652878 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.944296001 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.190630987 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.155344835 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.52576896 seconds)
done (took 5.176994108 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.244711332 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094195756 seconds)
    (2/2) benchmarking "String"...
    done (took 0.109079139 seconds)
  done (took 0.853326794 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.079285025 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.147773615 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.096131093 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080955138 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.097213112 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.097722088 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.080967607 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.095727683 seconds)
  done (took 1.355060773 seconds)
done (took 3.20680829 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.745342956 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.286847584 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.209027974 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.496157746 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.181419914 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.216101245 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.681988456 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.369763042 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.261639507 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.098870401 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.149937593 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.390375765 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.139532443 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687945145 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092690329 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.127759636 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178035704 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.494415257 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082832209 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.112713848 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.117510458 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.143665705 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129130754 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.094198359 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.187621744 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.084039369 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.195759133 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.10951678 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080173877 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.286568271 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202835054 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.692896843 seconds)
  done (took 11.012336802 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.115031353 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.137454535 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098524412 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.140055745 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.137696172 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.101433362 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.086322873 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.097887765 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.125483667 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.180718366 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.134455503 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.127546025 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.09594801 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.100688663 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.106275571 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.247304836 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.123604829 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.123458602 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087056889 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.107259396 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.124788895 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.115408461 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.112039547 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.110365981 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166871676 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208088977 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112707449 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126072991 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.097724109 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.114346152 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.142982545 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14582734 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.096627102 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.082214192 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.175059849 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.126480453 seconds)
  done (took 5.195596467 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.191114302 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.122462911 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.174310018 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.164717567 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.148916417 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.160806309 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.11571449 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.25167392 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.204151267 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175694097 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.146687404 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.101546361 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.099728154 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.087681131 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.113163823 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.098981617 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.609241442 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.163952607 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.136537171 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.118767008 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.091860871 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.102348309 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368298691 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102991307 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.081224324 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100971714 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.067222036 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.17065618 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.101075958 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.168754422 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.120862398 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.082108717 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135311237 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.205901977 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.126795994 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.123846513 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09840888 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.097145608 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.179720826 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087537291 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09725917 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.106921142 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136450031 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137665521 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.100976241 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.096362829 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.213480928 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.081021321 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.114346043 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.987149622 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.179468762 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092999807 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098267958 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.332631848 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097948265 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097680938 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.080248889 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.287137387 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136260339 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.114932471 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.100252832 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080968298 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098097211 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.083434074 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.405634732 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.081898676 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.654111308 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.081039723 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108196979 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082224018 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.096775992 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.106836427 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.089739886 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.117167592 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.08180816 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.099831555 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.082154736 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.097476836 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.100867554 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.078748634 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.111732871 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.079024082 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101813538 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.082090999 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.164732514 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.080398757 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.114198855 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.129953379 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.086062498 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.095717735 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135401389 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097118048 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.083690277 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.138660209 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083276266 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.110252572 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098706631 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.141775472 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082582538 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.201401031 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.090681594 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.126821491 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.09907118 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.115518307 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.109316925 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.100482937 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.086382087 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.096146065 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.080238899 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163698325 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.080780166 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.095478512 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.100914816 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.095560326 seconds)
  done (took 22.806471019 seconds)
done (took 39.666793132 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.352689088 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.104933384 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.10535484 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104734342 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102720031 seconds)
  done (took 1.50992264 seconds)
done (took 2.225776053 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.279756664 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173984403 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.096273943 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.171747193 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.078015144 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.194967595 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.162498111 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.113605058 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.18637774 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.094863166 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.167714334 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078139229 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094947625 seconds)
  done (took 2.631531668 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.097907013 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.117807348 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084564367 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114783374 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079150932 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.113934798 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.112278896 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103040275 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.111909758 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.087127191 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095154371 seconds)
  done (took 1.829255257 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.09680654 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115581556 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.084118847 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112264453 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.0786955 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.112358868 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095221688 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118287947 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.112242425 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.088303034 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094804661 seconds)
  done (took 1.819970069 seconds)
done (took 6.983676751 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.096714023 seconds)
  done (took 0.805096559 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.010636602 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 11.633718657 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11676482 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.158035232 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.314596764 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.206563483 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.55969153 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.130573011 seconds)
  done (took 15.060986528 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.151391362 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088668093 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.105912925 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.086727324 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101286173 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.10281432 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.086078242 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.101010751 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.087619946 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.103312962 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.10205403 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086124948 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.100605314 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.084983416 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.10069043 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.087739488 seconds)
  done (took 2.351755103 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.122542451 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.121768565 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.108626258 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.110253259 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.106009733 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.089161564 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107626457 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.106855402 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.087949544 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.103781616 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.108557095 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.09201992 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104511868 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.082449871 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.109408319 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.109560679 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.103827677 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.091971317 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.108357835 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.108550162 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.093109638 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096363688 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.105020365 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.092464501 seconds)
  done (took 3.292742551 seconds)
done (took 22.223757262 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.163835268 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.110398045 seconds)
  done (took 0.991094442 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.105266414 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.119794841 seconds)
  done (took 0.946832275 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110249713 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096054671 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.136191159 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.117112172 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.082603137 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.096769421 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.130931384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.082536576 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.097627816 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.09762782 seconds)
  done (took 1.771184578 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.089485749 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.116118671 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.107379176 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.103827218 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.110590031 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.101833511 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.096952957 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.104258325 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.118777202 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.083211515 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.10723436 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115248818 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.091197053 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118106905 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.113012826 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.105623309 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.094112437 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.104326284 seconds)
  done (took 2.602880442 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08381067 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.102285679 seconds)
  done (took 0.911975482 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.086656796 seconds)
    (2/7) benchmarking "second"...
    done (took 0.097813608 seconds)
    (3/7) benchmarking "month"...
    done (took 0.086265026 seconds)
    (4/7) benchmarking "year"...
    done (took 0.101383723 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.097995084 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.08255457 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.098177606 seconds)
  done (took 1.368889214 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.486336692 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.138250104 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.262411096 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.087522377 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123655789 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.31387591 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100047402 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.104447419 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.088098456 seconds)
  done (took 2.484465237 seconds)
done (took 11.797975426 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.095995512 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.120660288 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.118775835 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.498494015 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.123902399 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.083363333 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.162705306 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.25564611 seconds)
done (took 2.190299673 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.153912917 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332947066 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.119785919 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068710281 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.097871748 seconds)
  done (took 1.352036573 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.08182605 seconds)
    (2/2) benchmarking "read"...
    done (took 0.10069188 seconds)
  done (took 0.913076413 seconds)
done (took 3.149974089 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0831828 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.131205698 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.081426714 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.09744121 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.082447938 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.09736869 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.096965159 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.081792659 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.09761568 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.081972891 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.097402156 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.082427598 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097506135 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08007781 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095058103 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082815032 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.09707892 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.079894508 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.095735916 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080312926 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.095461108 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.081811562 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.095296093 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.079882133 seconds)
  done (took 2.938374045 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.11098111 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.09902451 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.104365195 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090253902 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.101295117 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.102891331 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.088250469 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097913058 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088458438 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.099916685 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102191387 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.086453864 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100000204 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.086701393 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100322427 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.101911607 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088568982 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099161822 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100810373 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087230844 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103827514 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082526638 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101967723 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.104204508 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086590861 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102085916 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.100493613 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.083267669 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.10372746 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.086758141 seconds)
  done (took 3.629066761 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.088496895 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.095042038 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080784245 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102911438 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.079684226 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.100891692 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.08039867 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.09670527 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081558819 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096125692 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.082317175 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.096140228 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.080959064 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098610165 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.098679556 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.083868322 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.109679793 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.081044704 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.096806 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.081086409 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.100573982 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.080607317 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.099523249 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.080856538 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.096936387 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.080207108 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.097155197 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.096739689 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.081981257 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.096823801 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.083582219 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.09961306 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.080773132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.103577797 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.084483204 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.096787919 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084020631 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.09615051 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.082102428 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.09617667 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.080006218 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.096062942 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.081148042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.103697735 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.083596274 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.100060842 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.098474586 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.08308659 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.096203706 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.084506343 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.096247627 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.080353285 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.09817811 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.081866262 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.100167456 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080669381 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.097862805 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.096094375 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.082256094 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.09623894 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.081122436 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.095887992 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.082957115 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.097452752 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.097421817 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.103438601 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080489167 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.097859268 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.085206428 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.099497099 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097789728 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094512952 seconds)
  done (took 7.300302809 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.085704268 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.10656464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.082389197 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098020491 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07866435 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.097562307 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.100173212 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081552633 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097746588 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.087118767 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09722059 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.097807824 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082393898 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108883176 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081918773 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098768997 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.087502133 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094518649 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.096114246 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084792251 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097278725 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.084935549 seconds)
  done (took 2.771904991 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.220786963 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.10686625 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.14356407 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.123640501 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.099425152 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.112332639 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103042944 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089016385 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103008987 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101507927 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086701302 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104131678 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.089942645 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101081426 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101214694 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.087917144 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103961498 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.104395666 seconds)
  done (took 2.727994007 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.096810341 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.09939563 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.121276171 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.083671857 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.100353787 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.086206216 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105492778 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.120450513 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08575349 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.099642878 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.109359995 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086238214 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.102678586 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083873849 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101913877 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083501681 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102658119 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099861938 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093556809 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.105254134 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.105648706 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093068694 seconds)
  done (took 2.91218083 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099490455 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102230019 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.120286866 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086899186 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095476781 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.082095094 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106683752 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.084317857 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.10809074 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.101447759 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083207823 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.097774913 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.089831316 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100188648 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.105510352 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.083929368 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.101421516 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.083758539 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101664515 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.096019008 seconds)
  done (took 2.676758165 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.108442581 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.101421717 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.101621041 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.094905405 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101113519 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101424188 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.09501017 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101217591 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101459875 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.111476952 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100989178 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102379272 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.094981699 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107037643 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101827278 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094481545 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.22403377 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.110558983 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102522774 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086097301 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.12665391 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.102212587 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09564329 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101381744 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101908057 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086095165 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101327639 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.107563963 seconds)
  done (took 3.711777043 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084360548 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099710276 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.081547454 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.098006545 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.081464316 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.097345551 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.081766462 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.09703064 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084497208 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.097409765 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083073506 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.099637047 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084721349 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.100001978 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084217757 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.099433506 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086780495 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.097035203 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08147326 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097261789 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083460455 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10035819 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.100076888 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.081391394 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097802146 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.084057039 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.097106927 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.081913943 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.099705309 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.081070769 seconds)
  done (took 3.471678896 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.093762257 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107824118 seconds)
  done (took 0.954205659 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.08276965 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.117435021 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081583539 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104310385 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.106267221 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084211039 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.109214231 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08924214 seconds)
  done (took 1.526431146 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.101989828 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.115308805 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.085109264 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.113914639 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.114729106 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.100255313 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.16211497 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102002785 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.090244634 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099049674 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.117792145 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.083059658 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106830925 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084388127 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106050939 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090610019 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.09876459 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.107857306 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.087657684 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.099274352 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086275838 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111885485 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103292249 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.08076337 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.102420464 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.094891965 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.110341755 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102101745 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.088392649 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110827948 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.090132571 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.094789224 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.08454162 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.102119835 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.099359649 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097478722 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.114643102 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087090902 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.110087374 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.102350964 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.11320004 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.095969307 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.106878451 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091099417 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.114733712 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.085773545 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.101788963 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079865433 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.098212729 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087527305 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.097000323 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.10105555 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.079439358 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.108219599 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088967427 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.114725533 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.100142131 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.086220763 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.103771828 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.08802433 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.107576676 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086935588 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103356908 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.100431233 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.091927089 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.105147294 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.091502888 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.096406761 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.079084362 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.099422869 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.110139583 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.107831073 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.110478735 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085819418 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104160553 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099309377 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.088988976 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.102774027 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.09203679 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.110151462 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.101943401 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.109708766 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108583614 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084697199 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.10474881 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.110410641 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.083157953 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.104037368 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.081801505 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.117217299 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099734749 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.082956528 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.098612595 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.093266251 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.105453617 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.084529507 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.099686999 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.109202213 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.078885583 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102952807 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086331833 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101964715 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.094740767 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.107921066 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.108181059 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.092115493 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.111734105 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.102000465 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.088024222 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.098225655 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085979934 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.104011482 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.092737578 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.095513647 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087840069 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.104205473 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102211577 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.092188266 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.099774464 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.08514424 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109736425 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.109665705 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.083272707 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098168035 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.088519886 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101773609 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.089220621 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.110512408 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100303199 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.080044801 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.096858624 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.089968904 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101814424 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.089342854 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.108688603 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.104935227 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079377009 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099433978 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.090473146 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.10950895 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.102191433 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085664165 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.106302749 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085595568 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.101261706 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.090018142 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104571736 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.101227051 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089778159 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.103292714 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.080464557 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106182597 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.087918398 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.10114127 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.105578827 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090054513 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103581932 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.085958742 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100692645 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.108654303 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.088002557 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100889373 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084873026 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100328021 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.094695211 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.104651876 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.080750256 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.099699998 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.110222119 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.083007227 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.101540556 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083802817 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.10474981 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086813088 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.100551641 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.101266828 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.086605278 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.132830096 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106952778 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087054859 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.108064695 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.095900871 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.10260972 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087009159 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.102089722 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.104207562 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.086485816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.109122065 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.09128948 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.108540222 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.104621525 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.082117785 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107705521 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093512677 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.101592222 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.084010399 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.101856343 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.106060585 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091764228 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.105963208 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.087343457 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.100505206 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085431784 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107082598 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.105470092 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.085713728 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.101375063 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.090985057 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.102110975 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.109799889 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.086264121 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.111291649 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.0888923 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.098226175 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107461486 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.083054726 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.108115984 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.080925377 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.100006706 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084328703 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.104090219 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.08517384 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.105824215 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.096885615 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.094116415 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110865517 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.084990992 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101296157 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.085484705 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111424977 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.104019703 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.088716986 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.105554768 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.090988129 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115823056 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.102232184 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.088888327 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.112481381 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.086234037 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.096664174 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.108811432 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.084183699 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.102106813 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.086164371 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.100291656 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.089010739 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.112739835 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.108737639 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.079913316 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10581019 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.084420911 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.101688521 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.081875663 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.109364472 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.105849233 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086908935 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111809901 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087695128 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.103695713 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090367978 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.103245601 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.104712599 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.087523555 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105664037 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.087489123 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105748241 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084663536 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.105435666 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101673967 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.083375884 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.105486803 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.086356299 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.103194486 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.092263072 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105064603 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103085829 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.08927638 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104516376 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.086741844 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.103867702 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.085644299 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.106449799 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086256457 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.103669835 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.106469219 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.082071265 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.110385819 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.086124158 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.111098185 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.086881204 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.100029321 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.1085767 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.08805421 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.108332483 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.087296542 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.104515832 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.104768611 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.086044675 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105902601 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094487712 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100779164 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.094446967 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.109853952 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.104024864 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089040334 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.103236147 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087417924 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.102010246 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.087515992 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.104602523 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.103624335 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.085752672 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.108559943 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.089161645 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.103545373 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087629041 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.104784104 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085309327 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.104718054 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097660399 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084931368 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102621135 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.086765418 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.111442886 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.087358481 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.107378292 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.102964756 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.088108835 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.103663472 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.082713274 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.11239359 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.113742532 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.087894283 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.112388 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085339908 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.105569288 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113964956 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.080862469 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101652503 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.084330596 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.10158425 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.093527909 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.1051247 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.111548173 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.086020763 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.103333468 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.083940174 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.105564095 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.085051129 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097914502 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08475171 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.106128926 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088620727 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102923895 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.104182927 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.097372254 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105382741 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09322946 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.103615515 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.087723596 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.105162734 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.101349298 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084997889 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.103037901 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.08966496 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.104681739 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.083917119 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.101473149 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0855654 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.105457315 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104448461 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.085609334 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.106063396 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093979136 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.104664801 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.089488439 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.108155202 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098837316 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.089878194 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.10344335 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.086646948 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.102983107 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.090444025 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108261119 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.106063431 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094356456 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.104108729 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086831062 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.104987355 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.084561743 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.103684958 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.104097321 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.087706679 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.103567742 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.089130862 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.113018241 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.084252336 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.106474805 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.085864228 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.105432325 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.108301913 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.088203356 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.10559658 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094664737 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.10985925 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.107834799 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.092827716 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10892011 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.09060353 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106000303 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.106906451 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09274079 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102859029 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.095755979 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.105130524 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.088584832 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.106118521 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.102547968 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087241782 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.104714532 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.086244968 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109560162 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088072249 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.104127287 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085237629 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.10248574 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.106561339 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.09159555 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.113168678 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.088976086 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108234487 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.081611782 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.10264021 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.106638262 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.084802236 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.106254286 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.089034047 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.111272363 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.088783314 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.105004244 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.104005197 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09457372 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110818044 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.091629135 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.103064324 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091190769 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.10627567 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.107768501 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.088945109 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.105745691 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.089127398 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111356067 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.087783721 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.104871914 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.113071558 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.090579376 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.107354383 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.08757267 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.10599119 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.087277887 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.10098318 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.107588325 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.088936312 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112071442 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.089461013 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.105999979 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115362961 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.087137251 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.105438202 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09132698 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105096416 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.094269597 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.101403669 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.106082783 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088787995 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.107801739 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.082572997 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.105828108 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.084150856 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.108298416 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.086158062 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.100732206 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.115658876 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.094569062 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.107282139 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.086065148 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.105652169 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.082264443 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.101928782 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.104339357 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.088967476 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.107019757 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.095820818 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.104669488 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085575811 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.100929339 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087135476 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.109331435 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.109310331 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.084393513 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.101413462 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.085350639 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.108964584 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.093764832 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.104922115 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.105459961 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.091280397 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.107853364 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.084983099 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110998574 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.084911781 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.110009892 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.116565837 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.08809229 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.10668308 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092601986 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.114107497 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.108090572 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.082639661 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.106789337 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.089540662 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.105602078 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.08842532 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.107878526 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120146866 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090743001 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.104780887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086133304 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.108794828 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.085856013 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.113084193 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.107728194 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.08921397 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.110564473 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.089500403 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.116017226 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.108574117 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093126461 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.108569704 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.089256158 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.105661072 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086883347 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.105025753 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.104520303 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.088935682 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.106658788 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092398746 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.115257267 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.106202473 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097301229 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.114915565 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.092574166 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.10337891 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.086327098 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.107127627 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.101296164 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.088483348 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.104559896 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.086437252 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.104773694 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.087086636 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.10693266 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092724315 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.108240446 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.108365116 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.087998226 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.100378456 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.089826556 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.109340524 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.087864281 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.104387644 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088240698 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.10815191 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.112694048 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.094442472 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.10683647 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.088878313 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.108051574 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08833028 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.102355599 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113517246 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.087487834 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.109403958 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.087450911 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.107508317 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089374175 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111452989 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.11317842 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090583977 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.109733524 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.100486835 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.109457651 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.103647429 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.086265931 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.113024715 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086042805 seconds)
  done (took 59.449947315 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147111999 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093116646 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102135081 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082315686 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120158005 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.103834887 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.083116092 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.103606943 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.084045409 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.108660362 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.083018648 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101285599 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115767881 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128970848 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.099601682 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.108400919 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.099544135 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.082216798 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.101118379 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083464058 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115900384 seconds)
  done (took 2.944670666 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105468866 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.116776187 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.11462381 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119192546 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090138372 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.11538134 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.114698729 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115969763 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099931699 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.110474405 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.118009939 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114698581 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.091417618 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112533418 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.110234079 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093925778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119851395 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.10994073 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116288072 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.09615499 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113333729 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11665466 seconds)
  done (took 3.208703657 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.09824015 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.10642188 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.090681212 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.101251942 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.087026777 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.101763576 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.091202593 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.104789806 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.110771809 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.085899005 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.105720986 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.086386623 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.11112832 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.082160569 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.106082026 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.084779943 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.155666539 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.109193986 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.106416384 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.088285989 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.101088122 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090029244 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.102540314 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.083338353 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.105764043 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.103649011 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.108324012 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.104167987 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.086857841 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.10448276 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.087194685 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.104497238 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.088129679 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.106626854 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086190041 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.105250821 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086626637 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.106436714 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.101958082 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085721081 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.107164856 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.083052973 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.107098629 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.087477462 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.10512224 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.08495536 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.108152317 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.08692951 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.102373701 seconds)
  done (took 5.628560012 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.107192253 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.163236892 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086722717 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.146343601 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12338517 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.115413729 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.08990634 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.146631377 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.105752464 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.086111029 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.125925248 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.123280195 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.10679854 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.092816747 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.110576311 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.107059271 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.08798719 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.106270487 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.112224263 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086217324 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.112252117 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.11276537 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.102115463 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.121517877 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.111572321 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.08650476 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.107717959 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.112709354 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.12138151 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.094305759 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.112690902 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.112959009 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.104916597 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.11124767 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106183844 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.089257515 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.127002159 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.107330814 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.090235021 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.104760151 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.109015094 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092699155 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.114187605 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.125464676 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.08886792 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.112242796 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.106647386 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.083672409 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.119909594 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.108327784 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.095928354 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120847429 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.11015564 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.105766786 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.091731735 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.122344391 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.105731052 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.083503641 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.109702256 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.118744799 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.081561611 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.109145338 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.120959939 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087103104 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.114276315 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.118989715 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.107998257 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.090459339 seconds)
  done (took 8.277279196 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093595437 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.1107574 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.120401266 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121387997 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091191327 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110754176 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111248203 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091776675 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.110608768 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.115648537 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111112118 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.138300789 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086788454 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115641657 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111601202 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094328806 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113780632 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113809456 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.113585973 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.093393011 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.114336964 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121772478 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.112200975 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100820115 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.14086408 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.106111946 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.110348118 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092693849 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121268233 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111519459 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124325396 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092482232 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.110395681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12096004 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124264197 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.112290577 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.083965341 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.112825809 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.112776988 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092030385 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.107643175 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.12266153 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.091888082 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106328624 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.111717056 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.092321464 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122048434 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.123631521 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116120596 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.117775596 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.092409856 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.120839263 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110844853 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.111610907 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.119975329 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147302813 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100523686 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.121308252 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111063416 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121248139 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.120665884 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.128721502 seconds)
  done (took 7.715669252 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.114319202 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11795115 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.12410692 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.100085727 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083276053 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.113861128 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.083811703 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.104266947 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.120573667 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.09922132 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.121206156 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.11127125 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115035719 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.100280491 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110919021 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.115409 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.112156361 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.091857211 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.117973845 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111766549 seconds)
  done (took 2.977340114 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094545754 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.125974234 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086104494 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.111222893 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.1088336 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091587119 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107637921 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.108052823 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087266712 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.109650935 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.117092271 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.097491792 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105745699 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.112020647 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097225023 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.11378383 seconds)
  done (took 2.483870152 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097353882 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.117444426 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.124480397 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.087438313 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.107084003 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.105495819 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.088016668 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105228327 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084848052 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.124471606 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.109082617 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.092306011 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.108425029 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.086357595 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.105974109 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091906124 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.105872747 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.106980439 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.088183779 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.129313068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.119721402 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08810406 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.108987843 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.090550871 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.109257268 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.113998248 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.088597002 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.10839215 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.086896872 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.110118092 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.108556017 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.096283981 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.105019126 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.087661287 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.10735801 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.106090916 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.08586669 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.107698369 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.088825115 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.105627922 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.08437139 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105044163 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.104893278 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.086548704 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.101149813 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.0852545 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.101152058 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.111136234 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.084578266 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.105667419 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.08553869 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.108096375 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.106018196 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.097533081 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.109198582 seconds)
  done (took 6.378027629 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099546889 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.108820494 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080275381 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.105198613 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.089029033 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.107267149 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108941789 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.08770101 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10997349 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084881625 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10922446 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.091666208 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.108184176 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.110896603 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087581065 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.110096501 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082586107 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.111419213 seconds)
  done (took 2.608736886 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.093132776 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.10882974 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.094826205 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.109092015 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08819075 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.111336852 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.102128683 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.084426213 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104302209 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.085928838 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.106614973 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.08862173 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104829846 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.088263383 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107531162 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.105584417 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.08912655 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103722154 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085824328 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101466954 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087998858 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104061752 seconds)
  done (took 2.975935986 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121824393 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.128258019 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.097554725 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.23594852 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.107873357 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.135886645 seconds)
  done (took 1.647520514 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109660149 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120382927 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.106764095 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10727389 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115835585 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107693711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.087820595 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109572269 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117908808 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123187785 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089476244 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120517727 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118473398 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118979967 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096399447 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1160676 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108822264 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08880268 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107428249 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.129784835 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090133109 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118111196 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.107350032 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107903274 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08808902 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117806548 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118398487 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122553724 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088073497 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.119635786 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116497249 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.109052662 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099158526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124106596 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111154296 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120796593 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088150306 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130539881 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114004427 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119303352 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.090352711 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116262586 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117626172 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114234372 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098770468 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108151988 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113764651 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088189986 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108596044 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.137049904 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115679252 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117363862 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095049905 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118178005 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118690645 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13690843 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.122917581 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118835368 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.095599656 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123659041 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117859641 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114650433 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.11816966 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102870071 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.116316323 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117914395 seconds)
  done (took 8.179798926 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104659879 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.125405037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1087551 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.123290942 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098597131 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108230643 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108936097 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088381802 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107837965 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106578138 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153388315 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088585989 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119479012 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118703594 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109538511 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088918156 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108931641 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117425073 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087936353 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135285279 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108517256 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117966564 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118084525 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.117545205 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10355874 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114917384 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107814944 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088981531 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108839315 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108344115 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114075799 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089373632 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118436941 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.107571003 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098281191 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108071096 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.107911865 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.095834067 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108426818 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114271751 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118588021 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128233275 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088831168 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109068884 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.123486587 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088240495 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109073575 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109259937 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088339802 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108972518 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12394845 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123725798 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123846416 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097957149 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108858478 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108886431 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089785094 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109399877 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108401052 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095398096 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118288858 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108377909 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135717363 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108817848 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088621505 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119750159 seconds)
  done (took 8.035558709 seconds)
done (took 157.862736333 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.102444474 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142694274 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.103499174 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.171198428 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.106531805 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119124072 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.137997044 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.100495178 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.109237453 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.086401111 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107301612 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.107905773 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151541681 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.106398753 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.086288055 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108092337 seconds)
  done (took 2.672927958 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.19900083 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.270279019 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.105990872 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.105229548 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.111209409 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.087016562 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104976952 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.094157065 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.107765873 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086031083 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.106072871 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086665524 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106359858 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08719596 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.10684007 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.105634944 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.085147239 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.106286252 seconds)
  done (took 2.896208637 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.112876928 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.153461638 seconds)
  done (took 1.100176986 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.120172197 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.182127274 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.296392344 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.153321333 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.119214101 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127039148 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.153629704 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131341842 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.210974609 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.123422418 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.123245868 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.099682453 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140994009 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.117050895 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.116556325 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.099452377 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.145236143 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.115461449 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.09660288 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.119650644 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.138206735 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.085278893 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.118136037 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.11438477 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192880758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.100056402 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.10649656 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.087957279 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.120411008 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.11446585 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.092912143 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124857266 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.120139635 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.174692191 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.124553303 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.158174859 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.119769415 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112539154 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.094703061 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.111765594 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.121519428 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.099132873 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.126052411 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118096278 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.087988336 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120681596 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.087708056 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.108584198 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.094429774 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.118981907 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.114626535 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.094230792 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.177590855 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.099749275 seconds)
  done (took 7.606837457 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.81910006 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.15758652 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.11249256 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.88715621 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.137369653 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.125303067 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.787041836 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13807918 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.233516172 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.794569258 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136231418 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.099872853 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.233701567 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.235678437 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.931324741 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312117068 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.703168778 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.106605211 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.144075831 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.156178378 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.117517311 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115562873 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.130215396 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.431278165 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.115354953 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.090428317 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.116603459 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.120290231 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.162449104 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.112659851 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.092257743 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.200803067 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249479367 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.206604728 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.094863263 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.111691407 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.08931286 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.196341576 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.268225044 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.196883068 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178422951 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107323204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089303465 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.119411884 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.129542423 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086949115 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.18622856 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.175748758 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.193657173 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09314152 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.121299082 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098061437 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.118600905 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.166575112 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121769476 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.312868847 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.31811962 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111651241 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097147544 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.126030776 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266585611 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.123021466 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205894872 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134908148 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.213534443 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.090219186 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.806533825 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.192758781 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089798026 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117469431 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.095940859 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114843331 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120828382 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167947579 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.392753229 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12229514 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092061617 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.110794857 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217016581 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.112023921 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.089570857 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184649319 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093704375 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.119393049 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.123696311 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099632661 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.193529505 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.229921425 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.122360299 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.097162532 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113832236 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.122257081 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.09371349 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23344485 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.202390658 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.185661747 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.211150277 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.121597367 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.166376537 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.171913528 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.119794728 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173870217 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.116509461 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.124395469 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.120593754 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.199346767 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.147079587 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123181272 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116526367 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096483413 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.149375715 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.113191832 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.11903792 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.17277712 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.484199784 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.171710554 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.088151735 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.115056895 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119193589 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.16284149 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097404608 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.259554315 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118992802 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.172230822 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.118208466 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087651839 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.118273593 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.165570962 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121735311 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.119725229 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121361378 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.097001754 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.258740241 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.197665775 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.122735047 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.241926163 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.186456613 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.097052552 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.19479222 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.09667528 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.189543614 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.098246939 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.120007172 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.115509022 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.773764455 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122316372 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.117379943 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093758669 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188771782 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.110604239 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124883615 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.089485476 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.10924116 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.757806707 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.113301078 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121880452 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103686636 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.117143907 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119079578 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095209915 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115260583 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165553598 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231493312 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119671329 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117986532 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.089982454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.161741778 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.11529258 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.1123092 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.090510186 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.114645417 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.098011357 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113636134 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126533381 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.170972404 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.164082029 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.222086044 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.563857665 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.090445148 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.111531364 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.231605922 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.090288997 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.292574961 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118364549 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.228142515 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.166834304 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.122017381 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.318375312 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.169032809 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.190671084 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.115297469 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.175921589 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.108839782 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.096639315 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.186972904 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089981257 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118198994 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.164964928 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.124982839 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.101010989 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.956955172 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.112724977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.227236978 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.10881933 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.174308778 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.115843422 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098623584 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.289763395 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.111859556 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.10599985 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.188700793 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.093967802 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.112064414 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701779838 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.112587245 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.121092767 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.096498399 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.224535727 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.185744171 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.096304612 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.117284799 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.12090618 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.164284644 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.210237148 seconds)
  done (took 43.899101513 seconds)
done (took 59.005552442 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29588846 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.213980044 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.254257446 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.166615572 seconds)
  done (took 1.867975521 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.175248008 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.147556371 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.123239865 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.106169144 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.151705036 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.085925959 seconds)
  done (took 1.654134287 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.37578568 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.26663004 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.237316988 seconds)
  done (took 1.74933878 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.251465211 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.271012169 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.324534556 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.407882168 seconds)
  done (took 2.21711778 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.283129129 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.149728578 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.139051383 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.1700926 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.204834814 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.295868256 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.165579828 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.247008946 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.163837952 seconds)
  done (took 2.728749641 seconds)
done (took 11.085933406 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.257475461 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.283589862 seconds)
    (3/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.277827909 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.160012779 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.152664687 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.172342312 seconds)
    (7/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.09618519 seconds)
    (8/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.123207103 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.128248815 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.100856523 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.172823544 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.117699772 seconds)
    (13/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.211910179 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102044806 seconds)
    (15/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.121165755 seconds)
    (16/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.237529185 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.174787588 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.240364955 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.179764904 seconds)
    (20/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.120006353 seconds)
    (21/286) benchmarking ("sort", Int64, true)...
    done (took 0.228577395 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.124479481 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.127132238 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.21169989 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096106698 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.189360477 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.220632981 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.097845279 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.143326329 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.185032315 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.068161969 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.141795036 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.202767572 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.133930733 seconds)
    (35/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.119995566 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137603244 seconds)
    (37/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.167884253 seconds)
    (38/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.239278788 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.135729236 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.154002938 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.194682589 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.174162733 seconds)
    (43/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.116041536 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.135679279 seconds)
    (45/286) benchmarking ("sort", Int8, true)...
    done (took 0.225247466 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10215948 seconds)
    (47/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.154872091 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.09891857 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.14267135 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.137616091 seconds)
    (51/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.187837335 seconds)
    (52/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.134890874 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.102118179 seconds)
    (54/286) benchmarking ("sort", Float32, true)...
    done (took 0.238101089 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.168044573 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.225742931 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.109007251 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.124846436 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.092311208 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.115773219 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.087621882 seconds)
    (62/286) benchmarking ("sort", Int64, false)...
    done (took 0.109262373 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.087218697 seconds)
    (64/286) benchmarking ("sort", BigInt, true)...
    done (took 0.235564551 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.139686018 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.116325735 seconds)
    (67/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112221302 seconds)
    (68/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.094312591 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.158030493 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.113693082 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090599648 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.189708152 seconds)
    (73/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.151540853 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.089577096 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.13732495 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.114080867 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.087054302 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.108871182 seconds)
    (79/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.162920233 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.102400528 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.094821482 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.120426285 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 0.220463505 seconds)
    (84/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.115740821 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086175638 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.122150732 seconds)
    (87/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.131717789 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.092885062 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.092589069 seconds)
    (90/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.116431118 seconds)
    (91/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.132327548 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.133098282 seconds)
    (93/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.06748827 seconds)
    (94/286) benchmarking ("sort", Int8, false)...
    done (took 0.216813064 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.101985398 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.18329248 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.116223611 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.157947129 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.124573056 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.125179884 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.148681749 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.090311675 seconds)
    (103/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.095543334 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.110964003 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.165541915 seconds)
    (106/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.150247984 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.202233134 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 0.186647281 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110343805 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.097423933 seconds)
    (111/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.124126238 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.095440452 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.163414852 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.070720692 seconds)
    (115/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.10229705 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069630219 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.171496304 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.090469981 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.117216695 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.095461714 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.116421509 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.11663354 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.101779443 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.139516967 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067500457 seconds)
    (126/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.09274959 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.16281282 seconds)
    (128/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.19383802 seconds)
    (129/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.189048005 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.126344091 seconds)
    (131/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.098179399 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.1226444 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086750452 seconds)
    (134/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.110001667 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.068290602 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.129893864 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.088025897 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.118975263 seconds)
    (139/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.067141662 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.193329475 seconds)
    (141/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.124744101 seconds)
    (142/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.150552902 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.207668608 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.175247472 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 0.179763744 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.107173113 seconds)
    (147/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.091013188 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.098577391 seconds)
    (149/286) benchmarking ("sort", Float64, false)...
    done (took 0.17732617 seconds)
    (150/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.124865069 seconds)
    (151/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.08721547 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.110055384 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.092509358 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.090210753 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.06729903 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.119048971 seconds)
    (157/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.236204022 seconds)
    (158/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.072037581 seconds)
    (159/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.099502119 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.122373307 seconds)
    (161/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.113547795 seconds)
    (162/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.076903172 seconds)
    (163/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.07158676 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.094382952 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.071792749 seconds)
    (166/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.161279565 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.088621021 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.096019343 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.110994361 seconds)
    (170/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119550362 seconds)
    (171/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.095351808 seconds)
    (172/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.120416178 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.068432073 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.11396456 seconds)
    (175/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.083408459 seconds)
    (176/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.156554129 seconds)
    (177/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.072069273 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.121364539 seconds)
    (179/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.089058525 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.140014607 seconds)
    (181/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.068022137 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.184621327 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.098916379 seconds)
    (184/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.090173591 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.094292218 seconds)
    (186/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.173960578 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.121768264 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.068864353 seconds)
    (189/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.148068726 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.068338082 seconds)
    (191/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.116059654 seconds)
    (192/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.149163826 seconds)
    (193/286) benchmarking ("sort", Float64, true)...
    done (took 0.237133841 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.095054321 seconds)
    (195/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06855815 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.067274079 seconds)
    (197/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.128414054 seconds)
    (198/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.089658876 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 0.22612948 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.109756683 seconds)
    (201/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.068422711 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.091909902 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.066232113 seconds)
    (204/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.154618069 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.101197209 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.089951461 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.087125278 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.111357487 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.087739265 seconds)
    (210/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.089941582 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.096070457 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.118762654 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.11389318 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.383628937 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.125784909 seconds)
    (216/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.112490709 seconds)
    (217/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.123379326 seconds)
    (218/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.117555957 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.143500374 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.122099075 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.086494542 seconds)
    (222/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.135078971 seconds)
    (223/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.06838719 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.122666776 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.069021092 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.096084653 seconds)
    (227/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.070485349 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.209863246 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.093242592 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.126022649 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068924142 seconds)
    (232/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.113532923 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181552612 seconds)
    (234/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.073201823 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.071905671 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.162168598 seconds)
    (237/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.117361032 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.159877629 seconds)
    (239/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.101799959 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.097997181 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.137856285 seconds)
    (242/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.136069679 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086730394 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.109581671 seconds)
    (245/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.088371028 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.089990054 seconds)
    (247/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.088452939 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.116389046 seconds)
    (249/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.066765133 seconds)
    (250/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.088284597 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.090323141 seconds)
    (252/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066836527 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.120717808 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066638868 seconds)
    (255/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.068242897 seconds)
    (256/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.113481889 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.067310473 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.109567476 seconds)
    (259/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.086968912 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108890224 seconds)
    (261/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067905134 seconds)
    (262/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.118501939 seconds)
    (263/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.067789126 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.11779491 seconds)
    (265/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.090182228 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.101492144 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.069150973 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.089280022 seconds)
    (269/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.093165229 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.085984449 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.12230105 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.096465136 seconds)
    (273/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.099763114 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.069456281 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.072409581 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114008208 seconds)
    (277/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.114581703 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.093958518 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.067063393 seconds)
    (280/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.119853916 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.067654259 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109300377 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.087223117 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.110913601 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.094193062 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.116413219 seconds)
  done (took 36.666718537 seconds)
done (took 37.537071168 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.100512636 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.151376724 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.101749132 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.139232484 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.123514893 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091680906 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.117792142 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.122387394 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.100794675 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125805375 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.099050394 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092759675 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.098302818 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120837375 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.120844577 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.117909603 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.128748544 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094922575 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.117925599 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.110245448 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.09565041 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.109620203 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.08922173 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.092698744 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.099037483 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.117716973 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.093370843 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.120853693 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.088241865 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109916357 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.092893251 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117564452 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086888082 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123809073 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.116861342 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.096277708 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.1211537 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.098841438 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.111606442 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.086753702 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117740262 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087066796 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117045499 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.117371484 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.093562928 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.115734942 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.095782537 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.123300658 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.14186062 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096858122 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.121639517 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.097968738 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.120049096 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.094676423 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113387391 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.096902303 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.114634743 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14234394 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.100091511 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.119906314 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.098026484 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.118071313 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.09301771 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.117591624 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119361537 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.098117361 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.12218375 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.092826192 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.120711015 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.092857788 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.109452798 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119375537 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.090142949 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.110056368 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096785126 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121058437 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.08667963 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116064071 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.09421361 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.1146136 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.086420364 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.112812849 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.088633012 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.116298072 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.08983233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.092818311 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090666068 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.116652401 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086688239 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.118508669 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.093304327 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.115799299 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112903291 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099327699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.110034019 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.093670599 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.110608464 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.08741751 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113198533 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091221093 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110351637 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090196625 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.122475006 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.08948507 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.116581764 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.100664759 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.10928682 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.117973502 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.086335813 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.11002689 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.10227613 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.121350627 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.088140163 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116386014 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.088878384 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119544962 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.087414121 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.109585451 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.087859534 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.109894928 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.117109594 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.087474037 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.113900001 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.095057397 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.125085005 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087174411 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.114741677 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090291437 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.112010369 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.09384633 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111904614 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088790519 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112642447 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078407913 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.113738421 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.087222041 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117772622 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090750732 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.121910978 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.090184018 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.119617777 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.115185729 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.093540014 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.116456624 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.087089317 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.097612569 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.093434702 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115468025 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.089513091 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.110813059 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.08895638 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.10997986 seconds)
done (took 17.029786691 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.087476997 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.183374759 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.154506943 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.145054008 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107751443 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.11141935 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.123013335 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119070512 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.112802776 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143247508 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.134972955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.107816757 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149941921 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.087475674 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11228988 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092172475 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.112643484 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.127418223 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.126276026 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.131868713 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163750148 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.110133678 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146174303 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.11264475 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120717077 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.127941413 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.088681888 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.116002616 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.091841777 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.136490739 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.108135774 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.114820248 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.088951857 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.133135056 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.128733041 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.096689171 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.110953088 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.095403032 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109884095 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.088629353 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.139996985 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.132693073 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.116609548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.09377573 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.115272293 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.090403293 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.112548892 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.097715672 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.121964468 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.11701333 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.10364632 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156527007 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114973975 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.120730494 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087372775 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122554157 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.098103661 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.113498738 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.088922985 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113717873 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.087646208 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.117006083 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126699627 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.117211409 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.115141965 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.12150834 seconds)
  done (took 8.624459131 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105167843 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.142182105 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.130596203 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.107044036 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.11250379 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088663125 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.112446575 seconds)
  done (took 1.731828159 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.08839355 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.137864394 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.114703164 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.139946511 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.136546365 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.115791605 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.127883373 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088907352 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132634635 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.114680699 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.114799335 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.156110473 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.11432262 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.096658705 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.140641913 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089474498 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.139606597 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.11267516 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.092930359 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.139254993 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095029542 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.138374469 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.091496842 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.111798005 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.131361701 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.089383889 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.164610317 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117626254 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.091139986 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.133900879 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088078979 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.151566171 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.131526639 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.100715715 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.112823362 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.107498907 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.134346256 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087018621 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.128776896 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.121475761 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.106695629 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.119618329 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.09090483 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.113020135 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.0949215 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12604616 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.116641127 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.09049855 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.116439622 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.113291733 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.11729581 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.106525384 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.117631449 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.094275605 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.114672054 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119582437 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.099591798 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.114640692 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112915719 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.118014973 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108579421 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.13452445 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.132171677 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.108408413 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.120825231 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.107085124 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.13353125 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.115802062 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091826041 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117945509 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.109449539 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.11234542 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.090974267 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.126476914 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.092280581 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.139212137 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.140218201 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092069127 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.125435917 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.089957683 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.114204772 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.090193089 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.140338756 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.117611299 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089866512 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.117054681 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.092713355 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.112016271 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.088608625 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.117663719 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.088025104 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116286689 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.092644013 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.114155983 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092081092 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.133252488 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115247803 seconds)
  done (took 11.983555205 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.090048944 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114735937 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093326395 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115075205 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090476656 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.11455021 seconds)
  done (took 1.56407625 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.116932555 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.117638263 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.1289598 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.095515708 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157315983 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.133378695 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.108361427 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.126040254 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.132853367 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.103184651 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.133125415 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.109458631 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.139198664 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121961639 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.108289802 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120961428 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.133005163 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.100117822 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127421814 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12141739 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.11243122 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.120580475 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.097444303 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.134627965 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.120118859 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095639071 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124802651 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.128139993 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.103084214 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122557397 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.097327787 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.118618178 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.121683036 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.099444623 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.136427705 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.120847401 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096576889 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.118870956 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124656981 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.094040326 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.133228069 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.10064416 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126270127 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.119239485 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.098710929 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.12058007 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.119053203 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10087683 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.131943545 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.095384608 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.118219461 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.120451357 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.09333593 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.119323949 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096642319 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122484909 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.119184089 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.109832634 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.123046191 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121033822 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.093916355 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.118478851 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.099648185 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.118296089 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.129855187 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.095061959 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.12142581 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.122349846 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097668671 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.121000019 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.095676461 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.11834461 seconds)
  done (took 9.293786628 seconds)
done (took 34.122280332 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.686902769 seconds)
  done (took 1.63319176 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.833650025 seconds)
  done (took 1.784363058 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 16.992019074 seconds)
  done (took 17.970656405 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.49592115 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.585277459 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.985220295 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.17221699 seconds)
  done (took 3.189791882 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.930148267 seconds)
  done (took 1.904597162 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.286617272 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.234510747 seconds)
  done (took 1.475413704 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.766600227 seconds)
  done (took 1.733589491 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.40362795 seconds)
  done (took 2.362808316 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.334404349 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.181541026 seconds)
  done (took 1.490646021 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.56649346 seconds)
  done (took 1.53123649 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.918856828 seconds)
  done (took 10.889089655 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.273824178 seconds)
  done (took 1.250600062 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.305262839 seconds)
  done (took 1.271075684 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.488250697 seconds)
  done (took 4.453837619 seconds)
done (took 53.895136736 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.104113878 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.12748673 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102445859 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.123941933 seconds)
  done (took 1.421814091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.110200685 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.123010762 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.104938129 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.120170857 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.130621546 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.096905014 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124009688 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101956311 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.121400084 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.121973304 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.096645958 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.119612563 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099346419 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.122798827 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.095291024 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123227196 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.125520989 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.096312477 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.12478264 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.097198364 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118381624 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.124001867 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100402802 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.119688665 seconds)
  done (took 3.687359378 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.10575307 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120342569 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.097844361 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118785758 seconds)
  done (took 1.412993611 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.105395583 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.131438572 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106176037 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124742401 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.133021578 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.106567119 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.117120447 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092893766 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.11998756 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.101379482 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.116273586 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.140547927 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.107262255 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.125306283 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.10292172 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.113811296 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.116657111 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.107957101 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.125330511 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.102332411 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.11818855 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100819768 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.116408087 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.133547594 seconds)
  done (took 3.73844098 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.17476743 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127283598 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.13942742 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.096060512 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.160901476 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141282782 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.08906782 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.14142447 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.088864117 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130029905 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.11896509 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.134475613 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.128314554 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088745114 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113409935 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.113765426 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.102542421 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.127382246 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092199621 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.127515927 seconds)
  done (took 3.406971554 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.10269033 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.117129576 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088157403 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115731863 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099336001 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.120550057 seconds)
  done (took 1.620218286 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.097620054 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.11418368 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.093912159 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.116801751 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095029407 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.114186749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089036745 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.115556855 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090183556 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.114039145 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.092048679 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.113665128 seconds)
  done (took 2.221454692 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.501809259 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.119932963 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119231334 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.08979954 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.125420725 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090484911 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.133614121 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093670934 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.143379844 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088893277 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115035746 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.11765452 seconds)
  done (took 2.715180308 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.249009294 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127589784 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.28125355 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.375224787 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187635509 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.172865378 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.302773242 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165277306 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.234540208 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16457588 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224735584 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178121377 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129577193 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.242162461 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140700376 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.120733863 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219254036 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.308066275 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127548481 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.243891748 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169053086 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.168678179 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.1814851 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152557037 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138515907 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19828084 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.120572932 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104921179 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211191869 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178969968 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188964218 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16220995 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161857088 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229452041 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.29233871 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196576895 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.278511701 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134962856 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.141480584 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167052505 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267190245 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.140994975 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209524696 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16249216 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13131218 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229698119 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157632572 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.199179862 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.146936134 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.116755681 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.224708964 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194099385 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.240190865 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112253745 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.330217275 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152227149 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.173159461 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189924459 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.24825612 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201664722 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.192976517 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.119780585 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.187731458 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.218722909 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18734295 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.168348427 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.190922587 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142897439 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178626475 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196497317 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213584311 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172278332 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.182982169 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136029952 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169834801 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.17266435 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16877321 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.260046039 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209968893 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.096101333 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167287156 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149763138 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132062221 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.195636328 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100484882 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.243301173 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117893062 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.164033143 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236276388 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15795554 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160540892 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186206541 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176592746 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148695649 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084393706 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155152214 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155275687 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173001591 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140091007 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157544673 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151237248 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.13003343 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169743524 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.098061089 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183152479 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.117244717 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167611107 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184294806 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126833266 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.166347473 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151818829 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.149707392 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193728426 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197729836 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139257098 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133582985 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208539656 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181471019 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.141436028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178021824 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.230358162 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.118406008 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150067278 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225083739 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21589506 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143669739 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20061864 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14779104 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136152587 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.132214303 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18386152 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156547145 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.16290221 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106885139 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209424412 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200742615 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.125990477 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137879051 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200235325 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133117433 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107311353 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147415887 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148182142 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.138014554 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.142577662 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.118990502 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201905915 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1792907 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153453452 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167191582 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147447287 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210772327 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139382825 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.152696559 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.1488866 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094969481 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.243068209 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198547496 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13013286 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20180453 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.169835995 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225054533 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168630362 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135388775 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177105589 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104245481 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.120912865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19192309 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.165220244 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161951465 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22010868 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195820138 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.188971662 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20894864 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166266988 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174740811 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.167084685 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155738284 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.11191714 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161451122 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158240233 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.123015397 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.141225056 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.133698337 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124565437 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142436867 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13463189 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195783179 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197601164 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.190407673 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160927152 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15069847 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182438983 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.128665146 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173771374 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.17587899 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147081738 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.196919961 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191746675 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214340455 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144845077 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202601063 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.120510873 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.09916136 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142786225 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.17033245 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134255013 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.135537018 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163281627 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.183515178 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175873915 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172594309 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.231891023 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.188136165 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.193636564 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.122655338 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.142502588 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203193157 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177776168 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.154369801 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.138490277 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150977783 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179234518 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148743029 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238038886 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166230616 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174343795 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200668497 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.15154936 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131473154 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.14983378 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172354351 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154183689 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172463136 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.146002677 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111491158 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154623595 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.130712083 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.16304306 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178199761 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163118923 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205327906 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.124116474 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214322855 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.101814222 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189530611 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159786154 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162036803 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.082503364 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168939983 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193650061 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142396567 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16003527 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182118395 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131006512 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.30776148 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226753261 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.188490944 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.137822353 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156351913 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.161670323 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16133038 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164417116 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177520633 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159164694 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188227854 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159740134 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.109731749 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136986879 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149144944 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153518002 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.106225192 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145891159 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.203114671 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.111721126 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207591576 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146215493 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130995756 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198431445 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.124796283 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143873722 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150784038 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216213853 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210567116 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191852466 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.150350333 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.17622652 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201708929 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127110939 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132275564 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.107019391 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17885149 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136727211 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19291339 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.212946305 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199988005 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.208772251 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172838158 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113211878 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119858577 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158730223 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169143173 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.229645546 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12167618 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.147708154 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222384802 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.109955786 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131896822 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.166326333 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.289149224 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.145943366 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187021729 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.106323789 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.278465297 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.100496188 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132836934 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161523383 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.182726294 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136068474 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.176649894 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171217637 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152078891 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161305776 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122826699 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.218374506 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.212259166 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227491535 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182081172 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.133029615 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157860143 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.167910808 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187024917 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156455362 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.138444842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187123829 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19525259 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.192638149 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.142746241 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167761883 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168112111 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158781273 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215533635 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108690191 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229655708 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108117035 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219759708 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153349092 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139340053 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173511505 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.189351908 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142878726 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181138831 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209089657 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109034712 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133251294 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161385954 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178872566 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148537671 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.127347285 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178548985 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097679649 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223107873 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.263781797 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106953369 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155135037 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147270605 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136286782 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155243867 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160610367 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137409487 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.139090507 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192861075 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.136439538 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18366606 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231170526 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169654455 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165021797 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.14583608 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.754264111 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.138218811 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195172673 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147123775 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181643831 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.149815132 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172343763 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160329804 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168106036 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194556038 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15730939 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231810495 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.21758219 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17871324 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131781254 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158826152 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148090894 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117459646 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154127726 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167959679 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159545495 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.146483089 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178668989 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155708096 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.133938113 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140002488 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200038564 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.148358639 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181588682 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.180267087 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138609883 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172187047 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189795537 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134140485 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.190975979 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211190115 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.114798939 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150087969 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134124239 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.151446537 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264519981 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.097890998 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209403627 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186581406 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161082438 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169056479 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.147344659 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194129459 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157595697 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213442118 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.116168963 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.15549206 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.157852182 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137669387 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131327536 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155006505 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16666281 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150494889 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159439852 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.139737277 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191647365 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.124546365 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145187272 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.28848685 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173213381 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240964527 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.108735861 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136331219 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16076755 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147135928 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176804326 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179783034 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.135071765 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135343928 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.108587416 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.154462823 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.112538224 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156685119 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192527912 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159668514 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.229790158 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.109232747 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.27837826 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140683086 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155386449 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.08930786 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.132002109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150267647 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145433182 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149348006 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.192398039 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.264726736 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.146219568 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.10859199 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150512224 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125568856 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134609186 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137387496 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161260218 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204887985 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116052656 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.108605865 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157087036 seconds)
  done (took 82.21798729 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.181141339 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.135812191 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.150426136 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.203436074 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.178710356 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.291241704 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.211669654 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.25596013 seconds)
  done (took 2.694417666 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.100869784 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.154301364 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.163160829 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134963884 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.09248501 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120694757 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.369931876 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.139201436 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.093779099 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.1487031 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.171475645 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.095166864 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.588814802 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.099658524 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.126221662 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.109134985 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.093099271 seconds)
  done (took 3.878880464 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.233953429 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.4783252 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.029173951 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.197560916 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.17950606 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.120647148 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.689461696 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.118771798 seconds)
  done (took 12.135332722 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.132335846 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.153469924 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.137333865 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.164522587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.150826115 seconds)
  done (took 1.830790022 seconds)
done (took 123.941812699 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.105017652 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.128959732 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.100144263 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.130150594 seconds)
  done (took 1.540494639 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.103981245 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.079414678 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.106483479 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075516633 seconds)
  done (took 1.450857804 seconds)
  (3/10) benchmarking "18129"...
  done (took 0.194235703 seconds)
  (4/10) benchmarking "20517"...
  done (took 0.174607202 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39913652 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.075992435 seconds)
  done (took 1.597129633 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.123014739 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.133585142 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.106917924 seconds)
  done (took 1.463987563 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.113499278 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.13099307 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104762238 seconds)
  done (took 1.44350498 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.113578429 seconds)
  done (took 1.208366408 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.118598104 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.145979608 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.114007954 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.139705286 seconds)
  done (took 1.614104384 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.105282491 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127814027 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.114412728 seconds)
  done (took 1.442266842 seconds)
done (took 13.214767517 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.113512765 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.430437764 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.418922695 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111766706 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.728394116 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.382957688 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033356041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.14639414 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.169732436 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095867722 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139685368 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.673087249 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.060960515 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.379575123 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.019113653 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.377302311 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.703940327 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.093061233 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.12128993 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.095197667 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.016197295 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094425963 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122114271 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094156071 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.703200215 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427358988 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095533352 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.3769935 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093114048 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130470393 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.380795428 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.123271233 seconds)
  done (took 17.035843425 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.106638285 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.186228797 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.131722557 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.095659711 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.129216624 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.095128485 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.124435479 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095406694 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.183467785 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123191351 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112250558 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.121413476 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126828699 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.096246186 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.141954477 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.093640262 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.125709403 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.094293872 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122136919 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.123196691 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.113055287 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120662704 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096200226 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.121907507 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094911732 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.135865334 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.12364135 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.093980396 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.121945151 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.102801841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.124679211 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.096021747 seconds)
  done (took 4.87406355 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.154100925 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.190917419 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.132508897 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.12839478 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.176205571 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.125242304 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.199888606 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147881772 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.186281993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.0953773 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.14124482 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.094768372 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.157791805 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.129723813 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.115667414 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.122385827 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096022291 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.121987691 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120832601 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096657224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140382516 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094540757 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123599548 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094443156 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.123625781 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137083809 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.096542658 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121948514 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.094147086 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.130437313 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.097301365 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124178875 seconds)
  done (took 5.217012855 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.105035321 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.127351818 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110906511 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.142799975 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.100382189 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.125678599 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.098751123 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.124693199 seconds)
  done (took 2.042393424 seconds)
done (took 30.266385758 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.118557221 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.134622309 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.109036752 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.141400361 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.105116827 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.141261484 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.093247014 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.133972011 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.138483323 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.108691196 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.145280334 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.100239485 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.126528923 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.094125462 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136025395 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.106284569 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.142636156 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.132964663 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.108507485 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.139232905 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095850065 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.135642494 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.111535549 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.143769322 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.139544141 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.108267829 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.138125796 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.106823373 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.129892716 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.095902425 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.128056489 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.114649295 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.131462416 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.137700762 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.099511475 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.126952972 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.096096025 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.126573213 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107751919 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.13791905 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.107027276 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.137702865 seconds)
  done (took 6.208741587 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.118304482 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.152667432 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.109542732 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.089738688 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.117263803 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.082125715 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.140248386 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.087626091 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.113746225 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.111284197 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.111564352 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.077718951 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.08027347 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.102209057 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.077569815 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.077242425 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.108807604 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076808364 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.077440224 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.105882322 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080846647 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.101529177 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.080385747 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.08013446 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.104149257 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.081461903 seconds)
  done (took 3.657150535 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.10710474 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.142442379 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114469629 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.175078666 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.157546357 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.102235537 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.135252769 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.140704445 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.110311128 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.122010761 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097722233 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151842958 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111154127 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.129782628 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.124840388 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.109806092 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.136615476 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095688215 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.13234617 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.114187247 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.138524511 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.13257023 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.11414303 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.134072261 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093662453 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.124515741 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100762913 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.14251697 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.132316596 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.103684482 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.129179132 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.097780447 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.124703598 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105722446 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.128785573 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.12470561 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.115117864 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.136692728 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.103723939 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.123541286 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.102533442 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.125643127 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.144500842 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.134547626 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.125093355 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.10145552 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.126765991 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.104593322 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.124431869 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.140583137 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.103597207 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.122976172 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.096975151 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.123455039 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095393173 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138401458 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.099220163 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.132019877 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.131291893 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.100171601 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.135805121 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.098554825 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.139053452 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.097545722 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.130002999 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.095114809 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.122712408 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.093686748 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.144798427 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.130848499 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.135082898 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.128093687 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096038809 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.13289467 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131776124 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.100785056 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.122371462 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.11003752 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.133382329 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.099772469 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.133031127 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.125846114 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.097648656 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.141593005 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.097372023 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12514063 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.095842214 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129790889 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.096690675 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.123513648 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136001936 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.093364514 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.125317108 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.108165617 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123039584 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.095061793 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.129976821 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.099348111 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.121586489 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135334716 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100827994 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123292952 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.10481922 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123291938 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.097848967 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.132806279 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.127626515 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.094411407 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127452556 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.100829948 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.12419377 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.098619752 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12562533 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.097087887 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133317232 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.102825132 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.128032639 seconds)
  done (took 15.06221769 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.238909926 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.220109068 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.188660799 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.297264032 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.133985755 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.119284001 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.221968002 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.158760905 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.124341803 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.130962477 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.200723441 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.185220526 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.143865053 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.191300453 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.177946015 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.123461962 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.143380777 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.139011421 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.247245671 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.262332899 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.15207929 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.102645292 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.163414936 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161801898 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.136979696 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.13329277 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.110933603 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.138377628 seconds)
  done (took 5.873837381 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.117335898 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.155955566 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.101324386 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.145993331 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.150323135 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095232842 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.127952152 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.096080648 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.136823031 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.138489172 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.09642047 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.129862527 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.130317592 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.104539577 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.124469004 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.1041402 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.13382298 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.096135741 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.127463277 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.099672004 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.133844013 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.134354076 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.099149844 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.1225317 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.104222016 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.122862233 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.088102424 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.144477368 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.123232647 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.116110612 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.12117594 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103222933 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.136589053 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.124385137 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.094031196 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.125308488 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.09682938 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.125368817 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.096523236 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.122173521 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.093907721 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.1075569 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.093140122 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.137948252 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.101768618 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.110779165 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.100662402 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.13022776 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.0957236 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.121007607 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097574067 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126311633 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.12575406 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.102720277 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.126628764 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.095690859 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.126319363 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.086394957 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.130582873 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.096396315 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085821335 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123114254 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.128936257 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.09024894 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.133716319 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.099622645 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122649579 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.097272045 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.128612726 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.101459452 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.125731472 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101326585 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.122028571 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.097635916 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.126493237 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.12996975 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.098152298 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.122536887 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.095178707 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.123678988 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.076691473 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.123198906 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.075330459 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.099456278 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.121693698 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.093940623 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.125649963 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130362407 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.110067769 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.124690118 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.104084102 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.124208443 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.094160804 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.126221272 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.084387344 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.126568754 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.139695441 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11353773 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.125046233 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093424088 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.138243699 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.126887497 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.09490311 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.077590209 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.131623655 seconds)
  done (took 13.117654825 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.137518657 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.154816231 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.126470469 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.11331529 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.158162398 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.160973917 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.103338306 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.131835266 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.097004532 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.142770551 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.099244648 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133345584 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09557898 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.138366248 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.159553942 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.105399418 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126098011 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.109805861 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.128998854 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.170639251 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.114209965 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.149984325 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143651949 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.096239382 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.130825583 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.112686309 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.16545819 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.139002176 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108635241 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.144338011 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109932967 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.161312677 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.145506156 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.09996894 seconds)
  done (took 5.556488153 seconds)
done (took 50.580233429 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.227457556 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.445328433 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.198318882 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.052516081 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.250889011 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.233433527 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.205790442 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.201665375 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.743652835 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198002449 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.472622873 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.742516741 seconds)
done (took 60.09821022 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 6.305608618 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.352607051 seconds)
    (2/2) benchmarking "String"...
    done (took 1.488844508 seconds)
  done (took 3.960347941 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.746530264 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.137231988 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.452511197 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.199125205 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.194097441 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.483725242 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.900105465 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.561412576 seconds)
  done (took 28.048719162 seconds)
done (took 42.187321115 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.194684085 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.25501666 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.236632772 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.174702036 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.323210237 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.245988435 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.527391356 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.203452608 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212087215 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.190278455 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.217200908 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.196219712 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.200358901 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.524858571 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.19705851 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.195583522 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.2292996 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.717413956 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.59904001 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.202640851 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.218478437 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.246141406 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.217855154 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.208045172 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.251116305 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.200703566 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.197269108 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.213031224 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.710420653 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.197605796 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.206920286 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.731889537 seconds)
  done (took 190.560991592 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.202199332 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.304348338 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.40295057 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.248896134 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.717285813 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.397880618 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.337855737 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.806989422 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.219223443 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.229445186 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.413652568 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.204905686 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.481381271 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.171927474 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.23115927 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.288314152 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.39913912 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.500861854 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.237285945 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.357660614 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.208037251 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.371124448 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.287192271 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.390992639 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.233552922 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.257907613 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.227410802 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.226524279 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.394759965 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.328448747 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.211910536 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.25995826 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.826612901 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.051182705 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.219521504 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.220395421 seconds)
  done (took 149.99206252 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.20287778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.203559958 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201921796 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.234258179 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.199399608 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.762823438 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.760479928 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.711418354 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.65242266 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.584382886 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.455910025 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.199417614 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.298674278 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.214545961 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.207162596 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.202851356 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.218481382 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.245052154 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.199309354 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.20269524 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.784239635 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.218270859 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.304467855 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.397312708 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.216700646 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.237324482 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.593124255 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.200941373 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237807521 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.533201504 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.250810414 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.204416101 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.59432124 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.611869817 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.313085707 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.201886213 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.237567017 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.204092612 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.485441796 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.201463242 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.204045144 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.21005406 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.894948824 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.20920396 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.767729376 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201056226 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.15193662 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.200199913 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203488262 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.488570679 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.901211363 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.221337073 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.205159314 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.206173153 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.205699726 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205330994 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.237243149 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.491763846 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301601726 seconds)
    (60/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.22085167 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.205981817 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.208539443 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.238105518 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.203135948 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.391106634 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.223360358 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.466132261 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.278042936 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.420791052 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.786564446 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.208367072 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307595132 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.324731498 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.203225743 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.207178944 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204846466 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.206695477 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.318397452 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.202995199 seconds)
    (80/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.20600212 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.616158872 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204673017 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.384391673 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.221358953 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.596253127 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.306772726 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.202515793 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.626146709 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.210356298 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.207615623 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.956402727 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.3022322 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.203886742 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.206269126 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.20538553 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.61531148 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.767949256 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.474508972 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.20905014 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.402060136 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.210885355 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.635655115 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.757611823 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.889794078 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.211169233 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.320498599 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.380694356 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.22262992 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.206525443 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.593491447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.209648399 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.263936596 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209758312 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.60636822 seconds)
  done (took 366.294013415 seconds)
done (took 707.967245787 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.825877866 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.813840575 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.928548304 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.811723726 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.77220928 seconds)
  done (took 10.279561759 seconds)
done (took 11.410318912 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.39524062 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.394313826 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.265793826 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.39827987 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.239173993 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.412939664 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.377073288 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.229873267 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.313231357 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.292415364 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.310751016 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.265116091 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.245762111 seconds)
  done (took 18.270622784 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.543238153 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.527985357 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.270918024 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.539299716 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.248295639 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.536316375 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.417195525 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431553184 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.429996234 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.238534138 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.224987067 seconds)
  done (took 16.540078697 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.535064687 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.531168907 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.273295991 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.538215557 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.247089992 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.550014187 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.412352831 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.431475178 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.425926614 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.242069101 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221366596 seconds)
  done (took 16.540269544 seconds)
done (took 52.483275136 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.220645926 seconds)
  done (took 2.350999429 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.254540983 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.41883274 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.239518106 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.225468632 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.222009964 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.226320072 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.224982698 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.222988014 seconds)
  done (took 11.167384739 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.222232288 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.221315889 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.221094799 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.217695223 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.218619752 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.22327006 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.220277828 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.219687035 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.224997681 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.221978859 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.22272441 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.218633242 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.218766692 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.221338718 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.219129217 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.223052345 seconds)
  done (took 20.667481765 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.221515118 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.220432568 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.219551295 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.22010746 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.218853717 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.219271799 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.221818734 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.219394779 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.218849837 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.219515143 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.220153384 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.218511974 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.222213424 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.22130309 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.220842943 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.220284974 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.218945481 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.220467888 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.222980664 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.220822879 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.220909956 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.220219896 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.222024167 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.222108569 seconds)
  done (took 30.425250532 seconds)
done (took 65.745099738 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 1.845928452 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.79274748 seconds)
  done (took 6.773313635 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.284013248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.28383975 seconds)
  done (took 3.705965054 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.224841496 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.226298925 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.224668343 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.224674283 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.225815873 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.224648391 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.224599748 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.22510861 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.22465197 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.223669518 seconds)
  done (took 13.382904701 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.226376262 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.225791925 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.221474193 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.224212283 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220874405 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.221090088 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.223670894 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.222670139 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.223377157 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.222124313 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.224442655 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.220682756 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.225860584 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.223720285 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.224045371 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.221794503 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.223483023 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.222560463 seconds)
  done (took 23.153761766 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.224188652 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.244646289 seconds)
  done (took 3.60556263 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.35355611 seconds)
    (2/7) benchmarking "second"...
    done (took 1.263621419 seconds)
    (3/7) benchmarking "month"...
    done (took 1.333662929 seconds)
    (4/7) benchmarking "year"...
    done (took 1.322882742 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.264945211 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.244980421 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.265970446 seconds)
  done (took 10.18597254 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.229130815 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.406807092 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.50757032 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.79051373 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.226214903 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.230148907 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.116983971 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.23113967 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.23491343 seconds)
  done (took 14.109670426 seconds)
done (took 76.053159892 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.240192959 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.229741273 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.498126649 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.23507155 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.219493189 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.520914396 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.274787923 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.343656547 seconds)
done (took 37.702910364 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.233312812 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.199469293 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 3.001343882 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.213113067 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.292110813 seconds)
  done (took 18.843622346 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.276382561 seconds)
    (2/2) benchmarking "read"...
    done (took 1.575695773 seconds)
  done (took 4.991782782 seconds)
done (took 31.209411117 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.22790461 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.224945267 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.226189515 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.226479929 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.228972538 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.225927389 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.223831004 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.227968193 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22794011 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.227882855 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.228981185 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.229158273 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230408533 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.226187921 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224567781 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228074138 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.229698368 seconds)
    (18/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.224839192 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.223834021 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.225459445 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.225351311 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.227397252 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.22481915 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.226767387 seconds)
  done (took 30.582459662 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.228292484 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.227208084 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.229140885 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.229897255 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.225744387 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.227985604 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.227788667 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.227971548 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.229463707 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.230296149 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.226399169 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.225699296 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.228965187 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.228435575 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.226098639 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.223431265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.230068823 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227180137 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22515246 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.225557419 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.226312787 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226770779 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.226943309 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.227278707 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.228901278 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.228239631 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.229751552 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.227529519 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.227703482 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.226668427 seconds)
  done (took 37.96808818 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.235790266 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.235892378 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.227066576 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.232252661 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.230921465 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.231133011 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.227621227 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.228964037 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.227946505 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.228697379 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.227190848 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.227411506 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.227917045 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.22754686 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226515783 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.229804597 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.227225179 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.22956426 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.227401921 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.228543088 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.230302425 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.230139163 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.230052745 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.230556735 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.229766947 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226416028 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226230627 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.230089085 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.23004238 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226103876 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.229844914 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.228946628 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.22832176 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.228389744 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.231268622 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.228733048 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.234707445 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.240952149 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.230175289 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.230303682 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.230787284 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.229677919 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.226807452 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.23009806 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.232689191 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.232480315 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.22938612 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.232798563 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.233844073 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.231441077 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.232923744 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.231303456 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.229415271 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.233670445 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.232710959 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.234138184 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.230165843 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.232405398 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.232735165 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.232244691 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.232040311 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.231728013 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.231862243 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.235591171 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.233400316 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.234565745 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.234574153 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.234253522 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.232331287 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.231307246 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.233076828 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.232322759 seconds)
  done (took 89.759609209 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.228740242 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.229682969 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226569022 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.228906111 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229435485 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.238637486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.232633864 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234419113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232212866 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.234203001 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.233631317 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.232151744 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227700833 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.23131613 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.23318746 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.233354432 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.236869322 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.233895055 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.234522462 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.234685156 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.235841033 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.232936295 seconds)
  done (took 28.261389043 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.234940907 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.235337042 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.232139024 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234195117 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.233290278 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.234481367 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230338473 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.233786116 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.236035689 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.230148082 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.231261935 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.235542267 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.233832044 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.231654479 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.230893787 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.234169097 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.232000075 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.23521438 seconds)
  done (took 23.347342868 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.23354966 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.230004287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.236091284 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.230530546 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.236106386 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.235211232 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228298396 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.233526058 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.236873559 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.231295275 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.235123101 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.237108863 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.234037223 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.232316272 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.234291091 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.231727626 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.23355565 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.232519169 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.237215752 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.234703479 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.233157997 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.23454916 seconds)
  done (took 28.289127708 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.23939917 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.233889958 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.232432538 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.23120639 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.231197073 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.234714083 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.2394507 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.233048308 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.238673546 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.234937499 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232608115 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.237161459 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.234852824 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.23518669 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.236537765 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233513968 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.236802949 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.23419292 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.236832159 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.237254424 seconds)
  done (took 25.853724297 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.240349225 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.235782593 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.235251261 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.240264042 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.236799117 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.239288578 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239049554 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241202839 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.23887299 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.23803098 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.240715109 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.239489614 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.239256412 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.241177569 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.24145572 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241916047 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.237373549 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.242455013 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240230509 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.238468197 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.241722864 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.2406431 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.238111995 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.241426606 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.238689159 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238617279 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.241677074 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241773203 seconds)
  done (took 35.863181204 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.239555753 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.237602671 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.233124102 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.238982128 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.237447193 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.235828229 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.236575831 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.237848097 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.240923905 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.237223676 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.238371656 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.237436926 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.24049468 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.238483101 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.240975097 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.236416285 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.239483538 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.239181169 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240183841 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.240311488 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.241590593 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23822371 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.240559227 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.236704898 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.237778324 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.242213055 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.237887943 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.238494854 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.241717393 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.236577581 seconds)
  done (took 38.31144101 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.25766935 seconds)
    (2/2) benchmarking "in"...
    done (took 1.26218166 seconds)
  done (took 3.675325721 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.239633864 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.241216345 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.241311834 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.23801476 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.239450235 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.241428672 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.242959638 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.237973015 seconds)
  done (took 11.077864966 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.243158276 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.240826966 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.24165473 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.239006381 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.244299178 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.24415292 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.250207475 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.266414722 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.245677847 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.244933116 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.248810194 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.249441488 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.244150496 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.244551792 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.240945331 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.24032792 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.248894278 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.245363546 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.245292875 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.244847245 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.246348355 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.245426752 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.246919632 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.244108864 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.245009813 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.253841058 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.268372299 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.243973898 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.243425969 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.246493148 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.246376776 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.243235132 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.246153648 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.24584408 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.245077524 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.240391356 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.252700142 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.268007674 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.252964982 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.264181208 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.249020922 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.241957656 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.244725057 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.248625956 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.247101706 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.252055879 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.248524526 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.241936489 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.243533721 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.252702769 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.252708138 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247399445 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.241939931 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.249017083 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.248801071 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.252559213 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.264939085 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.250298771 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.252540294 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.251027115 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.278619885 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.27226371 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.247550123 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.251884068 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.260835819 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.268762023 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.251362018 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.265361386 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.2459832 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.249198487 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.255936264 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.279387517 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.269791795 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.247918593 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.248024706 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.248540801 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.248019368 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.248811445 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.254749787 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.271354063 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.247112889 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.251686732 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.255641299 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.27302043 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.246796113 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.250640253 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.254690283 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.250279303 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.251087188 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.259833539 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.268767895 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.250220979 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.247815367 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.247515773 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.247247072 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.247140257 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.251130348 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246744331 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.245507086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.247634315 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.250933862 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.254131942 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.257182875 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.254126209 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.251943297 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.256803728 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.267960381 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.247663193 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.256943034 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.246673584 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.247295392 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.251054161 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.252333767 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.244952942 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.25355566 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.258349936 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.252051951 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.253578078 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.25085092 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.252434046 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259383027 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.27731669 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.254464791 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.254314631 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.260641531 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.263889948 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.252977894 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.256538334 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.255299731 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.249719688 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.252199394 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.254787252 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.251164816 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.253505106 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.254152919 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.251635031 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.247396045 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.254538282 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.254118363 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.252719653 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.253936933 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.252752855 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.254446586 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.258057455 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.252998885 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.255832756 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.260009116 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.272298932 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.258026531 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.257617476 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.249456484 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256429929 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.254083128 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.254493566 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.255105273 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.253737255 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.252822225 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.255386468 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.250422285 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.250700473 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254189722 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.256392681 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.258262699 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.252940258 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.259002642 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.254298094 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.249488586 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.257423299 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.252372152 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.252219853 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.255605534 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.253787015 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.258079662 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.261749926 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.254636649 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.258085317 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.25833761 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.252822418 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.255759877 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.25401104 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.259396138 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.258911228 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.250268087 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.263971625 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.275572228 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.260249118 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.25586388 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.248829459 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.254473929 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.251645643 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.254659776 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.263214295 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.269684191 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.277677892 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.254924086 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.259190664 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.25714155 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.259554966 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.260067348 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.258138185 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.253869984 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.255312219 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.254432208 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.254376152 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.259445798 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.255379927 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.254776009 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.254486203 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.254100811 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.254524341 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.254754335 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.253844044 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.254998788 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.255395993 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.254429431 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.25479679 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.257822618 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.251482169 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.252878679 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.255080415 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.257392869 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.258267606 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.264151475 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.259247871 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260031766 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262510128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.260856555 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.25570208 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.259150093 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256141615 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.25642773 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.262965199 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.274985601 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.259753711 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258940143 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.27984252 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.256490376 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.257514919 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.25737832 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.257121344 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.260885807 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.265056184 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.257059651 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.255970555 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.259053048 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.257877919 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.256341461 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.263971352 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.270487449 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.258945829 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.257883147 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.260415506 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.25462891 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.257801506 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.26161849 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.259885607 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.262113455 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260160653 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.260722603 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.261623884 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.261012195 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.26044123 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.258468192 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.259088287 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.26786048 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.267565868 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.262020947 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.259643663 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.261124941 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.263944352 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.26120511 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.263822641 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.260550205 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.275785333 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.285852919 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.270887656 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.281292492 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.262123315 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.268917227 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.281129602 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.266698346 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.262697397 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.258692088 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.25757317 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.260786635 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.254821127 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.26009846 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.260824381 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.262547235 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.267376258 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.263954956 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.26157878 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.258702287 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.258977396 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.263681184 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.26710929 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.267011864 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.26306261 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.263277762 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.264647947 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.26478771 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.26176663 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268708318 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.285576684 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.261493043 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.264211869 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.264271224 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.260610694 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.261465842 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.26076277 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.265970303 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.269993924 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.265084856 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.272961577 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.265045425 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.272217044 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.266963497 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.270388381 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.275822443 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.262034805 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.265544829 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.259975624 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.264070767 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.272430747 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.280881766 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.266221081 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.268393265 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.266947112 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.268817921 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.268599955 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.267184266 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.265396319 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.263666302 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.271428864 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.28924177 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.269177655 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.267964226 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.262875757 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.265197534 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.267936096 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.265421077 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.270084378 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.266893234 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.265157935 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.267953986 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.265698917 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.267135856 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.265523272 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.272654906 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.262193231 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.265532661 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.271870606 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.288925781 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.270556974 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.267245878 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.272154868 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.284850591 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.27769158 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.286473073 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.267504616 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.270091409 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.267602391 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.269774571 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.265801743 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.26921917 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.267462776 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.267986494 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.272448197 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.270438886 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.270436605 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.270117521 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.270349125 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.267334439 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.277982646 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.288603576 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.268872407 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.272989546 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.264864942 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.269778143 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.272048188 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.26740581 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.264786299 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.272196999 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.276756601 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.278071452 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.269533196 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.2679299 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.268280244 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.269907287 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.271800273 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.271098109 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.269806069 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.267680967 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.269818413 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.264585869 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.273166771 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.270836893 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.269778164 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.26808876 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.271546459 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.280067375 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.284182527 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.270953035 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.270604031 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.272274113 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.267410319 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.268839146 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.269683931 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.271092951 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.270045239 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.273560492 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.279551247 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.27239236 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.272376132 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.26955592 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.272896599 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.269461308 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.272162965 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.273109668 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.274483458 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.276334476 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.275352653 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.272938247 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.270651908 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.266728804 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.272127194 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.271871584 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.269943141 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.274275353 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.275041697 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.268495546 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.265608402 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.268815832 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272817616 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.268886491 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.2687567 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.280965324 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.290701559 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.281247095 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.281585494 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.275004477 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.272380211 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.270981699 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.279119075 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.270037262 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.273084109 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.272170414 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.270974871 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.270083619 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.277150492 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.272073161 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.279161872 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.289334667 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.270157261 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.280563184 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.293572527 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.274457524 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.274950455 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.273802497 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.268747246 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.265305191 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.271293319 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.273527089 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.279661845 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.293680801 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.274404644 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.275273385 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.275853664 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.273433863 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.274062857 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274773489 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.273478437 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.272864758 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.271114437 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.275931668 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.272195187 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.271631551 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.269205811 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.273901331 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.277346932 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.281124244 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.271538497 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.27334065 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.277442071 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.271926769 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.271743513 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.274672502 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.271700576 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.267113973 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.273276812 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.274752623 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.274554157 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.27638778 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.274923117 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.273144438 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.275434872 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.277127035 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.278627777 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.285987082 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.279870625 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.268377402 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.272922102 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.27321771 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.274853953 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.278408386 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.274415128 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.274383582 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.272137732 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.274337462 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.276859114 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.276184494 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.278064149 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.291949421 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.298954569 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.273583601 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.276315896 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278522284 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.276905472 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.271077594 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.274966583 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.279473271 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.277180256 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.28456976 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.278434238 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283439104 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.299906638 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.276532436 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.282103706 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.281279833 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.284019214 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.276697826 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.279577146 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.278652307 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.281821898 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.292756132 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.281197922 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.284907192 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.306372135 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.297743342 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.274802333 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.276703874 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.275848136 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.274517244 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.276077746 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.279931026 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.275953522 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.276462296 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.280059805 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.279987276 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.284350568 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.279320867 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.281931105 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.27953347 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.278123972 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.276494043 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.276673615 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.278075273 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.278151338 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.279161578 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.278117037 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.281989368 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.277892586 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.289603768 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.304840313 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.280480986 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.279502628 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.275437906 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.277908137 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.282486969 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.289999978 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.286238125 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.28174892 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.280567614 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.281264506 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.278335468 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.277139856 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.276809856 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.279019741 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.278732104 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.277037346 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.292278426 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.302758173 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.281965854 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.281917663 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.278533522 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.278892605 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.278154596 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.277086687 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.277781096 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.278592044 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.277291728 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.278689797 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.281313238 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.28334547 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.282485788 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.290255631 seconds)
  done (took 755.258767914 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.280740867 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279893475 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27565999 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.27809592 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279326647 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275091001 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276989422 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.275829764 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.279251514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.276453146 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.27720252 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.276923754 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276338977 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278919469 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.276305 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.27658748 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.275514647 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.28116776 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.276741123 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.28032155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.282274864 seconds)
  done (took 28.028460574 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.281300538 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.277653101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.28183333 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.282747247 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.2809967 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.283879545 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.278753241 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279345279 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284221849 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.28071955 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.282602153 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.283366497 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.283082461 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.27826983 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278720264 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284185634 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.27825248 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.276228822 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.282893488 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.280058547 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.280557858 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.281909396 seconds)
  done (took 29.373915223 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.28520875 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.285677471 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.27998505 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.276087823 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.282441072 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.281269637 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.281502035 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.285524251 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.285021671 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.281103799 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.28562385 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.282315115 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.287838787 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.287784171 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.284591657 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.285479539 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.430432073 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.281983666 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.285041768 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.281669844 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.2833698 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.290714558 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.304642428 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.280081171 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.281821718 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.284332004 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.283856067 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.286465841 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.282265678 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.287082109 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.2917541 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.285010114 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.280731596 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.280664733 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.285367698 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.283545387 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.289766009 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.284476985 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.282212217 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.285927651 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.294393081 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.303781914 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.282808249 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.294637035 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.309303651 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.286039807 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.288020676 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.292174855 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.284249293 seconds)
  done (took 64.359988491 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.287080661 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.285034239 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.283298779 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.287834561 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.285771796 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.286174582 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.285610108 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.288120614 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.281584454 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.285570194 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.291924886 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.28621721 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.287519941 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.285523666 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.288721846 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.286048179 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.290644373 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.282284789 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.286616854 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.287414312 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.285462023 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.289795991 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.28865705 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.280767233 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.28733624 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.284823097 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.28430527 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.287865133 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.286227914 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.283877296 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.290072028 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.289456941 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.289761336 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.285923238 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.284585198 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.286772155 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.28997942 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.28751776 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.289900667 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.2841272 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.29253712 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.291573943 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.289054797 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.290687701 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.289228834 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.286108651 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.28809313 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.289169442 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.290560971 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.290745234 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.291876452 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.286573965 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286372789 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.285935324 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.286925263 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.292025772 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.288176441 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.290089892 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.290396596 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.286773833 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.285222239 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.290938953 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.286633118 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.287613561 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.291864022 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.286291492 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.288461931 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.293005728 seconds)
  done (took 88.758799067 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.292720076 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.292415962 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.293206266 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.292602556 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.293018324 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.294790386 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.289426926 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.292008023 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.290321982 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.291123135 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.29029138 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290651764 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.293799058 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.291098405 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292617471 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.291667318 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.290435982 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.292592243 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.291804257 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.289409512 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.292215799 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.289422297 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.291726275 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291890535 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.296137223 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.29126472 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.294932319 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.292843087 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.292048685 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.291331606 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.295979206 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.297528429 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.29042148 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.292124519 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.292925156 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.294645885 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.293998347 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.289797452 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.29436634 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.290446678 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.293209604 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.295465347 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.291685806 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.29376196 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.294435027 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.296822054 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.296752025 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.295644263 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.296075497 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.293819483 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.295533258 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.298410268 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.299097556 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.295298051 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.294080864 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.292741401 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.292212068 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.295988503 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.295715161 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.294689182 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.295611781 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.298132595 seconds)
  done (took 81.388671365 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.2962314 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.291969929 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.291646527 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.291584229 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.297006292 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.293668463 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.295327776 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.295777853 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.29566582 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.297695004 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.295238304 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.291355664 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.295364522 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.294531286 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.291366294 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.293105301 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.293295397 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.292251028 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.296728266 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.293312652 seconds)
  done (took 27.089006392 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.295063417 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.295840141 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.288394776 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.28934991 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.294593015 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.29284374 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.294066161 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.297356471 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.293231698 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.295951557 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.302870536 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.297236755 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.294636262 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.292316301 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.295486333 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.294771619 seconds)
  done (took 21.920256557 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.294127603 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.29321449 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.298463883 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.29663009 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.294401032 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.293546127 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.298704125 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.298944302 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.297906627 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.300027923 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.301018789 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.301022857 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.302661771 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.300209529 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.297623833 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.299348543 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.298007646 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.297470818 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.299968808 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.300750701 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.297926055 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.296967695 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.299966911 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.299339779 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.294373566 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.298687535 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.29875644 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.296655917 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.295291215 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.297105367 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.300250453 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.297721089 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.296639948 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.296051739 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.295535905 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.291900601 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.299570117 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.296708895 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.300027909 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.298197109 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.297990899 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.295929759 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.301414604 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.300934063 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.298733371 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.301198835 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.296008014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.297701009 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.296291609 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.295516506 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.302335628 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.30237969 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.303942192 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.301679071 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.297646446 seconds)
  done (took 72.608285377 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.301981279 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.298149974 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.298163158 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.301508507 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.30288164 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.299415487 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.302879412 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.302615147 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.300569746 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.30302938 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.302570224 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.304996564 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.300711445 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.302209732 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.299680815 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.301726159 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.30221896 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.299215552 seconds)
  done (took 24.63395072 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.299786393 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.297076932 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.302941632 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.30000715 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.299422402 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.303469573 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.30571228 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.307375032 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306641949 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.3007393 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.29759078 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.304410593 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.30923798 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.30651583 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.305510939 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.304582008 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.307690157 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.306412707 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.304190893 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.304032524 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.305650782 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.305593309 seconds)
  done (took 29.895340374 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.302920354 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.305260276 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.30707329 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.32368081 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.325383224 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.329323159 seconds)
  done (took 9.10380194 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308922286 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303597953 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.299359224 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306731716 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.306432209 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.308048822 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302211424 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305212669 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.3081082 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.305982344 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.306442199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.306113279 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.302994165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304064534 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.307229232 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310106089 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307138552 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.304635608 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310651324 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309496114 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.308407988 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309864202 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.301073386 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.302663726 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.30452303 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.303059698 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.303771377 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304977638 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.303192967 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.304912575 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.307515965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.303301199 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.305754227 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.304969479 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.304534042 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309361174 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308053939 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310830991 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309188049 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.305556601 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.307685719 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309840308 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.306800213 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.306171323 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30873702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.305867155 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307668358 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307367187 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.307543281 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.311750124 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309205765 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.307970029 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309674373 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313024564 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.312705932 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309035496 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310177276 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306852192 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308564942 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.306471514 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310481369 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.311153228 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309626602 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.309913637 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.313848615 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.307577731 seconds)
  done (took 87.513309741 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310759349 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.30905093 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.305580714 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.312128378 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309653407 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.310395741 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311073146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.310562195 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.308900754 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.304156462 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.30363598 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.307875559 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309187594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311036774 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311436171 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310784865 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.310537267 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.309339334 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306378223 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.313270983 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312034826 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309041287 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.311172448 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.309558847 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.306923442 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312871961 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.308434709 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.310681965 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31156718 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.309878033 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312157022 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.310646443 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.313016036 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.311250742 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309135832 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310258467 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311898718 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.311666758 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310591916 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.314718824 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.312905728 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.316450645 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.311975884 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.310843084 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.309727154 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.307462172 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.309858588 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.31048155 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.312383649 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.312658226 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309223858 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.311563445 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.312464035 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.309600314 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31000421 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.313183769 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.313488888 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.310535392 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.311318693 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.315264284 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.31225368 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.31463013 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.317148902 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309762171 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.309823294 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.311912483 seconds)
  done (took 87.729267556 seconds)
done (took 1761.794594713 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.473458145 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.433702871 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.313642456 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.309917298 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.310950417 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.319994295 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.307783852 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.310613288 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.315839836 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.314185553 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.315070916 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.507723481 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.329543556 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.31073213 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.31642046 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.410275064 seconds)
  done (took 42.821730804 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.34790532 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.320889878 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.441317149 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.34060264 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.344377559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.513243758 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.377065488 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.321426618 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.503764137 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.35524799 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.968236093 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.337022852 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.315286405 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.491974774 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.33471422 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.514435873 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.585117424 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.965327613 seconds)
  done (took 30.598622393 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.808730695 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.323718767 seconds)
  done (took 9.355022782 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.341445177 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.319969217 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.322677381 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.316931946 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.312205107 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.321927219 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.319689241 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.317053902 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.263802317 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.449075109 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.322278037 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.329583051 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.339388644 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.319580464 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.319323155 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.359288702 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.480183585 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.321217228 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.319681798 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.324994593 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.321097539 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.446254597 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.366425519 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.320438983 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.457124262 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.26745274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.318681367 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.327824777 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.47681157 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.320448011 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.320583608 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.322846707 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.324197039 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.244876556 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.782294965 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.311458778 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.342967225 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.332948285 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.318331458 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.524592417 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.323633232 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.330303739 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.325667236 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.759703592 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.46166663 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.434667263 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.630870717 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.332680754 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.322933534 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.382009781 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.319037376 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.319589559 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.365884646 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.137020458 seconds)
  done (took 111.840067708 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.349485798 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.71390315 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.48218538 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.329971449 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.972253313 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.001445934 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.326623252 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.629718222 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.362417605 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.310372933 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.617616333 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.844744167 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.336626261 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.31699661 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.972446371 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.399324763 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.309713982 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.082429965 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.3302748 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.314478907 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.834233347 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.31470439 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.308636138 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.467163665 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.351809629 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.804200306 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.846537556 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.784844323 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.330499229 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.309817131 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.79531932 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.338127007 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.386042068 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.310729131 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.581596425 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.681567565 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.671317638 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.33108288 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.31685847 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.316384092 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.317499317 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.777281153 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.679842848 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.323763793 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.312764326 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.776162808 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.325757738 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.321799848 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.321133489 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.519453088 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.176997886 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.313610741 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.746728539 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.310636467 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.699116927 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.371901238 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.354575324 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.814752978 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.327598089 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.38844938 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.374298777 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.319135713 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.320836166 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.314630904 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.326526216 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.672227593 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.685564445 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.322037116 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.674277854 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.797387092 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.326365827 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.845218001 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.126991103 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.345633153 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.375335578 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.331140368 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.871451114 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.815348336 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.335907005 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.311625282 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.664837804 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.328304399 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.605351426 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.330040438 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312798562 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.844896098 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.327025063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.363741697 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.315202795 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.328304056 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.980421654 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.325076552 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.585138606 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.355824094 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.314696968 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.314454901 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.342430362 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.312692885 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.311527271 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.316740746 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.848190113 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.32925774 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.449846728 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.337709199 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.323151373 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.321116007 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.315411318 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.320033571 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.538644381 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.805242223 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.343486721 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.319984749 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.314252844 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.336799369 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.494029618 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.325162257 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.653233566 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.336223428 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.314591413 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.313669 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.028068728 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.378927869 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.315362214 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.333874552 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.198417312 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.531333016 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.340308216 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.323351529 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.320307412 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.337946806 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.636871725 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.335334566 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.352842877 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.320433523 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032406977 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.361849583 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.350953607 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.843936189 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.323041834 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.266825565 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.332850654 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.318304175 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.608146583 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.597555225 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.580351224 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.31627307 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.33853068 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.010716451 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.347311886 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.460000782 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.342883097 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.367676047 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.52087649 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.533551609 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.324704262 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.959207234 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.325659387 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.534018637 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.325536762 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.624797687 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.825952621 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.334025446 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.323528859 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.04207567 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.051570547 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.006058585 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.326703012 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.600537374 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.287950553 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.790511019 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.324219749 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.32520563 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.763728642 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.324677178 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.323008168 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.327129474 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.324835068 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.385053353 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.498169247 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.03820042 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.325341323 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.785483316 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.367069218 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.317351442 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.337095948 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.323052265 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.673865704 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.377729571 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.325888624 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.352724133 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.320247156 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.331282901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.805895337 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.168391372 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.327065444 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.478307893 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.965559972 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.335801224 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.326787966 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.936048711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.628036043 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.841115052 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.374803879 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.64548064 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.339466686 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.36175493 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.915119175 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.391413015 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.804709632 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.336400047 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.32044124 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.923135828 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.338370894 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.393331143 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.321553417 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.325009981 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863502119 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.335532772 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.330505367 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.637332406 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.339508246 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.570987047 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.32650964 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.342667997 seconds)
  done (took 1109.022869059 seconds)
done (took 1304.862715093 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.325973485 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.330510335 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.30817353 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330334987 seconds)
  done (took 26.532074096 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.339072168 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.329617624 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.335810657 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.332250528 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.335541428 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.331666713 seconds)
  done (took 9.242403377 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.426748304 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.327148673 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.330478044 seconds)
  done (took 19.321188849 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.554989046 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.641244614 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.670800255 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.615173734 seconds)
  done (took 10.720764808 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.334831211 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.336337268 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.335557022 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.337629475 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.336904943 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.340089342 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.336140215 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.333383663 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.337018835 seconds)
  done (took 13.263953349 seconds)
done (took 80.31983457 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.308463103 seconds)
    (2/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.320813351 seconds)
    (3/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.311498786 seconds)
    (4/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.325842554 seconds)
    (5/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.351591017 seconds)
    (6/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.430520499 seconds)
    (7/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.355337174 seconds)
    (8/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.414678665 seconds)
    (9/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.597488546 seconds)
    (10/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.381795958 seconds)
    (11/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.897418606 seconds)
    (12/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.3575955 seconds)
    (13/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.326370882 seconds)
    (14/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.384964078 seconds)
    (15/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.440403944 seconds)
    (16/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.311047137 seconds)
    (17/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.32081376 seconds)
    (18/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.329115181 seconds)
    (19/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.570864692 seconds)
    (20/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.356540788 seconds)
    (21/286) benchmarking ("sort", Int64, true)...
    done (took 6.328688012 seconds)
    (22/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.488930032 seconds)
    (23/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.193164858 seconds)
    (24/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.296955666 seconds)
    (25/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.427276075 seconds)
    (26/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.427373313 seconds)
    (27/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.311029569 seconds)
    (28/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.368292528 seconds)
    (29/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.208193303 seconds)
    (30/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.305000766 seconds)
    (31/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.323984625 seconds)
    (32/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.870256659 seconds)
    (33/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.713468152 seconds)
    (34/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.324317099 seconds)
    (35/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.474975181 seconds)
    (36/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.752973468 seconds)
    (37/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.731412354 seconds)
    (38/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.846561824 seconds)
    (39/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.582395504 seconds)
    (40/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.801700697 seconds)
    (41/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.386704053 seconds)
    (42/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.932702871 seconds)
    (43/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.3844087 seconds)
    (44/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.282971236 seconds)
    (45/286) benchmarking ("sort", Int8, true)...
    done (took 6.324035464 seconds)
    (46/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.37087976 seconds)
    (47/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.693685139 seconds)
    (48/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.327723531 seconds)
    (49/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.35188976 seconds)
    (50/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.993751496 seconds)
    (51/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.548603031 seconds)
    (52/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.737014914 seconds)
    (53/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.605628619 seconds)
    (54/286) benchmarking ("sort", Float32, true)...
    done (took 6.326786934 seconds)
    (55/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.308473957 seconds)
    (56/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.185581341 seconds)
    (57/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.258847733 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.329129829 seconds)
    (59/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.361099066 seconds)
    (60/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.349937438 seconds)
    (61/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.333255437 seconds)
    (62/286) benchmarking ("sort", Int64, false)...
    done (took 5.555910181 seconds)
    (63/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.295552344 seconds)
    (64/286) benchmarking ("sort", BigInt, true)...
    done (took 6.328481189 seconds)
    (65/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.3808559 seconds)
    (66/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.128402257 seconds)
    (67/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.389533342 seconds)
    (68/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.822076065 seconds)
    (69/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.994433291 seconds)
    (70/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.337005354 seconds)
    (71/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.356808186 seconds)
    (72/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.317170562 seconds)
    (73/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.694467783 seconds)
    (74/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.329417788 seconds)
    (75/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.43751598 seconds)
    (76/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.399309006 seconds)
    (77/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.294141761 seconds)
    (78/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.742631237 seconds)
    (79/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.361876676 seconds)
    (80/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.948134624 seconds)
    (81/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.82123969 seconds)
    (82/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.411702286 seconds)
    (83/286) benchmarking ("sort", BigInt, false)...
    done (took 6.336793459 seconds)
    (84/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.413065766 seconds)
    (85/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.827854587 seconds)
    (86/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.67519746 seconds)
    (87/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.129629232 seconds)
    (88/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.33104206 seconds)
    (89/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.404897108 seconds)
    (90/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.46284163 seconds)
    (91/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.678193677 seconds)
    (92/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.550596349 seconds)
    (93/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.993227076 seconds)
    (94/286) benchmarking ("sort", Int8, false)...
    done (took 4.393804268 seconds)
    (95/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.423105293 seconds)
    (96/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.427646886 seconds)
    (97/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.338428542 seconds)
    (98/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.324484418 seconds)
    (99/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.749452077 seconds)
    (100/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.061504236 seconds)
    (101/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.584355059 seconds)
    (102/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.313294703 seconds)
    (103/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.429272944 seconds)
    (104/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.343215249 seconds)
    (105/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.358157332 seconds)
    (106/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.772074301 seconds)
    (107/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.31163365 seconds)
    (108/286) benchmarking ("sort", Bool, false)...
    done (took 1.851842495 seconds)
    (109/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.713908744 seconds)
    (110/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.370144804 seconds)
    (111/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.346726832 seconds)
    (112/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.607394659 seconds)
    (113/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.348076151 seconds)
    (114/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.311501368 seconds)
    (115/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.517503399 seconds)
    (116/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.58513427 seconds)
    (117/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.200620503 seconds)
    (118/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.456394295 seconds)
    (119/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.130683629 seconds)
    (120/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.592181928 seconds)
    (121/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.364061649 seconds)
    (122/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.210447635 seconds)
    (123/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.853886025 seconds)
    (124/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.333755539 seconds)
    (125/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.336544068 seconds)
    (126/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.385017645 seconds)
    (127/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.802536019 seconds)
    (128/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.952485006 seconds)
    (129/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.313281989 seconds)
    (130/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.768230676 seconds)
    (131/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.384956487 seconds)
    (132/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.439068812 seconds)
    (133/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.079288333 seconds)
    (134/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.438243812 seconds)
    (135/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.727995736 seconds)
    (136/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.082909518 seconds)
    (137/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.147304632 seconds)
    (138/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.361112407 seconds)
    (139/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.319181331 seconds)
    (140/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.322562375 seconds)
    (141/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.441303965 seconds)
    (142/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.318615075 seconds)
    (143/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.591691153 seconds)
    (144/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.320041422 seconds)
    (145/286) benchmarking ("sort", Float32, false)...
    done (took 5.37603456 seconds)
    (146/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.724931447 seconds)
    (147/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.985163153 seconds)
    (148/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.364128695 seconds)
    (149/286) benchmarking ("sort", Float64, false)...
    done (took 5.687305518 seconds)
    (150/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.342943322 seconds)
    (151/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.34205511 seconds)
    (152/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.087014805 seconds)
    (153/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.556533341 seconds)
    (154/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.330429035 seconds)
    (155/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.323551161 seconds)
    (156/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.131154135 seconds)
    (157/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.333248803 seconds)
    (158/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.919163098 seconds)
    (159/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.837237581 seconds)
    (160/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.344064121 seconds)
    (161/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.406845985 seconds)
    (162/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.174555552 seconds)
    (163/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.228430023 seconds)
    (164/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.314293437 seconds)
    (165/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.316242849 seconds)
    (166/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.746097936 seconds)
    (167/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.700062343 seconds)
    (168/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.33997906 seconds)
    (169/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.352054048 seconds)
    (170/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.352066815 seconds)
    (171/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.368672482 seconds)
    (172/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.477732944 seconds)
    (173/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.214462082 seconds)
    (174/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.204925278 seconds)
    (175/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.824627107 seconds)
    (176/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.83727274 seconds)
    (177/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.200451218 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.36330016 seconds)
    (179/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.831734779 seconds)
    (180/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.014467027 seconds)
    (181/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.959287766 seconds)
    (182/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.32267214 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.378830013 seconds)
    (184/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.326932565 seconds)
    (185/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.362784392 seconds)
    (186/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.321847689 seconds)
    (187/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.458190972 seconds)
    (188/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.326678463 seconds)
    (189/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.346769196 seconds)
    (190/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.324188013 seconds)
    (191/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.364299152 seconds)
    (192/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.329372483 seconds)
    (193/286) benchmarking ("sort", Float64, true)...
    done (took 6.353942129 seconds)
    (194/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.331461343 seconds)
    (195/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.43792983 seconds)
    (196/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.337637759 seconds)
    (197/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.863747466 seconds)
    (198/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.424081111 seconds)
    (199/286) benchmarking ("sort", Bool, true)...
    done (took 5.465115509 seconds)
    (200/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.413981746 seconds)
    (201/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.976529881 seconds)
    (202/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.321454397 seconds)
    (203/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.114569042 seconds)
    (204/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.706468266 seconds)
    (205/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.710953682 seconds)
    (206/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.155120152 seconds)
    (207/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.789769661 seconds)
    (208/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.368981854 seconds)
    (209/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.338782812 seconds)
    (210/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.617210045 seconds)
    (211/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.978702113 seconds)
    (212/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.552622444 seconds)
    (213/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.842274071 seconds)
    (214/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.319294351 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.03062826 seconds)
    (216/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.363060078 seconds)
    (217/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.370819264 seconds)
    (218/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.372582918 seconds)
    (219/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.38299771 seconds)
    (220/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.364606589 seconds)
    (221/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.386378895 seconds)
    (222/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.21719685 seconds)
    (223/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.008471429 seconds)
    (224/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.365274291 seconds)
    (225/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.852471676 seconds)
    (226/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.555822982 seconds)
    (227/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.529611978 seconds)
    (228/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.285204305 seconds)
    (229/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.969173613 seconds)
    (230/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.340836547 seconds)
    (231/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.341438452 seconds)
    (232/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.399251042 seconds)
    (233/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.463910959 seconds)
    (234/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.327390489 seconds)
    (235/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.783601782 seconds)
    (236/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.320583757 seconds)
    (237/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.425493542 seconds)
    (238/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.362346155 seconds)
    (239/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.740846703 seconds)
    (240/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.46405819 seconds)
    (241/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.966080664 seconds)
    (242/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.368726071 seconds)
    (243/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.270165802 seconds)
    (244/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.566932585 seconds)
    (245/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.453901193 seconds)
    (246/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.163220516 seconds)
    (247/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.445293905 seconds)
    (248/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.374623074 seconds)
    (249/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.623735802 seconds)
    (250/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.38740799 seconds)
    (251/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.232806407 seconds)
    (252/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.310515114 seconds)
    (253/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.74358902 seconds)
    (254/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.579881323 seconds)
    (255/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.321043189 seconds)
    (256/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.46213038 seconds)
    (257/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.127787851 seconds)
    (258/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.228261415 seconds)
    (259/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.180016269 seconds)
    (260/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.464493093 seconds)
    (261/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.924695641 seconds)
    (262/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.375523662 seconds)
    (263/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.340736692 seconds)
    (264/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.425320289 seconds)
    (265/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.411559721 seconds)
    (266/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.328269768 seconds)
    (267/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.880262348 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.431996755 seconds)
    (269/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.291614178 seconds)
    (270/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.469163265 seconds)
    (271/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.454138574 seconds)
    (272/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.196627401 seconds)
    (273/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.947747625 seconds)
    (274/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.46118355 seconds)
    (275/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.344320767 seconds)
    (276/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.348811987 seconds)
    (277/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.382062453 seconds)
    (278/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.387610568 seconds)
    (279/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.552552393 seconds)
    (280/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.39732034 seconds)
    (281/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.538604219 seconds)
    (282/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.628509608 seconds)
    (283/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.033584973 seconds)
    (284/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.343624331 seconds)
    (285/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.375794221 seconds)
    (286/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.434727974 seconds)
  done (took 946.031190819 seconds)
done (took 947.271005206 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.379492219 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.378432043 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.356968247 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.378739663 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.472033485 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.386003635 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.372380725 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.362463938 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.408420447 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.410973175 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.356577969 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.383844597 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363062434 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.362290039 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.357830435 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.379821921 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.510354846 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.362570116 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.377089761 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.37114071 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.377546707 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.357798219 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.411158767 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.386036962 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.366875366 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.365288459 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.364357031 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.381410065 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.472882357 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.365235044 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.363745344 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.371021771 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.511214377 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.361794728 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.3580731 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.38045615 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376049218 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.370045979 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.364998321 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.393400271 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.89144729 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.372942573 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.365043067 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.36591379 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.363972138 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.367045393 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.363087251 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.370326857 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376299408 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376513469 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.879462886 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.387563411 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.368648898 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.365090895 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.376035858 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.362826693 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.367925578 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.383270811 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.38401736 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381831553 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.451601536 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.362866356 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.368227205 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.382398315 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372140005 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.917051293 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.370216094 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.369461313 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.895779487 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.380334339 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.921390252 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.383113028 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.366815978 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.381432412 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.397763612 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.474034887 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.354212638 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.363982105 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.374369398 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.363164217 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.374437433 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.380514045 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.371545605 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.366759437 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.380223383 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.391297058 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.37719569 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.3658989 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.375458015 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.383132338 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.372539487 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.380475362 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.371163785 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.362246644 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377127798 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.370906905 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.367665934 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.368527643 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.369851639 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.377839602 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.893846572 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.395599041 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.362999349 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.364396582 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.368140398 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.380640546 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.893878829 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.376871276 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.387696756 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.415111884 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.368036906 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.508037065 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.374686845 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.384019097 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.378029989 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.369113317 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.362775853 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.514444121 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.885001199 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.391057837 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.368875374 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.368478223 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.384819626 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.370786476 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.364287533 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.473834664 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.364897982 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.384515099 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.489375139 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.380113384 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.401116693 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.366648527 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.371677861 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.392202286 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.385587994 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.399503059 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.372671955 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.384658144 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.385293706 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.366590865 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.379070941 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.377960311 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.36970525 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.374648374 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.364757781 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.394080319 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.38595636 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.378189358 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.38984304 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.491651782 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.368330742 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.470926559 seconds)
done (took 231.796219733 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.435904941 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.366154264 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.451843494 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.365046507 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.469274784 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.472033591 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.364431425 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.363211323 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.36244947 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.746111166 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.364077038 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.36497532 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.365725941 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.363976788 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.452316618 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.365215813 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.364304256 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.711108963 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.366580605 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.438598482 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.361364327 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.366594677 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.369491897 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.754412593 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.363001451 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.362961918 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.43860753 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.369118314 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.716085716 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.360247078 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.364590678 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.720368261 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.461450112 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.386901275 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.378877617 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.376589752 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.472343078 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.388586001 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.451818471 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.450079041 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.455320412 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.408148118 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.361296284 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.371760892 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373023036 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.369673519 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.367642458 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.397158045 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.366671161 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.367360055 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.713954149 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.377665574 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.369227726 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.366815462 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.368886766 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.401640664 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.368456364 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.370717495 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.458995189 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.370926402 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.432416784 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.755516114 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.751274163 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.370438277 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.364466762 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.369799951 seconds)
  done (took 150.782703437 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.438678872 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.444898777 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.490063907 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.389492125 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.420977976 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.491284482 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.388851124 seconds)
  done (took 11.333005797 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.377350477 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.370699056 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.420592336 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.422604399 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.370255353 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.559723516 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.372352267 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.382126772 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.368651138 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423491878 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.375285251 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.372648782 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.378067602 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.371811188 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.418812568 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.384068186 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.485247221 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.374278393 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.375033727 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.523227972 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.368468901 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.37978066 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.424885124 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.381499566 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.375524103 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.379881991 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.213901322 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.374049799 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.372036477 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.373058524 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.369546199 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.449280725 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.374689021 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.372863755 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.37060245 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.489533823 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.375453874 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.370938016 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.375725839 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.369678162 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.374603997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.374559723 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.374023517 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.373281837 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.374231084 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.397693542 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.374498201 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.374858037 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.373731599 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.374154048 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.42462575 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.375465165 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.371102302 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.371361834 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430895554 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.382342592 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.376841556 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.375266552 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.375689434 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.373953318 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526722374 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.42091866 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.37494596 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.424723498 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.375555463 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.375942574 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.376213988 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.376859763 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.430113602 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.377053157 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.423363909 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.373338803 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.573195641 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.399178051 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.378902384 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.37796808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.378617125 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376182597 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.372540217 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382588987 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.373091039 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.378956876 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382172269 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.376743292 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.375334953 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.543343816 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.486411047 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.377202436 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.390191508 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.384039852 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.377854158 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.430401811 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.378751663 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.378532488 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.431921759 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.494055615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.431235351 seconds)
  done (took 157.669382088 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.384596028 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.38606184 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382795812 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.401691379 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.395274911 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.37822961 seconds)
  done (took 9.60414609 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.382528767 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.381202256 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.380771699 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.379255966 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.380239335 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.382496146 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.378762801 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.380650545 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.38237102 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.379569845 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.381012161 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.38402128 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.381418214 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.378577092 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.380547361 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.380577453 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.378788268 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.376390162 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.38042887 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.382915155 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.473159332 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.381312956 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.381668678 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.382038494 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.384196674 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.379387378 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.389088595 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.380973508 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.37931702 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.390012992 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.399701089 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.38411539 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.382911692 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.386169273 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.385310277 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.385978769 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384966367 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.38524045 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.378965937 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.385629575 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.380629998 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.382253258 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.382525534 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.386509133 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.38397191 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.38655279 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.389445296 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.388795497 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.383260437 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.388059768 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.383771962 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.382883949 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.383777988 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.383298038 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.383287692 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.403658895 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.390378345 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.381429793 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.381454135 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.384218832 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.383686298 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.383912655 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.383840042 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.387690971 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.391268698 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.389490198 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.384343288 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.388283119 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.383304029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.383879489 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.385541567 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.379947594 seconds)
  done (took 102.00796659 seconds)
done (took 432.665439312 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.475078551 seconds)
  done (took 7.755000852 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.782811056 seconds)
  done (took 8.065243194 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.32466325 seconds)
  done (took 24.616051208 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.432656367 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.459315593 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.399983318 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.377646539 seconds)
  done (took 26.952090243 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.434742277 seconds)
  done (took 7.7171879 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.382955818 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.369987242 seconds)
  done (took 14.036775914 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.58481082 seconds)
  done (took 7.866679031 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.115575879 seconds)
  done (took 8.406211777 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.398374725 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.404060983 seconds)
  done (took 14.355015485 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.355276455 seconds)
  done (took 7.63761915 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 10.895172429 seconds)
  done (took 12.17729599 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.37636167 seconds)
  done (took 7.662116522 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.380819274 seconds)
  done (took 7.663147999 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.132046081 seconds)
  done (took 10.414642302 seconds)
done (took 166.608283544 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.376763036 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.37808082 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.381033928 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.376642471 seconds)
  done (took 26.793755956 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.418800481 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.418288733 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.419254765 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.426490435 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.421979188 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.414243529 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.408550618 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.408894687 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.431112915 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.420048748 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.414844941 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.420990175 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.419827485 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.409555905 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.421780524 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.421112204 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.431224859 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.420777562 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.410931961 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.422543748 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.387575599 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.430515697 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.417248253 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.384671337 seconds)
  done (took 35.285489521 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.914973962 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.462649348 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.538849204 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.437202248 seconds)
  done (took 7.63769967 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.439726179 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.440010837 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.447907781 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.486708565 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.517811526 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.446520035 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.415141455 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.406101362 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.394399136 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.440431823 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.510922567 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.457095709 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.525169337 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.387894181 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.600043701 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.38718391 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.382929118 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.435775444 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.484285746 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.500656393 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.388436287 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.438648157 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.444894097 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.456105727 seconds)
  done (took 36.119547143 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.387448567 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.405558664 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.387119246 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.387561935 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.39610809 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.386394021 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.386450937 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.387476027 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.387027516 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.391463277 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.386479345 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.392573572 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.388232763 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.386802171 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.390007536 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.387398454 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.394255113 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.384010116 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.383162666 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.386429578 seconds)
  done (took 29.067263989 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.376313612 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.373656988 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.728887783 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.632879664 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.379813301 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.385285153 seconds)
  done (took 28.16295116 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.464034073 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.633442342 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.390334434 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.779183949 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.86345917 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.399821491 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390227036 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.658120047 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.999117185 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.984671829 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.452438476 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.465563301 seconds)
  done (took 20.769228998 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.382370931 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.383302346 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.397935531 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.401389249 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.449654124 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.410677308 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.398132469 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.38273558 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.452767673 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.47254695 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.411301021 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.452661494 seconds)
  done (took 38.2863628 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.467716158 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.432236155 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.48222664 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.465425704 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.114613539 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.592774806 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.452605609 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.12747148 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.398976411 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654489335 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.394217212 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477239361 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.638235588 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38781449 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.38880917 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.399682191 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.632603295 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.905829335 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.389038552 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.701509307 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.413149328 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.400254032 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.787659091 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.64376766 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.618954189 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.364483476 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.641913983 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.156890569 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.685002981 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.402022582 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.39142658 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.38112389 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.654371552 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079264245 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.503614423 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.617684585 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.407686168 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.936905564 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.370880302 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.693964913 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.391061853 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.392496922 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.391308849 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.388629704 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.316346294 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.385255375 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.144052046 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.408582382 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.092333588 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.381969057 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.662768898 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486887383 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.385582655 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.956889027 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.386415817 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.398602694 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.389962036 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478330629 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.981153896 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.959604506 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40672796 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.329780542 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.381923979 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.720100232 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067871929 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.413586005 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.388988823 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.387664328 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.318205922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.689176547 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.409629993 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.547972781 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.407157174 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.045324073 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.168864052 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.409066188 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.343598092 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.983424166 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403369474 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.328466829 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61462383 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.164532839 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.321340094 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.325919668 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.319639411 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.15004718 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.398428229 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 5.017836452 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.412922318 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.163318629 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.643102157 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.426276569 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.411157065 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.614514498 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.263943525 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.390013108 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.385167792 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525214876 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.409670662 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.183763548 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.346020251 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.389527517 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.651718171 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.600403251 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.39994532 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.413259244 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.952307048 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412374076 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.409423196 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.390826546 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.63268265 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.030840023 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.429324187 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.953236051 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410804709 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.165329948 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190514089 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.399769346 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.399112252 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.389479609 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687369225 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.209783531 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.281942889 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4565827 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.393237429 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.390048843 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.722874655 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.237304714 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.293037128 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.608962949 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.4294402 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.40711787 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.393758046 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.353060634 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.38653232 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408454823 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.175289007 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.612615659 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402025421 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.671226197 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.322573392 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.525881273 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.405016563 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.611822284 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.689696934 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.418106144 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.652670138 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.38730096 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.421912925 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.40978264 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410297766 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.495858665 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.418685566 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.395355093 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.656085137 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.395453868 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.391617228 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.838513303 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.167833799 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.401001571 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.400121154 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395102009 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.012429324 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.416094498 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.397098051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.327480164 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.407346273 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.460930524 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.403740347 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.631580853 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.813457722 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.425742414 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.398586833 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.39174834 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.623503771 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.404923439 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.599789234 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.479791672 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.940183753 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.03526348 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423100029 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.33323475 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.11461084 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.094454178 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.395212695 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.584901891 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.400766565 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.633779396 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.425487165 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.403511431 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.005467607 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.411747909 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.583235483 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.404893628 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.40683503 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.401276288 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.393655637 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.824379983 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.954630535 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416292649 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.412823654 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.542614599 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.414931077 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.331169431 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.908202687 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.404244778 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.399078 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.169677149 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.433387263 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.550037445 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.32754341 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.675129539 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.399932744 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679647942 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.690015158 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.429164134 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.41112038 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.397954188 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.41356264 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.437823322 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425780374 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.412862759 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.57184885 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.856000522 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966216988 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.223451491 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.969769287 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.780224707 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.428253564 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.28848404 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.194202648 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.352797684 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.072054876 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.660316013 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.220160455 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.369952444 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.940011169 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.72995629 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235578213 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.679503464 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.633655682 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.761694178 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.416038478 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.711242932 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.617357448 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.432105324 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.407851409 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.333865683 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.914697305 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02829128 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.41613117 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.475681215 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.199819919 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.432071577 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.180672587 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.425565463 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.225247502 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.856737249 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.96172141 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.79164011 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.397814029 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.404778015 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.315413661 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424143645 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923765981 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05434016 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.428767196 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.941035689 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.356286227 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.643922598 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.428254012 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.395413721 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.174165862 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.426209028 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.65456971 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.677523363 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.341932971 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.398883054 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.977622725 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.27565886 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.405617123 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.398661651 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.212268382 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.421599397 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.711684019 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.421857077 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.785229965 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.421145446 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.337978178 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.333378553 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.092783527 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.401819737 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.366747752 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.924911094 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.411821808 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.419335573 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.400545957 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.257980752 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.655299403 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.413809101 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.019100303 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.643198407 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416896737 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.424068082 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.405773514 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.40794933 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.382401984 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.298555007 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.638320782 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.45397572 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.64695052 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.452350964 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.301148471 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.425801884 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.613935304 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.281945284 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.404495068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.665202899 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.132606691 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.404623854 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211914471 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.445133628 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.4060382 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.421991745 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.398343 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.42154602 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.491353041 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.642898161 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.433974336 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.413825333 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.8494301 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.435388786 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405635907 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.414840808 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.49700914 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.947269626 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.793722214 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.194692234 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.028277309 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.227300008 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.044856816 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.701994751 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.413194922 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.412059292 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.339675008 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.55150633 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.92904412 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.676325184 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.52167888 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.414730444 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.42531129 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.402479418 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.403640225 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.622570166 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.677454339 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.275782038 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.866423664 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.129725929 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.298381563 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.41617197 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.615444076 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.939871145 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013897602 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.711817915 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.412468183 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.169956617 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697956215 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.495921411 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.405216007 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.999354631 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.404993605 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 3.266555302 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.415559678 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.404909942 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.571878245 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.689734898 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.106420496 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.434523755 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.570497746 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.176499574 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.788318413 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.666514631 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.906141389 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.643417278 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.04952875 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.190047285 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.67283639 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.472829937 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.642395103 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.550096042 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551835766 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.412890643 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.286593554 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.404111219 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.25282246 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.118017945 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.414146433 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.031667946 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.6867732 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.40756188 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.403151525 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43480821 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.415626499 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.627878424 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.185212963 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.637880128 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.415150011 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.408882985 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.399457821 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.03410519 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.71413981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.349763368 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.410154063 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.666197263 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.66148501 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.431244873 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.858758644 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.118096021 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.989635828 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.382039626 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.428996835 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.412633647 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.160767144 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.03524723 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.856052864 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96724481 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074729456 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.409397869 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.686631915 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.410863148 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.407110304 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.683771431 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.412700938 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.409343718 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.660368214 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.053226211 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.254834531 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.407898521 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.723393499 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.342580625 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.636006472 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.499640188 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.351648205 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.416811961 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.859539434 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.430101176 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.524272594 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.42036101 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.405549058 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.428058851 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.169486332 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.697870695 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.414037819 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.387649398 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.396552876 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.424270351 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.511183444 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009572143 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.431079915 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.081780661 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.759634485 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.663826909 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.412707421 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.396261322 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.412584091 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.408584885 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.13315314 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386841785 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.416612241 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.003705258 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.427977549 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.429463864 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.41365569 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.6279361 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.621500039 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.411046961 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.673265167 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.445225943 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.423905289 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.309072673 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.18351352 seconds)
  done (took 1700.049230138 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.415681307 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.460759831 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.438733648 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.519670492 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.465915703 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.530656489 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.523026365 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.547740106 seconds)
  done (took 53.223571066 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.40974326 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.572006027 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.443785625 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.419245962 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.420378902 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.422496341 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.908514541 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.430516337 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.419419304 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.419831524 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.419732638 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.415320166 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.109861948 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.439911246 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.413807452 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.40486713 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.419918086 seconds)
  done (took 66.818982541 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.926768608 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.742841402 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.717563279 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.497071615 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.423217473 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.446923835 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.815394711 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.428749139 seconds)
  done (took 55.320562849 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.422596936 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.42228889 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.422975963 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.423551419 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.42282618 seconds)
  done (took 8.436286623 seconds)
done (took 2107.256677247 seconds)
(18/20) benchmarking "misc"...
  (1/10) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.416438056 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.419145058 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.41595182 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.418691278 seconds)
  done (took 6.992220377 seconds)
  (2/10) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.391601308 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.173822243 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.400525518 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.415442481 seconds)
  done (took 18.70374766 seconds)
  (3/10) benchmarking "18129"...
  done (took 6.425335014 seconds)
  (4/10) benchmarking "20517"...
  done (took 6.457439479 seconds)
  (5/10) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.17084356 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.050086168 seconds)
  done (took 5.54467748 seconds)
  (6/10) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.161735166 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.176818905 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.157598477 seconds)
  done (took 7.815915718 seconds)
  (7/10) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.410028061 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.416660266 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.418149989 seconds)
  done (took 20.56487105 seconds)
  (8/10) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.711881593 seconds)
  done (took 3.034541918 seconds)
  (9/10) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.559426515 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.615974568 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.767144045 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.739702438 seconds)
  done (took 8.003946176 seconds)
  (10/10) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.804552196 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.79283732 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.609120769 seconds)
  done (took 6.52636995 seconds)
done (took 91.393958445 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.532641404 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.439391828 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.623319826 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.49934743 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.644659512 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.621899657 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.686948089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.469830473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.011918323 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.998343143 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.50254073 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.661635446 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.836838044 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.43301948 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.836952287 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.43161641 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.665093445 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.579014049 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.18919399 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.419951449 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.644520938 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.140038465 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.333228693 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.1622911 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.653449922 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.578726756 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.722252838 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.432375974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.364509322 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.747194581 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.579083706 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.418877334 seconds)
  done (took 197.184369829 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414205951 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.413900578 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.427009414 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.413302375 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.431380658 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.416526444 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.414280355 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.416255887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.424895582 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.427307819 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.425391907 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.428515113 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.415541745 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.432891709 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.434057416 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.416344209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.450723755 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.421592887 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.425763446 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.414893318 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.422569257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.427490859 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.417407247 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.422078336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.423679621 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.415329322 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.431197083 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.423161718 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.41562201 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.436348186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.424280258 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.435066939 seconds)
  done (took 206.884010042 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.414434118 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.415499323 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.418427942 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.441356719 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.430210288 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.424034255 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.434732165 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.432039652 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.416375654 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.431654713 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.428199011 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.415867812 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.436900385 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.416147826 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.419298261 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.417412378 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.416942583 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.433487523 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.415312787 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.44945321 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.418906908 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.416708563 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.434864825 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.416452948 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.420333864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.417512374 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.417175659 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.434508065 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.425986627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.417654664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.442817426 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.44319707 seconds)
  done (took 206.939783329 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.620907181 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.424298371 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.426120482 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.376816375 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.42543175 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.423109514 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.423170852 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.617442233 seconds)
  done (took 15.064240379 seconds)
done (took 627.39722949 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.878040252 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.576263158 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.630610177 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.447481671 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.258168249 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.464879679 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.446541289 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.626136846 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.368072378 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.63368133 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.807711799 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.463743948 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.954425089 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.442502613 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.710467698 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.549761583 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.347571402 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.470274062 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.776949295 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.053169982 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.714302086 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.986660263 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.64749716 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.372396995 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.971645036 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.986600946 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.271851461 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.334813743 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.464957706 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.783055012 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.275548523 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.543239137 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.494126865 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.51270622 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.56855868 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.54895197 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.511286409 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.50781823 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.650851741 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.741610097 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.025772862 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.185283547 seconds)
  done (took 97.336676338 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.410280754 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.409488101 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.40934754 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.408921159 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.411199392 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.417733135 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.409395393 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.408474871 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.410801409 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.408900512 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.409763383 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.421173532 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.410431271 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.411649344 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.40932326 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.409353184 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.409957085 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.413497166 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.409804623 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.41050038 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.411619838 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.41011296 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.41076453 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.409709257 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.411009612 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.410106529 seconds)
  done (took 38.013605534 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.429151704 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.683053898 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.859502489 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.43539857 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.431655599 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.433557958 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.514358871 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.431187093 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.433513549 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.433256215 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.606080501 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.434375326 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.467395047 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.890489291 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.434055572 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.431949041 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.432618192 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.430995426 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.693585859 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.441429491 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.539621421 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.432995596 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.517666975 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.441916764 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.456118948 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.432488696 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.438262734 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.993026477 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.452706921 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.60614345 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.308926865 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.519674803 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.946830796 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.888674311 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.310905289 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.443428458 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.433601365 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.612254982 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.432454611 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.433088147 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.516495091 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.431844186 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.867704323 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.103071298 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.451388214 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.434300809 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.020724472 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.630211585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.700883398 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.441502742 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.89639951 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.436238398 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.435754959 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.433861289 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.700117583 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.440867362 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.434356535 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.014501586 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.456623148 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.517582469 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.434379353 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.434330877 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.699609236 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.43462533 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.688074268 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.436373479 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.442132655 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.454798971 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.874735942 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.437628772 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.13174163 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.452637847 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.436991222 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.618343871 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.690208769 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.054013246 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.458459923 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.704891542 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.958443573 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.535960883 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.439808644 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.985098333 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.539778766 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.438830207 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.437859776 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.43918826 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.437370885 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.484065302 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.517094465 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.059137267 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.137965513 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.04140812 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.540057268 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.443691861 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.438625089 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.018038246 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.456074957 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.43682054 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.868264816 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.135733605 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.455372889 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.445007016 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.130496426 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.455600011 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.521229932 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.441822593 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.879548238 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.437583245 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.485365024 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.437034594 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.445647148 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.461874826 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.520924847 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.440124433 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.438909492 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.10542534 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.638156646 seconds)
  done (took 189.101565689 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.432105526 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.43207475 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.431904671 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.431613535 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.431206733 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.440544045 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.432094392 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.432199876 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.437105544 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.432959825 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.432290213 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.433884128 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.432961008 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.43717197 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.444741485 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.438470161 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.043751238 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.43445896 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.432982949 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.434151064 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.26410945 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.434780473 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.433152642 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.433281359 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.433402979 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.43296463 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.441277993 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.455607673 seconds)
  done (took 154.966669258 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.438598835 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.053062838 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.459887483 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.582426557 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.463608529 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.43913752 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.581244835 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.502479299 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.458376866 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.437969823 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.43930866 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.768476356 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.441796521 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.00125596 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.651753248 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.611450878 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.008198242 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.46001172 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.439829028 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.439707923 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.589160492 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.449842239 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.768615469 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.05743955 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.462068778 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.057970248 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.423997252 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.442619487 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.440506723 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.059931834 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.456998748 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.772261951 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.523794871 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.505128113 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.079231839 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.996769312 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.007582745 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.609927905 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.441495812 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.441307543 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.441281677 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.42542921 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.061441199 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.462613009 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.441416105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.049595261 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.464838374 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.443820101 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.449688488 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.441954258 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.507319204 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.527209072 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.793937294 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.065906035 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.547268856 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.465145889 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.58494448 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.863775364 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.455143242 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.997602247 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.434701742 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.067656928 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.462535642 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.427346561 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.444031647 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.448393493 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.60554598 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.587384702 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.029662108 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.469526575 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.028993859 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.63526526 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.451595216 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.443395552 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.444836839 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.06581826 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.026116936 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.62303449 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.591441582 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.661405335 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.4268531 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.442820758 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.427797693 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.529005605 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.451899371 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.067537034 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.026814567 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463998217 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.446470894 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.446197606 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.44526529 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.640178176 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.096097432 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.548243484 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.997343339 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.79388938 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.778106511 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.44742156 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.508674876 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.462320979 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.779990982 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.447471113 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.507443279 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.940175726 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.787083228 seconds)
  done (took 172.959296714 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.702912683 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.826274592 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.549893765 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.602746947 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.082349107 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.026628033 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.853568097 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.593454563 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.56164492 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.720906095 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.669172591 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.538325211 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.672995073 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.529207787 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.211040009 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.541001239 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.56522686 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.604493451 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.612606204 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.572431724 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.162838751 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.737678796 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.647895162 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.500253396 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.543752939 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.30224498 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.033044802 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.017248091 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.638881377 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.892362573 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.002397512 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.669411796 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.451295459 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.184494703 seconds)
  done (took 70.168519766 seconds)
done (took 723.874792805 seconds)
SAVING RESULT...
DONE!
